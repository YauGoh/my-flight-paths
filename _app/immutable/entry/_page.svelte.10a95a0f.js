var F2=Object.defineProperty;var G2=(s,e,l)=>e in s?F2(s,e,{enumerable:!0,configurable:!0,writable:!0,value:l}):s[e]=l;var n7=(s,e,l)=>(G2(s,typeof e!="symbol"?e+"":e,l),l);import{S as pe,i as me,s as Se,k as G1,q as Ie,l as B1,m as Y1,r as Ne,h as L1,n as de,b as ve,F as U1,u as ql,O as $l,e as il,g as y1,v as o9,d as R1,f as d9,D as c9,w as jl,P as B2,a as Te,y as j1,c as Le,z as ee,A as le,Q as W2,B as ae,R as y9,G as C6,C as q3,E as T9,K as qe,L as $e,M as je,N as e7,T as $3,U as A7,V as b7,W as k7,X as O2,o as j3}from"../chunks/index.83320916.js";import{w as z2}from"../chunks/index.4b11e5be.js";import{p as H2,g as V2,d as K2,a as k2}from"../chunks/searchAircraft.svelte_svelte_type_style_lang.caaa72a8.js";function J2(s){let e,l,a=s[1](s[0].lat)+"",n,t,f=s[1](s[0].lng)+"",i,r;return{c(){e=G1("span"),l=Ie("("),n=Ie(a),t=Ie(","),i=Ie(f),r=Ie(")"),this.h()},l(u){e=B1(u,"SPAN",{class:!0});var o=Y1(e);l=Ne(o,"("),n=Ne(o,a),t=Ne(o,","),i=Ne(o,f),r=Ne(o,")"),o.forEach(L1),this.h()},h(){de(e,"class","lat-lng")},m(u,o){ve(u,e,o),U1(e,l),U1(e,n),U1(e,t),U1(e,i),U1(e,r)},p(u,[o]){o&1&&a!==(a=u[1](u[0].lat)+"")&&ql(n,a),o&1&&f!==(f=u[1](u[0].lng)+"")&&ql(i,f)},i:$l,o:$l,d(u){u&&L1(e)}}}function Y2(s,e,l){let{latLng:a}=e,{locale:n="en-Au"}=e;const t=f=>f.toLocaleString(n,{notation:"compact",compactDisplay:"short",minimumFractionDigits:4});return s.$$set=f=>{"latLng"in f&&l(0,a=f.latLng),"locale"in f&&l(2,n=f.locale)},[a,t,n]}class e9 extends pe{constructor(e){super(),me(this,e,Y2,J2,Se,{latLng:0,locale:2})}}function L9(s){let e,l,a,n,t,f,i,r,u,o,d,c,m,S,p,h,_,M,g,v,T,E,D,b,y,w,z,J,F,C,B,Y,$,K,X,Z,r1,G;M=new e9({props:{latLng:s[0].selectedAircraftPosition.aircraft.start}});function Q(R){s[1](R)}let n1={};return s[0].selectedAircraftPosition.currentPosition!==void 0&&(n1.latLng=s[0].selectedAircraftPosition.currentPosition),Z=new e9({props:n1}),jl.push(()=>B2(Z,"latLng",Q)),{c(){e=G1("form"),l=G1("div"),a=G1("label"),n=Ie(`ICAO 24\r
				`),t=G1("input"),i=Te(),r=G1("div"),u=G1("label"),o=Ie(`Call Sign\r
				`),d=G1("input"),m=Te(),S=G1("div"),p=G1("label"),h=Ie(`Start posiition\r
				`),_=G1("span"),j1(M.$$.fragment),g=Te(),v=G1("div"),T=G1("label"),E=Ie(`Bearing\r
				`),D=G1("input"),y=Te(),w=G1("div"),z=G1("label"),J=Ie(`Velocity\r
				`),F=G1("input"),B=Te(),Y=G1("div"),$=G1("label"),K=Ie(`Current posiition\r
				`),X=G1("span"),j1(Z.$$.fragment),this.h()},l(R){e=B1(R,"FORM",{});var j=Y1(e);l=B1(j,"DIV",{class:!0});var s1=Y1(l);a=B1(s1,"LABEL",{});var f1=Y1(a);n=Ne(f1,`ICAO 24\r
				`),t=B1(f1,"INPUT",{}),f1.forEach(L1),s1.forEach(L1),i=Le(j),r=B1(j,"DIV",{class:!0});var o1=Y1(r);u=B1(o1,"LABEL",{});var p1=Y1(u);o=Ne(p1,`Call Sign\r
				`),d=B1(p1,"INPUT",{}),p1.forEach(L1),o1.forEach(L1),m=Le(j),S=B1(j,"DIV",{class:!0});var x1=Y1(S);p=B1(x1,"LABEL",{});var M1=Y1(p);h=Ne(M1,`Start posiition\r
				`),_=B1(M1,"SPAN",{});var C1=Y1(_);ee(M.$$.fragment,C1),C1.forEach(L1),M1.forEach(L1),x1.forEach(L1),g=Le(j),v=B1(j,"DIV",{class:!0});var se=Y1(v);T=B1(se,"LABEL",{});var ge=Y1(T);E=Ne(ge,`Bearing\r
				`),D=B1(ge,"INPUT",{}),ge.forEach(L1),se.forEach(L1),y=Le(j),w=B1(j,"DIV",{class:!0});var oe=Y1(w);z=B1(oe,"LABEL",{});var $1=Y1(z);J=Ne($1,`Velocity\r
				`),F=B1($1,"INPUT",{}),$1.forEach(L1),oe.forEach(L1),B=Le(j),Y=B1(j,"DIV",{class:!0});var z1=Y1(Y);$=B1(z1,"LABEL",{});var W1=Y1($);K=Ne(W1,`Current posiition\r
				`),X=B1(W1,"SPAN",{});var Ee=Y1(X);ee(Z.$$.fragment,Ee),Ee.forEach(L1),W1.forEach(L1),z1.forEach(L1),j.forEach(L1),this.h()},h(){t.value=f=s[0].selectedAircraftPosition.aircraft.id,de(l,"class","form-group"),d.value=c=s[0].selectedAircraftPosition.aircraft.callSign,de(r,"class","form-group"),de(S,"class","form-group"),D.value=b=s[0].selectedAircraftPosition.aircraft.bearing,de(v,"class","form-group"),F.value=C=s[0].selectedAircraftPosition.aircraft.velocity,de(w,"class","form-group"),de(Y,"class","form-group")},m(R,j){ve(R,e,j),U1(e,l),U1(l,a),U1(a,n),U1(a,t),U1(e,i),U1(e,r),U1(r,u),U1(u,o),U1(u,d),U1(e,m),U1(e,S),U1(S,p),U1(p,h),U1(p,_),le(M,_,null),U1(e,g),U1(e,v),U1(v,T),U1(T,E),U1(T,D),U1(e,y),U1(e,w),U1(w,z),U1(z,J),U1(z,F),U1(e,B),U1(e,Y),U1(Y,$),U1($,K),U1($,X),le(Z,X,null),G=!0},p(R,j){(!G||j&1&&f!==(f=R[0].selectedAircraftPosition.aircraft.id)&&t.value!==f)&&(t.value=f),(!G||j&1&&c!==(c=R[0].selectedAircraftPosition.aircraft.callSign)&&d.value!==c)&&(d.value=c);const s1={};j&1&&(s1.latLng=R[0].selectedAircraftPosition.aircraft.start),M.$set(s1),(!G||j&1&&b!==(b=R[0].selectedAircraftPosition.aircraft.bearing)&&D.value!==b)&&(D.value=b),(!G||j&1&&C!==(C=R[0].selectedAircraftPosition.aircraft.velocity)&&F.value!==C)&&(F.value=C);const f1={};!r1&&j&1&&(r1=!0,f1.latLng=R[0].selectedAircraftPosition.currentPosition,W2(()=>r1=!1)),Z.$set(f1)},i(R){G||(y1(M.$$.fragment,R),y1(Z.$$.fragment,R),G=!0)},o(R){R1(M.$$.fragment,R),R1(Z.$$.fragment,R),G=!1},d(R){R&&L1(e),ae(M),ae(Z)}}}function X2(s){var n;let e,l,a=((n=s[0])==null?void 0:n.selectedAircraftPosition)&&L9(s);return{c(){a&&a.c(),e=il()},l(t){a&&a.l(t),e=il()},m(t,f){a&&a.m(t,f),ve(t,e,f),l=!0},p(t,[f]){var i;(i=t[0])!=null&&i.selectedAircraftPosition?a?(a.p(t,f),f&1&&y1(a,1)):(a=L9(t),a.c(),y1(a,1),a.m(e.parentNode,e)):a&&(o9(),R1(a,1,1,()=>{a=null}),d9())},i(t){l||(y1(a),l=!0)},o(t){R1(a),l=!1},d(t){a&&a.d(t),t&&L1(e)}}}function Z2(s,e,l){let a;c9(s,fl,t=>l(0,a=t));function n(t){s.$$.not_equal(a.selectedAircraftPosition.currentPosition,t)&&(a.selectedAircraftPosition.currentPosition=t,fl.set(a))}return[a,n]}class E9 extends pe{constructor(e){super(),me(this,e,Z2,X2,Se,{})}}const e2=6371e3,Q2=async()=>(await q2()).states.map(e=>({icao24:e[0],callsign:e[1],originCountry:e[2],timePosition:e[3],lastContact:e[4],longitude:e[5],latitude:e[6],baroAltitude:e[7],onGround:e[8],velocity:e[9],trueTrack:e[10],verticalRate:e[11],sensors:e[12],geoAltitude:e[13],squawk:e[14],spi:e[15],positionSource:e[16]})),q2=()=>Promise.resolve($2),$2={time:1679397463,states:[["TEST","TEST001  ","United States",1679397462,1679397462,0,0,10972.8,!1,100,135,0,null,11155.68,"1525",!1,0],["a665ae","IFL511  ","United States",1679397462,1679397462,-93.5475,32.4601,10972.8,!1,200.3,227.71,0,null,11155.68,"1525",!1,0],["a5a8e2","N464EG  ","United States",1679397460,1679397462,-120.1951,41.3313,12192,!1,228,347.09,0,null,11940.54,null,!1,0],["aa56db","UAL565  ","United States",1679397462,1679397462,-81.2656,43.974,9799.32,!1,194.49,271.06,8.13,null,9563.1,"0544",!1,0],["7c6b2f","JST754  ","Australia",1679397461,1679397462,148.408,-38.5382,11277.6,!1,215.44,17.22,0,null,11658.6,"1525",!1,0],["7c6b2d","JST571  ","Australia",1679397462,1679397462,147.4352,-33.9921,10355.58,!1,222.72,218.25,0,null,10843.26,"1165",!1,0],["4b1813","SWR248M ","Switzerland",1679397461,1679397461,-3.055,39.3429,11894.82,!1,210.2,200.79,0,null,12161.52,"3741",!1,0],["ade191","DAL1469 ","United States",1679397462,1679397462,-84.5188,33.5372,2026.92,!1,138.39,270.43,-9.43,null,2110.74,"3606",!1,0],["ab6fdd","AAL2595 ","United States",1679397462,1679397463,-75.9832,39.7223,8534.4,!1,209.07,230.59,0,null,8458.2,"3437",!1,0],["842194","ADO34   ","Japan",1679397457,1679397461,140.4757,37.1898,8305.8,!1,205.45,192.44,-13.98,null,8359.14,null,!1,0],["a73857","N5641X  ","United States",1679397461,1679397462,-96.8183,41.5673,6393.18,!1,137.27,147.08,.33,null,6294.12,null,!1,0],["3dd64e","RDF26   ","Germany",1679397223,1679397223,11.5509,48.7245,null,!0,0,67.5,null,null,null,"4220",!1,0],["4b1805","SWR2YG  ","Switzerland",1679397458,1679397460,21.86,41.175,6827.52,!1,190.89,131.94,-11.05,null,6934.2,null,!1,0],["4b1806","SWR12J  ","Switzerland",1679397462,1679397462,14.4419,42.1638,11277.6,!1,245.49,119.09,0,null,11353.8,"0413",!1,0],["880450","AIQ4113 ","Thailand",1679397462,1679397462,100.7816,13.7697,518.16,!1,72.49,193.54,-3.9,null,502.92,"3336",!1,0],["a90ea8","DAL1131 ","United States",1679397462,1679397462,-81.5065,29.2457,7909.56,!1,190.66,341.76,9.43,null,8161.02,null,!1,0],["4b1809","SWR76AT ","Switzerland",1679397423,1679397425,-6.7559,41.3963,8503.92,!1,215.61,256.2,-17.56,null,8724.9,"4506",!1,0],["a7b07c","FDX130  ","United States",1679397462,1679397462,-74.1984,45.5466,1051.56,!1,116.09,46.62,-4.55,null,1043.94,"1534",!1,0],["a53eef","UPS938  ","United States",1679397263,1679397263,-107.6944,39.885,12192,!1,192.96,262.65,0,null,12062.46,"6755",!1,0],["4b1801","SWR5NH  ","Switzerland",1679397455,1679397459,8.5584,47.4556,null,!0,0,185.62,null,null,null,"1000",!1,0],["4b1802","SWR62AV ","Switzerland",1679397459,1679397461,8.557,47.4536,388.62,!0,0,5.62,null,null,null,"2000",!1,0],["a678ef","NKS263  ","United States",1679397462,1679397462,-95.5851,33.1386,8031.48,!1,283.78,69.3,5.2,null,8199.12,null,!1,0],["acdfa6","AAL2787 ","United States",1679397462,1679397462,-92.2562,34.658,11582.4,!1,186.13,252.47,0,null,11666.22,"1670",!1,0],["7c6b31","JST744  ","Australia",1679397446,1679397456,147.1782,-41.4788,967.74,!1,106.72,341.74,3.58,null,1043.94,"3761",!1,0],["a3b88e","AAL2721 ","United States",1679397462,1679397462,-81.4021,33.2399,11277.6,!1,208.97,347.78,0,null,11422.38,null,!1,0],["4952ca","TAP52HR ","Portugal",1679397462,1679397462,-3.0538,46.8579,11590.02,!1,225.42,15.62,0,null,11673.84,"7455",!1,0],["aa9f3f","SWA2308 ","United States",1679397462,1679397462,-84.8048,41.4869,9144,!1,208.66,273.11,0,null,9044.94,"7407",!1,0],["7c6b38","JST823  ","Australia",1679397462,1679397462,151.1103,-33.649,1295.4,!1,139.78,167.24,-4.55,null,1455.42,"1062",!1,0],["c822c4","TFR11   ","New Zealand",1679397460,1679397462,118.0734,-32.8173,10668,!1,246.77,112.56,0,null,11125.2,"4360",!1,0],["880441","AIQ309  ","Thailand",1679397462,1679397462,101.0247,3.589,7886.7,!1,222.28,332.43,3.58,null,8351.52,"2142",!1,0],["7c6b37","JST539  ","Australia",1679397360,1679397360,151.1744,-33.9314,null,!0,8.23,348.75,null,null,null,null,!1,0],["7c6b35","JST800  ","Australia",1679397462,1679397462,138.6635,-34.8579,685.8,!1,99.72,230.23,-4.23,null,777.24,"1007",!1,0],["acdfa3","ASA458  ","United States",1679397462,1679397462,-82.0598,29.5661,7909.56,!1,230.31,159.74,-3.9,null,8183.88,"3506",!1,0],["a4b21b","UAL2680 ","United States",1679397462,1679397462,-87.0338,41.9465,5867.4,!1,232.02,90.25,6.18,null,5829.3,"6535",!1,0],["a3a575","JBU1748 ","United States",1679397462,1679397462,-75.299,39.4753,7078.98,!1,217.77,34.7,-9.75,null,7002.78,"1015",!1,0],["ad3c16","AAL2857 ","United States",1679397462,1679397462,-73.5807,40.4486,2362.2,!1,149.25,146.53,9.75,null,2392.68,"1144",!1,0],["ad19f2","SKW5255 ","United States",1679397462,1679397462,-95.5778,30.0856,868.68,!1,101.57,219.66,0,null,899.16,null,!1,0],["7c6b0d","JST130  ","Australia",1679397462,1679397462,176.8624,-36.1009,10363.2,!1,206.82,239.67,0,null,10530.84,null,!1,0],["aa9300","UAL2096 ","United States",1679397462,1679397462,-84.7704,40.879,11277.6,!1,273.43,78.06,0,null,11125.2,"3720",!1,0],["7c6b28","JST613  ","Australia",1679397461,1679397462,149.0803,-35.5339,9761.22,!1,236.07,232.08,0,null,10210.8,"3724",!1,0],["c01aa5","KCE1    ","Canada",1679397462,1679397462,-78.2086,42.9776,7978.14,!1,196.17,263.68,-6.5,null,7818.12,"3447",!1,0],["402aa0","GBODD   ","United Kingdom",1679397272,1679397272,-3.341,56.4491,457.2,!1,36.7,174.37,-2.6,null,441.96,null,!1,0],["398228","FHARI   ","France",1679397462,1679397462,5.5611,47.8695,2286,!1,60.98,117.65,0,null,2369.82,"7000",!1,0],["a46e40","DAL819  ","United States",1679397462,1679397462,-83.5336,33.8236,5516.88,!1,227.19,57.39,9.75,null,5608.32,null,!1,0],["7c6b09","JST674  ","Australia",null,1679397201,null,null,null,!1,1.03,8.44,null,null,null,null,!1,0],["ad3c27","DAL2168 ","United States",1679397460,1679397460,-89.3442,43.1363,null,!0,0,199.69,null,null,null,null,!1,0],["a1c5e0","ENY3466 ","United States",1679397462,1679397462,-84.4025,32.1767,10668,!1,219.17,179.33,0,null,10881.36,"1037",!1,0],["38c53b","AIB01EO ","France",1679397460,1679397461,.9685,44.2997,1470.66,!1,96.48,102.63,0,null,1577.34,"2623",!1,0],["acdfab","DAL2455 ","United States",1679397461,1679397462,-77.3528,40.0049,9707.88,!1,195.55,276.04,7.48,null,9616.44,"7153",!1,0],["4952c7","TAP784  ","Portugal",1679397462,1679397462,11.8399,56.9528,11894.82,!1,234.04,41.26,.33,null,11772.9,"2365",!1,0],["4b180c","SWR4JH  ","Switzerland",1679397462,1679397462,-6.3323,41.1122,11277.6,!1,222.17,234.14,0,null,11490.96,"4660",!1,0],["407a05","","United Kingdom",null,1679397458,null,null,null,!1,216.62,208.51,-14.31,null,null,null,!1,0],["a4b234","WIS900  ","United States",1679397419,1679397419,-87.9106,42.942,182.88,!1,9.27,70.56,-.33,null,182.88,null,!1,0],["ab63d7","DAL2382 ","United States",1679397462,1679397463,-94.827,39.394,3200.4,!1,155.48,10.68,12.68,null,3131.82,null,!1,0],["a34215","EDV4817 ","United States",1679397460,1679397460,-83.304,42.2603,411.48,!1,65.21,209.8,-2.93,null,449.58,"5762",!1,0],["4952ab","TAP242W ","Portugal",1679397462,1679397462,-9.2357,38.6255,853.44,!1,97.67,58.57,0,null,982.98,"3365",!1,0],["7c6b13","JST216  ","Australia",1679397462,1679397462,146.3732,-37.5854,8328.66,!1,219.29,282.6,-12.35,null,8694.42,"0222",!1,0],["4952af","TAP223  ","Portugal",1679397461,1679397462,-10.9979,38.7099,7688.58,!1,224.68,258.51,5.2,null,7955.28,"3331",!1,0],["ac2f83","SWA242  ","United States",1679397230,1679397231,-76.6644,39.1664,-83.82,!1,75.12,323.91,-1.95,null,22.86,"2754",!1,0],["ac498c","FDX5170 ","United States",1679397462,1679397462,5.8231,50.3943,3162.3,!1,146.49,339.66,-13,null,3230.88,"3216",!1,0],["4952b1","TAP088  ","Portugal",1679397463,1679397463,-9.5141,38.5318,2049.78,!1,114.58,69.78,-3.9,null,2202.18,"6217",!1,0],["e4943f","GLO1631 ","Brazil",1679397393,1679397393,-46.6127,-23.4732,1440.18,!1,94.28,86.87,-3.58,null,1562.1,null,!1,0],["ad4f72","JBU673  ","United States",1679397462,1679397462,-70.8636,41.1305,7269.48,!1,220.08,190.23,4.23,null,7155.18,null,!1,0],["4acb04","NOZ1550 ","Sweden",1679397462,1679397462,17.296,50.5285,11277.6,!1,242.59,163.87,0,null,11224.26,"4506",!1,0],["3c664e","DLH4MM  ","Germany",1679397462,1679397462,11.7853,43.7138,9837.42,!1,259.35,164.59,-10.4,null,9959.34,"1000",!1,0],["e8024d","ARE4003 ","Chile",1679397461,1679397461,-74.9257,5.3174,5791.2,!1,194.78,127.6,0,null,6149.34,null,!1,0],["4952a9","TAP080  ","Portugal",1679397451,1679397451,-14.4287,30.8774,12192,!1,253.99,26.46,0,null,12557.76,null,!1,0],["3c6677","DLH9MR  ","Germany",1679397230,1679397230,8.5628,50.0441,null,!0,0,163.12,null,null,null,"1000",!1,0],["3dbc00","PTO501  ","Germany",1679397271,1679397271,12.3263,53.9144,137.16,!1,54.49,277.59,-2.93,null,190.5,"5076",!1,0],["abf008","SWA2910 ","United States",1679397462,1679397462,-81.9538,27.6313,8267.7,!1,228.91,342.34,8.45,null,8580.12,"1145",!1,0],["e80260","LPE2370 ","Chile",null,1679397462,null,null,null,!1,234.72,345.14,0,null,null,null,!1,0],["e4944e","TAM8118 ","Brazil",1679397460,1679397462,-50.1396,-28.1822,11574.78,!1,206.53,222.07,0,null,12199.62,null,!1,0],["a46256","N606PC  ","United States",1679397445,1679397445,-73.8055,42.7431,null,!0,6.94,241.88,null,null,null,"3357",!1,0],["4952a6","TAP288  ","Portugal",1679397462,1679397462,.9089,4.8738,12192,!1,249.87,308.9,0,null,12908.28,null,!1,0],["a46e8d","HAL90   ","United States",1679397462,1679397462,-73.3505,42.7431,9646.92,!1,279.88,90.74,-13.98,null,9456.42,"2427",!1,0],["3c6671","DLH73U  ","Germany",1679397462,1679397462,8.5359,49.74,3268.98,!1,148.72,184.96,6.5,null,3345.18,"1000",!1,0],["3c6675","DLH4CV  ","Germany",1679397461,1679397462,12.198,45.3851,868.68,!1,107.83,41.91,-3.58,null,960.12,"1000",!1,0],["aa0938","N746E   ","United States",1679397462,1679397462,-80.9031,39.7187,11887.2,!1,230.83,176.81,.98,null,11780.52,"7416",!1,0],["a58e1e","SWA4108 ","United States",1679397459,1679397461,-92.0698,35.0046,11582.4,!1,185.38,299.05,0,null,11658.6,"0476",!1,0],["3c6674","DLH9AA  ","Germany",1679397353,1679397353,8.5825,50.0441,null,!0,3.6,205.31,null,null,null,"5004",!1,0],["3442cc","ANE8527 ","Spain",1679397462,1679397462,2.0084,38.9683,3040.38,!1,138.97,64.1,0,null,3177.54,null,!1,0],["a39bfa","UAL1860 ","United States",1679397448,1679397448,-87.9087,41.9691,160.02,!1,64.82,270,.65,null,175.26,null,!1,0],["471efb","WZZ1408 ","Hungary",1679397462,1679397462,15.402,45.3474,10980.42,!1,231,89.36,0,null,11026.14,"0447",!1,0],["a798b9","LBQ651  ","United States",1679397462,1679397462,-87.7611,39.3226,7620,!1,152.89,83.04,0,null,7604.76,"1175",!1,0],["e80270","LPE2147 ","Chile",1679397292,1679397292,-78.7943,-9.1063,5966.46,!1,193.21,335.96,-10.4,null,null,null,!1,0],["471efc","WZZ6205 ","Hungary",1679397457,1679397460,28.2503,36.2444,10972.8,!1,205.52,320.89,-.33,null,11102.34,null,!1,0],["471efd","WZZ100J ","Hungary",1679397462,1679397462,9.5057,44.235,10363.2,!1,235.26,72.44,-.33,null,10523.22,"0453",!1,0],["e80276","LPE2063 ","Chile",1679396180,1679397462,-76.8149,-12.9359,6858,!1,231.06,136.35,-.33,null,null,null,!1,0],["3c666f","DLH91H  ","Germany",1679397461,1679397461,8.5419,50.0444,null,!0,11.32,84.38,null,null,null,"5516",!1,0],["4b4bb5","","Switzerland",1679397455,1679397457,8.7711,47.5168,403.86,!1,0,0,-.33,null,518.16,null,!1,0],["e80275","LPE2376 ","Chile",1679397462,1679397462,-76.7526,-12.8914,7338.06,!1,209.84,328.02,-12.68,null,null,null,!1,0],["a3a541","CXK491  ","United States",1679397348,1679397348,-73.0927,40.8036,-53.34,!1,34.19,225,-1.63,null,22.86,null,!1,0],["e8026a","LPE2101 ","Chile",1679397262,1679397462,-75.7947,-12.9282,9319.26,!1,239.14,133,4.23,null,null,null,!1,0],["4031bf","GLACB   ","United Kingdom",1679397454,1679397461,-2.5633,53.3662,403.86,!1,51.1,343.02,0,null,358.14,null,!1,0],["a34e97","DAL1108 ","United States",1679397463,1679397463,-91.3612,31.617,11894.82,!1,271.45,70.05,0,null,12131.04,"2513",!0,0],["ace6df","NKS309  ","United States",1679397461,1679397461,-77.3388,35.8088,11567.16,!1,209.17,205.49,-.33,null,11635.74,"1576",!1,0],["ac21e4","DAL2813 ","United States",1679397462,1679397462,-85.4121,41.1433,10363.2,!1,216.49,313.75,0,null,10226.04,"3441",!1,0],["aa8075","ENY3537 ","United States",1679397461,1679397462,-84.1259,42.9302,9753.6,!1,200.37,262.33,-.33,null,9585.96,"5705",!1,0],["adda1e","AAL1026 ","United States",1679397415,1679397415,-74.5441,22.3495,9753.6,!1,211.21,302.57,0,null,10287,null,!1,0],["a94b50","UAL1644 ","United States",1679397462,1679397462,-66.1129,18.503,1775.46,!1,153.34,271.15,14.63,null,1844.04,null,!1,0],["c02e9b","JZA872  ","Canada",1679397462,1679397462,-75.602,42.1959,6545.58,!1,230.39,121.95,-9.1,null,6446.52,"0510",!1,0],["0d0acd","AMX799  ","Mexico",1679397462,1679397462,-99.1441,19.2692,3444.24,!1,108.08,293.27,-4.88,null,3627.12,null,!1,0],["a7bbe9","JBU1861 ","United States",1679397462,1679397462,-75.3845,40.1247,9258.3,!1,212.19,226.87,7.8,null,9174.48,"1173",!1,0],["a94b4d","UAL407  ","United States",1679397462,1679397462,-84.7551,36.1938,10972.8,!1,222.59,354.96,0,null,10988.04,"3776",!1,0],["4b187c","SWR22   ","Switzerland",1679397462,1679397463,3.9129,48.0856,10972.8,!1,229.8,322,0,null,11026.14,"5712",!1,0],["a6a2f7","N527AH  ","United States",1679397177,1679397177,2.4465,48.9651,45.72,!1,68.61,265.7,-3.9,null,160.02,"2001",!1,0],["3455cb","GES321S ","Spain",1679397462,1679397462,-3.5266,40.6035,2263.14,!1,123.57,39.26,16.26,null,2400.3,null,!1,0],["accd69","DAL706  ","United States",1679397462,1679397462,-86.6541,36.0933,11216.64,!1,250.52,148.01,-5.53,null,11247.12,"2167",!1,0],["c02e8f","JZA603  ","Canada",1679397462,1679397462,-73.53,45.6178,845.82,!1,75.75,222.25,.33,null,845.82,"7335",!1,0],["ab649a","DAL131  ","United States",1679397462,1679397462,3.1631,52.9679,9753.6,!1,230.54,287.67,0,null,9669.78,"0613",!1,0],["aae1ea","AAL52   ","United States",1679397462,1679397462,16.2824,39.0922,10668,!1,267.01,104.28,-.33,null,10728.96,null,!1,0],["ade107","N9936W  ","United States",1679397438,1679397460,-85.3345,32.6922,1524,!1,59.37,117.9,-1.3,null,1592.58,null,!1,0],["3c65c2","DLH5PF  ","Germany",1679397462,1679397462,12.4353,55.0487,3611.88,!1,199.01,26.57,-7.8,null,3627.12,"3746",!1,0],["e8020c","LPE2304 ","Chile",1679397462,1679397462,-78.8764,-9.3103,9745.98,!1,237.2,333.05,0,null,null,null,!1,0],["e8020f","LAN532  ","Chile",1679397342,1679397351,-77.9007,30.6654,12489.18,!1,277.38,14.5,-.33,null,12824.46,null,!1,0],["adda17","WIG1090 ","United States",1679397462,1679397462,-71.3011,43.0018,2042.16,!1,88.61,56.13,2.28,null,2026.92,null,!1,0],["0d0af3","VTM289  ","Mexico",1679397462,1679397462,-86.841,39.1355,10363.2,!1,204.28,222.45,0,null,10279.38,"5417",!1,0],["a03115","N111MZ  ","United States",1679397462,1679397462,-95.0538,37.5818,4541.52,!1,143.13,13.09,0,null,4518.66,"4702",!1,0],["4b1882","SWR27A  ","Switzerland",1679397462,1679397462,-10.1203,53.7712,10972.8,!1,209.88,295.25,.65,null,10881.36,"3034",!1,0],["44023f","EJU68FC ","Austria",1679397462,1679397462,6.408,46.3024,2567.94,!1,133.14,45.31,-10.08,null,2705.1,"1000",!1,0],["ac1afa","SWA3235 ","United States",1679397462,1679397462,-104.1642,39.7021,6484.62,!1,196.8,82.19,12.68,null,6408.42,null,!1,0],["3c5ee8","DLH07H  ","Germany",1679397461,1679397461,8.5484,50.0398,null,!0,7.46,247.5,null,null,null,"1000",!1,0],["3c5ee6","EWG6HA  ","Germany",1679397462,1679397462,5.6973,51.9277,10965.18,!1,206.25,218.21,0,null,10934.7,"1124",!1,0],["3c5ee9","EWG7462 ","Germany",1679397334,1679397334,10.0025,53.6306,null,!0,0,36.56,null,null,null,null,!1,0],["3c65c7","DLH3FN  ","Germany",1679397462,1679397462,2.2385,51.5513,10370.82,!1,225.19,275.11,0,null,10325.1,"2502",!1,0],["3c65c6","DLH6VA  ","Germany",1679397462,1679397462,10.1397,50.7782,5593.08,!1,176.27,229.62,-5.2,null,5692.14,"1000",!1,0],["3c65c5","DLH9WC  ","Germany",1679397462,1679397462,12.6141,37.1421,11277.6,!1,248.5,147.86,-.33,null,11475.72,"2501",!1,0],["3c65c4","DLH5U   ","Germany",1679397462,1679397462,4.227,50.7052,11277.6,!1,243.32,103.45,0,null,11277.6,"4704",!1,0],["3455c1","IBE6339 ","Spain",1679397457,1679397457,-4.7267,40.5241,6126.48,!1,189.42,233.5,7.15,null,6324.6,null,!1,0],["3c65c9","DLH2J   ","Germany",1679397447,1679397450,8.5319,50.0454,76.2,!1,62.68,249.33,-1.63,null,175.26,"1000",!1,0],["45e5b3","BIO13   ","Denmark",1679397462,1679397462,-6.1035,52.6301,632.46,!1,61.5,124.09,0,null,601.98,"3722",!1,0],["3c65c8","DLH8V   ","Germany",1679397462,1679397462,8.6045,50.0627,403.86,!1,62.2,249.17,-3.58,null,487.68,"1000",!1,0],["800373","AIC511  ","India",1679397452,1679397455,77.311,23.8354,11574.78,!1,204.96,357.41,0,null,11955.78,null,!1,0],["3c5ef9","GWI9T   ","Germany",1679397462,1679397462,12.3536,48.7466,2948.94,!1,149.27,174.86,-8.78,null,3040.38,"1362",!1,0],["e8022a","LPE2690 ","Chile",1679397450,1679397452,-78.3062,28.5678,10668,!1,252.82,5.72,0,null,11026.14,null,!1,0],["46b82a","AEE5ZH  ","Greece",1679397462,1679397462,11.3068,45.8872,10652.76,!1,252.92,126.15,-.33,null,10782.3,"3022",!1,0],["3d2538","DEMIQ   ","Germany",1679397462,1679397462,12.3352,47.4019,3017.52,!1,72.59,139.31,2.6,null,3116.58,"0176",!1,0],["3b7b3e","MILAN7A ","France",1679397462,1679397462,7.6112,47.459,7315.2,!1,191.49,78.69,-.33,null,7475.22,"1000",!1,0],["46b82c","AEE2WD  ","Greece",1679397336,1679397338,13.5119,52.3601,null,!0,1.03,67.5,null,null,null,null,!1,0],["3c5eec","DLH04T  ","Germany",1679397446,1679397446,8.5945,50.0445,null,!0,7.72,53.44,null,null,null,"1000",!1,0],["3c65d8","DLH2PP  ","Germany",1679397462,1679397462,11.5378,48.4545,3322.32,!1,154.43,334.97,8.45,null,3413.76,"6666",!1,0],["3c65d6","DLH1768 ","Germany",1679397463,1679397463,11.9293,48.1562,3375.66,!1,176.12,120.16,5.2,null,3474.72,"6403",!1,0],["867ff0","JAL6    ","Japan",1679397462,1679397462,-116.9646,48.2346,10668,!1,250.09,99.83,0,null,10340.34,"1140",!1,0],["e492cf","AZU4618 ","Brazil",1679397462,1679397462,-49.8647,-28.0683,11582.4,!1,208.89,213.14,-.33,null,12199.62,null,!1,0],["3c65ca","DLH811  ","Germany",1679397462,1679397462,11.0816,55.0348,11582.4,!1,216.81,188.32,0,null,11521.44,"0737",!1,0],["8686cc","ANA474  ","Japan",1679397462,1679397462,138.6431,34.0602,8191.5,!1,242.54,60.66,-10.08,null,8382,"3335",!1,0],["3ff03c","DMYZE   ","Germany",1679397462,1679397462,8.7344,47.754,1417.32,!1,41.03,277.93,-.33,null,null,"7000",!1,0],["ae5acd","SUPRT41 ","United States",1679397462,1679397462,-86.1174,31.8387,502.92,!1,48.53,111.12,.33,null,579.12,null,!1,0],["a41412","DAL2913 ","United States",1679397462,1679397462,-87.6837,43.0521,9532.62,!1,207.57,278.55,5.85,null,9372.6,"7500",!1,0],["7c6b07","JST678  ","Australia",1679397462,1679397462,143.5221,-36.0805,8153.4,!1,232.84,332.93,5.53,null,8488.68,"1245",!1,0],["7c48c8","TFX201  ","Australia",1679397462,1679397462,151.1844,-33.9347,7.62,!1,66.79,168,-4.23,null,152.4,"1205",!1,0],["ac2f18","SWA2965 ","United States",1679397462,1679397462,-81.9151,41.2711,10363.2,!1,199.77,294.98,0,null,10226.04,"7067",!1,0],["a114f4","AAL1515 ","United States",1679397462,1679397462,-83.7355,38.2231,9448.8,!1,240.9,133.44,0,null,9395.46,"6142",!0,0],["a94b29","UAL2149 ","United States",1679397462,1679397462,-96.7517,43.1351,10972.8,!1,205.81,245.48,0,null,10736.58,null,!1,0],["861f00","JAL652  ","Japan",1679397462,1679397462,140.0953,35.4028,2476.5,!1,124.85,34.08,-5.2,null,2522.22,"2374",!1,0],["c01b1d","CFKGY   ","Canada",1679397413,1679397413,-73.7345,45.466,null,!0,5.66,42.19,null,null,null,"4577",!1,0],["46b828","AEE34   ","Greece",1679397462,1679397462,8.984,49.7487,3543.3,!1,193.63,133.06,5.2,null,3634.74,"7660",!1,0],["a114ed","UPS950  ","United States",1679397462,1679397462,-119.2495,37.7252,10363.2,!1,200.99,280.62,-.33,null,10226.04,"2231",!1,0],["ae014c","        ","United States",1679397462,1679397462,12.6036,40.3894,7627.62,!1,166.92,352.92,0,null,7749.54,null,!1,0],["46b827","AEE28   ","Greece",1679397457,1679397462,18.0311,44.0581,10675.62,!1,240.13,136.04,0,null,10706.1,"4376",!1,0],["861f1a","ANA629  ","Japan",1679397462,1679397462,137.2992,34.7084,12192,!1,182.35,236.62,0,null,12344.4,"2067",!1,0],["aa099e","JBU1125 ","United States",1679397453,1679397454,-78.7917,35.8719,null,!0,0,42.19,null,null,null,null,!1,0],["a8eea1","DAL2781 ","United States",1679397462,1679397462,-84.7246,33.5896,792.48,!1,100.39,353.82,-3.25,null,876.3,"5623",!1,0],["abd9b6","SWA1621 ","United States",1679397462,1679397462,-82.2072,41.2509,11582.4,!1,203.17,276.98,0,null,11414.76,"7102",!1,0],["ae0193","VALOR21 ","United States",1679397462,1679397462,7.4916,49.4734,1188.72,!1,116.16,55.47,0,null,1272.54,"4217",!1,0],["51110c","SAS1247 ","Estonia",1679397205,1679397207,10.9232,56.2714,891.54,!1,111.05,293.48,-4.55,null,883.92,"0441",!1,0],["a785fd","JIA5386 ","United States",1679397462,1679397463,-80.2074,34.3824,4930.14,!1,170.02,333.59,-8.45,null,4998.72,null,!1,0],["a89eec","N6547J  ","United States",1679397462,1679397462,-78.5585,35.123,1584.96,!1,56.65,103.66,-.65,null,1638.3,null,!1,0],["51110a","SAS079  ","Estonia",1679397461,1679397462,18.0121,59.5251,1348.74,!1,89.82,170.11,9.75,null,1303.02,null,!1,0],["a0311d","DAL1151 ","United States",1679397462,1679397462,-81.235,42.5218,10972.8,!1,197.2,272.39,-.33,null,10782.3,"7123",!1,0],["aa56f8","UAL355  ","United States",1679397462,1679397462,-98.8975,33.9195,12192,!1,178.23,327.14,0,null,12313.92,"2501",!1,0],["a69b86","JIA5153 ","United States",1679397453,1679397453,-77.0408,38.8553,null,!0,1.8,270,null,null,null,"3766",!1,0],["0d0abd","AMX683  ","Mexico",1679397462,1679397462,-98.9797,19.8002,5547.36,!1,192.06,235.59,-3.9,null,5852.16,null,!1,0],["aa56f7","UAL1672 ","United States",1679397460,1679397460,-98.7381,37.8664,9753.6,!1,210.8,285.43,13.33,null,9677.4,null,!1,0],["47880d","SAS932  ","Norway",1679397462,1679397462,5.7496,59.8596,11887.2,!1,245.05,140.96,0,null,11719.56,null,!1,0],["ac2f37","SWA3163 ","United States",1679397462,1679397462,-96.9761,32.7785,11887.2,!1,253.85,37.59,-.33,null,12070.08,"2445",!1,0],["aaa6ae","SWA1195 ","United States",1679397462,1679397462,-84.941,34.9629,11887.2,!1,243.55,162.29,0,null,11955.78,"1367",!1,0],["a08acb","RPA4351 ","United States",1679397462,1679397462,-86.8224,41.8309,3566.16,!1,186.49,350.95,-5.2,null,3550.92,"7423",!1,0],["a29748","SWA920  ","United States",1679397462,1679397462,-91.0552,40.4805,9448.8,!1,241.1,72.11,0,null,9311.64,"1164",!1,0],["861f22","JAL94   ","Japan",1679397387,1679397458,128.277,37.6288,10988.04,!1,258.7,79.23,11.7,null,11056.62,null,!1,0],["aa9f76","AVA014  ","United States",1679397462,1679397462,-3.8923,40.2792,2994.66,!1,171.63,108.16,-4.88,null,3162.3,null,!1,0],["a8320e","UPS76   ","United States",1679397462,1679397462,-72.3253,39.3093,9083.04,!1,291.5,77.88,-6.83,null,9014.46,"6751",!1,0],["abc726","N858XJ  ","United States",1679397409,1679397409,-85.6269,32.5084,1706.88,!1,57.65,237.02,0,null,1767.84,null,!1,0],["7cf9ea","VIPR43  ","Australia",1679397462,1679397462,116.0114,-31.6441,289.56,!1,71.74,169.25,0,null,274.32,"2062",!1,0],["8014a3","IGO6249 ","India",1679397462,1679397462,76.2138,22.2691,10058.4,!1,253.3,41.46,-.33,null,10424.16,null,!1,0],["a1515b","AAL2260 ","United States",1679397463,1679397463,-78.5246,42.3233,9761.22,!1,200.99,253.19,0,null,9563.1,"3456",!1,0],["7c7ccc","JST777  ","Australia",1679397462,1679397462,143.9922,-36.9242,7833.36,!1,251.17,112.52,-15.93,null,8168.64,"3751",!1,0],["7c7cce","JST537  ","Australia",1679397462,1679397462,146.0085,-37.2572,6438.9,!1,181.64,236.67,-17.56,null,6758.94,"4345",!1,0],["a7d716","N604LA  ","United States",1679397462,1679397462,-82.0115,27.9151,6400.8,!1,243.55,177.58,0,null,6667.5,"0756",!1,0],["c03517","WJA520  ","Canada",1679397462,1679397462,-89.1655,48.3227,10668,!1,261.9,115.11,0,null,10279.38,null,!1,0],["7cf9de","VIPR11  ","Australia",1679397462,1679397462,115.8677,-31.4626,403.86,!1,81.98,255.09,.33,null,396.24,"7332",!1,0],["a88d05","N650D   ","United States",1679397462,1679397462,-84.3259,43.43,5318.76,!1,190.25,224.67,13.66,null,5234.94,null,!1,0],["ad071d","ENY3540 ","United States",1679397462,1679397462,-89.2325,40.8567,7010.4,!1,242.78,43.03,-10.08,null,6964.68,"2174",!1,0],["8014b2","IGO5603 ","India",1679397462,1679397462,76.422,22.1609,10370.82,!1,240.44,189.48,0,null,10759.44,null,!1,0],["343194","VLG16AL ","Spain",1679397461,1679397461,2.0625,41.2628,457.2,!1,91.02,163.92,6.5,null,556.26,null,!1,0],["7c7cc4","","Australia",1679397459,1679397459,144.9813,-37.8453,null,!0,0,14.06,null,null,null,null,!1,0],["ac34a0","FDX5198 ","United States",1679397154,1679397154,-118.3434,38.9353,10668,!1,272.61,101.1,0,null,10500.36,"1136",!1,0],["8014b3","IGO5251 ","India",1679397462,1679397462,76.8771,15.1772,10439.4,!1,226.66,340.37,4.88,null,10980.42,null,!1,0],["8014b4","IGO6344 ","India",1679397462,1679397462,88.0838,23.3688,8046.72,!1,249.72,21.38,7.48,null,8290.56,"1445",!1,0],["a737c7","SWA1038 ","United States",1679397462,1679397462,-95.874,33.695,6606.54,!1,183.28,221.7,-13,null,6728.46,"2513",!1,0],["a26a4f","ATN3283 ","United States",1679397462,1679397462,-95.1121,30.2749,3573.78,!1,185.23,34.71,15.61,null,3627.12,null,!1,0],["7c7cc2","HM4     ","Australia",1679397462,1679397462,143.8096,-37.7481,1463.04,!1,77.89,94.17,0,null,1577.34,null,!1,0],["c0481c","ROU1688 ","Canada",1679397462,1679397462,-71.6672,46.6017,3474.72,!1,148.06,225.42,6.83,null,3329.94,null,!1,0],["48469c","KV4     ","Kingdom of the Netherlands",1679397445,1679397445,4.7587,52.2988,null,!0,3.6,210.94,null,null,null,null,!1,0],["861e9a","JAL674  ","Japan",1679397462,1679397462,137.3748,34.552,11277.6,!1,247.86,34.51,-.33,null,11460.48,"2430",!1,0],["3d124d","DEFEJ   ","Germany",1679397462,1679397462,9.3767,48.0545,null,!0,2.57,255.94,null,null,null,null,!1,0],["a6a425","NKS3147 ","United States",1679397462,1679397462,-70.9454,21.3434,11590.02,!1,216.74,295.9,0,null,12207.24,null,!1,0],["a57ad0","GTI9747 ","United States",1679397462,1679397462,-95.7185,44.257,12192,!1,235.7,318.1,0,null,11902.44,"4072",!1,0],["ac973e","MTN8327 ","United States",1679397359,1679397400,-86.2572,39.7372,304.8,!1,50.56,224.59,-2.28,null,373.38,"6211",!1,0],["a39113","EDV5376 ","United States",1679397462,1679397462,-77.1528,37.6112,10660.38,!1,257.36,48.73,0,null,10645.14,"5363",!1,0],["4aca82","NSZ3690 ","Sweden",1679397462,1679397462,4.1926,52.3455,12192,!1,220.3,239.24,0,null,12169.14,"3536",!1,0],["accd18","DAL2805 ","United States",1679397462,1679397462,-80.7604,42.651,9753.6,!1,195.19,272.72,.33,null,9585.96,"3366",!1,0],["a64d4d","JBU222  ","United States",1679397462,1679397462,-79.8262,27.2258,5151.12,!1,210.8,15.43,12.35,null,5379.72,null,!1,0],["7cf9d8","VIPR47  ","Australia",1679397462,1679397462,115.592,-31.5252,914.4,!1,93.22,254.97,.33,null,937.26,"2054",!1,0],["800da0","VTI885  ","India",1679397455,1679397457,76.893,25.4645,11277.6,!1,245.01,178.07,-.33,null,11559.54,null,!1,0],["e07585","ARG1240 ","Argentina",1679397461,1679397461,-48.8764,-25.5322,11887.2,!1,247.12,30.94,0,null,12527.28,null,!1,0],["e07583","ARG1531 ","Argentina",1679397462,1679397462,-59.5662,-34.1047,4792.98,!1,186.76,108.14,-8.45,null,5059.68,"2337",!1,0],["a0f4f6","DAL205  ","United States",1679397462,1679397462,1.8504,61.866,10972.8,!1,219.64,279.57,0,null,10767.06,"0420",!1,0],["a3ed7c","DAL1499 ","United States",1679397347,1679397351,-99.8495,39.389,10347.96,!1,212.99,270.55,0,null,10241.28,"1722",!1,0],["a3f473","JBU555  ","United States",1679397444,1679397445,-77.0392,38.8675,-76.2,!1,63.89,176.77,-3.58,null,22.86,"3421",!1,0],["a2ba11","N275LH  ","United States",1679397462,1679397462,2.9191,47.2858,3962.4,!1,126.72,156.56,.33,null,4084.32,"3401",!1,0],["800da5","SEJ504  ","India",1679397391,1679397391,72.3283,17.973,7772.4,!1,187.35,331.82,-5.85,null,8138.16,null,!1,0],["aaf4c8","DAL2652 ","United States",1679397462,1679397462,-79.5891,37.5525,9753.6,!1,218.84,227.57,0,null,9730.74,"3412",!1,0],["3d1284","DEFGM   ","Germany",1679397461,1679397462,9.9533,49.5502,1341.12,!1,72.17,262.22,.65,null,1417.32,"7000",!1,0],["34448d","IBS3715 ","Spain",1679397461,1679397462,-2.7016,48.6778,10058.4,!1,238,196.32,0,null,10111.74,"2201",!1,0],["800db4","AXB193  ","India",1679397462,1679397462,78.69,28.0194,10363.2,!1,215.29,287.09,0,null,10538.46,null,!1,0],["344498","IBS37LA ","Spain",1679397462,1679397462,1.8482,48.0209,8839.2,!1,202.64,194.71,8.78,null,8923.02,"7626",!1,0],["a857c2","PDT6117 ","United States",1679397462,1679397462,-79.6702,42.805,7947.66,!1,197.82,172.23,7.8,null,7795.26,"6326",!1,0],["ab7781","EJA838  ","United States",1679397462,1679397462,-96.8309,35.6418,7292.34,!1,249.76,57.62,13.98,null,7322.82,"2253",!1,0],["344496","IBS37DV ","Spain",1679397462,1679397462,-1.2117,41.2237,9745.98,!1,266.53,75.24,7.15,null,9959.34,null,!1,0],["758323","CEB409  ","Philippines",1679397425,1679397425,121.0161,14.5146,null,!0,3.34,236.25,null,null,null,null,!1,0],["a16fa6","AJT884  ","United States",1679397462,1679397462,-94.3599,29.736,12192,!1,185.94,281.65,-.33,null,12481.56,"0010",!1,0],["5110fa","ESPKY   ","Estonia",1679397454,1679397459,24.8272,59.4156,null,!0,0,227.81,null,null,null,null,!1,0],["8014dc","IGO403  ","India",1679397461,1679397462,77.1037,29.2858,8983.98,!1,222.21,22.17,-8.13,null,9136.38,null,!1,0],["0d0b8b","AMX709  ","Mexico",1679397273,1679397273,-99.062,19.4404,null,!0,23.15,59.06,null,null,null,null,!1,0],["8014dd","VTI848  ","India",1679397462,1679397462,76.6885,28.5415,1973.58,!1,107.92,80.67,-4.23,null,1958.34,null,!1,0],["8001ac","AIC710  ","India",1679397462,1679397462,88.8919,24.5017,9753.6,!1,192.27,245.84,.65,null,10050.78,"2604",!1,0],["3c5eef","EWG5PL  ","Germany",1679397462,1679397462,22.5154,40.7171,4701.54,!1,162.3,140.66,-8.13,null,4785.36,null,!1,0],["471f8b","WZZ698  ","Hungary",1679397461,1679397462,25.665,45.7871,10965.18,!1,216.9,313.27,0,null,10927.08,"5346",!1,0],["710396","","Saudi Arabia",null,1679397458,null,null,null,!1,105.29,330.43,-4.23,null,null,null,!1,0],["85188c","JAL615  ","Japan",1679397462,1679397462,136.5495,35.3343,7924.8,!1,189.53,255.7,0,null,8107.68,"2447",!1,0],["3c65da","DLH6KW  ","Germany",1679397462,1679397462,17.22,49.7374,10888.98,!1,227.75,73.73,-10.08,null,10843.26,"1000",!1,0],["861e4e","ANA669  ","Japan",1679397462,1679397462,138.0891,35.5046,11582.4,!1,168.19,258.17,0,null,11689.08,"3466",!1,0],["86cec5","SNJ64   ","Japan",1679397462,1679397462,140.2031,35.5257,2110.74,!1,105.64,3.35,0,null,2194.56,"2324",!1,0],["a40d8d","DAL488  ","United States",1679397462,1679397462,-73.8577,40.7724,null,!0,0,303.75,null,null,null,null,!1,0],["49530a","TAP231P ","Portugal",1679397461,1679397462,-11.4785,40.1716,9448.8,!1,220.43,305.69,0,null,9738.36,"4402",!1,0],["49530c","TAP257  ","Portugal",1679397457,1679397457,-11.5394,40.7731,9441.18,!1,216.11,314.04,0,null,9738.36,"4403",!1,0],["8014ed","VTI865  ","India",1679397462,1679397462,76.4476,27.6796,11330.94,!1,217.78,204.57,7.8,null,11536.68,null,!1,0],["4400eb","EJU93BE ","Austria",1679397462,1679397462,2.4332,41.491,11277.6,!1,201.04,233.22,0,null,11536.68,"4010",!1,0],["abb440","UAL1207 ","United States",null,1679397461,null,null,null,!1,0,5.62,null,null,null,null,!1,0],["343147","PUE302  ","Spain",1679397462,1679397462,-8.3314,39.6717,12192,!1,260.04,84.32,0,null,12451.08,"6502",!1,0],["8014ea","LLR809  ","India",1679397462,1679397462,77.8571,28.0148,5745.48,!1,123.86,122.96,3.9,null,5829.3,null,!1,0],["471f9e","WZZ3748 ","Hungary",1679397462,1679397462,28.3706,36.0271,10972.8,!1,209.36,319.18,.33,null,11117.58,null,!1,0],["758305","PAL508  ","Philippines",1679397449,1679397449,121.0153,14.5062,null,!0,23.15,61.88,null,null,null,null,!1,0],["84cb66","SFJ90   ","Japan",1679397462,1679397462,135.1606,34.428,11887.2,!1,278.16,79.13,0,null,12123.42,"2022",!1,0],["8a043a","GIA199  ","Indonesia",1679397462,1679397462,102.8849,-.5392,10134.6,!1,237.07,126.17,8.13,null,10759.44,null,!1,0],["471f82","WZZ1BA  ","Hungary",1679397461,1679397462,22.9052,42.9056,4053.84,!1,166,130.6,-4.55,null,4145.28,"4730",!1,0],["471f81","WZZ5ES  ","Hungary",1679397254,1679397254,25.2827,54.6439,null,!0,0,317.81,null,null,null,"0464",!1,0],["861e92","ADO88   ","Japan",1679397462,1679397462,141.4459,40.7798,10980.42,!1,229.95,192.14,0,null,10812.78,null,!1,0],["86d5e0","JAL735  ","Japan",1679397462,1679397462,134.9469,34.0508,12184.38,!1,193.55,241.94,0,null,12443.46,"3723",!1,0],["471f85","WZZ4828 ","Hungary",1679397461,1679397461,21.5881,45.4497,10660.38,!1,248.65,130.05,-3.9,null,10652.76,"5353",!1,0],["8014bb","IGO863  ","India",1679397462,1679397462,77.244,13.8097,7566.66,!1,221.63,147.42,-2.93,null,7879.08,null,!1,0],["495308","TAP442T ","Portugal",1679397462,1679397462,-8.9276,38.9734,2453.64,!1,170.98,44.27,15.28,null,2606.04,"2246",!1,0],["86d5d8","ANA179  ","Japan",1679397462,1679397462,-114.8696,39.3232,11582.4,!1,219.67,323,-.33,null,11460.48,null,!1,0],["abc780","SWA3490 ","United States",1679397461,1679397462,-90.9154,41.0435,10972.8,!1,205.47,240.61,0,null,10812.78,"1362",!1,0],["8014bc","IGO6067 ","India",1679397462,1679397462,77.8289,14.3787,9235.44,!1,224.61,14.86,4.23,null,9685.02,null,!1,0],["acba30","EDV5407 ","United States",1679397461,1679397462,-81.1461,40.1782,12192,!1,203.58,266.52,0,null,12070.08,"3333",!1,0],["471f6a","WZZ1215 ","Hungary",1679397462,1679397462,18.8067,47.3767,10965.18,!1,210.94,323.83,.33,null,10911.84,null,!1,0],["8014c8","IGO246  ","India",1679397462,1679397462,76.5843,28.3054,3451.86,!1,139.49,59.65,-4.88,null,3489.96,null,!1,0],["471f6d","WZZ1DB  ","Hungary",1679397461,1679397462,18.7785,46.9942,10668,!1,244.79,119.04,0,null,10614.66,"0511",!1,0],["48597e","TRA5316 ","Kingdom of the Netherlands",1679397461,1679397462,27.4274,37.9407,11277.6,!1,213.62,318.71,0,null,11384.28,"7220",!1,0],["495301","TAP204A ","Portugal",1679397451,1679397462,-12.9049,39.4057,10660.38,!1,226.22,110.08,.65,null,10965.18,null,!1,0],["471f6e","WZZ5161 ","Hungary",1679397345,1679397350,24.2717,54.9731,678.18,!1,74.34,265.24,-3.9,null,685.8,"4510",!1,0],["495303","TAP202A ","Portugal",1679397462,1679397462,-9.3748,38.5535,1348.74,!1,138.19,69.74,-5.85,null,1485.9,"4077",!1,0],["471f6b","WZZ479  ","Hungary",1679397462,1679397462,22.4729,43.0302,5318.76,!1,175.67,120.24,-7.15,null,5410.2,null,!1,0],["a4278e","DAL1077 ","United States",1679397462,1679397462,-84.0167,33.3434,3550.92,!1,186.49,326.13,-3.25,null,3649.98,null,!1,0],["ace74e","SKW4637 ","United States",1679397462,1679397462,-77.3174,40.6164,9479.28,!1,160.49,276.44,2.93,null,9364.98,"2743",!1,0],["86cee7","SNJ117  ","Japan",1679397461,1679397461,136.6403,34.528,4503.42,!1,154.68,229.32,16.26,null,4625.34,"2173",!1,0],["8014d8","IGO2486 ","India",1679397420,1679397420,76.2645,17.5555,11277.6,!1,263.95,115.27,0,null,null,null,!1,0],["392049","FGICJ   ","France",1679397462,1679397463,5.4496,43.4518,640.08,!1,71.48,229.09,2.28,null,716.28,"5472",!1,0],["e48baa","TAM8084 ","Brazil",1679397461,1679397462,-11.4099,36.053,10363.2,!1,261.03,19.93,0,null,10690.86,null,!1,0],["abad6c","SWA3436 ","United States",1679397138,1679397269,-87.9053,42.9547,null,!0,3.09,357.19,null,null,null,null,!1,0],["8014d0","VTI642  ","India",1679397342,1679397346,77.0704,28.5462,289.56,!1,74.62,103.56,-2.93,null,213.36,null,!1,0],["3b7b95","DRAGO56 ","France",1679397420,1679397430,-4.1289,47.9599,281.94,!1,49.72,61.58,0,null,365.76,null,!1,0],["34444b","IBE32DW ","Spain",1679397462,1679397462,8.5769,44.6964,7665.72,!1,214.52,231.43,9.1,null,7840.98,"0433",!1,0],["8014ca","IOA106  ","India",1679397416,1679397431,86.0301,22.1449,2438.4,!1,79.71,186.3,0,null,2446.02,"1410",!1,0],["8014ce","IGO2028 ","India",1679397462,1679397462,77.2808,28.333,2743.2,!1,176.48,205.74,0,null,2750.82,null,!1,0],["471f7b","WZZ95ZK ","Hungary",1679397462,1679397462,12.5181,50.4913,10363.2,!1,208.34,299.92,0,null,10408.92,"1000",!1,0],["8014d9","IGO6065 ","India",1679397462,1679397462,76.9718,28.5932,845.82,!1,89.59,103.96,-2.6,null,792.48,null,!1,0],["471f69","WZZ1359 ","Hungary",1679397462,1679397462,11.3915,51.3887,10668,!1,245.02,107.6,.33,null,10698.48,"0506",!1,0],["3c6745","DLH7HX  ","Germany",1679397462,1679397462,11.356,49.5249,8526.78,!1,192.2,349.2,.33,null,8641.08,"1000",!1,0],["440cff","EJU87UC ","Austria",1679397462,1679397462,7.5565,44.9078,11285.22,!1,238.75,124.82,0,null,11422.38,"1000",!1,0],["3c6748","DLH2WN  ","Germany",1679397462,1679397462,24.1382,45.0817,8290.56,!1,221.11,113.88,-6.5,null,8351.52,"1000",!1,0],["a9178d","UAL958  ","United States",1679397462,1679397462,-3.6055,54.2075,10363.2,!1,215.33,310.35,0,null,10210.8,"6327",!1,0],["45966b","OYESK   ","Denmark",1679397462,1679397462,.0463,45.9727,7924.8,!1,153.9,22.19,0,null,8039.1,"2337",!1,0],["a5d1f7","SWA680  ","United States",1679397462,1679397462,-96.7652,33.0928,891.54,!1,116.97,266.72,-.33,null,883.92,"1663",!1,0],["ae6222","DRAGO79 ","United States",1679397316,1679397316,127.0409,36.9244,335.28,!1,44.56,126.08,-.33,null,342.9,null,!1,0],["a4b1fe","KAP42   ","United States",1679397458,1679397459,-71.7288,43.1609,1889.76,!1,79.42,318.15,-2.93,null,1866.9,null,!1,0],["505f3a","ELJ202  ","Slovakia",1679397462,1679397462,16.2775,49.0961,8519.16,!1,227.27,112.21,-7.48,null,8542.02,"1000",!1,0],["a99a52","FFT1238 ","United States",1679397462,1679397462,-73.5549,40.7812,8747.76,!1,244.08,48.08,-10.73,null,8602.98,"2417",!1,0],["3c6742","DLH1FF  ","Germany",1679397455,1679397460,6.7657,51.2811,null,!0,0,95.62,null,null,null,null,!1,0],["3c6741","DLH6PF  ","Germany",1679397462,1679397462,11.3669,47.7395,4762.5,!1,176.18,20.87,-6.5,null,4899.66,"1000",!1,0],["344445","AEA71NL ","Spain",1679397462,1679397462,.256,45.45,11277.6,!1,221.42,208.29,0,null,11384.28,"7150",!1,0],["a7b133","JIA5591 ","United States",1679397462,1679397462,-83.0671,33.9278,7620,!1,210.88,56.54,-.33,null,7719.06,"5212",!1,0],["a4fa98","N42PN   ","United States",1679397462,1679397462,-75.6895,40.339,3528.06,!1,112.86,303.47,0,null,3550.92,null,!1,0],["344446","","Spain",1679397190,1679397190,-3.5697,40.471,null,!0,2.06,208.12,null,null,null,null,!1,0],["a1bfb2","UAL277  ","United States",1679397462,1679397462,-83.6468,40.1392,10972.8,!1,213.73,296.44,0,null,10828.02,"0540",!1,0],["471f77","WZZ98MW ","Hungary",1679397459,1679397459,20.2933,44.8202,null,!0,0,300.94,null,null,null,null,!1,0],["3c6758","DLH9KX  ","Germany",1679397456,1679397456,8.5849,50.0466,null,!0,2.57,70.31,null,null,null,null,!1,0],["ae6212","CARD19  ","United States",1679397461,1679397461,127.0024,37.0902,228.6,!1,52.39,262.67,3.9,null,205.74,null,!1,0],["4400b9","EJU96MH ","Austria",1679397462,1679397462,-.809,43.2162,11277.6,!1,205.49,233.96,0,null,11430,"6722",!1,0],["4400b7","EJU69MF ","Austria",1679397461,1679397461,7.1093,43.4437,3741.42,!1,174.31,255.47,14.96,null,3893.82,null,!1,0],["477ff4","HUAF169 ","Hungary",1679397462,1679397462,16.085,47.9543,10828.02,!1,247.92,112.57,-5.53,null,10828.02,"1000",!1,0],["48d18f","SPWMP   ","Poland",1679397315,1679397344,21.4608,50.3299,449.58,!1,41.48,82.87,-2.6,null,518.16,null,!1,0],["471f44","WZZ1377 ","Hungary",1679397462,1679397462,33.1937,35,2537.46,!1,151.82,107.15,-8.78,null,2598.42,"5357",!1,0],["3c675a","DLH334  ","Germany",1679397462,1679397462,14.0752,44.2299,10668,!1,248.48,170.95,0,null,10744.2,"1000",!1,0],["11184d","","Russian Federation",1679397459,1679397459,9.0014,46.182,null,!1,2.12,-111.7,0,null,688,null,!1,3],["3c674f","DLH2NE  ","Germany",1679397462,1679397462,10.018,52.5907,8785.86,!1,227.02,174.15,10.08,null,8846.82,"1331",!1,0],["3c674e","DLH04Y  ","Germany",1679397454,1679397454,16.5739,48.1141,null,!0,4.89,14.06,null,null,null,"1000",!1,0],["e48011","TAM3980 ","Brazil",1679397462,1679397462,-45.8864,-19.3162,11894.82,!1,232.65,150.6,0,null,12542.52,null,!1,0],["a59601","UAL908  ","United States",1679397462,1679397462,-1.5576,54.4703,11277.6,!1,245.2,315.68,-.33,null,11186.16,"2121",!1,0],["3c5433","BCS31T  ","Germany",1679397462,1679397462,12.1318,51.4264,632.46,!1,98.8,264.02,1.63,null,701.04,"7000",!1,0],["a8f75b","SKQ53   ","United States",1679397462,1679397462,-74.9737,40.4189,2011.68,!1,128.78,45.65,-.33,null,2072.64,"2502",!1,0],["471f57","WZZ1636 ","Hungary",1679397414,1679397423,18.8133,43.6334,10980.42,!1,229.39,254.65,-.65,null,11003.28,null,!1,0],["4400d0","TYW431  ","Austria",1679397462,1679397462,22.7117,36.8946,11887.2,!1,244.33,153.22,.33,null,12009.12,"7101",!1,0],["a7615f","DAL146  ","United States",1679397462,1679397462,-84.6586,33.5367,1577.34,!1,118.84,269.75,-10.4,null,1661.16,"5301",!1,0],["471f59","WZZ69   ","Hungary",1679397462,1679397462,21.1952,48.8359,10363.2,!1,244.98,140.8,0,null,10279.38,"5561",!1,0],["abfb99","RPA4682 ","United States",1679397462,1679397462,-75.8584,38.8699,8610.6,!1,222.25,36.34,-11.7,null,8564.88,"0562",!1,0],["abb2fe","FDX5279 ","United States",1679397365,1679397426,48.8368,27.3002,9144,!1,212.31,298.99,0,null,9204.96,null,!1,0],["c07c7a","ACA485  ","Canada",1679397462,1679397462,-78.0734,44.353,6652.26,!1,172.93,239.62,-7.48,null,6469.38,"0621",!1,0],["34440a","VLG1UC  ","Spain",1679397461,1679397462,3.1893,41.6741,4953,!1,182.64,221.23,-9.43,null,5158.74,"6356",!1,0],["471f3c","WZZ2980 ","Hungary",1679397462,1679397462,32.5501,33.2072,10972.8,!1,197.63,333.9,-.33,null,11125.2,"5665",!1,0],["a189e4","FRG1510 ","United States",1679397462,1679397462,-87.8984,42.9438,null,!0,24.18,258.75,null,null,null,null,!1,0],["471f3d","WZZ6189 ","Hungary",1679397463,1679397463,15.4239,38.5331,8039.1,!1,199.44,3.4,6.5,null,8130.54,null,!1,0],["7809d8","CSZ9098 ","China",1679397301,1679397301,115.6585,22.3327,10668,!1,253.74,50.76,0,null,11231.88,null,!1,0],["344416","IBS37RT ","Spain",1679397462,1679397462,8.2717,53.2516,10972.8,!1,203.17,227.46,0,null,10957.56,"0767",!1,0],["4008e5","BAW31WL ","United Kingdom",1679397462,1679397462,.8344,47.1111,11269.98,!1,232.78,169.56,0,null,11338.56,"2025",!1,0],["3c6706","DLH453  ","Germany",1679397462,1679397462,5.0888,50.6121,11887.2,!1,269.46,105.39,0,null,11887.2,"2253",!1,0],["a88d3c","FDX1746 ","United States",1679397462,1679397462,-83.6584,36.3284,8542.02,!1,246.95,36.27,20.81,null,8557.26,null,!1,0],["440cbf","EJU57NJ ","Austria",1679397462,1679397462,12.0635,47.9276,11277.6,!1,226.45,213.04,0,null,11346.18,"1000",!1,0],["3c6708","DLH4C   ","Germany",1679397422,1679397439,11.8195,48.3668,396.24,!0,69.43,263.19,-1.63,null,null,"2257",!1,0],["3c6707","DLH501  ","Germany",1679397462,1679397462,10.0443,47.6632,8282.94,!1,227.96,74.02,-5.2,null,8404.86,"1000",!1,0],["a4c4ec","SWA1056 ","United States",1679397462,1679397462,-85.5557,37.662,10972.8,!1,223.95,357.76,0,null,10927.08,"3673",!1,0],["a7d754","JIA5365 ","United States",1679397462,1679397462,-81.8791,33.967,5753.1,!1,190.99,20.83,2.93,null,5852.16,null,!1,0],["a1fc3b","ENY3592 ","United States",1679397455,1679397455,-81.4797,26.1067,5554.98,!1,206.85,115.8,-9.1,null,5905.5,"2643",!1,0],["344409","VLG8LB  ","Spain",1679397462,1679397462,11.7392,48.2531,3215.64,!1,178.05,83.7,-.98,null,3329.94,"1000",!1,0],["a1acc7","N207HV  ","United States",1679397461,1679397461,6.2888,52.4735,335.28,!1,51.79,193.21,-.33,null,312.42,"7000",!1,0],["471f36","WZZ8565 ","Hungary",1679397462,1679397462,25.2816,39.2729,10355.58,!1,211.95,332.07,-.33,null,10477.5,"5541",!1,0],["471f33","WZZ702  ","Hungary",1679397367,1679397367,21.2307,48.6332,312.42,!1,58.53,12.69,-3.58,null,373.38,null,!1,0],["3c6710","DLH639  ","Germany",1679397462,1679397462,13.4455,47.8124,5867.4,!1,180.95,294.52,-6.18,null,5966.46,"5361",!1,0],["a40ca4","DAL2375 ","United States",1679397366,1679397366,-84.4442,33.6496,220.98,!1,71.51,90,-4.23,null,335.28,"4120",!1,0],["471f34","WZZ1021 ","Hungary",1679397462,1679397463,13.5499,50.7695,9745.98,!1,224.1,244.14,0,null,9791.7,"4624",!1,0],["471f37","WZZ1PM  ","Hungary",1679397462,1679397462,7.8555,51.6029,975.36,!1,97.59,245.06,-3.9,null,1036.32,"3111",!1,0],["a82aa0","UPS9    ","United States",1679397455,1679397459,54.0386,24.8602,9144,!1,209.19,301.42,.33,null,9395.46,null,!1,0],["471f38","WZZ8416 ","Hungary",1679397462,1679397462,18.7576,47.5735,4084.32,!1,189.05,128.15,-10.4,null,4152.9,"2164",!1,0],["a5d1c6","UPS796  ","United States",1679397462,1679397462,-98.2578,26.4231,1653.54,!1,109.63,227.85,-8.45,null,1691.64,"4052",!1,0],["471f31","WZZ2803 ","Hungary",1679397461,1679397462,27.6501,43.4499,10675.62,!1,241.91,126.09,0,null,10698.48,"7107",!1,0],["471f32","WZZ8432 ","Hungary",1679397458,1679397462,22.7929,47.823,10980.42,!1,215.45,313.26,.33,null,10904.22,"1000",!1,0],["a8e420","LTA72   ","United States",1679397462,1679397462,-86.8527,39.8687,1226.82,!1,37.42,288.43,2.6,null,1257.3,null,!1,0],["471f30","WZZ1521 ","Hungary",1679397462,1679397462,7.7656,50.7259,10668,!1,234.11,118.48,0,null,10721.34,"4624",!1,0],["a8a7f1","NKS3138 ","United States",1679397462,1679397462,-91.2474,30.8937,9753.6,!1,203.07,309.86,0,null,10020.3,"1733",!1,0],["00891d","00000000","South Africa",1679397453,1679397462,25.6114,-33.985,null,!0,.13,326.25,null,null,null,null,!1,0],["a95de2","VXP345  ","United States",1679397462,1679397462,-74.9719,38.3671,11582.4,!1,198.62,214.02,0,null,11513.82,"1662",!1,0],["471f03","WZZ1258 ","Hungary",1679397462,1679397462,10.4268,53.0082,6537.96,!1,207.57,167.55,9.75,null,6591.3,"7620",!1,0],["471f00","","Hungary",1679397141,1679397150,20.6061,42.4723,7749.54,!1,197.24,125.02,-10.73,null,7833.36,null,!1,0],["3c6722","CFG2080 ","Germany",1679397456,1679397458,8.5786,50.0484,null,!0,1.54,112.5,null,null,null,null,!1,0],["a831ad","EJA627  ","United States",1679397462,1679397462,-75.2122,42.2617,5074.92,!1,216.77,113.64,0,null,4991.1,"5771",!1,0],["a0a6e9","FDX53   ","United States",1679397434,1679397439,-98.6443,24.3548,10972.8,!1,241.11,204.05,0,null,11452.86,"1535",!1,0],["4008ad","SHT5T   ","United Kingdom",1679397462,1679397462,-1.1851,52.1019,4290.06,!1,199.3,143.4,-12.35,null,4274.82,"1476",!1,0],["3c670c","DLH500  ","Germany",1679397461,1679397461,11.7873,48.3435,411.48,!1,61.64,263.29,.33,null,502.92,"6671",!1,0],["4400a7","OEVPU   ","Austria",1679397227,1679397227,16.283,47.8437,312.42,!1,51.94,236.31,-3.9,null,388.62,null,!1,0],["a4b1f0","","United States",1679397437,1679397437,-73.1067,44.9433,281.94,!1,41.69,344.25,-.65,null,320.04,null,!1,0],["4008b4","BAW926M ","United Kingdom",1679397462,1679397462,1.4011,51.1642,9128.76,!1,244.63,94.58,8.45,null,9060.18,"2245",!1,0],["4008b1","BAW1430 ","United Kingdom",1679397239,1679397239,-3.3667,55.949,null,!0,2.83,137.81,null,null,null,"7755",!1,0],["a977d4","AAL2910 ","United States",1679397462,1679397462,-80.8203,35.0797,1584.96,!1,113.48,175.84,-6.5,null,1676.4,"7434",!1,0],["a4891e","DCM502  ","United States",1679397462,1679397462,-86.5263,40.1044,10058.4,!1,160.83,165.74,0,null,9944.1,"3157",!1,0],["4951cc","TAP932  ","Portugal",1679397462,1679397462,7.0363,47.733,6789.42,!1,217.37,107.49,-8.13,null,6918.96,"1000",!1,0],["868710","ANA36   ","Japan",1679397399,1679397399,139.7844,35.5759,60.96,!1,71.94,215.39,-3.9,null,83.82,"4712",!1,0],["407b4e","CFD01   ","United Kingdom",1679397462,1679397462,-4.3575,55.9124,449.58,!1,65.16,227.24,-2.93,null,365.76,"5454",!1,0],["3c6589","DLH272  ","Germany",1679397462,1679397462,8.7806,45.957,6720.84,!1,198.43,151.51,-4.88,null,6873.24,"1000",!1,0],["a61987","SWA1504 ","United States",1679397462,1679397462,-90.5193,30.0536,1112.52,!1,133.84,106.07,-1.95,null,1188.72,null,!1,0],["407b4d","NHZ653  ","United Kingdom",1679397433,1679397433,-2.2005,57.2047,null,!0,4.63,50.62,null,null,null,null,!1,0],["abc7c6","SWA511  ","United States",1679397462,1679397462,-94.5215,38.4619,12192,!1,204.91,281.73,0,null,12108.18,"1673",!1,0],["ad07ae","N939G   ","United States",1679397462,1679397462,-81.0708,29.1818,434.34,!1,48.36,269.39,3.25,null,495.3,null,!1,0],["00c463","SFR161  ","South Africa",1679397462,1679397462,26.1704,-31.7286,10972.8,!1,214.76,245.22,0,null,11483.34,null,!1,0],["a7cfb7","EDV4645 ","United States",1679397462,1679397462,-82.5727,40.7329,9448.8,!1,250.97,68.85,.33,null,9364.98,"6653",!1,0],["ac2412","SWA251  ","United States",1679397462,1679397462,-98.2175,30.2934,5768.34,!1,177.5,282.38,14.63,null,5935.98,"2772",!1,0],["3c6581","DLH8N   ","Germany",1679397402,1679397402,11.7927,48.3564,null,!0,0,264.38,null,null,null,null,!1,0],["407b55","WUK1924 ","United Kingdom",1679397462,1679397462,12.8914,51.3863,10972.8,!1,205.43,279.37,0,null,10995.66,"6603",!1,0],["a533bd","UAL2663 ","United States",1679397462,1679397462,-100.3936,33.2981,11590.02,!1,196.42,331.02,0,null,11795.76,null,!1,0],["ad9db0","ASA395  ","United States",1679397462,1679397462,-81.3944,28.5984,1699.26,!1,125.01,269.76,2.6,null,1775.46,null,!1,0],["3c6585","DLH9925 ","Germany",1679397462,1679397462,13.8795,52.1509,2606.04,!1,137.83,17.15,-5.2,null,2651.76,"1000",!1,0],["3c658d","DLH74N  ","Germany",1679397462,1679397462,1.6803,43.6756,1965.96,!1,142.24,194.24,-8.78,null,null,"1000",!1,0],["a283ed","ENY4094 ","United States",1679397462,1679397462,-87.1756,41.9813,2994.66,!1,137.03,280.38,0,null,2987.04,"6606",!1,0],["ac6aa2","N9BQ    ","United States",1679397461,1679397462,-74.01,40.6497,335.28,!1,3.25,251.57,.65,null,411.48,"0307",!1,0],["3c658e","DLH1UP  ","Germany",1679397359,1679397359,-4.4362,55.8647,null,!0,.51,253.12,null,null,null,"1451",!1,0],["7c6c53","VOZ988  ","Australia",1679397462,1679397462,151.1783,-33.9466,null,!0,.13,345.94,null,null,null,"1051",!1,0],["aa57df","AAL146  ","United States",1679397462,1679397462,1.3879,51.2454,11277.6,!1,262.6,105.45,0,null,11247.12,"5223",!1,0],["7c6c52","VOZ1404 ","Australia",1679397462,1679397462,138.5436,-34.9403,-30.48,!1,72.72,230.45,-3.25,null,38.1,"1064",!1,0],["45ce01","FXT60A  ","Denmark",1679397182,1679397182,44.5195,41.4402,13106.4,!1,252.85,100.67,0,null,13075.92,null,!1,0],["02a1a4","LBT641  ","Tunisia",1679397461,1679397462,24.2966,40.4961,10965.18,!1,207.38,255.34,0,null,11041.38,"2320",!1,0],["c07e32","ACA328  ","Canada",1679397292,1679397292,-73.7449,45.4589,null,!0,1.29,177.19,null,null,null,"3371",!1,0],["c07e33","ACA701  ","Canada",1679397462,1679397462,-76.3741,42.2338,9144,!1,187.11,293.32,0,null,8953.5,"2616",!1,0],["3c6590","DLH57F  ","Germany",1679397462,1679397462,.5506,43.807,10972.8,!1,256.3,63.79,0,null,11109.96,"1000",!1,0],["ad4405","IRO8578 ","United States",1679397462,1679397462,-87.7173,44.1898,3291.84,!1,88.4,5.68,0,null,3230.88,null,!1,0],["abfd23","SWA3382 ","United States",1679397462,1679397462,-89.413,37.3979,12496.8,!1,242.65,11,0,null,12473.94,null,!1,0],["3c6599","DLH5RV  ","Germany",1679397216,1679397216,8.585,50.0466,null,!0,2.06,73.12,null,null,null,null,!1,0],["e02681","ARG1406 ","Argentina",1679397462,1679397462,-58.4092,-34.4662,3169.92,!1,149.32,264.66,13.98,null,3322.32,"1574",!1,0],["a4bf95","DAL234  ","United States",1679397462,1679397462,15.0885,44.51,11498.58,!1,257.45,122.52,2.28,null,11551.92,"5243",!1,0],["a64ce6","DAL975  ","United States",1679397462,1679397462,-125.1248,46.0932,10668,!1,237.98,66.43,0,null,10309.86,"2627",!1,0],["abadd6","SWA153  ","United States",1679397462,1679397462,-90.2618,30.2596,10972.8,!1,197.67,297.77,.33,null,11247.12,"1471",!1,0],["a426da","FFT1191 ","United States",1679397395,1679397462,-79.7069,33.3883,11582.4,!1,206.42,209.57,0,null,11742.42,"7524",!1,0],["abc7e9","SWA609  ","United States",1679397461,1679397462,-82.089,30.8733,10363.2,!1,227.41,180.78,0,null,10622.28,"4071",!1,0],["ad574c","NKS296  ","United States",1679397462,1679397462,-75.6292,37.0393,11574.78,!1,197.24,212.32,0,null,11582.4,"3470",!1,0],["ac97f1","N910PA  ","United States",1679397462,1679397462,-82.9751,37.3326,9144,!1,148.23,300.21,0,null,9121.14,"5655",!1,0],["ac2439","SWA3652 ","United States",1679397462,1679397462,-84.8819,34.0521,3154.68,!1,151.85,141.19,-8.78,null,3238.5,"3451",!1,0],["710411","SVA229  ","Saudi Arabia",1679397462,1679397462,14.0312,39.16,12192,!1,240.45,292.12,0,null,12313.92,null,!1,0],["a69c49","N525J   ","United States",1679397462,1679397462,-80.26,40.4791,8229.6,!1,210.74,93.22,0,null,8161.02,"6665",!1,0],["a7e9e4","NKS3100 ","United States",1679397462,1679397463,-81.172,28.0773,11864.34,!1,220.29,335.29,2.93,null,12268.2,null,!1,0],["c035bb","JZA873  ","Canada",1679397462,1679397462,-79.4344,43.4269,2933.7,!1,134.85,334.71,-8.45,null,2903.22,"1705",!1,0],["ad9db8","DAL2353 ","United States",1679397462,1679397462,-83.2311,42.1722,2567.94,!1,147.61,30.59,-4.55,null,2583.18,"2552",!1,0],["a23699","N24139  ","United States",1679397348,1679397348,-78.9985,36.6806,1051.56,!1,56,23.27,-5.2,null,1196.34,null,!1,0],["a1acdb","RPA5590 ","United States",1679397462,1679397462,-72.8208,41.2614,5059.68,!1,201.34,64.42,-.33,null,5029.2,"3140",!1,0],["8852e2","THA653  ","Thailand",1679397165,1679397165,118.0172,21.2893,12184.38,!1,226.58,255.81,-.33,null,12839.7,null,!1,0],["00c45d","SFR112  ","South Africa",1679397440,1679397442,28.1698,-26.0047,3566.16,!1,131.72,16.1,-5.53,null,3817.62,null,!1,0],["a809f5","NKS303  ","United States",1679397462,1679397462,-78.5105,34.5733,9761.22,!1,205.36,218.59,0,null,9837.42,"2402",!0,0],["7c6c33","VOZ9214 ","Australia",1679397462,1679397462,115.5593,-32.9838,6400.8,!1,175.49,21.68,0,null,6751.32,"7202",!1,0],["39d30b","TVF67CK ","France",1679397462,1679397462,31.3692,35.3982,10972.8,!1,196.79,291.47,0,null,11071.86,"5603",!1,0],["511066","SAS88K  ","Estonia",1679397462,1679397462,8.65,54.168,11277.6,!1,240.82,44.48,.33,null,11231.88,"5633",!1,0],["abfd66","SWA992  ","United States",1679397462,1679397462,-82.6893,29.3894,9029.7,!1,220.33,352.89,6.83,null,9326.88,"3773",!1,0],["4690e2","AEE629  ","Greece",1679397462,1679397462,7.0602,48.0549,9890.76,!1,238.46,112.58,5.85,null,10020.3,"3505",!1,0],["407b8b","WUK89PX ","United Kingdom",1679397463,1679397463,10.3523,54.0518,10972.8,!1,213.06,247.27,0,null,10957.56,"3510",!1,0],["a5f938","UAL2661 ","United States",1679397462,1679397462,-77.9889,43.1737,10157.46,!1,189.85,269.22,5.53,null,9921.24,"1475",!1,0],["407b8e","SHT19M  ","United Kingdom",1679397462,1679397462,-3.1078,54.5558,11887.2,!1,233.59,166.76,0,null,11803.38,"1467",!1,0],["abadf9","SWA2860 ","United States",1679397462,1679397462,-82.219,33.3443,11277.6,!1,220.53,7.51,0,null,11414.76,"4522",!1,0],["3e8b02","GAF318  ","Germany",1679397462,1679397462,4.8312,43.3881,2133.6,!1,118.5,159.68,9.75,null,2225.04,"5675",!1,0],["3c4b26","DLH499  ","Germany",1679397460,1679397461,-12.7576,51.2702,11887.2,!1,275.3,79.99,0,null,11871.96,null,!1,0],["3c4b24","DLH454  ","Germany",1679397439,1679397439,-1.1629,59.0553,9753.6,!1,275.29,325.12,0,null,9578.34,"2563",!1,0],["4b5da3","TE22    ","Switzerland",1679397460,1679397462,8.5584,47.4556,null,!0,.06,272.81,null,null,null,null,!1,0],["3c4b28","DLH430  ","Germany",1679397462,1679397462,7.1385,50.8356,7185.66,!1,236.81,315.26,7.8,null,7284.72,"2535",!1,0],["4b5da1","ATL780  ","Switzerland",1679397461,1679397461,8.557,47.4521,null,!0,2.57,2.81,null,null,null,null,!1,0],["39e68b","AFR61GP ","France",1679397458,1679397458,8.7167,45.6255,null,!0,0,168.75,null,null,null,"1000",!1,0],["39e68d","AFR63QU ","France",1679397462,1679397462,2.7537,49.0021,723.9,!1,86.17,265.55,-5.2,null,792.48,"1000",!1,0],["39e68f","AFR94MX ","France",1679397461,1679397462,6.0222,46.1805,1882.14,!1,103.32,225.81,11.38,null,1981.2,null,!1,0],["3c6543","DLH5MC  ","Germany",1679397462,1679397462,8.2414,51.985,10622.28,!1,232.08,353.25,3.9,null,10660.38,"2534",!1,0],["3c6542","DLH8YY  ","Germany",1679397461,1679397461,19.2686,47.4192,228.6,!1,65.2,312.12,-1.3,null,297.18,"1000",!1,0],["3c6541","DLH53K  ","Germany",1679397462,1679397462,11.5213,48.324,2659.38,!1,138.73,263.61,19.83,null,2735.58,"6661",!1,0],["3c4b2f","DLH462  ","Germany",1679397462,1679397462,-.0788,53.2997,9753.6,!1,241.04,279.58,.33,null,9654.54,"2557",!1,0],["a4bf41","AAL1551 ","United States",1679397462,1679397462,-82.7952,26.749,10660.38,!1,266.43,118.99,0,null,11079.48,"3643",!1,0],["3430cd","VLG5BY  ","Spain",1679397462,1679397462,-5.497,38.1458,5158.74,!1,173.26,220.79,-7.8,null,5410.2,"7674",!1,0],["a546c9","RPA4422 ","United States",1679397462,1679397462,-74.1895,40.9447,5791.2,!1,190.06,125.97,-.33,null,5753.1,"0552",!1,0],["3d48e8","DEZWA   ","Germany",1679397461,1679397461,9.1237,45.04,579.12,!1,51.06,77.78,.33,null,670.56,"1000",!1,0],["a76192","AMF1326 ","United States",1679397462,1679397462,-76.2534,41.2123,3703.32,!1,166.46,75.32,-11.05,null,3733.8,null,!1,0],["3c4b35","DLH456  ","Germany",1679397462,1679397462,5.4482,51.8771,9753.6,!1,258.53,318.95,0,null,9768.84,"0632",!1,0],["7c6c94","JST766  ","Australia",1679397462,1679397462,138.5267,-34.948,null,!0,10.8,36.56,null,null,null,"4323",!1,0],["accdd3","N924JE  ","United States",1679397462,1679397462,-89.5545,39.3399,11033.76,!1,284.94,56.71,-7.15,null,10919.46,"1723",!1,0],["a7618f","LXJ575  ","United States",1679397462,1679397462,-85.6308,37.1872,13098.78,!1,229.82,343.35,-.33,null,13114.02,"2011",!1,0],["e49337","TAM8112 ","Brazil",1679397462,1679397462,-98.5742,18.7614,6240.78,!1,187.87,280.57,-5.53,null,6576.06,null,!1,0],["ae5d33","","United States",1679397445,1679397447,25.788,44.5689,533.4,!1,61.85,78.97,-3.25,null,571.5,null,!1,0],["e48007","GLO9632 ","Brazil",1679397298,1679397303,-35.136,-8.4443,2392.68,!1,138.55,56.66,-7.15,null,2537.46,null,!1,0],["3c6569","DLH440  ","Germany",1679397462,1679397462,-.4899,55.7561,10972.8,!1,231.46,297.25,-.33,null,10828.02,"2564",!1,0],["39e689","AFR52DV ","France",1679397462,1679397462,2.9224,48.9213,2042.16,!1,137.89,89.14,-8.78,null,2110.74,"1000",!1,0],["a8e479","BOG72   ","United States",1679397462,1679397462,-78.8953,35.2018,9654.54,!1,223.72,315.47,4.88,null,9700.26,"2441",!1,0],["a3ecba","N352FB  ","United States",1679397462,1679397462,-112.1015,33.6046,670.56,!1,60.74,181.94,.98,null,601.98,null,!1,0],["4846ef","OH87    ","Kingdom of the Netherlands",1679397406,1679397406,4.7443,52.3065,null,!0,7.46,160.31,null,null,null,null,!1,0],["39e687","AFR65UN ","France",1679397462,1679397462,3.5429,48.6357,3200.4,!1,129.61,329.47,-5.2,null,3284.22,"1000",!1,0],["3c4b49","EWG4AM  ","Germany",1679397461,1679397461,19.2457,43.2487,11285.22,!1,233.02,130.97,0,null,11254.74,"7661",!1,0],["a0808f","SKW5298 ","United States",1679397462,1679397462,-87.7391,42.0441,3055.62,!1,153.66,101.2,13,null,3055.62,"1353",!1,0],["adf4c6","N999HE  ","United States",1679397462,1679397462,-96.8126,32.9803,579.12,!1,52.07,37.78,2.6,null,548.64,null,!1,0],["a52cc8","RPA4339 ","United States",1679397462,1679397462,-86.7628,34.5608,1409.7,!1,110.22,144.31,8.78,null,1485.9,null,!1,0],["3c6562","OCN8PG  ","Germany",1679397462,1679397462,1.8357,56.6042,10363.2,!1,251.47,333.91,0,null,10233.66,"3032",!1,0],["abea64","RPA4304 ","United States",1679397462,1679397462,-95.6236,36.2347,3276.6,!1,176.14,57.89,7.48,null,3276.6,"1143",!1,0],["e48c30","GLO2019 ","Brazil",1679397439,1679397439,-43.2398,-21.0377,10637.52,!1,229.28,347.43,-3.25,null,11277.6,null,!1,0],["3c656b","DLH444  ","Germany",1679397462,1679397462,2.3294,53.1064,10363.2,!1,230.23,287.42,0,null,10264.14,"2575",!1,0],["a5cc12","UAL2274 ","United States",1679397462,1679397462,-74.3444,40.6101,2202.18,!1,130.17,277.27,14.31,null,2225.04,"2720",!1,0],["e0b0d0","LVKCP   ","Argentina",1679397462,1679397462,-58.4352,-34.3758,1821.18,!1,149.76,91.57,2.28,null,1920.24,null,!1,0],["4846dd","V4      ","Kingdom of the Netherlands",1679397450,1679397450,4.7429,52.3054,null,!0,9.77,59.06,null,null,null,null,!1,0],["800463","AIC537  ","India",1679397462,1679397462,76.8873,27.6889,8488.68,!1,235.24,196.26,12.68,null,8633.46,null,!1,0],["4b5db1","RTT7    ","Switzerland",1679397460,1679397460,8.558,47.4546,null,!0,7.2,95.62,null,null,null,null,!1,0],["463051","OHSHT   ","Finland",1679397462,1679397462,22.5643,60.8033,3048,!1,89.97,64.61,0,null,2926.08,null,!1,0],["3c6573","DLH7K   ","Germany",1679397462,1679397462,3.6518,52.3452,11582.4,!1,230.21,294.56,0,null,11536.68,"2547",!1,0],["3c6570","DLH590  ","Germany",1679397462,1679397462,12.0548,47.9452,10401.3,!1,258.9,125.05,3.9,null,10477.5,"0620",!1,0],["758404","PAL894  ","Philippines",1679397462,1679397462,120.4402,22.4821,10660.38,!1,216.76,352.77,.65,null,11231.88,null,!1,0],["acc23f","DAL2928 ","United States",1679397462,1679397462,-76.6629,39.5794,8869.68,!1,206.78,250.98,10.08,null,8785.86,"1555",!1,0],["758403","PAL310  ","Philippines",1679397462,1679397462,121.1031,14.9251,3909.06,!1,192.58,352.32,12.03,null,4168.14,null,!1,0],["ada5ee","JBU1373 ","United States",1679397462,1679397462,-79.9518,41.1439,10972.8,!1,196.87,277.96,-.33,null,10805.16,"1113",!1,0],["0a004a","DAH1216 ","Algeria",1679397462,1679397462,2.5854,48.8013,9753.6,!1,250.36,62.33,0,null,9776.46,"1030",!1,0],["abb595","SWA778  ","United States",1679397462,1679397462,-95.2345,29.8088,3200.4,!1,155.38,.76,9.1,null,3276.6,null,!1,0],["e491d6","AZU4209 ","Brazil",1679397462,1679397462,-47.4428,-25.2819,9448.8,!1,226.29,71.85,0,null,10005.06,null,!1,0],["a880c8","RPA3621 ","United States",1679397418,1679397422,-74.1713,40.6926,-114.3,!0,8.75,25.31,null,null,null,"6504",!1,0],["3443d3","VLG2TZ  ","Spain",1679397461,1679397461,11.2639,42.6542,5852.16,!1,182.53,143.71,-2.93,null,6019.8,"6370",!1,0],["3d3720","DETCY   ","Germany",1679397420,1679397422,7.176,50.7661,60.96,!1,37.58,289.18,-1.95,null,137.16,"7000",!1,0],["a45091","DAL1104 ","United States",1679397462,1679397462,-84.5962,38.8587,2491.74,!1,138.93,164.32,15.28,null,2514.6,null,!1,0],["a9b662","N725CS  ","United States",1679397454,1679397454,-71.2903,42.4638,null,!0,.06,255.94,null,null,null,null,!1,0],["a69061","JIA5196 ","United States",1679397462,1679397462,-78.6917,38.9543,8976.36,!1,201.17,270.88,5.53,null,8938.26,null,!1,0],["a7269e","N56X    ","United States",1679397462,1679397462,-84.2928,36.8568,4373.88,!1,170.82,161.02,-2.93,null,4419.6,null,!1,0],["a21ba0","FFT1060 ","United States",1679397462,1679397462,-82.1116,32.9962,11330.94,!1,191.88,333.57,3.9,null,11483.34,null,!1,0],["ae5bd4","R20793  ","United States",1679397454,1679397461,26.1019,44.5762,68.58,!1,10.85,264.56,-1.3,null,137.16,"6723",!1,0],["a94c7b","DAL1036 ","United States",1679397462,1679397462,-83.5661,32.9463,8252.46,!1,213.95,318.61,-18.53,null,8435.34,null,!1,0],["a03235","AAL171  ","United States",1679397462,1679397462,-81.0351,41.2541,9753.6,!1,203.3,277.27,0,null,9639.3,"1665",!1,0],["a3ee0b","UPS928  ","United States",1679397461,1679397461,-115.8076,35.2973,9959.34,!1,189.01,227.76,-15.28,null,9997.44,null,!1,0],["a94c53","N699BW  ","United States",1679397462,1679397462,-77.7346,35.9578,7924.8,!1,129.6,262.93,0,null,7970.52,null,!1,0],["500304","T7RNT   ","San Marino",1679397462,1679397462,20.5537,47.3694,11887.2,!1,182.32,126.74,0,null,11803.38,"7706",!1,0],["3c64a6","DLH4YY  ","Germany",1679397166,1679397166,8.5707,50.0488,null,!0,2.57,337.5,null,null,null,"1000",!1,0],["4aca05","NSZ3674 ","Sweden",1679397462,1679397462,1.4194,48.8956,12496.8,!1,215.88,227.22,-.33,null,12527.28,"0764",!1,0],["505cb8","BDR681  ","Slovakia",1679397459,1679397459,49.8679,26.3067,10934.7,!1,160.62,281.45,4.88,null,11163.3,null,!1,0],["3c64a4","DLH55E  ","Germany",1679397462,1679397462,4.0403,40.5747,9860.28,!1,233.09,22.04,5.53,null,10134.6,null,!1,0],["3c64a3","DLH17Y  ","Germany",1679397141,1679397242,-.2611,39.8989,3436.62,!1,145.27,235.24,-8.45,null,3596.64,"2560",!1,0],["ae0270","        ","United States",1679397462,1679397462,9.5644,54.1472,8534.4,!1,202.86,328.16,0,null,8542.02,"0725",!1,0],["3c64a9","DLH44T  ","Germany",1679397462,1679397462,2.0765,41.0683,3474.72,!1,148.17,67.98,8.13,null,3619.5,null,!1,0],["3c64a7","DLH09W  ","Germany",1679397462,1679397462,4.953,45.8657,10058.4,!1,210.69,234.64,0,null,10210.8,"6672",!1,0],["a5c078","N47TP   ","United States",1679397462,1679397462,-75.908,39.9211,792.48,!1,58.89,231.03,.98,null,845.82,null,!1,0],["8674ce","JAL333  ","Japan",1679397462,1679397462,135.3306,35.093,12192,!1,182.58,257.14,0,null,12390.12,"1711",!1,0],["0a0049","DAH1023 ","Algeria",1679397462,1679397462,3.2319,37.5016,4091.94,!1,198.37,169.39,-13,null,4282.44,"6766",!1,0],["aa8164","AAL2845 ","United States",1679397462,1679397462,-75.2371,39.8684,null,!0,32.41,255.94,null,null,null,null,!1,0],["3c64ae","DLH02J  ","Germany",1679397462,1679397462,-.4481,42.5255,11285.22,!1,208.67,206.82,0,null,11468.1,"0634",!1,0],["3c64ad","DLH686  ","Germany",1679397463,1679397463,24.2869,41.7703,10668,!1,237.19,138.25,.33,null,10728.96,"7701",!1,0],["a8f6ef","NKS171  ","United States",1679397461,1679397462,-77.0306,35.5836,10347.96,!1,214.27,201.7,0,null,10386.06,"3315",!1,0],["7c71ed","WSF     ","Australia",1679397461,1679397462,150.8131,-33.6554,2346.96,!1,76.86,346.06,3.9,null,2514.6,"1336",!1,0],["3c4aa4","CFG3749 ","Germany",1679397462,1679397462,8.5538,50.0347,null,!0,6.94,70.31,null,null,null,"2367",!1,0],["0a0045","DAH4419 ","Algeria",1679397423,1679397423,23.5249,34.4772,12192,!1,219.31,289.03,-.33,null,12344.4,null,!1,0],["aa31ed","SKW4953 ","United States",1679397461,1679397462,-100.1164,36.0506,9936.48,!1,257.66,165.55,7.48,null,9982.2,null,!1,0],["4aca13","NSZ28U  ","Sweden",1679397462,1679397462,-2.1835,42.2424,11277.6,!1,215.81,209.25,0,null,11445.24,"3512",!1,0],["a6e055","LCO1502 ","United States",1679397462,1679397462,-.8642,53.2067,10675.62,!1,261.82,100.76,.65,null,10538.46,"6250",!1,0],["4aca12","NSZ2767 ","Sweden",1679397462,1679397462,.6103,51.8028,8260.08,!1,216.87,31.62,13.33,null,8191.5,"2041",!1,0],["4aca14","NOZ37F  ","Sweden",1679397462,1679397462,4.3562,49.4263,11277.6,!1,206.56,239.79,0,null,11300.46,"3527",!1,0],["505ca4","AXE7838 ","Slovakia",1679397462,1679397462,78.7866,28.4634,10363.2,!1,220.27,317.37,0,null,10546.08,null,!1,0],["addb4a","AAL328  ","United States",1679397462,1679397462,-93.5508,36.6762,9144,!1,192.93,227.16,0,null,9151.62,"6545",!1,0],["e48ad4","TAM3042 ","Brazil",null,1679397449,null,null,null,!1,211.77,208.43,9.1,null,null,null,!1,0],["4aca0b","NSZ2876 ","Sweden",1679397462,1679397462,-1.3753,50.9292,12192,!1,220.84,223.96,1.95,null,12176.76,"3521",!1,0],["4aca0a","NSZ2872 ","Sweden",1679397462,1679397462,5.0145,51.3539,12192,!1,217.92,224.14,0,null,12176.76,"3511",!1,0],["3c64aa","DLH680  ","Germany",1679397462,1679397462,16.4667,45.2723,10668,!1,241.65,133.27,.33,null,10706.1,"4365",!1,0],["3c4aa1","CFG2185 ","Germany",1679397461,1679397461,-9.1156,45.9853,11277.6,!1,232.94,86.58,.33,null,11407.14,null,!1,0],["0a008e","DAH1061 ","Algeria",1679397461,1679397462,2.2627,48.0346,5379.72,!1,190.55,177.37,15.61,null,5448.3,"7641",!1,0],["0a008f","DAH1171 ","Algeria",1679397462,1679397462,6.4718,47.1439,8176.26,!1,218.9,192.76,9.1,null,8305.8,"6727",!1,0],["4aca66","SAS944  ","Sweden",1679397462,1679397462,8.6618,57.359,12192,!1,263.01,134.76,0,null,12062.46,"1203",!1,0],["4606ba","OHCOG   ","Finland",1679397456,1679397458,23.6706,61.258,373.38,!1,49.34,50.5,.65,null,335.28,null,!1,0],["0a008b","DAH1000 ","Algeria",1679397462,1679397462,3.8706,38.2841,9707.88,!1,228.6,17.42,7.48,null,9997.44,null,!1,0],["a70c67","AAL1159 ","United States",1679397461,1679397462,-78.7679,35.9601,1143,!1,134.25,310.65,12.03,null,1219.2,"2470",!1,0],["a88cbf","PDT5961 ","United States",1679397461,1679397462,-81.0889,35.4068,3329.94,!1,134.82,153.24,-5.53,null,3413.76,"4721",!1,0],["4846a4","BRW100  ","Kingdom of the Netherlands",1679397358,1679397358,4.7486,52.3189,null,!0,2.57,120.94,null,null,null,null,!1,0],["aa7a61","SWA2283 ","United States",1679397462,1679397462,-80.0733,39.0756,12192,!1,204.3,274.33,0,null,12108.18,"2133",!1,0],["a7cff5","N602PC  ","United States",1679397462,1679397462,-70.2177,41.4886,1127.76,!1,64.95,147.95,-1.63,null,1143,null,!1,0],["a8e3a8","FDX1404 ","United States",1679397461,1679397462,-114.0556,34.516,9753.6,!1,189.78,258.9,0,null,9867.9,null,!1,0],["7c2fe7","NWK1647 ","Australia",1679397462,1679397462,116.7197,-30.0509,11590.02,!1,227.36,188.59,-.33,null,12176.76,null,!1,0],["7c6c25","VOZ9274 ","Australia",1679397461,1679397461,116.8054,-29.1767,10355.58,!1,233.96,194.65,0,null,10927.08,null,!1,0],["0a0092","DAH2024 ","Algeria",1679397170,1679397181,12.2199,41.8308,83.82,!1,74.36,162.69,-4.55,null,160.02,null,!1,0],["a2c209","N277RW  ","United States",1679397462,1679397462,-89.5303,37.9757,4861.56,!1,190.59,307.98,-8.45,null,4876.8,"7152",!1,0],["0a0091","DAH1003 ","Algeria",1679397462,1679397463,2.5615,46.5875,10668,!1,219.89,175.3,0,null,10751.82,"7625",!1,0],["a2bb10","SWA3587 ","United States",1679397462,1679397462,-83.7667,35.9008,8625.84,!1,182.81,272.58,-5.2,null,8648.7,"4126",!1,0],["48f6f7","1200    ","Poland",1679397445,1679397445,21.1484,52.57,152.4,!1,19.21,20.38,0,null,205.74,null,!1,0],["7c7f38","ZEY     ","Australia",1679397462,1679397462,115.7854,-32.8164,1386.84,!1,52.61,189,0,null,1424.94,"1200",!1,0],["a6f326","JIA5209 ","United States",1679397462,1679397462,-86.6888,38.3223,10355.58,!1,209.01,245.26,-.33,null,10294.62,"4005",!1,0],["440325","FTY8    ","Austria",1679397462,1679397462,2.0341,51.1845,10568.94,!1,233.75,102.84,4.88,null,10485.12,"0543",!1,0],["a9b62c","AAL906  ","United States",1679397461,1679397462,-79.8498,25.4695,3954.78,!1,169.84,305.13,-8.13,null,4145.28,null,!1,0],["a7cfe6","JIA5445 ","United States",1679397402,1679397402,-77.0377,38.8493,null,!0,10.29,199.69,null,null,null,"4001",!1,0],["800fd0","IGO1785 ","India",1679397461,1679397461,73.0718,18.9729,1249.68,!1,102.2,16.98,-4.23,null,1211.58,null,!1,0],["76b864","TGW652  ","Singapore",1679397430,1679397453,103.4226,2.1399,6454.14,!1,224.09,315.56,5.53,null,6850.38,"2231",!1,0],["a653f6","JIA5328 ","United States",1679397462,1679397462,-77.309,39.0287,1356.36,!1,98.28,79.75,-5.53,null,1424.94,"2076",!1,0],["a70016","N550GW  ","United States",1679397462,1679397462,-77.5718,33.6581,13106.4,!1,200.34,195.64,-.33,null,13281.66,"1712",!1,0],["a34ee6","N312GS  ","United States",1679397462,1679397462,-80.5933,33.0416,11582.4,!1,167.81,212.86,.33,null,11742.42,"3653",!1,0],["4aca6f","SAS4164 ","Sweden",1679397462,1679397462,5.2228,60.279,289.56,!1,71.3,171.29,15.93,null,228.6,null,!1,0],["a02b97","N11TV   ","United States",1679397374,1679397384,-74.2428,40.6178,33040.32,!0,13.23,256.5,-.33,null,null,"1200",!1,0],["a475a3","DAL2846 ","United States",1679397462,1679397462,-77.6705,38.7465,3093.72,!1,148.61,203.46,10.73,null,3147.06,"7324",!1,0],["02a1ae","LBT511  ","Tunisia",1679397462,1679397462,2.2555,48.4909,6134.1,!1,187.5,153.43,11.7,null,6195.06,"7630",!1,0],["0a0078","DAH2054 ","Algeria",1679397462,1679397462,4.5698,45.106,10980.42,!1,234,356.47,0,null,11125.2,"1004",!1,0],["0a0079","DAH1010 ","Algeria",1679397265,1679397265,2.3757,48.7312,null,!0,.77,227.81,null,null,null,"1012",!1,0],["0a0076","DAH3016 ","Algeria",1679397462,1679397462,22.3187,40.3433,11277.6,!1,242.17,74.22,0,null,11323.32,null,!1,0],["a22ee9","N24NY   ","United States",1679397462,1679397462,-74.2433,40.6149,-91.44,!1,0,0,0,null,-53.34,null,!1,0],["0a0077","DAH1128 ","Algeria",1679397462,1679397462,5.2693,42.25,10972.8,!1,217.97,351.45,-.33,null,11186.16,"1000",!1,0],["4aca42","NOZ5071 ","Sweden",1679397462,1679397463,6.242,52.1373,10972.8,!1,203.35,224.9,0,null,10957.56,"5660",!1,0],["471fa9","WZZ9016 ","Hungary",1679397462,1679397462,16.3886,47.4776,10660.38,!1,245.18,130.58,.33,null,10675.62,"0101",!1,0],["7582fc","RPC350  ","Philippines",1679397461,1679397461,121.9676,12.7532,7315.2,!1,144.69,325.58,0,null,7833.36,null,!1,0],["4aca46","NSZ5WU  ","Sweden",1679397462,1679397462,6.0399,53.2903,12192,!1,219.72,228.32,0,null,12146.28,"7670",!1,0],["4aca45","","Sweden",1679397377,1679397377,7.1545,43.5548,617.22,!1,85.58,356.21,-5.2,null,716.28,null,!1,0],["4aca47","NSZ4PT  ","Sweden",1679397462,1679397462,-.3173,47.7811,11887.2,!1,223.77,226.21,0,null,11940.54,"0745",!1,0],["471fa4","WZZ6900 ","Hungary",1679397462,1679397462,18.7463,46.4988,10553.7,!1,208.45,315.5,6.83,null,10530.84,null,!1,0],["471fa1","WZZ2295 ","Hungary",1679397462,1679397462,21.4426,44.4484,10066.02,!1,233.16,145.61,.33,null,10104.12,"4255",!1,0],["ab5dab","SKW3806 ","United States",1679397463,1679397463,-79.9719,42.7652,10287,!1,192.2,263.24,-4.88,null,10081.26,"3547",!1,0],["02a1b0","LBT563  ","Tunisia",1679397462,1679397462,3.5043,44.044,10660.38,!1,234.32,151.69,0,null,10858.5,"7622",!1,0],["471fa5","WZZ49FC ","Hungary",1679397460,1679397462,21.6886,45.3078,10668,!1,210,211.78,0,null,10652.76,null,!1,0],["0a0074","DAH1069 ","Algeria",1679397462,1679397462,3.7761,41.6889,10660.38,!1,217.87,206.81,0,null,10896.6,"6772",!1,0],["8687bc","ANA286  ","Japan",1679397462,1679397462,139.9745,35.1595,3025.14,!1,146.79,27.1,.33,null,3124.2,"2434",!1,0],["471fad","WZZ21LF ","Hungary",1679397461,1679397461,19.2514,47.4316,null,!0,0,222.19,null,null,null,null,!1,0],["471faa","WZZ1GL  ","Hungary",1679397462,1679397462,20.8875,48.4282,10668,!1,250.74,120.72,0,null,10591.8,"4740",!1,0],["4aca50","NOZ5052 ","Sweden",1679397462,1679397462,9.1355,54.463,11277.6,!1,236.45,44.82,0,null,11216.64,"2332",!1,0],["4aca53","NSZ3087 ","Sweden",1679397462,1679397462,12.3765,55.8409,2209.8,!1,127.73,168.15,-4.55,null,2209.8,"0435",!1,0],["4aca54","NSZ2ES  ","Sweden",1679397462,1679397462,13.7013,58.7936,11277.6,!1,243.73,57.15,0,null,11117.58,"1414",!1,0],["ab64b8","AAL2919 ","United States",1679397462,1679397462,-80.2971,42.4846,9144,!1,192.94,274.28,0,null,8983.98,"3377",!1,0],["0a0084","DAH4514 ","Algeria",1679397462,1679397462,17.2825,35.521,11887.2,!1,260.31,98.07,-.33,null,12054.84,null,!1,0],["46b927","SEH8AB  ","Greece",1679397462,1679397462,10.6034,49.5014,11590.02,!1,208.05,307.46,0,null,11635.74,"1000",!1,0],["4aca4e","NOZ5420 ","Sweden",1679397462,1679397462,1.3175,48.4608,10972.8,!1,237.11,15.09,0,null,11003.28,"5524",!1,0],["4a08a5","HYS235  ","Romania",1679397462,1679397462,34.8786,32.0051,null,!0,5.66,210.94,null,null,null,"5573",!1,0],["a3db3e","N348CF  ","United States",1679397461,1679397462,-83.0913,27.8002,4122.42,!1,165.9,242.48,14.31,null,4305.3,"1456",!1,0],["ab15ba","AAL1642 ","United States",1679397462,1679397462,-81.3307,32.958,8839.2,!1,206.74,347.94,0,null,8976.36,"3643",!1,0],["402c61","GBOUK   ","United Kingdom",1679397462,1679397462,-.8372,53.3402,632.46,!1,79.38,47.63,.65,null,601.98,"7000",!1,0],["062f2e","NIGER1  ","Niger",1679397462,1679397462,1.237,6.1442,480.06,!1,80.34,212.98,7.48,null,510.54,null,!1,0],["ab6542","UAL2234 ","United States",1679397462,1679397462,-77.9174,37.3935,4876.8,!1,171.95,251.51,16.26,null,4914.9,null,!1,0],["a51b58","SWA3072 ","United States",1679397461,1679397462,-82.1451,32.1535,11277.6,!1,207.13,339.04,0,null,11498.58,null,!1,0],["3cc7fe","DWW90M  ","Germany",1679397191,1679397196,9.3641,48.0552,null,!0,0,47.81,null,null,null,"6265",!1,0],["702c0a","S3AVB   ","Bangladesh",1679397461,1679397461,90.3088,23.4055,693.42,!1,74.35,188.35,-.33,null,632.46,"4134",!1,0],["a45bd7","FFT1551 ","United States",1679397462,1679397462,-91.8473,32.5966,7924.8,!1,200.45,261.14,0,null,8107.68,"2565",!1,0],["a6fead","N55SL   ","United States",1679397462,1679397462,-71.103,42.7909,304.8,!1,44.86,323.39,1.95,null,365.76,null,!1,0],["a21bea","RPA5614 ","United States",1679397462,1679397462,-73.7072,40.2712,1280.16,!1,141.62,106.46,-6.83,null,1348.74,"4111",!1,0],["a2e87e","FDX1583 ","United States",1679397460,1679397460,-102.8431,35.2067,10980.42,!1,189.95,267.98,0,null,11087.1,"1615",!1,0],["c02f67","CFRYS   ","Canada",1679397462,1679397462,-78.6887,43.7963,9220.2,!1,236.4,72.39,12.03,null,8983.98,"6317",!1,0],["a88e46","RPA3642 ","United States",1679397462,1679397462,-93.655,37.1785,7437.12,!1,221.1,38.58,6.5,null,7452.36,"4063",!1,0],["a70bd1","DAL1404 ","United States",1679397462,1679397462,-82.408,31.5984,9448.8,!1,223.04,341.44,0,null,9662.16,"1107",!0,0],["a858f3","NKS410  ","United States",1679397462,1679397462,-89.6213,28.9269,9761.22,!1,208.8,282.67,.33,null,10104.12,"3663",!1,0],["a65560","EJA507  ","United States",1679397462,1679397462,-75.6987,37.9706,13106.4,!1,195.65,202.25,0,null,13121.64,"3013",!1,0],["a39e6b","DAL1361 ","United States",1679397462,1679397462,-98.8056,29.8899,6499.86,!1,202.9,306.75,14.31,null,6697.98,null,!1,0],["a9a399","AAL51   ","United States",1679397442,1679397442,-9.8625,56.9468,9753.6,!1,223.12,305.52,.33,null,9570.72,"1443",!1,0],["aa08e4","N746AR  ","United States",1679397462,1679397462,-87.8849,42.9075,4648.2,!1,189.97,87.83,15.61,null,4556.76,"6572",!1,0],["44d9b6","FYG41M  ","Belgium",1679397396,1679397396,14.2858,50.0987,null,!0,1.8,160.31,null,null,null,"1000",!1,0],["39e4ac","AFR38XH ","France",1679397462,1679397462,-2.265,53.3606,null,!0,7.2,53.44,null,null,null,null,!1,0],["a1b573","SWA542  ","United States",1679397462,1679397462,-97.8147,30.2909,3749.04,!1,152.44,352.83,17.88,null,3825.24,"2466",!1,0],["49410d","NJE551C ","Portugal",1679397462,1679397462,8.5236,46.7923,11696.7,!1,175.93,301.37,5.2,null,11803.38,"2763",!1,0],["a3ee2f","TEST123 ","United States",1679397462,1679397462,-82.6064,37.7041,12192,!1,233.34,177.09,0,null,12161.52,"6761",!1,0],["885312","THD217  ","Thailand",1679397450,1679397450,99.815,11.9259,9837.42,!1,231.54,183.95,5.2,null,10431.78,"4527",!1,0],["49410a","NJE244G ","Portugal",1679397462,1679397462,5.9711,49.8878,10668,!1,205.12,151.38,0,null,10721.34,"0514",!1,0],["a6e07b","CLY138  ","United States",1679397462,1679397462,-.0479,39.7899,11582.4,!1,196.73,37.35,0,null,11833.86,"5313",!1,0],["4a08e7","ROT302T ","Romania",1679397462,1679397462,14.8993,49.2443,11887.2,!1,238.74,106.91,0,null,11879.58,"1000",!1,0],["494115","NJE689K ","Portugal",1679397462,1679397462,-3.6333,48.0498,12496.8,!1,219.1,205,0,null,12565.38,"5212",!1,0],["494111","NJE886D ","Portugal",1679397462,1679397462,6.2735,46.4616,2164.08,!1,105.4,117.94,-5.53,null,2270.76,"5203",!1,0],["e0b146","FBZ5100 ","Argentina",1679397462,1679397462,-59.0682,-33.4918,8229.6,!1,212.11,330.82,0,null,8671.56,"1564",!1,0],["a2c27e","SWA451  ","United States",1679397462,1679397462,-94.0475,36.4744,11582.4,!1,199.8,267.49,.33,null,11559.54,"1617",!1,0],["885308","THD685  ","Thailand",1679397462,1679397462,100.7206,15.2303,8618.22,!1,208,188.39,-9.1,null,9166.86,"1543",!1,0],["885305","THD284  ","Thailand",1679397462,1679397462,100.8407,13.6668,2491.74,!1,132.16,15.12,-5.85,null,2621.28,"3364",!1,0],["0a0021","DAH1086 ","Algeria",1679397462,1679397462,1.1849,47.3476,8153.4,!1,258.61,20.13,-15.61,null,8260.08,"1021",!1,0],["e491a1","","Brazil",1679397462,1679397462,-48.5904,-26.8124,7246.62,!1,217.74,348,9.75,null,7559.04,null,!1,0],["c06a8d","TSC868  ","Canada",1679397462,1679397462,-74.7086,45.4794,6858,!1,177.07,259.11,6.5,null,6629.4,"1055",!1,0],["494108","NJE316E ","Portugal",1679397461,1679397462,1.7595,39.0675,1021.08,!1,113.67,194.41,-5.2,null,1143,"2236",!1,0],["494107","NJE6KY  ","Portugal",1679397462,1679397463,1.328,50.18,7985.76,!1,200.53,313.23,-12.68,null,8001,"7514",!1,0],["8686ee","ANA273  ","Japan",1679397462,1679397462,138.3799,35.5656,10363.2,!1,199.76,260.51,0,null,10507.98,"2036",!1,0],["494106","NJE240M ","Portugal",1679397462,1679397462,-7.6396,37.6389,5631.18,!1,193.76,183.35,-12.35,null,5875.02,"0637",!1,0],["a52e50","AAL2983 ","United States",1679397461,1679397462,-80.3037,39.8829,8534.4,!1,217.13,265.92,0,null,8503.92,"7015",!1,0],["4b28dc","","Switzerland",1679397455,1679397461,8.2827,47.3606,1158.24,!1,50.33,-164.88,0,null,1256,"7000",!1,3],["3c64f7","DLH490  ","Germany",1679397462,1679397462,7.5037,50.5836,6042.66,!1,218.3,326.53,5.85,null,6134.1,"0627",!1,0],["ae5bc4","BLUE01  ","United States",1679397461,1679397462,-82.3862,28.0003,1912.62,!1,138.95,1.49,14.63,null,1988.82,"2171",!1,0],["a65527","NKS1217 ","United States",1679397462,1679397462,-82.1967,32.7224,11590.02,!1,225.44,181.83,.33,null,11772.9,"3456",!1,0],["4b0ed6","P251    ","Switzerland",1679397462,1679397462,5.5165,47.9223,9144,!1,134.11,301.19,0,null,9265.92,"2762",!1,0],["75840b","SRQ6246 ","Philippines",1679397462,1679397462,120.8846,14.4335,769.62,!1,96.35,59.88,-3.9,null,792.48,null,!1,0],["8a0320","AWQ545  ","Indonesia",1679397462,1679397462,115.7088,-30.4164,9547.86,!1,225.85,3.92,3.9,null,10058.4,"1372",!1,0],["a51b1a","UAL336  ","United States",1679397462,1679397462,-97.7777,41.4356,11582.4,!1,207.71,262.17,-.33,null,11422.38,"3113",!1,0],["0180a0","BNL102  ","Libyan Arab Jamahiriya",1679397458,1679397458,17.2602,33.8663,11292.84,!1,231.33,122.56,0,null,11513.82,null,!1,0],["463aea","JEF11   ","Finland",1679397462,1679397462,15.0949,58.0787,11887.2,!1,246.93,62.05,.33,null,11727.18,"1426",!1,0],["abb57a","ASH6266 ","United States",1679397462,1679397462,-88.0578,37.3902,9753.6,!1,209.31,217.91,.33,null,9738.36,"6705",!1,0],["88530f","THD564  ","Thailand",1679397305,1679397305,101.93,16.8834,10675.62,!1,242.74,27.38,0,null,11315.7,"6137",!1,0],["88530c","THD556  ","Thailand",1679397308,1679397308,102.4766,12.7157,9456.42,!1,253.53,126.34,6.83,null,10043.16,"6120",!1,0],["88530b","THD029  ","Thailand",1679397462,1679397462,101.973,14.5101,8366.76,!1,205.92,253.6,-13.33,null,8930.64,null,!1,0],["88530e","THD008  ","Thailand",1679397462,1679397462,100.8038,14.1931,6400.8,!1,221.58,20.67,8.78,null,6774.18,"4424",!1,0],["4a08ec","ROT382N ","Romania",1679397462,1679397462,2.2778,48.8982,2926.08,!1,157.81,109.03,4.55,null,2987.04,"1000",!1,0],["885314","THD165  ","Thailand",1679397294,1679397320,100.7757,13.7476,396.24,!1,66.38,194.36,-3.25,null,350.52,"4550",!1,0],["3c64ee","DLH756  ","Germany",1679397415,1679397415,8.5759,50.0463,null,!0,0,250.31,null,null,null,null,!1,0],["ae5bac","R20789  ","United States",1679397287,1679397295,-104.7643,38.6842,1889.76,!1,15.68,138.99,-.98,null,1805.94,null,!1,0],["3c64ed","DLH438  ","Germany",1679397462,1679397462,-.8499,55.7795,9753.6,!1,219.2,293.07,0,null,9578.34,"2570",!1,0],["861ed6","ANA458  ","Japan",1679397462,1679397462,139.4789,34.8967,4434.84,!1,196.51,66.39,-10.08,null,4518.66,"2376",!1,0],["e48b64","TAM3500 ","Brazil",1679397239,1679397239,-43.6686,-18.8658,11269.98,!1,238.5,17.97,0,null,11917.68,null,!1,0],["e48b66","TAM3159 ","Brazil",1679397462,1679397462,-47.1572,-23.0162,5219.7,!1,182.31,168.28,-9.75,null,5570.22,null,!1,0],["a0f73c","AAL2617 ","United States",1679397462,1679397462,-78.1882,38.8533,4198.62,!1,193.49,274.42,13.33,null,4229.1,"0505",!1,0],["4bc856","PGT1017 ","Turkey",1679397462,1679397462,22.8743,43.7418,10363.2,!1,216.49,296.38,-.33,null,10386.06,null,!1,0],["4bc854","PGT1161 ","Turkey",1679397462,1679397462,25.4088,42.7005,10972.8,!1,207.86,294.73,0,null,11010.9,null,!1,0],["4bc852","PGT5SY  ","Turkey",1679397462,1679397462,14.5239,46.7278,10363.2,!1,205.22,296.18,0,null,10424.16,"7331",!1,0],["c06a78","TSC432  ","Canada",1679397462,1679397462,-71.5835,46.7085,2301.24,!1,124.9,281.4,20.16,null,2225.04,null,!1,0],["c06a75","TSC516  ","Canada",1679397462,1679397462,-79.8293,43.5622,2346.96,!1,133.88,193.56,10.4,null,2324.1,"6311",!1,0],["c06a76","TSC210  ","Canada",1679397462,1679397462,-79.7314,43.6315,914.4,!1,112.05,229.66,3.25,null,929.64,"6322",!1,0],["e49246","TAM3682 ","Brazil",1679397457,1679397460,-47.7726,-16.1022,3268.98,!1,167.1,147.19,5.53,null,3436.62,null,!1,0],["4401e8","EJU93ZH ","Austria",1679397458,1679397458,4.754,52.3111,null,!0,0,59.06,null,null,null,null,!1,0],["4bc84c","PGT9YA  ","Turkey",1679397462,1679397462,3.2134,51.3837,8953.5,!1,214.66,290.04,-11.05,null,8945.88,"3114",!1,0],["4bc84a","PGT292  ","Turkey",1679397462,1679397462,25.0848,42.3215,11269.98,!1,240.16,111.62,0,null,11308.08,null,!1,0],["4bc84b","PGT5HV  ","Turkey",1679397462,1679397463,23.941,43.0513,10972.8,!1,217.73,291.05,0,null,10980.42,null,!1,0],["4bc85a","PGT7P   ","Turkey",1679397462,1679397462,18.5607,47.1257,10347.96,!1,210.52,306.25,0,null,10302.24,null,!1,0],["3c6634","DLH2YL  ","Germany",1679397463,1679397463,11.5052,53.8074,11582.4,!1,226.86,14.98,.33,null,11544.3,"6455",!1,0],["abfc97","SWA794  ","United States",1679397462,1679397462,-85.341,41.1297,8427.72,!1,214.87,305.74,-5.2,null,8351.52,"2422",!1,0],["460790","OHCWM   ","Finland",1679397462,1679397462,24.5219,60.5663,396.24,!1,57.01,79.6,.33,null,350.52,null,!1,0],["a1c7c1","UAL2701 ","United States",1679397461,1679397461,105.4858,1.1882,4572,!1,196.57,268.65,0,null,4831.08,null,!1,0],["a0dd44","FDX1585 ","United States",1679397462,1679397462,-86.055,36.3394,11887.2,!1,275.99,68.46,0,null,11902.44,"5601",!1,0],["344557","VLG9GB  ","Spain",1679397444,1679397444,2.1032,41.2922,null,!0,1.8,191.25,null,null,null,null,!1,0],["7103da","SVA1032 ","Saudi Arabia",1679397368,1679397368,46.4266,24.9204,5181.6,!1,121.15,314.14,0,null,5273.04,null,!1,0],["4b28f4","","Switzerland",1679397460,1679397461,8.0165,47.2236,1493.52,!1,46.59,132.47,0,null,1598,"7000",!1,3],["ada64d","AAL523  ","United States",1679397462,1679397462,-87.5516,42.0197,4686.3,!1,187.76,101.22,17.23,null,4632.96,"6204",!1,0],["8002f7","VUAVB   ","India",1679397462,1679397462,76.7794,29.0483,3345.18,!1,143.8,206.11,0,null,3406.14,null,!1,0],["861ef8","","Japan",1679397311,1679397323,134.154,32.7454,11887.2,!1,273.7,67.92,0,null,12169.14,"2261",!1,0],["4b15ed","EDW212R ","Switzerland",1679397462,1679397462,-3.9138,37.645,11285.22,!1,213.46,208.97,0,null,11612.88,"4531",!1,0],["4b15ee","EDW18Q  ","Switzerland",1679397460,1679397462,-2.1664,40.365,11879.58,!1,207.07,211.28,0,null,12115.8,"4527",!1,0],["c06a7a","TSC844  ","Canada",1679397462,1679397462,-79.6885,43.3738,3154.68,!1,155.89,175.27,4.55,null,3108.96,"2256",!1,0],["4401fa","EJU78DR ","Austria",1679397462,1679397462,-2.1453,42.6627,11277.6,!1,211.32,247.68,0,null,11445.24,"5731",!1,0],["842250","JJP306  ","Japan",1679397462,1679397462,139.5238,34.1697,10066.02,!1,252.68,51.61,-12.35,null,10370.82,"2162",!1,0],["e49220","TAM3454 ","Brazil",1679397462,1679397462,-46.4963,-22.8121,6667.5,!1,208.22,295.93,9.1,null,7063.74,null,!1,0],["344548","VLG8PC  ","Spain",1679397462,1679397462,3.2817,41.2001,4221.48,!1,154.61,277.46,-6.83,null,4396.74,null,!1,0],["a07a11","N13NN   ","United States",1679397462,1679397462,-88.0964,42.1274,579.12,!1,37.55,99.46,.33,null,609.6,null,!1,0],["344545","SWN394  ","Spain",1679397462,1679397462,11.0942,60.7501,4518.66,!1,109.64,8.09,3.58,null,4404.36,"0475",!1,0],["ab7814","N838WP  ","United States",1679397461,1679397461,-92.7427,44.8097,1036.32,!1,73.92,141.22,0,null,998.22,null,!1,0],["702075","UBG338  ","Bangladesh",1679397461,1679397461,86.5646,19.3489,11887.2,!1,264.67,50.68,0,null,12412.98,"7457",!1,0],["4bc849","PGT2LK  ","Turkey",1679397462,1679397462,15.5848,49.8858,10675.62,!1,252.15,133.76,0,null,10683.24,"7610",!1,0],["3c6659","DLH7TP  ","Germany",1679397461,1679397462,19.1145,45.6839,9281.16,!1,238.4,143.6,-6.5,null,9281.16,"6421",!1,0],["4bc847","PGT1CA  ","Turkey",1679397461,1679397462,4.1938,48.4628,8831.58,!1,247.18,103.6,7.8,null,8938.26,"0646",!1,0],["4bc848","PGT3EG  ","Turkey",1679397462,1679397462,3.4257,52.0947,10485.12,!1,240.6,110.53,4.23,null,10439.4,"4633",!1,0],["4bc845","PGT434  ","Turkey",1679397462,1679397462,17.1975,55.8151,10675.62,!1,251.83,158.68,0,null,10561.32,"5612",!1,0],["4bc846","PGT2VG  ","Turkey",1679397462,1679397462,27.6146,42.0913,10363.2,!1,212.81,315.49,0,null,10416.54,null,!1,0],["3c664c","DLH41A  ","Germany",1679397462,1679397462,7.7045,47.8276,10447.02,!1,222.07,199.06,3.9,null,10507.98,"2525",!1,0],["a057eb","FDX55   ","United States",1679397462,1679397462,-79.1764,28.1792,10980.42,!1,265.11,124.25,0,null,11353.8,"0740",!1,0],["ac1076","AAL755  ","United States",1679397462,1679397462,-2.1685,51.6688,11574.78,!1,233.62,286.24,0,null,11551.92,"5646",!1,0],["a35701","EDV5071 ","United States",1679397328,1679397328,-73.7256,45.4728,null,!0,13.38,42.19,null,null,null,null,!1,0],["3ffaed","","Germany",1679397454,1679397462,9.3782,48.0566,null,!1,0,0,0,null,599,null,!1,3],["3c6654","DLH2FF  ","Germany",1679397462,1679397462,20.4937,44.0521,10668,!1,235.96,121.99,0,null,10690.86,"6431",!1,0],["aa92f8","UAL955  ","United States",1679397462,1679397462,-117.9209,47.1477,11582.4,!1,243.91,205.48,0,null,11231.88,null,!1,0],["4401f7","EJU67LB ","Austria",1679397462,1679397462,6.3828,45.9435,10668,!1,235.21,129.85,1.3,null,10820.4,"1000",!1,0],["a8d206","AAL2666 ","United States",1679397462,1679397462,-80.2719,36.0122,6355.08,!1,163.51,213.84,-8.13,null,6423.66,"1526",!1,0],["a7c53c","N60DL   ","United States",1679397461,1679397462,-87.1426,30.5439,1013.46,!1,97.25,358.79,10.73,null,1089.66,"0771",!1,0],["a7888c","ASA1351 ","United States",1679397462,1679397462,-111.1143,29.79,11582.4,!1,192.34,310.34,0,null,11910.06,null,!1,0],["87339a","ANA270  ","Japan",1679397462,1679397462,132.9135,33.7362,12085.32,!1,292.2,74.37,4.88,null,12367.26,null,!1,0],["a1a1b6","RPA5791 ","United States",1679397461,1679397461,-73.8767,40.7764,null,!0,4.89,30.94,null,null,null,"1734",!1,0],["8638b0","ANA660  ","Japan",1679397462,1679397462,135.2003,34.8991,8831.58,!1,242.32,76.49,8.13,null,9044.94,"1720",!1,0],["a9aec5","AVA9243 ","United States",1679397327,1679397327,-74.153,4.6982,null,!0,37.04,126.56,null,null,null,null,!1,0],["aa457b","CSB805  ","United States",1679397462,1679397462,-98.4657,39.3929,9753.6,!1,223.05,265.1,0,null,9585.96,"4023",!1,0],["ad4397","AVA9554 ","United States",1679397450,1679397450,-73.6044,6.9719,10972.8,!1,236.81,350.5,0,null,11635.74,null,!1,0],["39d304","TVF24HJ ","France",1679397462,1679397462,9.0617,47.158,11277.6,!1,248.27,120.92,0,null,11369.04,"5642",!1,0],["8518d0","JAL588  ","Japan",1679397461,1679397462,140.4407,39.4439,9753.6,!1,221.65,183.59,0,null,9715.5,null,!1,0],["39d308","TVF18FG ","France",1679397462,1679397462,28.0669,35.784,11887.2,!1,247.19,122.33,0,null,11993.88,"0470",!1,0],["39d309","TVF70DH ","France",1679397462,1679397462,24.7187,38.1022,11300.46,!1,243.62,130.89,4.23,null,11414.76,"0470",!1,0],["a6ebc6","JIA5149 ","United States",1679397462,1679397462,-79.1014,38.456,8572.5,!1,235.64,77.39,-9.1,null,8557.26,"0336",!1,0],["aa8bf7","N779RK  ","United States",1679397462,1679397462,-82.3502,35.5874,7924.8,!1,182,260.56,0,null,8008.62,null,!1,0],["39d300","TVF67UK ","France",1679397446,1679397446,-6.6428,34.1243,11277.6,!1,212.96,215.26,0,null,11635.74,"7671",!1,0],["a23797","N242BS  ","United States",1679397398,1679397398,-81.2214,34.3504,2461.26,!1,138.57,182.98,-7.15,null,2545.08,null,!1,0],["39d301","TVF67JL ","France",1679397461,1679397462,1.7542,48.3784,3413.76,!1,162.91,27.46,-8.13,null,3489.96,"1000",!1,0],["4009db","BAW917  ","United Kingdom",1679397462,1679397462,-.013,51.4875,1600.2,!1,81.8,240.21,-5.85,null,1600.2,"2505",!1,0],["3ffad7","DMMTJ   ","Germany",1679397462,1679397463,8.7138,49.4932,899.16,!1,51.35,317.84,-1.3,null,975.36,"7000",!1,0],["a5cbf3","UAL2261 ","United States",1679397462,1679397462,-83.9674,27.5714,10363.2,!1,199.79,287.69,0,null,10744.2,"5370",!1,0],["4787aa","WIF3Y   ","Norway",1679397462,1679397462,7.9587,59.1779,7010.4,!1,179.96,77.12,0,null,6972.3,"1235",!1,0],["a7624f","N575PP  ","United States",1679397462,1679397462,-82.8795,34.7671,1242.06,!1,76.28,257.93,0,null,1295.4,null,!1,0],["4009ce","BRMIDE31","United Kingdom",1679397462,1679397462,.2133,53.7749,7764.78,!1,190.62,86.91,-.65,null,7642.86,"6524",!1,0],["7103d7","SVA115  ","Saudi Arabia",1679397462,1679397462,6.9126,47.4627,12192,!1,233.01,292.32,-.33,null,12283.44,"2777",!1,0],["4bc882","PGT903  ","Turkey",1679397462,1679397462,27.1381,42.4496,10972.8,!1,219.35,315.29,0,null,11010.9,null,!1,0],["505e7f","OMS751  ","Slovakia",1679397461,1679397461,15.6962,48.0238,1478.28,!1,63.64,237.21,-.33,null,null,null,!1,0],["a8955e","NKS285  ","United States",1679397462,1679397462,-86.1676,37.1721,10988.04,!1,217.71,205.17,-.33,null,10965.18,"5734",!1,0],["344503","IBE6275 ","Spain",1679397166,1679397251,-5.1805,41.3664,7406.64,!1,213.55,295.39,4.88,null,7597.14,null,!1,0],["4401c3","EJU39RE ","Austria",1679397462,1679397462,1.1288,48.6806,5593.08,!1,182.72,250.6,13,null,5669.28,"7633",!1,0],["344501","VLG5KD  ","Spain",1679397462,1679397462,5.9359,43.398,9761.22,!1,224.88,23.46,0,null,9982.2,"5361",!1,0],["5002c1","WDA1A   ","San Marino",1679397462,1679397462,7.2992,50.2682,2987.04,!1,79.86,165.07,3.9,null,3063.24,"0120",!1,0],["a0dd5a","N155GB  ","United States",1679397462,1679397462,-85.5903,42.2163,1310.64,!1,71.76,347.16,7.48,null,1371.6,null,!1,0],["abb507","SWA675  ","United States",1679397462,1679397462,-78.4918,40.3037,12199.62,!1,202.3,267.96,0,null,12077.7,"2713",!1,0],["aaf5a9","AAL1905 ","United States",1679397462,1679397462,-92.8045,44.0871,6858,!1,208.21,153.75,7.8,null,6720.84,null,!1,0],["728644","IAW4494 ","Iraq",null,1679397458,null,null,null,!1,176,271.51,0,null,null,null,!1,0],["4009d9","BAW962H ","United Kingdom",1679397453,1679397453,9.9979,53.6283,null,!0,6.43,149.06,null,null,null,"2020",!1,0],["4bc885","PGT1099 ","Turkey",1679397450,1679397450,-2.334,40.238,5128.26,!1,156.12,273.21,-8.45,null,5356.86,null,!1,0],["4009d8","BAW977J ","United Kingdom",1679397463,1679397463,1.4346,51.7416,6842.76,!1,188.39,268.12,-9.1,null,6827.52,"1356",!1,0],["a19a48","RPA5693 ","United States",1679397462,1679397462,-74.4848,42.6171,10058.4,!1,257.05,75.16,-.33,null,9837.42,"6643",!1,0],["4bb562","SEJ8133 ","Turkey",1679397449,1679397452,76.9206,24.639,11277.6,!1,252.29,177.66,-.33,null,11605.26,null,!1,0],["a2cda7","N28WS   ","United States",1679397171,1679397180,-77.4841,39.7743,594.36,!1,56.94,251.57,-.98,null,662.94,null,!1,0],["a11f9d","UAL2357 ","United States",1679397462,1679397462,-80.3516,35.3124,11582.4,!1,218.6,203.73,0,null,11628.12,"1566",!1,0],["73806e","ELY358  ","Israel",1679397462,1679397462,16.8261,44.5496,11277.6,!1,244.49,133.98,0,null,11285.22,"1156",!1,0],["a98909","AAL2589 ","United States",1679397462,1679397462,-79.9106,42.3915,8382,!1,243.01,182.31,6.18,null,8229.6,"6355",!1,0],["73806c","ELY354  ","Israel",1679397462,1679397462,23.2457,40.4007,11277.6,!1,229.91,135.36,0,null,11308.08,null,!1,0],["73806b","ELY2366 ","Israel",1679397460,1679397462,27.2369,39.4911,11277.6,!1,240.02,132.13,0,null,11338.56,"1170",!1,0],["4bb47a","MNB760  ","Turkey",1679397449,1679397449,19.9805,39.552,11582.4,!1,233.77,251.53,0,null,11628.12,"2330",!1,0],["ab87ab","N842E   ","United States",1679397462,1679397462,-73.7871,39.5609,6705.6,!1,133.04,221.39,0,null,6675.12,"3451",!1,0],["73806f","ELY338  ","Israel",1679397462,1679397462,7.4781,51.1767,10668,!1,236.3,128.19,0,null,10698.48,"3164",!1,0],["0d0e30","VIV1251 ","Mexico",1679397422,1679397428,-99.3806,19.6529,4244.34,!1,150.13,122.55,-3.58,null,4472.94,null,!1,0],["a30ffd","FDX1476 ","United States",1679397461,1679397461,-105.1605,44.4578,10980.42,!1,221.67,298.41,0,null,10683.24,"1630",!1,0],["a72f22","JBU583  ","United States",1679397461,1679397461,-73.7724,40.646,null,!0,.06,163.12,null,null,null,null,!1,0],["c058b4","ROU1635 ","Canada",1679397462,1679397462,-81.3538,29.7669,6728.46,!1,230.75,357.19,5.53,null,6949.44,null,!1,0],["a4d621","SWA3474 ","United States",1679397462,1679397462,-77.7311,38.2243,10386.06,!1,208.87,220,9.1,null,10340.34,"7100",!1,0],["3c6463","CFG3HP  ","Germany",1679397462,1679397462,-3.0144,46.625,10668,!1,237.23,226.23,0,null,10706.1,"1116",!1,0],["ac4717","UAL1215 ","United States",1679397316,1679397354,-74.1662,40.6988,null,!0,2.06,25.31,null,null,null,"1106",!1,0],["3c6465","CFG7HD  ","Germany",1679397462,1679397462,4.3955,45.6167,10058.4,!1,211.66,238.82,0,null,10165.08,"6673",!1,0],["a5ef0e","UAL1685 ","United States",1679397462,1679397462,-105.9354,38.8485,8679.18,!1,258.27,50.25,-8.78,null,8641.08,"2616",!1,0],["a58c29","AAL1413 ","United States",1679397462,1679397462,-91.4257,29.5429,10058.4,!1,261.32,107.29,.33,null,10363.2,"7207",!1,0],["4a91fa","SAS23A  ","Sweden",1679397462,1679397462,9.2843,48.7839,11582.4,!1,227.48,5.71,0,null,11643.36,"2741",!1,0],["440097","EJU76YR ","Austria",1679397462,1679397462,1.253,48.8304,7239,!1,190.79,244.96,8.78,null,7299.96,"7627",!1,0],["440090","EJU43FA ","Austria",1679397462,1679397462,3.6397,47.8081,6248.4,!1,194.68,323.71,-9.75,null,6385.56,"1000",!1,0],["3c6473","CFG2MP  ","Germany",1679397462,1679397462,-7.8262,41.0002,10675.62,!1,238.48,210.6,-.33,null,10888.98,null,!1,0],["a73600","N564CH  ","United States",1679397459,1679397462,-81.7082,29.8173,1973.58,!1,148.76,65.92,-5.85,null,2049.78,null,!1,0],["a2200c","N236NX  ","United States",1679397461,1679397462,-84.615,39.6708,2941.32,!1,117.82,233.88,0,null,2971.8,null,!1,0],["a280a4","SKW3618 ","United States",1679397462,1679397462,-81.8233,41.5127,3566.16,!1,179.72,59.18,13.98,null,3581.4,"4126",!1,0],["4b5d9b","ATL781  ","Switzerland",1679397418,1679397461,8.5571,47.4536,null,!0,.9,123.75,null,null,null,null,!1,0],["4b2927","","Switzerland",1679397436,1679397461,8.0202,47.0586,2164.08,!1,47.2,-74.08,0,null,2246,"7000",!1,3],["e072d0","ARG1302 ","Argentina",1679397454,1679397454,-80.3444,25.7097,1226.82,!1,135.55,266.52,-15.61,null,1417.32,null,!1,0],["a58c35","ATN3514 ","United States",1679397460,1679397460,-72.6828,41.9332,null,!0,7.72,315,null,null,null,null,!1,0],["c058d4","HYD144  ","Canada",1679397459,1679397462,-78.3863,48.0235,2613.66,!1,130.97,315.95,-6.5,null,2484.12,"4277",!1,0],["738065","ELY320  ","Israel",1679397462,1679397462,7.3496,47.9297,11277.6,!1,238.85,121.7,0,null,11353.8,"5631",!1,0],["738064","ELY393  ","Israel",1679397405,1679397405,2.0843,41.2991,null,!0,40.13,244.69,null,null,null,null,!1,0],["4b290d","","Switzerland",1679397426,1679397461,7.9964,47.3772,1341.12,!1,49.82,-51.08,1,null,1439,"7000",!1,3],["c07b05","ACA327  ","Canada",1679397458,1679397458,-114.0128,51.1318,null,!0,.06,73.12,null,null,null,null,!1,0],["4bb474","RUN117  ","Turkey",1679397460,1679397462,51.6404,26.4771,9753.6,!1,189.3,290.36,0,null,9898.38,null,!1,0],["a0b6de","N145SL  ","United States",1679397462,1679397462,-88.462,43.9347,6652.26,!1,113.33,209.36,8.13,null,6568.44,null,!1,0],["738069","ELY552  ","Israel",1679397458,1679397461,33.0108,33.2711,9204.96,!1,247.47,130.28,-10.4,null,9380.22,"5562",!1,0],["aa9d02","N783PT  ","United States",1679397461,1679397461,-75.885,39.7433,556.26,!1,86.21,224.76,.65,null,640.08,null,!1,0],["738068","ELY382  ","Israel",1679397462,1679397462,10.6053,45.4222,9837.42,!1,242.96,103.09,7.15,null,9974.58,"0432",!1,0],["a9018e","N68HA   ","United States",1679397461,1679397462,-84.6254,41.9279,4777.74,!1,210.75,54.14,-11.05,null,4724.4,"6633",!1,0],["3c6487","DLH8MA  ","Germany",1679397311,1679397311,13.5057,52.3644,null,!0,1.8,67.5,null,null,null,"1000",!1,0],["49f024","PLET 2  ","Czech Republic",1679397462,1679397462,14.2304,50.1008,null,!0,11.83,64.69,null,null,null,null,!1,0],["ab2760","DAL1681 ","United States",1679397462,1679397462,-90.8286,39.9045,9174.48,!1,229.16,332.74,10.08,null,9067.8,null,!1,0],["ac2d32","FDX5285 ","United States",1679397457,1679397457,-104.9691,48.9181,10972.8,!1,230.1,308.92,0,null,10576.56,null,!1,0],["7583ee","ATX154  ","Philippines",1679397462,1679397462,120.4124,13.2468,5486.4,!1,130.25,205.25,0,null,5798.82,null,!1,0],["a3661f","AAL1640 ","United States",1679397462,1679397462,-62.5038,13.8337,10972.8,!1,217.42,328.15,0,null,11544.3,"6065",!1,0],["3c648c","DLH4P   ","Germany",1679397462,1679397462,14.2607,50.1111,null,!0,4.12,278.44,null,null,null,"1000",!1,0],["c058c3","ACA827  ","Canada",1679397462,1679397462,3.8706,52.4362,5295.9,!1,209.22,313.7,8.13,null,5303.52,"2133",!1,0],["7583f8","CEB647  ","Philippines",1679397404,1679397404,119.781,11.9238,9753.6,!1,237.75,204.96,0,null,10431.78,null,!1,0],["800543","","India",null,1679397408,null,null,null,!1,144.98,322.64,-9.75,null,null,null,!1,0],["3e67fd","DKEOR   ","Germany",1679397228,1679397230,11.415,48.2297,472.44,!1,32.09,102.03,-.33,null,586.74,"7000",!1,0],["3c6497","DLH7C   ","Germany",1679397462,1679397462,8.5232,50.0356,null,!0,7.46,78.75,null,null,null,"1000",!1,0],["80057d","AIC664  ","India",1679397206,1679397206,72.8766,19.0928,null,!0,5.66,104.06,null,null,null,null,!1,0],["80057b","AIC815  ","India",1679397309,1679397397,77.3818,21.6113,10675.62,!1,256.09,170.52,0,null,11079.48,null,!1,0],["151de1","IZA305  ","Russian Federation",1679397462,1679397462,39.4508,55.5814,4495.8,!1,159.06,275.01,-4.88,null,4373.88,null,!1,0],["3c6424","CFG217  ","Germany",1679397462,1679397462,13.4981,47.4769,10363.2,!1,207.85,312.89,0,null,10424.16,"6633",!1,0],["80057c","AIC849  ","India",1679397460,1679397461,75.9954,26.9148,10782.3,!1,220.35,203.09,6.18,null,11003.28,null,!1,0],["151de2","","Russian Federation",1679397462,1679397462,37.1901,55.5487,1188.72,!1,105.11,156.95,6.83,null,1143,null,!1,0],["440057","EJU82PZ ","Austria",1679397355,1679397355,-9.1392,38.7752,38.1,!1,62.96,22.58,-.33,null,175.26,"0416",!1,0],["adb723","JBU15   ","United States",1679397462,1679397463,-79.3674,40.2713,10363.2,!1,192.17,275.22,0,null,10248.9,"7203",!1,0],["8733bc","ANA269  ","Japan",1679397462,1679397462,133.1354,34.65,12184.38,!1,192.8,256.89,-.33,null,12405.36,"2072",!1,0],["440060","AUA65   ","Austria",1679397462,1679397462,7.4184,52.7883,9753.6,!1,234.7,309.31,0,null,9738.36,"3103",!1,0],["151ddb","AFL1605 ","Russian Federation",1679397462,1679397462,37.8958,56.1268,3657.6,!1,145.75,329.45,0,null,3573.78,null,!1,0],["00a120","SFR178  ","South Africa",1679397269,1679397274,19.7515,-34.2068,8168.64,!1,244.16,85.29,8.45,null,8534.4,"5444",!1,0],["44004f","AUA385  ","Austria",1679397462,1679397462,-2.085,38.5255,10668,!1,205.21,231.92,0,null,10965.18,"3267",!1,0],["452037","BUC8278 ","Bulgaria",1679397462,1679397462,13.4873,46.6742,10058.4,!1,257.08,137.6,0,null,null,"2552",!1,0],["e49206","TAM3234 ","Brazil",1679397159,1679397160,-47.8103,-19.3787,10965.18,!1,237.07,346.45,0,null,11590.02,null,!1,0],["aaa4be","SWA1925 ","United States",1679397462,1679397462,-81.7826,34.9841,10363.2,!1,201.11,292.56,0,null,10424.16,null,!1,0],["702098","UBG157  ","Bangladesh",1679397462,1679397462,90.8979,23.4737,2773.68,!1,129.02,122.3,4.55,null,2827.02,"4122",!1,0],["7c6d9e","QFA652  ","Australia",1679397462,1679397462,150.179,-34.3409,5730.24,!1,223.37,73.82,-12.68,null,6088.38,"3271",!1,0],["702099","UBG154  ","Bangladesh",1679397462,1679397462,90.9503,23.5501,3048,!1,101.45,306.75,-.33,null,3116.58,"4742",!1,0],["7c6d9a","QFA1217 ","Australia",1679397462,1679397462,115.9628,-31.9343,null,!0,7.2,22.5,null,null,null,"4720",!0,0],["151dd4","AFL1855 ","Russian Federation",1679397172,1679397172,49.9506,49.0459,10363.2,!1,221.35,352.92,0,null,10317.48,null,!1,0],["151dd5","AFL1962 ","Russian Federation",1679397334,1679397373,64.8218,52.8961,10668,!1,239.97,111.5,0,null,10492.74,null,!1,0],["a280cd","UPS942  ","United States",1679397456,1679397461,-122.2258,37.7117,null,!0,0,129.38,null,null,null,"4063",!1,0],["a8913b","JBU1145 ","United States",1679397462,1679397462,-78.7232,34.9343,9753.6,!1,209.97,208.7,0,null,9822.18,"3644",!1,0],["151dd8","AFL2136 ","Russian Federation",1679397462,1679397462,32.256,41.9101,10370.82,!1,213.03,265.85,-.33,null,10408.92,null,!1,0],["440047","EJU48MW ","Austria",1679397462,1679397462,-3.2256,48.5463,10058.4,!1,234.87,203.08,0,null,10119.36,"5404",!1,0],["440c8c","AUA857L ","Austria",1679397461,1679397461,27.8771,39.079,10668,!1,259.32,129.85,.33,null,10789.92,"7117",!1,0],["738054","ELY396  ","Israel",1679397462,1679397462,-3.4031,40.7146,2918.46,!1,147.37,40.75,13,null,3048,null,!1,0],["440053","EJU3809 ","Austria",1679397329,1679397334,-2.7093,51.3857,null,!0,0,267.19,null,null,null,"5632",!1,0],["ac3434","N886AW  ","United States",1679397462,1679397462,-120.3827,35.3151,8534.4,!1,143.65,324.03,0,null,8473.44,"7271",!1,0],["738057","ELY613  ","Israel",1679397461,1679397461,29.6504,41.2159,10363.2,!1,213.42,338.51,-.33,null,10401.3,null,!1,0],["489322","LOT9001 ","Poland",1679397462,1679397462,18.4357,54.3841,845.82,!1,82.5,289.68,15.93,null,861.06,"6105",!1,0],["ab0d76","DAL2078 ","United States",1679397462,1679397462,-91.2756,44.5326,8663.94,!1,220.17,296.51,-4.88,null,8481.06,"5772",!1,0],["738056","ELY386  ","Israel",1679397462,1679397462,26.3812,36.3201,11277.6,!1,242.26,116.62,.65,null,11407.14,"1244",!1,0],["c0337d","MAL8058 ","Canada",1679397461,1679397461,-110.5455,50.9693,6400.8,!1,150.82,98.43,0,null,6126.48,null,!1,0],["86d96c","ANA78   ","Japan",1679397461,1679397461,141.1495,39.8465,11574.78,!1,233.97,191.29,.65,null,11536.68,null,!1,0],["3930e6","SAMU63  ","France",1679397311,1679397342,4.46,46.5934,685.8,!1,63.45,228.95,-1.3,null,762,null,!1,0],["738055","ELY611  ","Israel",1679397462,1679397462,27.3699,56.1873,11277.6,!1,233.5,69.09,0,null,11033.76,"1162",!1,0],["151dcf","AFL2142 ","Russian Federation",1679397156,1679397156,43.8447,41.5762,10469.88,!1,210.81,257.46,2.6,null,10347.96,null,!1,0],["3c6433","CFG030  ","Germany",1679397461,1679397461,28.5943,35.9555,10675.62,!1,243.88,132.95,-.65,null,10805.16,"0626",!1,0],["a423d7","DAL2689 ","United States",1679397462,1679397462,-82.7341,41.6649,5844.54,!1,169.8,330.41,-11.7,null,5814.06,"2102",!1,0],["a90169","N68FP   ","United States",1679397462,1679397462,-80.9918,30.2308,10972.8,!1,223.61,174.98,.65,null,11277.6,null,!1,0],["4b2962","","Switzerland",1679397288,1679397382,7.7136,47.4334,1280.16,!1,69.66,8.25,-1,null,1512,"3450",!1,3],["abc4be","SWA1731 ","United States",1679397462,1679397462,-89.8938,37.7709,11582.4,!1,214.29,202.44,0,null,11536.68,"6255",!1,0],["7583a9","GAP2526 ","Philippines",1679397462,1679397462,121.5058,13.413,5692.14,!1,192.06,325.59,-8.78,null,6096,null,!1,0],["7c6d8f","QFA718  ","Australia",1679397461,1679397462,152.0664,-24.9784,10965.18,!1,224.98,324.49,0,null,11658.6,null,!1,0],["7583a8","PAL307  ","Philippines",1679397460,1679397460,114.5056,21.8559,6484.62,!1,237.26,98.6,6.18,null,6507.48,null,!1,0],["4b161f","EDW200E ","Switzerland",1679397462,1679397462,-5.355,40.7303,11894.82,!1,218.53,227.86,0,null,12108.18,"4511",!1,0],["151dfa","SDM6357 ","Russian Federation",1679396056,1679397405,41.615,53.8622,10660.38,!1,350.62,116.3,.33,null,10477.5,null,!1,0],["484fdf","KLM95A  ","Kingdom of the Netherlands",1679397462,1679397462,6.0032,50.0208,11887.2,!1,235.06,155.57,0,null,11864.34,"1000",!1,0],["a3401a","JBU421  ","United States",1679397462,1679397462,-71.5324,41.1945,8511.54,!1,198.79,230.46,3.25,null,8351.52,"7341",!1,0],["440084","C33     ","Austria",1679397433,1679397433,16.2459,47.8141,304.8,!1,48,197.46,-.33,null,480.06,null,!1,0],["440083","EJU97UB ","Austria",1679397442,1679397443,14.2669,50.104,null,!0,.64,33.75,null,null,null,"1000",!1,0],["a689b8","JBU498  ","United States",1679397462,1679397462,-72.0331,42.6131,5067.3,!1,231.9,99.19,-16.26,null,5036.82,"6601",!1,0],["32b32b","KAYI  11","Italy",1679397462,1679397462,27.6146,41.1764,1920.24,!1,83.03,249.32,-6.5,null,1988.82,null,!1,0],["87cc0b","JF441   ","Japan",1679397463,1679397463,30.895,34.3787,10995.66,!1,212.13,357.64,0,null,11109.96,"5542",!1,0],["151dfe","SDM6333 ","Russian Federation",1679397462,1679397462,20.4472,57.9003,10363.2,!1,238.5,197.97,0,null,10195.56,"4533",!1,0],["7583a1","CEB337  ","Philippines",1679397462,1679397462,121.0626,13.46,8199.12,!1,202.89,146.27,5.2,null,8763,null,!1,0],["440080","EJU7935 ","Austria",1679397462,1679397462,24.1823,37.4462,11269.98,!1,230.48,142.62,0,null,11399.52,"0166",!1,0],["3d1ab9","DEIJH   ","Germany",1679397462,1679397462,7.1795,52.4165,220.98,!1,58.28,85.95,-.98,null,251.46,"7000",!1,0],["3c6443","DLH8EK  ","Germany",1679397462,1679397462,9.5122,47.7248,6019.8,!1,189.52,267.36,-12.68,null,6172.2,"1000",!1,0],["4b161e","SWR21DV ","Switzerland",1679397462,1679397462,3.8213,41.757,11277.6,!1,213.96,206.57,0,null,11513.82,"3033",!1,0],["a423c4","DAL324  ","United States",1679397222,1679397222,-93.2107,44.8858,null,!0,0,180,null,null,null,null,!1,0],["7c6d7c","JST536  ","Australia",1679397462,1679397462,150.7019,-34.159,3025.14,!1,166.2,61.53,-3.9,null,3238.5,"3276",!1,0],["488c10","SPDAR   ","Poland",1679397461,1679397462,19.3407,51.1921,3048,!1,74.59,204.44,0,null,3055.62,null,!1,0],["ac1a44","SWA644  ","United States",1679397462,1679397462,-92.4257,42.0883,10972.8,!1,211.44,270.42,0,null,10789.92,"1363",!1,0],["ad6758","AAL2359 ","United States",1679397462,1679397462,-82.5602,29.0756,10972.8,!1,218.23,330.17,0,null,11308.08,"6633",!1,0],["40087c","BAW727G ","United Kingdom",null,1679397458,null,null,null,!1,4.12,45,null,null,null,null,!1,0],["3c644e","DLH1M   ","Germany",1679397462,1679397462,10.6857,52.5899,9182.1,!1,229.21,166.37,7.15,null,9227.82,"1335",!1,0],["3c644b","DLH9FT  ","Germany",1679397462,1679397462,19.5841,50.5026,10462.26,!1,217.54,41.64,-4.88,null,10363.2,"1000",!1,0],["800585","VUAVE   ","India",1679397462,1679397462,72.8298,19.0883,609.6,!1,86.98,268.31,13.66,null,525.78,null,!1,0],["4856c9","KLM7915 ","Kingdom of the Netherlands",1679397462,1679397462,4.5724,52.0093,548.64,!1,42.34,242.5,-.98,null,579.12,"0673",!1,0],["ac1a2c","SWA3542 ","United States",1679397462,1679397462,-73.8949,40.7948,358.14,!1,78.53,328.39,7.8,null,434.34,"1103",!1,0],["a0ec98","BRIO66  ","United States",1679397462,1679397462,27.7392,45.867,10972.8,!1,180.39,339.29,0,null,10942.32,"3667",!1,0],["151dee","SDM6326 ","Russian Federation",1679397462,1679397462,19.9761,56.6995,10066.02,!1,205.43,353.82,0,null,9906,"6620",!1,0],["800582","AIC127  ","India",1679397462,1679397462,-87.9967,46.3739,10972.8,!1,235.29,187.92,0,null,10645.14,null,!1,0],["758525","PAL127  ","Philippines",1679397462,1679397462,-78.9666,48.2253,10363.2,!1,235.73,341.68,0,null,9883.14,"1115",!1,0],["a1d811","RPA5609 ","United States",1679397462,1679397462,-79.7307,40.021,9745.98,!1,204.29,261.75,-3.58,null,9654.54,"1635",!1,0],["adfe51","PAT322  ","United States",1679397461,1679397462,-78.9518,35.2288,350.52,!1,77.73,220.44,-3.9,null,441.96,"5373",!1,0],["adc8ee","DAL2308 ","United States",1679397462,1679397462,-90.1387,38.6271,10058.4,!1,244.59,131.33,0,null,9974.58,"2645",!1,0],["a7101e","AAL910  ","United States",1679397463,1679397463,-82.5619,40.194,7696.2,!1,229.96,202.49,4.88,null,7665.72,"5735",!1,0],["adaee8","AAL376  ","United States",1679397461,1679397461,-70.1955,19.0891,5920.74,!1,201.83,319.65,10.08,null,6233.16,null,!1,0],["440c5a","ABB885  ","Austria",1679397462,1679397462,20.4101,43.8585,10675.62,!1,250.55,116.2,0,null,10668,"0102",!1,0],["ad4bcb","JBU2348 ","United States",1679397462,1679397462,-73.3502,40.6773,1097.28,!1,105.54,330.19,0,null,1165.86,"1352",!1,0],["8675d8","ANA640  ","Japan",1679397462,1679397462,135.9912,34.5184,12496.8,!1,281.55,84.76,0,null,12710.16,"3434",!1,0],["c02029","MAL7080 ","Canada",1679397461,1679397462,-119.3296,49.4777,10980.42,!1,232.24,267.46,0,null,10645.14,"0572",!1,0],["a6f00d","AAL2585 ","United States",1679397217,1679397217,-87.8921,41.9675,null,!0,7.72,87.19,null,null,null,"6727",!1,0],["151f49","RA73545 ","Russian Federation",1679397461,1679397462,54.4459,24.6877,3741.42,!1,192.82,53.68,10.4,null,3817.62,null,!1,0],["49f098","FOLLOW2 ","Czech Republic",1679397461,1679397461,14.2697,50.1003,null,!0,40.13,306.56,null,null,null,null,!1,0],["758534","","Philippines",1679397461,1679397461,122.6649,12.2057,9616.44,!1,235.89,325.3,6.83,null,10104.12,null,!1,0],["758533","CEB978  ","Philippines",1679397462,1679397462,121.632,13.2334,7566.66,!1,194.93,325.43,-8.78,null,8100.06,null,!1,0],["a6f009","DAL2852 ","United States",1679397199,1679397204,-84.447,33.6496,251.46,!1,66.37,90.44,-3.25,null,342.9,"7457",!1,0],["758531","CEB973  ","Philippines",1679397180,1679397181,123.2115,12.2654,10378.44,!1,250.26,139.33,4.55,null,11087.1,null,!1,0],["aaa593","UAL1763 ","United States",1679397462,1679397462,-97.9745,39.7706,11590.02,!1,210.53,287.64,0,null,11445.24,"1107",!1,0],["758530","CEB923  ","Philippines",1679397462,1679397462,130.5598,33.2992,3154.68,!1,148.55,175.83,4.88,null,3238.5,null,!1,0],["e490c4","PRRIY   ","Brazil",1679397458,1679397458,-48.0807,-21.0917,5692.14,!1,127.82,299.14,9.43,null,6027.42,null,!1,0],["440005","EJU56QR ","Austria",1679397462,1679397462,8.5855,45.9424,5981.7,!1,208.69,159.51,-4.88,null,6149.34,"1000",!1,0],["440001","OEARW   ","Austria",1679397405,1679397405,16.1588,47.7671,937.26,!1,26.28,229.76,-1.95,null,1021.08,null,!1,0],["a7e6cf","SKW5684 ","United States",1679397459,1679397459,-97.602,35.3956,null,!0,5.66,241.88,null,null,null,null,!1,0],["ad0562","SWA736  ","United States",1679397462,1679397462,-82.568,35.2013,10447.02,!1,207.35,225.2,-4.55,null,10492.74,"5671",!1,0],["aaa595","SWA406  ","United States",1679397462,1679397462,-74.0053,42.3514,6629.4,!1,211.37,168.77,13,null,6507.48,"3502",!1,0],["a0e086","AAL2714 ","United States",1679397462,1679397462,-77.5404,33.7274,9753.6,!1,219.98,196.02,.33,null,9867.9,"3005",!1,0],["c03372","MAL8066 ","Canada",1679397462,1679397462,-113.7178,51.1791,3444.24,!1,102.43,83.95,9.75,null,3299.46,null,!1,0],["a96f4c","SWQ587  ","United States",1679397462,1679397462,-74.9673,39.9965,1104.9,!1,103.53,98.57,-6.18,null,1188.72,"4032",!1,0],["abab67","DAL1762 ","United States",1679397462,1679397462,-70.7863,41.5304,7208.52,!1,214.75,190.07,6.5,null,7071.36,null,!1,0],["440c83","EJU13RD ","Austria",1679397461,1679397462,6.606,47.2151,11574.78,!1,225.34,354.5,0,null,11666.22,"1000",!1,0],["aa9d6e","UAL195  ","United States",1679397462,1679397462,11.3281,49.3149,6865.62,!1,199.76,348.86,11.38,null,6964.68,"6660",!1,0],["a95c38","CKS504  ","United States",1679397444,1679397444,-100.2725,39.3892,12192,!1,218.19,300.62,0,null,12062.46,null,!1,0],["a05514","LBQ870  ","United States",1679397462,1679397462,-78.3858,39.0164,2918.46,!1,121.76,318.77,-.33,null,2979.42,"7022",!1,0],["440030","EJU71NM ","Austria",1679397462,1679397462,11.7171,45.2768,2522.22,!1,144.56,89.59,-9.75,null,2651.76,"2712",!1,0],["44001e","AUA87   ","Austria",1679397462,1679397462,3.2317,54.9448,9753.6,!1,237.92,315.7,0,null,9631.68,"3554",!1,0],["aa41c4","ABX505  ","United States",1679397294,1679397294,-98.1123,38.7791,9753.6,!1,217.73,248.95,0,null,9639.3,"6747",!1,0],["accb50","SWA437  ","United States",1679397462,1679397462,-83.7082,30.257,11574.78,!1,212.38,322.38,-.33,null,11856.72,"0747",!1,0],["44001b","AUA796  ","Austria",1679397461,1679397462,21.3062,44.7259,10363.2,!1,219.26,329.7,0,null,10386.06,null,!1,0],["ac7b87","NKS1614 ","United States",1679397462,1679397462,-80.7597,32.0078,11590.02,!1,202.72,209.49,0,null,11811,"5627",!1,0],["a7f9e8","ENY3658 ","United States",1679397462,1679397462,-87.4033,42.1079,1516.38,!1,129.77,194.7,-4.88,null,1539.24,"4107",!1,0],["00a19b","ZSMSG   ","South Africa",1679397160,1679397160,29.3802,-26.635,8229.6,!1,129.88,44.2,0,null,8740.14,null,!1,0],["e490f0","TAM3540 ","Brazil",1679397462,1679397462,-46.3561,-22.8744,5928.36,!1,203.66,295.27,9.1,null,6286.5,null,!1,0],["e490f1","TAM3428 ","Brazil",1679397462,1679397462,-48.4764,-23.0402,10370.82,!1,215.97,286.75,.33,null,10988.04,null,!1,0],["a3183d","EDV4636 ","United States",1679397462,1679397462,-77.4572,38.9464,null,!0,5.92,210.94,null,null,null,null,!1,0],["495170","RZO172  ","Portugal",1679397461,1679397462,-9.9379,40.8541,6057.9,!1,222.26,77.03,-16.26,null,6301.74,null,!1,0],["d0180d","","",1679397444,1679397448,10.7583,49.5101,null,!1,0,0,0,null,570,null,!1,3],["a0a540","N1401W  ","United States",1679397461,1679397462,-77.9297,34.9418,2903.22,!1,101.46,202.66,0,null,2971.8,"2160",!1,0],["a5dc31","FDX457  ","United States",1679397462,1679397462,-113.8645,34.4014,11879.58,!1,313.21,77.77,.33,null,11948.16,"1141",!1,0],["a939e8","DAL2596 ","United States",1679397462,1679397463,-83.3415,32.7111,10058.4,!1,206.63,319.85,0,null,10210.8,"0446",!1,0],["c03319","CRN999  ","Canada",1679397462,1679397462,-123.8372,49.7545,4518.66,!1,169.08,160.08,-8.13,null,4411.98,null,!1,0],["4b5cea","SIGMA71 ","Switzerland",null,1679397439,null,null,null,!1,6.94,45,null,null,null,null,!1,0],["0d0cdd","VIV193  ","Mexico",1679397462,1679397462,-97.9817,18.4357,10363.2,!1,223.82,310.06,-.33,null,10911.84,null,!1,0],["440c14","C1      ","Austria",1679397425,1679397461,11.3502,47.2393,883.92,!1,48.11,155.35,5.53,null,975.36,"1657",!1,0],["49514e","TAP831P ","Portugal",1679397462,1679397462,11.5471,41.4156,6225.54,!1,202.05,244.67,10.73,null,6362.7,null,!1,0],["a05577","AIP1574 ","United States",1679397462,1679397462,-97.0998,43.9954,3665.22,!1,122.99,329.04,1.3,null,3604.26,null,!1,0],["4b5cf2","NAVETTE2","Switzerland",null,1679397369,null,null,null,!1,6.43,45,null,null,null,null,!1,0],["8840f9","BKP263  ","Thailand",1679397297,1679397297,99.7058,11.6775,10363.2,!1,221.8,192.46,0,null,11010.9,"4400",!1,0],["3c4a8b","DLH400  ","Germany",1679397462,1679397462,8.3659,49.886,2164.08,!1,137.31,258.98,4.88,null,2225.04,"2512",!1,0],["a0ebab","AAL2344 ","United States",1679397462,1679397462,-83.9786,33.0881,5783.58,!1,203.04,142,5.53,null,5897.88,null,!1,0],["e490ed","TAM3505 ","Brazil",1679397462,1679397462,-40.5101,-20.3317,5120.64,!1,188.08,218.78,10.73,null,5417.82,null,!1,0],["e490ee","TAM3524 ","Brazil",1679397461,1679397462,-49.1265,-20.4688,10363.2,!1,235.75,314.12,0,null,10980.42,null,!1,0],["e490ef","        ","Brazil",1679397362,1679397362,-40.2817,-20.2658,null,!0,.39,261.56,null,null,null,null,!1,0],["8004a7","","India",1679397444,1679397444,72.2142,20.2705,10172.7,!1,189.78,317.97,8.13,null,10553.7,null,!1,0],["7c6d37","VOZ356  ","Australia",1679397462,1679397462,150.682,-30.589,12192,!1,213.71,218.75,0,null,12778.74,"1176",!1,0],["4b0f97","HBFXN   ","Switzerland",1679397461,1679397462,7.8518,48.2072,2743.2,!1,115.78,144.4,-.33,null,2842.26,"6725",!1,0],["3c4a8c","DLH9916 ","Germany",1679397462,1679397462,11.5062,48.684,815.34,!1,91.12,162.59,-2.6,null,891.54,"7000",!1,0],["7415a3","RJA653  ","Jordan",1679397462,1679397462,51.2789,26.0073,5882.64,!1,175.48,320.71,8.78,null,5966.46,null,!1,0],["a35eb0","AAL2341 ","United States",1679397462,1679397462,-84.5655,33.9515,10058.4,!1,248.26,161.26,0,null,10180.32,"2570",!1,0],["7c6d32","VOZ583  ","Australia",1679397462,1679397462,144.9186,-34.9167,9753.6,!1,210.19,277.59,0,null,10187.94,"7223",!1,0],["8960d2","UAE44   ","United Arab Emirates",1679397460,1679397460,27.7272,36.6465,11277.6,!1,257.32,136.86,0,null,11422.38,"7707",!1,0],["344195","ANE98WL ","Spain",1679397462,1679397462,-5.5106,37.7666,10668,!1,203.89,210.64,.33,null,10965.18,"4645",!1,0],["846b34","APJ0011 ","Japan",1679397462,1679397462,134.4653,34.5183,7399.02,!1,188.92,307.59,9.75,null,7612.38,null,!1,0],["c03f85","WSW317  ","Canada",1679397462,1679397462,-79.6722,43.6688,472.44,!1,79.31,230.53,13.33,null,495.3,"2244",!1,0],["440c2c","LDX525C ","Austria",1679397362,1679397362,4.4689,50.896,null,!0,4.63,194.06,null,null,null,"1000",!1,0],["a5d007","ASA31   ","United States",1679397462,1679397462,-73.5386,40.89,4617.72,!1,182.63,330.84,9.43,null,4587.24,"2706",!1,0],["aa67f1","N77NY   ","United States",1679397462,1679397462,-74.2344,40.6199,-30.48,!1,33.13,244.23,-3.58,null,60.96,"1200",!1,0],["7c6d24","VOZ353  ","Australia",1679397462,1679397462,148.9787,-33.2957,11887.2,!1,246.51,35.32,0,null,12374.88,"1337",!1,0],["495148","TAP96AW ","Portugal",1679397462,1679397462,-9.8048,38.3887,4267.2,!1,132.84,36.34,-6.83,null,4465.32,"4423",!1,0],["495149","TAP57WP ","Portugal",1679397435,1679397448,8.566,50.0432,null,!0,0,340.31,null,null,null,"1000",!1,0],["140629","RA01577 ","Russian Federation",1679397462,1679397462,40.8935,55.6734,11582.4,!1,193.95,270.46,0,null,11338.56,null,!1,0],["440c36","EJU9042 ","Austria",1679397462,1679397462,10.2052,50.2092,11277.6,!1,201.38,201.58,0,null,11323.32,"0763",!1,0],["a410fe","N361LA  ","United States",1679397462,1679397463,-6.9094,54.0921,8366.76,!1,195.54,350.61,7.48,null,8321.04,"2045",!1,0],["500214","MEA229  ","San Marino",1679397462,1679397462,34.1325,34.0106,7040.88,!1,219.57,286.61,4.88,null,7155.18,"5620",!1,0],["a8ffa1","KAP916  ","United States",1679397462,1679397462,-70.1652,41.5043,487.68,!1,87.46,154.94,.65,null,541.02,null,!1,0],["ab87b7","N842EM  ","United States",1679397461,1679397461,-72.5032,41.379,121.92,!1,33.19,341,2.6,null,182.88,"1200",!1,0],["a8695b","N641EE  ","United States",1679397462,1679397462,10.9851,48.4915,8519.16,!1,226.5,291.73,-5.2,null,8641.08,"7544",!1,0],["ab271f","AAL63   ","United States",1679397462,1679397462,-8.0165,46.0031,9745.98,!1,245.08,258.01,0,null,9906,"7557",!1,0],["c03326","NOJ64   ","Canada",1679397462,1679397463,-80.7117,34.9924,11582.4,!1,231.51,180.64,0,null,11635.74,"0557",!1,0],["a59ed0","N461RG  ","United States",1679397462,1679397462,-77.6576,40.6258,5234.94,!1,112.11,50.03,6.18,null,5219.7,null,!1,0],["344293","VLG3163 ","Spain",1679397462,1679397462,-10.6788,36.7737,9745.98,!1,243.81,14.42,-.33,null,10073.64,"6263",!1,0],["4b027f","EZS38CV ","Switzerland",1679397462,1679397462,3.0351,44.9455,11887.2,!1,206.63,238.64,0,null,12016.74,"5756",!1,0],["4b027d","EZS58WF ","Switzerland",1679396517,1679397312,6.1087,46.2356,null,!0,1.29,135,null,null,null,null,!1,0],["392a0d","FGKQN   ","France",1679397461,1679397462,2.7039,48.0989,1432.56,!1,39.97,211.85,3.9,null,1516.38,null,!1,0],["a15b77","JBU1420 ","United States",1679397462,1679397462,-79.3187,41.9349,10668,!1,268.75,98.25,0,null,10500.36,"4142",!1,0],["7c6bdc","POL64   ","Australia",1679397462,1679397462,115.8093,-31.8314,3070.86,!1,65.93,157.04,-.33,null,3223.26,"0064",!1,0],["89611e","UAE81   ","United Arab Emirates",1679397462,1679397462,12.1553,43.3519,11277.6,!1,238.72,258.06,0,null,11384.28,"3220",!1,0],["4b0281","EZS1207 ","Switzerland",1679397462,1679397462,7.5092,47.551,1417.32,!1,91.61,287.32,9.1,null,1508.76,"6724",!1,0],["a35eeb","UPS320  ","United States",1679397462,1679397462,-92.3391,28.4155,10972.8,!1,207.76,226.3,0,null,11292.84,"0610",!1,0],["a79821","JBU110  ","United States",1679397462,1679397462,-73.6704,40.753,487.68,!1,109.94,211.61,0,null,571.5,"4042",!1,0],["a0427e","N116AA  ","United States",1679397462,1679397462,-119.5016,35.589,9448.8,!1,193.6,161.08,-.33,null,9357.36,null,!1,0],["405636","EZY32FH ","United Kingdom",1679397462,1679397462,-8.9909,39.1193,3909.06,!1,170.83,6.4,19.18,null,4084.32,"5450",!1,0],["a60ebd","N49LD   ","United States",1679397462,1679397462,-81.5218,37.0696,9448.8,!1,235.92,59.46,-.33,null,9479.28,"3125",!1,0],["a41e2c","UAL2653 ","United States",1679397462,1679397462,-91.8148,35.9391,10668,!1,233.33,13.52,0,null,10698.48,"4052",!1,0],["4006c4","BAW17A  ","United Kingdom",1679397462,1679397462,-6.5032,53.882,10972.8,!1,225.99,286.12,.33,null,10881.36,"5441",!1,0],["e4917d","AZU4168 ","Brazil",1679397459,1679397462,-47.4815,-24.1188,5036.82,!1,111.03,212.51,1.63,null,5326.38,null,!1,0],["4006c1","BAW9VA  ","United Kingdom",1679397462,1679397462,-6.2486,50.1621,10972.8,!1,234.47,252.64,0,null,11003.28,"1445",!1,0],["a28e5b","FDX1748 ","United States",1679397462,1679397462,-107.8663,35.3678,10980.42,!1,178.95,249.12,0,null,11064.24,"6610",!1,0],["460483","FSF200B ","Finland",1679397426,1679397426,21.4491,44.7579,9144,!1,125.42,326.38,0,null,9174.48,null,!1,0],["ab38df","CXK336  ","United States",1679397437,1679397439,-77.3313,37.493,-22.86,!1,35.82,12.44,-2.6,null,76.2,null,!1,0],["4891ab","ENT4401 ","Poland",1679397462,1679397462,20.8288,50.059,10210.8,!1,250.79,165.99,3.9,null,10096.5,"5560",!1,0],["75856d","PAL732  ","Philippines",1679397462,1679397462,121.0119,14.633,2529.84,!1,154.54,254.16,10.4,null,2697.48,null,!1,0],["ab8862","DAL84   ","United States",1679397462,1679397462,2.7,49.2335,2758.44,!1,143.19,100.14,-5.85,null,2819.4,"6352",!1,0],["505d9e","OMW165  ","Slovakia",1679397408,1679397410,21.1976,48.6217,685.8,!1,60.09,201.07,-2.6,null,754.38,null,!1,0],["4891b6","ENT59TN ","Poland",1679397462,1679397462,7.9013,50.298,10370.82,!1,218.01,67.67,-2.93,null,10439.4,"0643",!1,0],["a4d5e3","UAL1941 ","United States",1679397457,1679397462,-77.4551,38.9374,null,!0,0,272.81,null,null,null,null,!1,0],["89610b","UAE25J  ","United Arab Emirates",1679397402,1679397402,4.9397,36.9347,6355.08,!1,190.23,266.28,-2.6,null,6598.92,null,!1,0],["505d98","AXE4230 ","Slovakia",1679397168,1679397168,17.1997,48.1684,null,!0,.64,312.19,null,null,null,"6731",!1,0],["a365b7","DAL2922 ","United States",1679397459,1679397459,-93.2184,44.8823,null,!0,6.94,300.94,null,null,null,null,!1,0],["484444","KLM445  ","Kingdom of the Netherlands",1679397462,1679397462,5.5036,52.1364,4785.36,!1,180.47,126.77,19.51,null,4815.84,"3177",!1,0],["4b0290","SWR4YJ  ","Switzerland",1679397460,1679397461,8.556,47.456,null,!0,0,5.62,null,null,null,"1000",!1,0],["896120","UAE6FC  ","United Arab Emirates",1679397462,1679397462,-1.2395,52.3328,3200.4,!1,138.47,275.33,-6.5,null,3185.16,"3226",!1,0],["75857d","CEB392  ","Philippines",1679397461,1679397462,121.0134,14.5159,null,!0,0,315,null,null,null,null,!1,0],["89610f","UAE8LT  ","United Arab Emirates",1679397209,1679397211,12.234,36.4506,8534.4,!1,223.65,278.47,.33,null,8740.14,null,!1,0],["89610d","","United Arab Emirates",1679397396,1679397449,53.1017,27.6832,11277.6,!1,247.44,166.66,.33,null,11506.2,null,!1,0],["abbe23","FDX34   ","United States",1679397462,1679397462,-68.8146,43.4975,10668,!1,282.2,65.21,0,null,10416.54,"2776",!1,0],["4b0293","SWR139K ","Switzerland",1679397217,1679397219,8.5652,47.4559,388.62,!0,4.63,95.62,null,null,null,"1000",!1,0],["a16e7d","UAL800  ","United States",1679397452,1679397452,-74.1637,40.7006,null,!0,3.09,95.62,null,null,null,"1571",!1,0],["4b0291","SWR7ZP  ","Switzerland",1679397462,1679397462,17.9704,59.398,2567.94,!1,145.94,19.14,-6.18,null,2491.74,"3051",!1,0],["a67805","DAL539  ","United States",1679397155,1679397161,-81.3264,28.4007,38.1,!1,66.37,359.11,-3.58,null,106.68,"7306",!1,0],["c82258","ANZ283  ","New Zealand",1679397462,1679397462,104.564,.5584,6682.74,!1,238.62,126.05,6.83,null,7094.22,"0161",!1,0],["a95c89","FFT2501 ","United States",1679397462,1679397462,-81.4267,33.2337,10980.42,!1,219.38,194.95,-.33,null,11109.96,"4130",!0,0],["8674f0","JAL527  ","Japan",1679397273,1679397273,141.8141,42.7844,2186.94,!1,127.62,354.68,-6.18,null,2308.86,"7306",!1,0],["151e4e","PBD6904 ","Russian Federation",1679397462,1679397462,37.3534,55.7448,4114.8,!1,148.96,356.44,-7.48,null,4008.12,null,!1,0],["758560","APG767  ","Philippines",1679397462,1679397462,122.4291,13.0471,8823.96,!1,244.37,143.73,4.88,null,9395.46,null,!1,0],["458d99","MMD104  ","Denmark",1679397423,1679397435,9.8238,54.943,152.4,!1,66.4,319.4,-4.23,null,175.26,"0426",!1,0],["ac2ba0","SWA1039 ","United States",1679397462,1679397463,-83.9288,32.5915,11582.4,!1,207.26,346.65,0,null,11765.28,"3757",!1,0],["489de2","SPHPC   ","Poland",1679397462,1679397462,18.9767,49.8195,563.88,!1,47.21,16.46,-.33,null,632.46,null,!1,0],["acf849","AAL2485 ","United States",1679397462,1679397462,-87.2898,42.3963,2377.44,!1,136.93,211.48,-7.8,null,2377.44,"3064",!1,0],["151e64","NWS080  ","Russian Federation",1679397272,1679397272,37.4788,55.981,365.76,!1,71.12,255.76,-3.58,null,403.86,null,!1,0],["151e65","NWS731  ","Russian Federation",1679397412,1679397412,43.1064,56.3284,10972.8,!1,215.67,285.49,0,null,10728.96,null,!1,0],["acf841","ENY3635 ","United States",1679397462,1679397462,-88.9888,41.4863,4091.94,!1,201.39,83.55,-4.88,null,4084.32,"4322",!1,0],["ab5b2b","SWA2885 ","United States",1679397462,1679397462,-82.8149,41.3956,12184.38,!1,207.34,274.13,0,null,12024.36,"7106",!1,0],["84715c","JJP41   ","Japan",1679397459,1679397462,140.542,34.4168,9433.56,!1,195.86,205.02,9.1,null,9624.06,"3276",!1,0],["a508c5","SWA5013 ","United States",1679397462,1679397462,-80.3945,26.3173,3794.76,!1,188.68,286.31,14.31,null,3886.2,null,!1,0],["3991e5","AFR58UL ","France",1679397294,1679397326,2.6271,48.9962,175.26,!1,68.19,264.81,-2.93,null,259.08,"1000",!1,0],["a9ac77","N722RF  ","United States",1679397462,1679397462,-83.9579,42.7952,1752.6,!1,74.81,217.74,-.33,null,1752.6,null,!1,0],["ac7b1b","JBU569  ","United States",1679397462,1679397462,-76.6032,35.7849,10370.82,!1,208.31,211.57,0,null,10401.3,"3606",!1,0],["4784e8","SAS9229 ","Norway",1679397462,1679397462,-1.7465,54.9158,7620,!1,183.99,198.59,0,null,7467.6,"1173",!1,0],["3991e1","AFR54BJ ","France",1679397462,1679397462,2.2148,48.7614,4770.12,!1,179.29,162.29,11.7,null,4846.32,"1000",!1,0],["a2de7e","SKW4090 ","United States",1679397462,1679397462,-93.5969,45.5614,3977.64,!1,175.38,155.01,-8.45,null,3886.2,null,!1,0],["151e53","PBD6969 ","Russian Federation",1679397309,1679397457,37.6522,55.9483,7040.88,!1,215.75,122.93,11.05,null,6835.14,null,!1,0],["75855b","PAL736  ","Philippines",1679397189,1679397189,100.7714,13.7311,297.18,!1,64.76,194.26,-3.25,null,228.6,"6557",!1,0],["484416","KLM705  ","Kingdom of the Netherlands",1679397458,1679397460,-8.4067,48.9005,9753.6,!1,229.04,232.67,0,null,9867.9,"2111",!1,0],["484415","KLM879  ","Kingdom of the Netherlands",1679397462,1679397462,14.7715,48.4149,10668,!1,262.74,114.16,0,null,10706.1,"4543",!1,0],["7c2590","SH135   ","Australia",1679397382,1679397382,153.1209,-27.3583,-30.48,!1,58.9,207.01,-1.95,null,60.96,null,!1,0],["ad185f","DAL2780 ","United States",1679397462,1679397462,-97.4986,35.3041,1737.36,!1,159.02,79.56,12.03,null,1714.5,null,!1,0],["151e6d","NWS247  ","Russian Federation",1679397461,1679397462,44.6808,56.243,10050.78,!1,249.16,99.27,-.33,null,9829.8,null,!1,0],["393d5b","FWAVE   ","France",1679397462,1679397462,12.2546,41.8627,99.06,!1,73.38,162.45,-3.9,null,167.64,null,!1,0],["acf84e","DAL773  ","United States",1679397461,1679397462,-90.0915,35.452,5737.86,!1,208.75,14.41,7.48,null,5798.82,null,!1,0],["151e80","KAR437  ","Russian Federation",1679397462,1679397462,41.7169,44.1123,10066.02,!1,232.14,91.9,0,null,9997.44,null,!1,0],["ac8217","DAL2903 ","United States",1679397462,1679397462,-91.0089,38.1259,11277.6,!1,258.59,125.94,0,null,11216.64,"1706",!1,0],["48440f","KLM243  ","Kingdom of the Netherlands",1679397462,1679397462,-1.3966,51.4588,11582.4,!1,226.91,253.54,0,null,11559.54,"2132",!1,0],["3d2f6e","DEQFE   ","Germany",1679397462,1679397462,8.926,49.6419,1173.48,!1,57.05,352.75,-2.28,null,1242.06,"4450",!1,0],["847183","","Japan",null,1679397424,null,null,null,!1,225.62,221.39,.33,null,null,null,!1,0],["345558","GES641R ","Spain",1679397461,1679397461,-3.5667,40.4622,null,!0,4.37,87.19,null,null,null,null,!1,0],["345553","FSM729  ","Spain",1679397461,1679397462,-4.1343,40.7179,2118.36,!1,54.96,141.84,-2.93,null,2240.28,null,!1,0],["151e5f","NWS412  ","Russian Federation",1679397462,1679397462,50.4399,53.8554,10980.42,!1,227.01,171.14,6.18,null,10820.4,null,!1,0],["758550","APG231  ","Philippines",1679397459,1679397459,121.0173,14.5174,null,!0,3.86,137.81,null,null,null,null,!1,0],["ac45ea","CXK450  ","United States",1679397460,1679397460,-73.2367,42.6294,1729.74,!1,47.66,283.74,-1.95,null,1729.74,null,!1,0],["a34bdc","EDV4731 ","United States",1679397462,1679397462,-74.0173,40.5667,4023.36,!1,161.19,163.88,-9.75,null,4008.12,"0563",!1,0],["4784c2","NOZ6MH  ","Norway",1679397462,1679397462,10.6502,61.6064,7780.02,!1,199.01,170.93,-6.5,null,7642.86,"1237",!1,0],["75853a","APG287  ","Philippines",1679397132,1679397204,117.8177,14.27,10363.2,!1,218.87,265.28,-.33,null,11018.52,null,!1,0],["4b5d05","NAVETTE3","Switzerland",null,1679397460,null,null,null,!1,5.66,247.5,null,null,null,null,!1,0],["8470a0","ADO36   ","Japan",1679397462,1679397462,141.7517,42.0677,7429.5,!1,204.94,177.55,15.28,null,7292.34,null,!1,0],["406900","EXS81H  ","United Kingdom",1679397462,1679397462,-11.5836,38.6316,10668,!1,227.54,211.03,0,null,10957.56,"1072",!1,0],["a9c5c5","JBU598  ","United States",1679397462,1679397462,-79.4352,34.6567,11902.44,!1,254.13,23.5,0,null,12009.12,null,!1,0],["abbce5","SWA1914 ","United States",1679397462,1679397462,-90.0402,33.9541,11887.2,!1,227.08,2.47,0,null,12009.12,"2562",!1,0],["a8ee4d","N675AB  ","United States",1679397462,1679397462,-81.712,39.035,10058.4,!1,222.94,117.04,3.58,null,9989.82,null,!1,0],["89619a","UAE209  ","United Arab Emirates",1679397462,1679397462,31.8307,39.2238,10972.8,!1,233.01,247.68,0,null,11018.52,null,!1,0],["a722db","SWA3599 ","United States",1679397462,1679397462,-79.7217,40.0769,12192,!1,222.47,193.78,0,null,12108.18,"7420",!1,0],["344209","M2      ","Spain",1679397151,1679397151,-3.5652,40.4564,null,!0,10.29,42.19,null,null,null,null,!1,0],["a77e8f","JIA5160 ","United States",1679397462,1679397462,-75.975,39.7431,6096,!1,181.41,229.72,0,null,6065.52,"3512",!1,0],["0d0d8d","VOI544  ","Mexico",1679397462,1679397462,-96.3697,19.4844,11887.2,!1,231.68,153.21,0,null,12451.08,null,!1,0],["344206","","Spain",1679397423,1679397423,-3.5637,40.4599,null,!0,8.23,272.81,null,null,null,null,!1,0],["ac2c79","SWA3581 ","United States",1679397461,1679397462,-78.2176,42.213,6057.9,!1,172.35,332.44,-12.03,null,5989.32,"7031",!1,0],["ad5329","JBU1869 ","United States",1679397461,1679397461,-72.6977,38.2705,10058.4,!1,226.27,172.42,.33,null,9997.44,"2710",!1,0],["4784a1","SAS262  ","Norway",1679397462,1679397462,6.4339,60.3592,6850.38,!1,215.28,87.26,14.31,null,6774.18,null,!1,0],["a6b55a","NKS2081 ","United States",1679397462,1679397462,-84.4385,33.631,10363.2,!1,219.28,343.65,.33,null,10477.5,"0733",!1,0],["a6c88a","","United States",1679397408,1679397408,-84.4223,33.6379,null,!0,0,180,null,null,null,null,!1,0],["89617f","UAE8G   ","United Arab Emirates",1679397462,1679397462,28.2601,-26.3131,3185.16,!1,152.5,130.62,12.03,null,3398.52,null,!1,0],["ac468d","AAL2274 ","United States",1679397462,1679397462,-76.4366,36.8971,2506.98,!1,138.71,286.15,17.23,null,2560.32,"2407",!1,0],["89617d","UAE9EC  ","United Arab Emirates",1679397462,1679397462,17.5586,44.4942,11582.4,!1,236.21,284.76,0,null,11597.64,null,!1,0],["a96ecb","CKS9707 ","United States",1679397461,1679397462,-105.8099,37.5324,12192,!1,195.04,253.76,0,null,12153.9,null,!1,0],["86d974","JAL26   ","Japan",1679397462,1679397462,139.9984,35.0185,4259.58,!1,149.56,27.45,-5.85,null,4389.12,"3501",!1,0],["a7858e","JBU404  ","United States",1679397401,1679397401,-73.7687,40.6436,-99.06,!1,66.7,211.12,-4.55,null,15.24,"1446",!1,0],["ad03e2","FDX1724 ","United States",1679397462,1679397462,-81.6782,35.5121,7010.4,!1,254.16,52.32,0,null,7078.98,null,!1,0],["896196","UAE3A   ","United Arab Emirates",1679397462,1679397462,4.71,52.3408,null,!0,32.92,182.81,null,null,null,"3274",!1,0],["896195","UAE3MX  ","United Arab Emirates",1679397462,1679397462,-68.9296,46.0078,11582.4,!1,230.88,216.67,.33,null,11277.6,"0702",!1,0],["738100","ELY323  ","Israel",1679397458,1679397460,3.3751,48.8273,2133.6,!1,121.94,329.87,0,null,2202.18,"1000",!1,0],["896199","UAE97   ","United Arab Emirates",1679397386,1679397386,12.2228,41.824,45.72,!1,73.38,162.45,-3.58,null,175.26,null,!1,0],["841043","SJO126  ","Japan",1679397460,1679397462,140.3201,34.6548,6598.92,!1,219.28,37.76,-5.2,null,6720.84,"4473",!1,0],["c07a63","JZA820  ","Canada",1679397462,1679397462,-73.5712,45.1215,3154.68,!1,166.15,355.56,-4.23,null,3078.48,"2132",!1,0],["3991ea","AFR16HR ","France",1679397372,1679397391,-4.8171,36.9034,1424.94,!1,110.16,147.2,0,null,1569.72,"7666",!1,0],["7c6c9f","JST824  ","Australia",1679397462,1679397462,153.2654,-27.1574,1348.74,!1,108.84,244.53,-4.55,null,1493.52,"1316",!1,0],["a8b8ea","LTA61   ","United States",1679397435,1679397435,-84.5143,38.5297,975.36,!1,60.39,113.07,0,null,1036.32,null,!1,0],["151db2","AFL1703 ","Russian Federation",1679397462,1679397462,49.6332,60.2559,10972.8,!1,220.7,253.34,0,null,10614.66,null,!1,0],["a90e61","PDT6031 ","United States",1679397462,1679397462,-80.4248,35.8266,4907.28,!1,144.58,222.26,-7.48,null,4975.86,"0567",!1,0],["151db6","AFL278  ","Russian Federation",1679397462,1679397462,87.0554,18.6576,11277.6,!1,285.05,116.47,0,null,11803.38,"2764",!1,0],["adb656","AAL1011 ","United States",1679397462,1679397462,-77.64,39.6762,10972.8,!1,193.28,249.1,0,null,10858.5,"2701",!1,0],["4a91b2","SAS925  ","Sweden",1679397462,1679397462,11.5534,56.104,6469.38,!1,193.16,315.11,7.8,null,6484.62,"1201",!1,0],["151dae","AFL221  ","Russian Federation",1679397462,1679397462,54.9576,59.4523,10972.8,!1,219.18,274.04,0,null,10637.52,null,!1,0],["151daf","AFL1713 ","Russian Federation",1679397462,1679397462,47.6791,59.927,10972.8,!1,223.24,250.48,0,null,10629.9,null,!1,0],["505d18","IAW233  ","Slovakia",1679397462,1679397463,9.2128,50.8389,8770.62,!1,223.27,294.79,-5.2,null,8862.06,"1000",!1,0],["04c045","KQA520  ","Kenya",1679397460,1679397460,-.4746,5.1871,11574.78,!1,236.6,275.24,0,null,12298.68,null,!1,0],["0d0d50","VOI5320 ","Mexico",1679397462,1679397462,-97.9644,25.5933,10660.38,!1,264.1,114.27,-.33,null,11109.96,null,!1,0],["ad5379","N958MG  ","United States",1679397462,1679397462,-93.0328,39.2965,12192,!1,182.38,209.02,.33,null,12070.08,"1313",!1,0],["aaec9c","AAL1151 ","United States",1679397461,1679397462,-80.0481,26.1386,3406.14,!1,152.75,191.46,-2.93,null,3550.92,null,!1,0],["c03dac","JZA939  ","Canada",1679397462,1679397462,-73.5115,45.4856,1592.58,!1,127.84,34.01,-5.53,null,1569.72,"1550",!1,0],["a24753","ASH6036 ","United States",1679397431,1679397462,-95.8942,30.5258,2964.18,!1,150.44,163.92,-7.8,null,3017.52,"2371",!1,0],["a5a878","AAL2340 ","United States",1679397462,1679397462,-91.0444,35.2324,10370.82,!1,178.67,247.13,0,null,10447.02,"7352",!1,0],["896175","UAE255  ","United Arab Emirates",1679397462,1679397462,-1.4293,42.7046,9448.8,!1,229.6,299.09,0,null,9601.2,"0435",!1,0],["c044b2","CSB925  ","Canada",1679397462,1679397462,-84.6708,37.405,10066.02,!1,243.08,171.24,-.33,null,10043.16,null,!1,0],["896174","UAE256  ","United Arab Emirates",1679397462,1679397463,.5121,41.9443,7970.52,!1,226.95,109.05,-8.78,null,8168.64,null,!1,0],["a2dda1","JBU2832 ","United States",1679397462,1679397462,-73.8595,40.7721,null,!0,1.54,123.75,null,null,null,null,!1,0],["e49165","AZU4466 ","Brazil",1679397331,1679397331,-34.6251,-7.3236,4663.44,!1,109.69,29.81,2.93,null,4914.9,null,!1,0],["a5dbb7","N477GF  ","United States",1679397462,1679397462,-86.3572,31.2895,647.7,!1,50.23,122.88,0,null,708.66,"4511",!1,0],["a04dfa","DAL1421 ","United States",1679397460,1679397460,-73.8602,40.7717,null,!0,3.6,300.94,null,null,null,null,!1,0],["a4870d","FFT2000 ","United States",1679397389,1679397389,-84.4133,33.6479,null,!0,11.83,258.75,null,null,null,"4176",!1,0],["896172","UAE9745 ","United Arab Emirates",1679397338,1679397338,55.3487,24.7963,1440.18,!1,140.46,120.6,6.83,null,944.88,null,!1,0],["896171","UAE9878 ","United Arab Emirates",1679397462,1679397462,77.2093,23.3177,11887.2,!1,304.57,106.38,-.33,null,12291.06,null,!1,0],["ac205f","SWA1805 ","United States",1679397462,1679397463,-89.4412,32.8787,10972.8,!1,191.85,261.67,0,null,11155.68,"2043",!1,0],["a4bbde","DAL67   ","United States",1679397462,1679397462,11.6159,44.4627,9753.6,!1,224.47,351.03,0,null,9890.76,"4306",!1,0],["4842fe","TD45    ","Kingdom of the Netherlands",1679397335,1679397335,4.7496,52.3065,null,!0,14.4,199.69,null,null,null,null,!1,0],["781b0f","DKH1854 ","China",1679397462,1679397462,112.7634,23.0513,10104.12,!1,266.1,93.99,-.33,null,10622.28,null,!1,0],["86d906","","Japan",1679397330,1679397330,139.7831,35.5641,null,!0,5.4,67.5,null,null,null,null,!1,0],["adb65b","DAL2079 ","United States",1679397462,1679397462,-81.8536,42.4886,7010.4,!1,174.3,264.07,-11.38,null,6949.44,"1570",!1,0],["4bb464","MNB921  ","Turkey",1679397462,1679397462,15.1649,34.3656,10744.2,!1,240.88,85.84,5.2,null,10911.84,null,!1,0],["a91536","UAL480  ","United States",1679397462,1679397462,-84.7665,35.0665,10972.8,!1,194.77,235.76,0,null,11041.38,"7053",!1,0],["ad5398","AAL2352 ","United States",1679397462,1679397462,-81.4951,33.8975,10972.8,!1,244.29,173.71,0,null,11087.1,"7473",!1,0],["c07a0c","TSC568  ","Canada",1679397462,1679397462,-80.03,40.2221,11582.4,!1,236.26,181.87,0,null,11483.34,"2210",!1,0],["aa9bb8","AAL717  ","United States",1679397462,1679397462,-2.8056,55.1939,10363.2,!1,239.37,314.48,0,null,10210.8,"6670",!1,0],["a0ed25","N159RR  ","United States",1679397411,1679397411,-80.364,33.7802,2918.46,!1,89.11,195.4,0,null,3009.9,null,!1,0],["40690a","EZY68XT ","United Kingdom",1679397462,1679397462,-2.3663,48.2119,10355.58,!1,196.71,333.77,0,null,10416.54,"5502",!1,0],["a66576","DAL417  ","United States",1679397462,1679397462,-82.5791,30.4596,8839.2,!1,251.69,156.89,0,null,9113.52,"3510",!1,0],["781b38","CQH7428 ","China",1679397460,1679397461,104.5247,20.6013,9448.8,!1,266.73,35.9,.33,null,9936.48,null,!1,0],["a735ea","N564BL  ","United States",1679397439,1679397439,-76.9942,39.592,205.74,!1,31.36,311.01,-2.6,null,289.56,null,!1,0],["aab812","AAL67   ","United States",1679397462,1679397462,-7.1044,44.0334,10058.4,!1,229.22,300.48,-.33,null,10248.9,null,!1,0],["a842a9","NKS317  ","United States",1679397462,1679397462,-85.8075,37.4896,9753.6,!1,246.42,163.38,6.18,null,9738.36,null,!1,0],["a722b1","AAL268  ","United States",1679397462,1679397462,-76.9044,39.0656,9052.56,!1,211.35,225.1,7.8,null,8999.22,"3057",!1,0],["5001a4","T7TZE   ","San Marino",1679397462,1679397462,103.7001,1.7067,4640.58,!1,172.92,286.06,13,null,4899.66,"0174",!1,0],["a054cc","N120MG  ","United States",1679397462,1679397462,-81.7163,28.2435,1127.76,!1,53.24,5.55,.33,null,1181.1,"1417",!1,0],["4b5d90","URSULA21","Switzerland",1679397442,1679397442,8.5607,47.4465,null,!0,6.94,337.5,null,null,null,null,!1,0],["4a91f9","SAS2627 ","Sweden",1679397462,1679397462,9.7321,54.3549,11582.4,!1,213.31,231.17,0,null,11529.06,"5663",!1,0],["4a91f8","SAS7525 ","Sweden",1679397462,1679397462,3.3174,49.481,11894.82,!1,222.56,197.76,0,null,11910.06,"5233",!1,0],["ab2855","DAL179  ","United States",1679397459,1679397459,4.7703,52.3109,null,!0,0,272.81,null,null,null,null,!1,0],["a1c4dd","N213CD  ","United States",1679397463,1679397463,-89.2931,42.1891,1615.44,!1,87.46,61.93,-.98,null,1615.44,null,!1,0],["4951d4","TAP1038 ","Portugal",1679397462,1679397462,-7.3008,39.5238,9486.9,!1,244.81,64.08,11.38,null,9715.5,"3345",!1,0],["4951d7","TAP451K ","Portugal",null,1679397444,null,null,null,!1,221.7,221.05,0,null,null,null,!1,0],["3944e1","AFR57QW ","France",1679397458,1679397459,24.5808,44.9117,5935.98,!1,207.61,110.91,-14.31,null,5951.22,"1000",!1,0],["a46d47","UAL2429 ","United States",1679397462,1679397462,-77.8647,43.0923,11582.4,!1,194.97,270,0,null,11330.94,"1312",!1,0],["aa55c0","SWA1151 ","United States",1679397462,1679397462,-104.5638,38.8219,4061.46,!1,169.93,149.63,10.08,null,3985.26,null,!1,0],["3e0650","DHTOY   ","Germany",1679397420,1679397423,9.0798,50.4533,350.52,!1,27.68,131.99,-11.05,null,441.96,null,!1,0],["aaa5b8","SWA271  ","United States",1679397462,1679397462,-86.6778,34.1141,5996.94,!1,194.98,359.7,14.96,null,5974.08,null,!1,0],["40097d","BAW56HR ","United Kingdom",1679397411,1679397412,-9.0239,45.7004,10370.82,!1,249.51,179.88,.65,null,10538.46,null,!1,0],["a8e29c","DAL786  ","United States",1679397462,1679397462,-80.6225,39.6593,7802.88,!1,220.76,214.65,8.78,null,7757.16,null,!1,0],["3944f2","AFR92JY ","France",1679397462,1679397462,-5.3748,37.7735,10988.04,!1,245.81,18.55,0,null,11231.88,null,!1,0],["3944f0","AFR58PP ","France",1679397461,1679397462,7.5872,43.5002,7810.5,!1,222.76,119.47,-11.38,null,7970.52,"1000",!1,0],["aaee43","DAL104  ","United States",1679397462,1679397462,-83.7179,33.0915,5669.28,!1,181.87,318.55,-10.4,null,5798.82,null,!1,0],["ab5bb1","SWA3133 ","United States",1679397462,1679397462,-81.4244,28.3602,1234.44,!1,105.98,180.28,-6.83,null,1310.64,"7356",!1,0],["3944f8","AFR85VR ","France",1679397462,1679397462,5.4736,49.7439,9753.6,!1,213.6,251.61,0,null,9776.46,"1000",!1,0],["a34119","DAL1646 ","United States",1679397462,1679397462,-84.2088,33.681,1920.24,!1,141.87,67.62,10.4,null,1988.82,null,!1,0],["a437ce","DAL1038 ","United States",1679397462,1679397463,-90.6453,44.4124,10363.2,!1,212.94,292.29,0,null,10142.22,"6635",!1,0],["8961b5","BAR714  ","United Arab Emirates",1679397462,1679397462,54.8934,24.5036,1661.16,!1,116.79,180.76,-5.2,null,1623.06,null,!1,0],["400981","BAW431  ","United Kingdom",1679397462,1679397462,2.0405,51.8218,7315.2,!1,167.48,254.68,0,null,7292.34,"6266",!1,0],["400980","BAW869  ","United Kingdom",1679397462,1679397462,12.6556,48.8075,10972.8,!1,203.38,296.44,0,null,11026.14,"3563",!1,0],["0d0d37","VOI312  ","Mexico",1679397462,1679397462,-75.571,5.1741,10584.18,!1,231,115.88,-16.91,null,11269.98,null,!1,0],["4951b7","TAP674  ","Portugal",1679397461,1679397461,-5.3545,42.0345,11582.4,!1,228.18,23.1,.33,null,11757.66,"5430",!1,0],["a10d82","AAL1666 ","United States",1679397462,1679397462,-76.8651,36.7924,9144,!1,223.99,193.14,0,null,9166.86,"7042",!1,0],["a34d52","JBU1883 ","United States",1679397462,1679397462,-74.3089,39.0744,9753.6,!1,204.86,221.33,-.33,null,9685.02,"7337",!1,0],["40095d","BAW1480 ","United Kingdom",1679397462,1679397462,-3.6967,55.5184,2705.1,!1,146.62,323.13,-5.53,null,2621.28,"6212",!1,0],["7c25e7","POL73   ","Australia",1679397462,1679397462,147.3631,-42.1636,1729.74,!1,66.9,349.81,0,null,1844.04,"0073",!1,0],["0d0d41","","Mexico",null,1679397437,null,null,null,!1,166.39,169.49,-7.8,null,null,null,!1,0],["a3b796","DAL860  ","United States",1679397462,1679397462,-81.6609,35.9488,9144,!1,215.71,225.1,.33,null,9159.24,"3372",!1,0],["506dff","S5DSM   ","Slovenia",1679397462,1679397462,13.0168,47.7951,1333.5,!1,43.95,321.65,4.88,null,1424.94,"1000",!1,0],["a24782","ENY3670 ","United States",1679397462,1679397462,-81.9085,35.0267,10972.8,!1,228.97,166.62,-.33,null,11026.14,"6721",!1,0],["abc5b8","PAC9695 ","United States",1679397463,1679397463,-87.8958,41.2046,9144,!1,243.18,317.23,0,null,9029.7,"6770",!1,0],["500141","T7MIK   ","San Marino",1679397462,1679397462,3.7269,50.7122,11308.08,!1,253.08,116.83,9.75,null,11300.46,"0542",!1,0],["400964","LNX29RS ","United Kingdom",1679397462,1679397462,5.636,45.8712,1927.86,!1,107.55,95.77,0,null,2026.92,"6337",!1,0],["3e1998","DIAWU   ","Germany",1679397463,1679397463,8.8909,54.7373,10668,!1,189.44,158.66,0,null,10645.14,"0766",!1,0],["ad682d","N963KA  ","United States",1679397462,1679397462,-76.5852,40.318,6705.6,!1,111.18,208.46,0,null,6659.88,null,!1,0],["478793","WIF6T   ","Norway",1679397254,1679397254,14.4156,67.2733,182.88,!1,49.84,258.69,-5.2,null,129.54,null,!1,0],["3c0cb2","TUI6TK  ","Germany",1679397462,1679397462,1.7562,49.1308,10668,!1,216.47,235.55,0,null,10668,"4126",!1,0],["ab62ad","SWA2755 ","United States",1679397462,1679397462,-97.3037,37.0185,11864.34,!1,199.49,291.01,2.93,null,11841.48,"2442",!1,0],["8a03f3","AWQ536  ","Indonesia",1679397462,1679397462,116.6572,-29.6077,11582.4,!1,223.84,181.32,0,null,12161.52,null,!1,0],["ab2899","N818RP  ","United States",1679397462,1679397462,-82.8189,41.0636,8237.22,!1,188.07,224.89,10.08,null,8168.64,"5721",!1,0],["8a03f4","","Indonesia",1679397183,1679397183,106.2915,-1.7347,10668,!1,232.31,132.49,0,null,11376.66,null,!1,0],["ab6efc","DAL2387 ","United States",1679397462,1679397462,-86.1544,37.6853,5440.68,!1,192.18,220.98,12.35,null,5448.3,null,!1,0],["abbee3","DAL225  ","United States",1679397462,1679397462,-9.0793,54.2756,10668,!1,209.74,284.34,0,null,10584.18,"5613",!1,0],["a3414e","FFT2425 ","United States",1679397462,1679397462,-82.0898,33.8405,11567.16,!1,233.04,179.87,0,null,11696.7,"5714",!1,0],["ababb7","PAC947  ","United States",1679397462,1679397462,-92.948,44.8776,11582.4,!1,232.84,311.69,0,null,11323.32,"4072",!1,0],["3441d9","B13     ","Spain",1679397231,1679397231,-3.5668,40.4569,null,!0,11.32,135,null,null,null,null,!1,0],["440181","EJU63DW ","Austria",1679397462,1679397462,1.8978,42.854,10180.32,!1,220.74,170.34,-15.61,null,10408.92,"7706",!1,0],["ac1b44","SWA1087 ","United States",1679397460,1679397460,-87.7472,41.7875,null,!0,4.89,42.19,null,null,null,null,!1,0],["aa68a1","N77VZ   ","United States",1679397462,1679397462,-83.7842,35.4793,5814.06,!1,199.26,78.84,0,null,5867.4,"5230",!1,0],["a9b2e0","SKW3261 ","United States",1679397462,1679397462,-87.9634,43.025,1623.06,!1,123.13,245.04,12.35,null,1623.06,null,!1,0],["3441c9","B10     ","Spain",1679397351,1679397351,-3.5736,40.4619,null,!0,5.66,264.38,null,null,null,null,!1,0],["aae21f","N800CR  ","United States",1679397462,1679397462,-96.6671,32.7204,3703.32,!1,178.61,187.78,10.4,null,3733.8,null,!1,0],["a34d98","JBU2363 ","United States",1679397462,1679397462,-78.2256,42.4373,10972.8,!1,205.81,250.89,.33,null,10759.44,"3466",!1,0],["3441c2","M4      ","Spain",1679397174,1679397174,-3.5671,40.4568,null,!0,7.2,140.62,null,null,null,null,!1,0],["478772","NOZ3VP  ","Norway",1679397462,1679397462,11.7398,63.241,12192,!1,232.5,195.27,.33,null,11894.82,"5026",!1,0],["7c6275","POL57   ","Australia",1679397462,1679397462,138.1347,-35.0842,2682.24,!1,91.72,43.18,0,null,2842.26,"0656",!1,0],["ad9bc8","AAL1282 ","United States",1679397463,1679397463,-75.0947,40.8807,5318.76,!1,185.54,258.97,7.48,null,5288.28,"2664",!1,0],["392ae7","AFR1854 ","France",1679397462,1679397462,2.9769,44.2824,11277.6,!1,218.64,179.87,0,null,11437.62,"7623",!1,0],["392ae9","AFR98SA ","France",1679397462,1679397462,-2.7749,40.2556,11269.98,!1,211.3,195.39,0,null,11460.48,"7610",!1,0],["ae6210","CARD90  ","United States",1679397231,1679397244,127.0344,36.9297,365.76,!1,48.63,96.07,-1.95,null,373.38,null,!1,0],["4b0e29","HBFJL   ","Switzerland",1679397462,1679397462,2.0879,48.5832,6705.6,!1,128.34,282.03,0,null,6789.42,"5725",!1,0],["a2e4dd","AJT825  ","United States",1679397462,1679397462,-67.6043,19.7501,11277.6,!1,240.47,109.37,0,null,11856.72,null,!1,0],["ace5e1","N930CF  ","United States",1679397462,1679397462,1.4067,41.0674,8534.4,!1,170.24,12.57,0,null,8763,null,!1,0],["392af0","AFR94SP ","France",1679397462,1679397462,5.5068,45.7042,10363.2,!1,222.09,331.95,0,null,10515.6,"1000",!1,0],["ac8efa","EDV4669 ","United States",1679397461,1679397462,-77.0652,38.8969,121.92,!1,75.23,144.46,-4.23,null,205.74,"4650",!1,0],["a2479f","SKW5480 ","United States",1679397462,1679397462,-102.153,32.3518,5417.82,!1,165.34,354.64,10.08,null,5532.12,null,!1,0],["4b2830","HBPFS   ","Switzerland",1679397432,1679397432,7.5022,46.9112,null,!0,2.57,137.81,null,null,null,"7000",!1,0],["a8e247","DAL2726 ","United States",1679397462,1679397462,-87.0974,37.4948,12496.8,!1,243.18,166.17,0,null,12443.46,"6254",!1,0],["ada526","DAL2491 ","United States",1679397462,1679397462,-82.5021,36.7168,8542.02,!1,221.34,323.98,0,null,8572.5,null,!1,0],["440195","EJU37FV ","Austria",1679397231,1679397242,8.7196,45.626,null,!0,0,78.75,null,null,null,"2203",!1,0],["ace5bb","DAL1436 ","United States",1679397462,1679397462,-87.4127,39.7463,10058.4,!1,224.63,170.77,0,null,9966.96,"2665",!1,0],["adfec0","CADDY44 ","United States",1679397252,1679397277,38.0109,32.8396,11628.12,!1,197.17,71.75,2.28,null,11605.26,"0735",!1,0],["a27aee","SWA3562 ","United States",1679397462,1679397462,-92.408,33.9855,12192,!1,197.63,239.5,0,null,12291.06,"7302",!1,0],["ad6881","NKS2252 ","United States",1679397462,1679397462,-83.2793,35.8513,10020.3,!1,261.3,104.83,-4.88,null,10066.02,"7210",!1,0],["478777","MDT1    ","Norway",1679397462,1679397462,10.5062,61.4288,5181.6,!1,130.3,357.28,0,null,5067.3,"0275",!1,0],["ac20c4","SWA3363 ","United States",1679397462,1679397462,-84.6594,33.6319,1089.66,!1,85.4,90.69,0,null,1165.86,"7464",!1,0],["a23fb2","RPA5753 ","United States",1679397462,1679397462,-70.9342,42.5116,792.48,!1,92.08,193.57,-2.93,null,853.44,"4127",!1,0],["151e0e","PBD314  ","Russian Federation",1679397462,1679397462,43.2221,44.0614,9448.8,!1,223.61,93.17,0,null,9403.08,null,!1,0],["4b0e3f","HBFKH   ","Switzerland",1679397461,1679397461,8.7861,46.164,null,!1,46.5,130.8,-1,null,1236,null,!1,3],["c01a61","ACA090  ","Canada",1679397262,1679397267,-46.6429,-23.2817,2301.24,!1,134.41,201.56,-5.85,null,2453.64,null,!1,0],["a09cad","AAL1583 ","United States",1679397462,1679397462,-92.5334,35.9924,10363.2,!1,183.62,247.6,.33,null,10393.68,"6326",!1,0],["3dd37a","DHAIK   ","Germany",1679397462,1679397462,9.6872,53.6859,99.06,!1,31.29,260.54,2.28,null,129.54,null,!1,0],["ab5056","UAL2108 ","United States",1679397462,1679397462,-79.8875,35.6071,7688.58,!1,240.87,55.53,9.75,null,7741.92,"7122",!1,0],["4844a3","GXA3139 ","Kingdom of the Netherlands",1679397461,1679397461,-80.8908,25.7412,5608.32,!1,217.25,253.07,7.15,null,5875.02,null,!1,0],["a6a1af","N52606  ","United States",1679397461,1679397462,-82.5478,27.4039,144.78,!1,34.1,348.69,1.95,null,205.74,null,!1,0],["a8a785","JBU959  ","United States",1679397462,1679397462,-77.1735,34.7316,9753.6,!1,216.69,198.69,0,null,9837.42,"3545",!1,0],["3dd386","DHAIW   ","Germany",1679397462,1679397462,6.8714,51.9133,152.4,!1,48.44,22.48,.33,null,190.5,null,!1,0],["c0211f","MAL7066 ","Canada",1679397452,1679397455,-123.156,49.1873,null,!0,0,5.62,null,null,null,null,!1,0],["8a0532","GIA837  ","Indonesia",1679397324,1679397324,103.9874,1.3633,null,!0,3.86,22.5,null,null,null,null,!1,0],["a45a7f","N38RY   ","United States",1679397462,1679397462,-80.6866,32.2763,4564.38,!1,135.33,208.12,0,null,4678.68,null,!1,0],["a3c9b4","DAL1430 ","United States",1679397462,1679397462,-82.6852,30.4939,10393.68,!1,234.61,3.9,6.5,null,10668,"5742",!1,0],["151e15","PBD884  ","Russian Federation",1679397460,1679397460,31.4267,41.7415,10058.4,!1,235.81,74.17,0,null,10081.26,null,!1,0],["151e17","PBD565  ","Russian Federation",1679397461,1679397462,40.5105,55.9791,11277.6,!1,233.78,108.08,0,null,11018.52,null,!1,0],["ab6396","EDV4858 ","United States",1679397341,1679397341,-84.4536,33.6318,236.22,!1,67.91,90,-3.58,null,350.52,"0774",!1,0],["c03493","TSC2685 ","Canada",1679397462,1679397462,-63.7249,44.6118,2964.18,!1,169.93,58.62,-4.23,null,2910.84,"6110",!1,0],["a9c737","RPA3633 ","United States",1679397462,1679397462,-74.1564,40.9405,822.96,!1,141.18,127.75,-6.18,null,899.16,"5740",!1,0],["a95d42","PRY03   ","United States",1679397462,1679397462,-84.2383,40.0057,2209.8,!1,69.87,13.63,6.83,null,2247.9,null,!1,0],["a5ca89","SWA2258 ","United States",1679397185,1679397186,-77.6971,33.3904,10828.02,!1,205.82,203.1,-5.53,null,10957.56,"3441",!1,0],["75860e","CEB114  ","Philippines",1679397461,1679397461,119.8461,17.1944,11574.78,!1,209.26,313.31,0,null,12283.44,null,!1,0],["49529a","TAP1043 ","Portugal",1679397462,1679397462,-.5892,40.8719,10668,!1,188.8,269.69,.33,null,10919.46,null,!1,0],["3cd8b8","QGA10A  ","Germany",1679397461,1679397462,9.4549,49.6878,8839.2,!1,229.99,136.63,0,null,8938.26,"1260",!1,0],["a5e48a","SWA3400 ","United States",1679397458,1679397458,-87.7478,41.7862,null,!0,4.89,343.12,null,null,null,null,!1,0],["a05628","UAL952  ","United States",1679397462,1679397462,7.415,52.2635,10355.58,!1,250.58,317.83,-.33,null,10386.06,"6653",!1,0],["a05626","UAL90   ","United States",1679397462,1679397462,24.2367,39.5846,11879.58,!1,249.91,135.42,.33,null,11940.54,"5227",!1,0],["a3c9c5","AAL544  ","United States",1679397461,1679397461,-92.6395,41.3797,7444.74,!1,241.98,94.39,4.23,null,7353.3,null,!1,0],["86d9fc","JAL42   ","Japan",1679397462,1679397462,9.9773,49.015,10668,!1,268.53,124.15,-.33,null,10759.44,"7324",!1,0],["a9ad36","RPA3464 ","United States",1679397462,1679397462,-74.1575,40.704,-68.58,!1,59.82,206.57,-2.6,null,22.86,"3744",!1,0],["151e1b","PBD539  ","Russian Federation",1679397308,1679397457,37.4435,55.8654,10668,!1,228.46,147.13,0,null,10393.68,null,!1,0],["440145","EJU84CF ","Austria",1679397462,1679397462,8.5771,51.2555,10363.2,!1,204.55,247.37,0,null,10393.68,"1136",!1,0],["c01a72","CJT918  ","Canada",1679397462,1679397462,-88.9478,43.7846,10972.8,!1,219.07,323.88,0,null,10744.2,"1437",!1,0],["49528e","TAP643H ","Portugal",1679397462,1679397462,3.607,50.2429,7627.62,!1,204.54,206.11,18.21,null,7658.1,"7142",!1,0],["495297","TAP1692 ","Portugal",1679397462,1679397462,-16.2556,32.9305,5615.94,!1,172.44,45.73,11.7,null,5890.26,null,!1,0],["ad9c6c","MRA603  ","United States",1679397461,1679397461,-84.2282,43.372,1127.76,!1,94.69,29.63,-3.25,null,1150.62,null,!1,0],["86d9ae","ANA8535 ","Japan",1679397461,1679397462,140.5489,35.5194,3451.86,!1,145.41,167.54,13.33,null,3520.44,"3614",!1,0],["8a0509","CTV022  ","Indonesia",1679397462,1679397462,101.216,.0179,10972.8,!1,234.75,316.86,0,null,11681.46,null,!1,0],["a43952","UPS994  ","United States",1679397462,1679397462,-117.547,47.4367,1661.16,!1,142.18,254.25,-5.2,null,1584.96,null,!1,0],["4bb2aa","THY72W  ","Turkey",1679397461,1679397462,30.2751,40.3443,6294.12,!1,188.42,267.81,-5.2,null,6408.42,null,!1,0],["4bb2ab","THY3TY  ","Turkey",1679397462,1679397462,14.0488,47.4783,7018.02,!1,194.01,300.78,-6.18,null,7139.94,"5330",!1,0],["abb392","N853MB  ","United States",1679397378,1679397457,-104.7109,40.4148,1554.48,!1,0,0,0,null,1440.18,null,!1,0],["aa55ee","AAL674  ","United States",1679397460,1679397462,-82.3982,38.1725,10363.2,!1,210.09,250.1,0,null,10279.38,"4366",!1,0],["a6b4c3","GJS4589 ","United States",1679397283,1679397337,-77.0411,38.8573,null,!0,1.54,323.44,null,null,null,null,!1,0],["7020a5","BBC467  ","Bangladesh",1679397462,1679397462,90.2824,23.7663,3276.6,!1,99.39,242.9,11.05,null,3291.84,"4104",!1,0],["aa922b","SWA1636 ","United States",1679397462,1679397462,-95.4126,30.9081,7924.8,!1,207.03,348.24,0,null,8153.4,"5421",!1,0],["a82a06","NKS386  ","United States",1679397462,1679397462,-85.0525,33.1259,3154.68,!1,158.97,32.71,-6.18,null,3261.36,"7463",!1,0],["7020a3","UBG112  ","Bangladesh",1679397462,1679397462,90.8802,22.7547,4267.2,!1,114.28,319.93,.33,null,4343.4,"4741",!1,0],["40093e","BAW34XR ","United Kingdom",1679397462,1679397462,6.3102,49.9959,11285.22,!1,237.58,124.41,0,null,11269.98,"0513",!1,0],["a1bf3a","SWA893  ","United States",1679397194,1679397194,-95.338,29.6952,358.14,!1,59.7,132.9,-2.93,null,388.62,"1745",!1,0],["a52ada","N432DC  ","United States",1679397462,1679397462,-75.9903,41.7342,2628.9,!1,98.82,130.99,0,null,2636.52,"5736",!1,0],["8a1823","LNI2741 ","Indonesia",1679397462,1679397462,118.904,13.2111,9144,!1,225.7,333.32,.33,null,9707.88,null,!1,0],["a1500a","FDX1701 ","United States",1679397462,1679397462,-109.3564,36.7076,10972.8,!1,177.44,253.67,0,null,10988.04,null,!1,0],["4c2240","YUISA   ","Serbia",1679397462,1679397462,19.8621,44.2992,1493.52,!1,46.2,198.84,1.3,null,1554.48,null,!1,0],["acc040","EDV4801 ","United States",1679397462,1679397462,-74.2035,40.4329,2011.68,!1,143.7,44.27,0,null,2057.4,"2467",!1,0],["7020ae","AWA417  ","Bangladesh",1679397462,1679397462,90.9719,23.2016,2743.2,!1,114.54,165.96,-.33,null,2758.44,"4121",!1,0],["7020ab","UBG206  ","Bangladesh",1679397462,1679397462,89.2579,22.1683,11277.6,!1,231.15,2.17,.33,null,11689.08,"0637",!1,0],["4bb2ac","THY5YQ  ","Turkey",1679397462,1679397462,26.5933,42.817,10363.2,!1,209.53,314.8,-.33,null,10408.92,null,!1,0],["aa8b40","JBU1379 ","United States",1679397462,1679397462,-79.9188,36.0481,9753.6,!1,219.72,194.23,0,null,9776.46,"5640",!1,0],["7020b2","UBG310  ","Bangladesh",1679397459,1679397462,98.4377,13.6601,11582.4,!1,228,333.03,0,null,12252.96,"0112",!1,0],["dda88f","","",1679397461,1679397461,15.4004,46.9942,null,!1,29.12,-22.25,0,null,1008,null,!1,3],["440d1f","OEXAR   ","Austria",1679397462,1679397462,16.1393,47.8824,899.16,!1,50.45,78.23,-.65,null,982.98,null,!1,0],["ad9c8f","MRA630  ","United States",1679397462,1679397462,-84.9892,30.8986,1737.36,!1,85.96,227.91,0,null,1798.32,null,!1,0],["7020b3","AWA447  ","Bangladesh",1679397442,1679397458,91.7072,22.7669,3352.8,!1,110.32,167.07,0,null,3413.76,"4741",!1,0],["7020b4","UBG316  ","Bangladesh",1679397442,1679397454,97.6086,14.8234,12192,!1,224.42,337.49,0,null,12854.94,null,!1,0],["a05669","UAL973  ","United States",1679397383,1679397396,-9.5305,57.8381,10965.18,!1,245.71,303.12,-.33,null,10767.06,"4424",!1,0],["400935","SHT9Z   ","United Kingdom",1679397462,1679397462,-.1063,51.4656,1264.92,!1,81.8,270.36,0,null,1264.92,"4222",!1,0],["3d20db","DEKRR   ","Germany",1679397462,1679397462,9.398,49.3515,1188.72,!1,46.12,38.66,.65,null,1272.54,"7000",!1,0],["a4bd7e","SWA233  ","United States",1679397462,1679397462,-104.9523,32.5415,12192,!1,179.58,298.77,0,null,12435.84,"2524",!1,0],["ab282b","RPA5749 ","United States",1679397462,1679397462,-77.4808,38.96,2255.52,!1,115.46,52.06,-5.2,null,2316.48,"3701",!1,0],["a6045d","UAL1796 ","United States",1679397462,1679397462,-74.7532,40.3639,2095.5,!1,146.7,47.13,-2.93,null,2156.46,"2406",!1,0],["ab6eb9","AAL1290 ","United States",1679397462,1679397462,-84.1799,41.2213,10980.42,!1,202.98,273.05,0,null,10797.54,"3057",!1,0],["a5ca58","UPS838  ","United States",1679397396,1679397396,-116.2425,43.566,null,!0,2.06,306.56,null,null,null,null,!1,0],["a83108","JBU1509 ","United States",1679397461,1679397461,-74.5791,22.08,11277.6,!1,243.84,146.44,0,null,11902.44,null,!1,0],["abd8a5","SWA2593 ","United States",1679397462,1679397462,-88.4309,31.1043,10972.8,!1,189.53,277.8,.33,null,11224.26,"1060",!1,0],["a0a644","GTI3824 ","United States",1679397462,1679397462,-83.1146,31.5713,12192,!1,235.07,351.57,0,null,12405.36,"3111",!1,0],["4bb2a9","THY7WJ  ","Turkey",1679397462,1679397462,16.9353,50.9888,10347.96,!1,198.93,309.12,.98,null,10309.86,"1000",!1,0],["a0433b","RPA4398 ","United States",1679397462,1679397462,-87.9481,31.3833,9723.12,!1,260.69,55.78,5.2,null,9959.34,"2463",!1,0],["a39017","DAL1016 ","United States",1679397462,1679397462,-82.6412,42.4368,2735.58,!1,129.42,266.13,-7.48,null,2735.58,"2007",!1,0],["ab7627","AAL2477 ","United States",1679397462,1679397462,-76.6556,37.9731,7330.44,!1,229.26,176.91,9.1,null,7208.52,null,!1,0],["5000b3","MEA218  ","San Marino",1679397462,1679397462,8.533,49.9652,632.46,!1,106.23,148.47,4.88,null,723.9,"7643",!1,0],["a46cd8","N3842V  ","United States",1679397322,1679397322,-85.1083,33.4053,784.86,!1,51.59,170.82,.33,null,830.58,null,!1,0],["728834","FBA406  ","Iraq",1679397373,1679397393,48.9556,28.5926,9753.6,!1,206.75,325.95,0,null,9784.08,null,!1,0],["ad1927","JBU133  ","United States",1679397462,1679397462,-79.8134,43.9068,9761.22,!1,190.17,273.41,.33,null,9517.38,"3531",!1,0],["3d4893","DEZST   ","Germany",1679397462,1679397462,4.3527,52.1661,1417.32,!1,63.18,279.85,2.93,null,1424.94,"6275",!1,0],["a869bc","","United States",1679397362,1679397370,-77.4454,33.0831,9448.8,!1,242.6,17.4,0,null,9578.34,null,!1,0],["a4cfe0","UPS300  ","United States",1679397463,1679397463,-96.5463,28.2568,10370.82,!1,234.01,214.25,0,null,10713.72,"6713",!1,0],["151d89","AFL1402 ","Russian Federation",1679397462,1679397462,51.0461,56.0963,10668,!1,243.56,84.18,0,null,10462.26,null,!1,0],["495242","SAT501  ","Portugal",1679397462,1679397462,-25.4979,37.6794,944.88,!1,88.75,291.06,-4.88,null,1104.9,null,!1,0],["aaa621","SWA1019 ","United States",1679397462,1679397462,-90.3378,39.7802,10972.8,!1,206.81,263,0,null,10858.5,"6771",!1,0],["a53f5b","RPA4735 ","United States",1679397462,1679397462,-77.0256,38.8199,525.78,!1,84.82,185.92,12.68,null,609.6,null,!1,0],["4007f9","BAW122  ","United Kingdom",1679397462,1679397462,13.2111,48.6822,12192,!1,228,296.39,0,null,12222.48,"3251",!1,0],["4007f6","BAW198  ","United Kingdom",1679397461,1679397462,52.3227,26.211,10972.8,!1,187.96,296.49,0,null,11262.36,null,!1,0],["4007f5","BAW253M ","United Kingdom",1679397462,1679397462,-.6805,51.5445,1455.42,!1,141.99,.62,10.73,null,1455.42,"6333",!1,0],["ac3fc5","FDX5235 ","United States",1679397461,1679397461,122.257,26.0985,10972.8,!1,209.92,216.03,0,null,11475.72,null,!1,0],["a486d8","DAL904  ","United States",1679397462,1679397462,-82.1883,39.6323,11506.2,!1,235.52,7.4,-4.88,null,11407.14,"2530",!1,0],["151d78","AZV3712 ","Russian Federation",1679397461,1679397462,99.0849,14.6186,9144,!1,231.65,298.96,.33,null,9616.44,"0770",!1,0],["a2834b","N261GA  ","United States",1679397462,1679397462,-65.5705,44.8064,13106.4,!1,207.22,264.59,.65,null,12961.62,null,!1,0],["4007f0","BAW2203 ","United Kingdom",1679397462,1679397462,-2.1313,51.5239,8458.2,!1,203.73,285.83,7.48,null,8435.34,"1472",!1,0],["4bb1e8","THY2BT  ","Turkey",1679397461,1679397462,22.3174,47.4253,11894.82,!1,247.6,137.53,-.33,null,11841.48,"7603",!1,0],["a3e011","EDV4708 ","United States",1679397462,1679397462,-73.7205,40.5923,1165.86,!1,128.87,51.48,11.38,null,1234.44,"2775",!1,0],["aca9d1","MTN8385 ","United States",1679397457,1679397462,-88.4984,33.9785,6111.24,!1,110.78,311.61,-.33,null,6179.82,"6266",!1,0],["abbf2e","RPA3609 ","United States",1679397416,1679397418,-74.166,40.6907,-121.92,!1,44.17,206.27,-.33,null,-22.86,"1072",!1,0],["a7e93b","FFT1247 ","United States",1679397462,1679397462,-85.0794,28.7096,9753.6,!1,207.38,293.39,0,null,10096.5,"5421",!1,0],["ab7644","N838C   ","United States",1679397462,1679397462,-78.8598,39.0131,8534.4,!1,232.51,28.55,0,null,8503.92,"2542",!1,0],["151d8e","AFL631  ","Russian Federation",1679397147,1679397149,32.9343,42.1285,10668,!1,233.63,84.44,.33,null,10668,null,!1,0],["89621a","UAE3MV  ","United Arab Emirates",1679397462,1679397462,-2.808,40.5361,11277.6,!1,212.86,248.89,0,null,11506.2,"4024",!1,0],["ab6316","SWA727  ","United States",1679397462,1679397462,-84.3116,33.336,4152.9,!1,174.81,193.79,16.58,null,4229.1,null,!1,0],["49521a","TAP33NC ","Portugal",1679397462,1679397462,-9.0266,39.9817,7010.4,!1,220.16,188.74,0,null,7239,null,!1,0],["34304f","ECKJQ   ","Spain",1679397394,1679397394,2.0843,41.3023,null,!0,10.8,241.88,null,null,null,null,!1,0],["aaffcc","CST77   ","United States",1679397462,1679397462,-81.8834,27.8081,11887.2,!1,208.89,33.14,-.33,null,12298.68,"7472",!1,0],["a1501e","LJY712  ","United States",1679397462,1679397462,-80.7511,32.9034,7475.22,!1,135.15,260.36,12.35,null,7604.76,null,!1,0],["a2e646","SWA660  ","United States",1679397462,1679397462,-104.6047,39.7058,3406.14,!1,152.03,159.6,16.58,null,3314.7,null,!1,0],["a0ecdb","N159NS  ","United States",1679397462,1679397462,-84.814,33.8266,4747.26,!1,174.1,261.85,15.93,null,4846.32,"2017",!1,0],["adc9b6","JBU924  ","United States",1679397462,1679397462,-88.8936,40.2197,10050.78,!1,247.17,75.91,.33,null,9936.48,"7202",!1,0],["45e593","BIO14   ","Denmark",1679397462,1679397462,-5.9558,53.5597,518.16,!1,57.52,259.7,.65,null,464.82,"0437",!1,0],["4bb1c4","THY46QV ","Turkey",1679397462,1679397462,6.8417,50.1985,9913.62,!1,253.33,95.71,5.2,null,9974.58,"0115",!1,0],["7105ad","SVA215  ","Saudi Arabia",1679397462,1679397462,11.7595,49.1575,11574.78,!1,227.48,316.92,.33,null,11628.12,"1000",!1,0],["4baaca","THY6KF  ","Turkey",1679397462,1679397462,8.7553,44.1083,11216.64,!1,238.4,70.2,4.55,null,11369.04,"0410",!1,0],["7105ab","SVA127  ","Saudi Arabia",1679397462,1679397462,7.2772,46.211,11582.4,!1,222.89,300.06,-.33,null,11719.56,"1000",!1,0],["48455a","KLM20H  ","Kingdom of the Netherlands",1679397462,1679397462,.1585,47.048,11582.4,!1,238.55,22.31,0,null,11590.02,"1000",!1,0],["495211","TAP39H  ","Portugal",1679397461,1679397462,-1.3258,50.6013,8077.2,!1,197.9,225.63,9.1,null,8069.58,"5252",!1,0],["48455e","KLM591  ","Kingdom of the Netherlands",1679397461,1679397462,8.0369,42.3493,10058.4,!1,256.16,203.68,0,null,10264.14,"3145",!1,0],["3d489a","DEZTA   ","Germany",1679397462,1679397462,11.9524,47.6804,2430.78,!1,46.53,264.29,0,null,2499.36,"4453",!1,0],["48455f","KLM791  ","Kingdom of the Netherlands",1679397462,1679397462,-11.4029,44.7069,9753.6,!1,244.48,224.15,0,null,9966.96,null,!1,0],["ab6339","SWA444  ","United States",1679397462,1679397462,-86.9344,33.0837,12192,!1,194.45,250.37,0,null,12352.02,"2051",!1,0],["abd971","SWA3279 ","United States",1679397462,1679397462,-92.6068,41.4008,10972.8,!1,196.6,262.63,0,null,10797.54,"3140",!1,0],["484555","KLM39W  ","Kingdom of the Netherlands",1679397462,1679397462,1.4206,43.5772,411.48,!1,72.66,324.51,-2.93,null,472.44,"1000",!1,0],["a2d382","UPS962  ","United States",1679397462,1679397462,-122.2313,37.714,null,!0,8.23,340.31,null,null,null,"7360",!1,0],["a0e0fb","FDX1508 ","United States",1679397459,1679397459,-102.5038,35.2164,10363.2,!1,188.39,268.12,0,null,10477.5,"5603",!1,0],["484556","KLM86N  ","Kingdom of the Netherlands",1679397461,1679397462,1.0035,46.4083,10972.8,!1,240.49,357.43,0,null,10980.42,"5515",!1,0],["8a0583","WON1774 ","Indonesia",1679397462,1679397462,103.6226,.7811,3931.92,!1,109.52,260.54,2.93,null,4122.42,null,!1,0],["896211","UAE12   ","United Arab Emirates",1679397461,1679397462,15.1046,47.4435,11277.6,!1,266.75,136.64,0,null,11292.84,"2713",!1,0],["34568a","VLG709F ","Spain",1679397462,1679397462,2.8308,42.4733,7726.68,!1,199.1,179.56,-7.8,null,7962.9,"2104",!1,0],["a3904c","FFT1047 ","United States",1679397462,1679397462,-81.8736,35.7222,11277.6,!1,229.29,170.05,0,null,11308.08,"4170",!1,0],["884213","BKP166  ","Thailand",1679397462,1679397462,100.6428,13.293,3954.78,!1,183.34,38.74,-9.1,null,4183.38,"4431",!1,0],["89620b","UAE35   ","United Arab Emirates",1679397454,1679397460,-1.7061,55.0372,null,!0,0,241.88,null,null,null,"3244",!1,0],["89620a","UAE36K  ","United Arab Emirates",1679397461,1679397462,13.7856,39.6066,11887.2,!1,260.67,103.35,0,null,11993.88,null,!1,0],["403147","GWHRL   ","United Kingdom",1679397178,1679397178,-3.2067,50.8509,525.78,!1,39.61,90,.33,null,533.4,null,!1,0],["345691","IBE32EG ","Spain",1679397462,1679397462,-1.9945,41.0373,8625.84,!1,260.62,74.43,6.5,null,8846.82,null,!1,0],["345692","IBE30FB ","Spain",1679397462,1679397462,-8.4045,41.0182,1744.98,!1,140.25,255.56,-5.2,null,1882.14,null,!1,0],["896217","UAE59   ","United Arab Emirates",1679397462,1679397462,11.7015,52.8315,8016.24,!1,217.17,314.9,-8.13,null,8061.96,"3246",!1,0],["485873","KLM1994 ","Kingdom of the Netherlands",1679397462,1679397462,14.8705,51.2093,10972.8,!1,194.21,291.6,-.33,null,10934.7,"1000",!1,0],["485871","KLM1486 ","Kingdom of the Netherlands",1679397462,1679397462,4.2592,52.4684,2506.98,!1,142.18,63.34,-5.85,null,2514.6,"4610",!1,0],["485876","KLM37Q  ","Kingdom of the Netherlands",1679397462,1679397462,7.2018,50.6888,11277.6,!1,214.98,151.72,-.33,null,11300.46,"3166",!1,0],["abb325","PAC213  ","United States",1679397445,1679397445,-93.6038,48.8624,10363.2,!1,230.82,334.81,0,null,9989.82,null,!1,0],["896219","UAE5DC  ","United Arab Emirates",1679397462,1679397462,14.7365,50.043,2682.24,!1,134.88,331.77,-5.2,null,2758.44,"1000",!1,0],["485875","KLM11G  ","Kingdom of the Netherlands",1679397461,1679397462,11.1676,44.8387,2362.2,!1,151.43,200.9,-10.4,null,2461.26,"1000",!1,0],["aa6914","AAL109  ","United States",1679397461,1679397462,-9.911,53.728,11582.4,!1,232.88,295.38,0,null,11506.2,"7360",!1,0],["89620d","UAE185  ","United Arab Emirates",1679397462,1679397463,2.9335,41.2305,2880.36,!1,141.47,276.89,-3.9,null,3017.52,null,!1,0],["884208","BKP935  ","Thailand",1679397421,1679397421,102.056,12.9452,8176.26,!1,234.69,113.92,3.9,null,8587.74,"0736",!1,0],["884202","BKP169  ","Thailand",1679397462,1679397462,100.6593,12.357,8374.38,!1,217.68,181.49,7.48,null,8862.06,"4501",!1,0],["7380c0","ELY026  ","Israel",1679397437,1679397453,33.8873,32.6545,4419.6,!1,187.28,150.55,-8.78,null,4518.66,"7503",!1,0],["7380c5","ELY007  ","Israel",1679397294,1679397294,34.8807,32.008,null,!0,9.26,28.12,null,null,null,null,!1,0],["7380c3","ELY005  ","Israel",1679397462,1679397462,-107.2556,51.162,11582.4,!1,256.39,198,0,null,11148.06,null,!1,0],["abd994","SWA473  ","United States",1679397462,1679397463,-95.3965,40.4601,10972.8,!1,206.68,276.72,0,null,10820.4,"6717",!1,0],["7380c7","ELY008  ","Israel",1679397462,1679397462,15.9001,43.5357,11887.2,!1,267.21,127.33,-.33,null,11932.92,"1140",!1,0],["a9b43f","AAL1724 ","United States",1679397227,1679397227,-77.0385,38.8488,null,!0,5.92,267.19,null,null,null,"0365",!1,0],["a4000f","DAL563  ","United States",1679397462,1679397462,-97.8761,32.6668,7216.14,!1,179.78,264.75,12.68,null,7368.54,null,!1,0],["ac7c52","SWA196  ","United States",1679397462,1679397462,-84.668,33.7328,1623.06,!1,130.67,270.23,-3.9,null,1706.88,"5213",!1,0],["4785bf","FIN946  ","Norway",1679397462,1679397462,21.571,66.5817,7620,!1,185.66,165.89,0,null,7078.98,null,!1,0],["ad9000","NKS934  ","United States",1679397462,1679397462,-83.0379,34.0006,11285.22,!1,247.92,166.19,0,null,11407.14,"4115",!1,0],["a4cfc7","N409TP  ","United States",1679397461,1679397462,-82.1735,26.7574,1249.68,!1,54.37,55.41,-.33,null,1310.64,null,!1,0],["344344","IBE6124 ","Spain",1679397462,1679397462,-7.3061,40.8692,9753.6,!1,258.79,110.24,0,null,9974.58,null,!1,0],["781093","CXA806  ","China",1679397462,1679397462,-149.7,61.0515,10363.2,!1,251.88,313.01,0,null,9814.56,null,!1,0],["344345","IBE6123 ","Spain",1679397458,1679397461,-5.0301,40.3506,7452.36,!1,209.07,233.1,5.2,null,7658.1,null,!1,0],["abac48","AAL536  ","United States",1679397462,1679397462,-88.3558,36.2229,9144,!1,178.58,244.76,0,null,9182.1,"2655",!1,0],["ace62a","FDX1770 ","United States",1679397461,1679397461,-109.0133,39.7786,11582.4,!1,202.53,263.29,0,null,11452.86,null,!1,0],["ab635d","SWA170  ","United States",1679397462,1679397462,-87.6954,41.8285,449.58,!1,52.27,233.81,-3.58,null,472.44,"5742",!1,0],["7380cb","ELY315  ","Israel",1679397462,1679397462,6.0209,47.7615,12192,!1,233.03,304.57,-.33,null,12275.82,"7515",!1,0],["7380ca","ELY006  ","Israel",1679397462,1679397462,30.5998,34.4527,11887.2,!1,273.26,121.69,-.33,null,12001.5,"4314",!1,0],["aa8a83","AAL5    ","United States",1679397462,1679397462,-101.1575,34.3122,11887.2,!1,290.87,97.93,0,null,12031.98,"2617",!1,0],["a593a0","AWI3957 ","United States",1679397462,1679397462,-85.2614,35.1127,2529.84,!1,149.02,18.31,12.68,null,2606.04,null,!1,0],["a891fd","RPA3703 ","United States",1679397462,1679397462,-73.4276,43.5431,9380.22,!1,218.29,201.43,-11.05,null,9121.14,"1012",!1,0],["acf975","AAL437  ","United States",1679397462,1679397462,-90.2383,42.5225,8610.6,!1,236.65,90.5,-4.88,null,8481.06,"3655",!1,0],["ac7c67","EDV5274 ","United States",1679397462,1679397462,-73.7114,40.8687,739.14,!1,81.67,342.02,-5.85,null,807.72,"2052",!1,0],["a39099","N329JT  ","United States",1679397462,1679397462,-77.0023,40.1765,777.24,!1,55.94,65.56,-2.28,null,853.44,null,!1,0],["a90f92","NKS59   ","United States",1679397461,1679397462,-80.8782,31.9622,10668,!1,242.73,24.01,0,null,10858.5,null,!1,0],["a34e01","JBU2033 ","United States",1679397462,1679397462,-76.1594,39.8648,11574.78,!1,205.07,227.95,-.33,null,11483.34,"3323",!1,0],["a9b3b5","PHM042  ","United States",1679397462,1679397462,-90.3985,29.3868,441.96,!1,64.12,128.16,0,null,518.16,null,!1,0],["4ca9c2","RYR24JJ ","Ireland",1679397453,1679397462,-6.2496,53.4314,null,!0,1.03,180,null,null,null,null,!1,0],["4ca9c3","RYR48YP ","Ireland",1679397462,1679397462,-.9655,50.2617,8923.02,!1,178.55,13.84,-9.75,null,8938.26,"7452",!1,0],["a9fc34","RPA3468 ","United States",1679397462,1679397462,-76.2642,40.8323,3840.48,!1,192.31,70.79,-.33,null,3848.1,null,!1,0],["a3b808","JBU339  ","United States",1679397332,1679397333,-73.8706,40.7746,null,!0,.64,33.75,null,null,null,null,!1,0],["0c40c7","CEY181  ","Dominican Republic",1679397462,1679397462,-70.1323,18.505,2712.72,!1,131.75,305.3,13.66,null,2857.5,null,!1,0],["4ca9aa","RYR9273 ","Ireland",1679397462,1679397462,4.7962,51.696,3307.08,!1,153.52,98.67,-5.53,null,3345.18,"4617",!1,0],["a8ef81","NKS1676 ","United States",1679397462,1679397462,-80.2926,41.7015,10668,!1,257.92,105.98,0,null,10485.12,"7462",!1,0],["a09e52","N139TJ  ","United States",1679397462,1679397462,-75.2619,40.2151,205.74,!1,57.69,351.8,0,null,297.18,null,!1,0],["846adc","IBX19   ","Japan",1679397462,1679397462,138.2907,37.189,11277.6,!1,286.44,62.97,0,null,11353.8,"2055",!1,0],["7585cc","CEB456  ","Philippines",1679397314,1679397314,121.0149,14.506,null,!0,36.01,61.88,null,null,null,null,!1,0],["a10e46","UAL1338 ","United States",1679397462,1679397462,-85.5659,40.2941,8343.9,!1,232.65,336.27,-4.88,null,8298.18,"7114",!1,0],["ab5afe","SWA1469 ","United States",1679397462,1679397462,-97.0732,33.5399,12192,!1,186.66,318.8,.33,null,12329.16,"2576",!1,0],["4ca9d1","","Ireland",null,1679397461,null,null,null,!1,220.51,16.96,2.6,null,null,null,!1,0],["a3b812","N339JM  ","United States",1679397462,1679397462,22.9401,38.0998,12192,!1,230.29,303.8,.33,null,12283.44,"7212",!1,0],["4ca9d4","RYR96ZE ","Ireland",1679397462,1679397462,-4.1783,36.8693,4427.22,!1,190.3,25.46,10.4,null,4610.1,null,!1,0],["a6a354","JIA5359 ","United States",1679397462,1679397462,-89.6606,32.4338,3710.94,!1,184.63,61.36,13.66,null,3794.76,null,!1,0],["a16ebc","UAL433  ","United States",1679397462,1679397462,-80.7051,43.8138,11582.4,!1,209.66,279.46,0,null,11308.08,"3510",!1,0],["4785c2","WIF8W   ","Norway",1679397462,1679397462,12.0509,64.4384,7620,!1,151.33,22.38,0,null,7345.68,null,!1,0],["ac3477","DAL1642 ","United States",1679397462,1679397462,-82.7892,27.5859,3672.84,!1,184.79,1.91,12.68,null,3810,"2116",!1,0],["a7d666","N604D   ","United States",1679397462,1679397462,-75.5944,38.8895,7002.78,!1,237.19,71.41,0,null,6972.3,null,!1,0],["4ca9bc","EIN381  ","Ireland",1679397462,1679397462,-8.2112,52.6642,2590.8,!1,137.69,303.57,-14.31,null,2545.08,"6005",!1,0],["4ca9bd","ITY1701 ","Ireland",1679397462,1679397462,10.0628,44.838,7947.66,!1,223.58,142.76,7.48,null,8092.44,"4671",!1,0],["aaf47d","","United States",null,1679397461,null,null,null,!1,266.67,250.62,0,null,null,null,!1,0],["345646","VLG7844 ","Spain",1679397462,1679397462,14.8311,38.5405,10675.62,!1,254.22,114.13,0,null,10789.92,"5511",!1,0],["ac81d2","AAL668  ","United States",1679397462,1679397463,-81.524,28.5744,2049.78,!1,139.33,229.19,0,null,2133.6,null,!1,0],["345642","VLG65PV ","Spain",1679397462,1679397462,1.236,39.0709,3528.06,!1,186.3,1.58,8.78,null,3695.7,null,!1,0],["4ca9a9","RYR88HP ","Ireland",1679397462,1679397462,3.1019,49.5138,11582.4,!1,225.76,321.2,0,null,11597.64,"5740",!1,0],["ac2154","SWA1445 ","United States",1679397462,1679397462,-90.3036,38.7149,792.48,!1,110.72,123.25,7.15,null,807.72,null,!1,0],["abaadd","SWA1031 ","United States",1679397463,1679397463,-84.2512,33.7327,3528.06,!1,143.02,269.79,0,null,3604.26,"3666",!1,0],["aa435b","AAL2138 ","United States",1679397441,1679397443,-73.7589,45.457,null,!0,4.12,309.38,null,null,null,null,!1,0],["485814","KLM44H  ","Kingdom of the Netherlands",1679397461,1679397462,9.7662,56.8805,3627.12,!1,148.68,210.11,13.98,null,3619.5,"3514",!1,0],["acd1b9","N925LB  ","United States",1679397342,1679397343,-74.2996,41.7986,1371.6,!1,97.32,153.98,-4.88,null,1394.46,null,!1,0],["506f22","LSV602  ","Slovenia",1679397219,1679397221,14.1521,46.3912,1729.74,!1,62.94,315.99,-16.26,null,1821.18,"3345",!1,0],["a10e21","UAL2326 ","United States",1679397407,1679397407,-87.8911,41.9679,null,!0,7.72,56.25,null,null,null,"2461",!1,0],["ac2173","SWA3364 ","United States",1679397461,1679397462,-80.4996,38.7838,10972.8,!1,206.3,246.95,.33,null,10904.22,"7152",!1,0],["3c4a01","DLH3V   ","Germany",1679397462,1679397462,2.7492,53.0006,10805.16,!1,238.29,286.56,2.6,null,10744.2,"0127",!1,0],["7c617c","RSCU206 ","Australia",1679397459,1679397460,151.5524,-33.1486,358.14,!1,68.78,33.1,.33,null,518.16,"1472",!1,0],["a7d682","NLE104  ","United States",1679397462,1679397462,-74.5626,39.4497,-121.92,!1,5.3,119.05,0,null,-15.24,null,!1,0],["ac7afc","N903GW  ","United States",1679397462,1679397463,-84.5062,36.2532,7315.2,!1,179.69,330.5,0,null,7360.92,null,!1,0],["a188ba","FDY489  ","United States",1679397461,1679397461,-90.4322,40.5095,2712.72,!1,99.08,42.05,-.98,null,2667,null,!1,0],["4b5c65","ORION1  ","Switzerland",1679397462,1679397462,8.5565,47.452,null,!0,12.86,154.69,null,null,null,null,!1,0],["89627b","ETD6DU  ","United Arab Emirates",1679397461,1679397461,50.0669,26.819,9159.24,!1,184.97,288.49,0,null,9273.54,null,!1,0],["3dd2cb","GAM655A ","Germany",1679397451,1679397453,9.0774,52.2809,null,!0,0,225,null,null,null,null,!1,0],["c058f7","NOJ53   ","Canada",1679397462,1679397462,-83.3273,41.9689,6949.44,!1,149.62,232.26,8.13,null,6880.86,"5763",!1,0],["4bb324","THY4EJ  ","Turkey",1679397211,1679397445,22.9575,46.9393,11277.6,!1,236.43,138.09,0,null,11201.4,"5566",!1,0],["a0b8fb","AAL2677 ","United States",1679397462,1679397462,-91.8031,31.0047,8534.4,!1,207.92,293.01,0,null,8770.62,"1042",!1,0],["abaafe","SWA604  ","United States",1679397445,1679397446,-74.2201,25.1678,10972.8,!1,217.54,314.43,0,null,11498.58,null,!1,0],["4ca9ec","RYR6403 ","Ireland",1679397462,1679397462,12.4511,51.5578,11582.4,!1,206.52,284.87,0,null,11574.78,"3105",!1,0],["4ca9ed","RYR65UU ","Ireland",1679397462,1679397462,6.1624,54.0692,10972.8,!1,202.31,203.37,0,null,10904.22,"0746",!1,0],["345615","ANE54JR ","Spain",1679397460,1679397460,-4.5568,38.5683,8229.6,!1,208.88,193.39,.33,null,8503.92,"5144",!1,0],["4ca9ee","ITY863  ","Ireland",1679397462,1679397462,11.7384,41.0385,4876.8,!1,163.29,7.06,-3.58,null,4998.72,null,!1,0],["ac1a95","SWA466  ","United States",1679397462,1679397462,-84.6628,34.5656,11582.4,!1,216.95,347.68,0,null,11673.84,"7471",!1,0],["a318ea","SWA3590 ","United States",1679397462,1679397462,-71.5182,42.8727,441.96,!1,91.01,42.71,-4.23,null,518.16,"0520",!1,0],["a7d630","AAL952  ","United States",1679397462,1679397462,-82.897,35.9304,9281.16,!1,253.78,117.14,-10.08,null,9311.64,"4012",!1,0],["a3ec93","DAL1069 ","United States",1679397461,1679397461,-95.1394,29.9432,1897.38,!1,153.76,85.59,11.7,null,1905,null,!1,0],["aae191","BLU99   ","United States",1679397462,1679397462,-86.6087,40.2163,3573.78,!1,157.53,314.07,0,null,3558.54,"4423",!1,0],["a1288b","FDX1468 ","United States",1679397462,1679397462,-109.2722,39.0149,10972.8,!1,184.18,270.48,0,null,10888.98,"5633",!1,0],["a34e40","ABX845  ","United States",1679397185,1679397283,-79.2161,33.0354,10972.8,!1,265.98,126.43,0,null,11109.96,"6626",!1,0],["a438c3","DAL1281 ","United States",1679397462,1679397462,-102.2838,34.3363,11582.4,!1,188.82,314.01,.33,null,11742.42,"4335",!1,0],["739546","YADID23 ","Israel",1679397233,1679397289,35.2103,32.6717,754.38,!1,122.53,140.96,-.65,null,777.24,"5200",!1,0],["a46e10","KAP410  ","United States",1679397196,1679397196,-70.9983,42.379,-60.96,!1,52.26,200.75,-3.58,null,15.24,null,!1,0],["7c6ca4","NWK2967 ","Australia",1679397462,1679397462,116.7876,-29.8718,10972.8,!1,228.02,191.06,0,null,11551.92,null,!1,0],["a5e3e4","EDV5524 ","United States",1679397462,1679397462,-76.1648,38.5538,9441.18,!1,256.06,38.23,-.33,null,9418.32,"0775",!1,0],["a4b0bb","DAL20   ","United States",1679397462,1679397462,-9.2422,57.6464,11948.16,!1,251.46,131.52,2.6,null,11780.52,null,!1,0],["abfa8e","FDX92   ","United States",1679397462,1679397462,-66.1112,44.8049,10668,!1,279.85,59.14,0,null,10408.92,"4044",!1,0],["a438b0","DAL320  ","United States",1679397462,1679397462,-93.7493,41.5133,11277.6,!1,251.36,135.08,0,null,11094.72,null,!1,0],["ab7613","AAL116  ","United States",1679397462,1679397462,-112.5547,34.1223,11887.2,!1,313.13,84.63,.33,null,12016.74,"2644",!1,0],["a09239","RPA4573 ","United States",1679397462,1679397462,-73.8348,40.8291,205.74,!1,60.97,211.54,-3.58,null,289.56,"5642",!1,0],["440bb0","OEFZZ   ","Austria",1679397462,1679397462,9.9077,47.5088,2019.3,!1,65.5,237.18,0,null,2118.36,"4266",!1,0],["abd90c","SWA3634 ","United States",1679397462,1679397462,-90.9838,38.7393,2560.32,!1,156.72,75.55,-7.15,null,2545.08,"4733",!1,0],["440bb1","GAC452V ","Austria",1679397462,1679397463,12.0631,47.4227,3543.3,!1,121.5,238.33,-7.48,null,3634.74,"1000",!1,0],["a1286c","DAL109  ","United States",1679397462,1679397462,-10.1307,43.9479,10058.4,!1,212.27,308.7,0,null,10271.76,null,!1,0],["aaa616","UAL1228 ","United States",1679397461,1679397462,-77.2778,39.6096,2926.08,!1,142.51,208.69,0,null,2971.8,"3351",!1,0],["3dd2cf","GAM003A ","Germany",1679397462,1679397462,9.0736,52.2786,114.3,!1,27.66,260.36,3.58,null,175.26,null,!1,0],["4ca9df","ITY630  ","Ireland",1679397462,1679397463,1.2202,41.6132,11277.6,!1,208.38,284.59,0,null,11513.82,"4036",!1,0],["3dd2cd","GAM685A ","Germany",1679397441,1679397443,9.0804,52.2818,null,!0,.06,255.94,null,null,null,null,!1,0],["a90f3d","N683K   ","United States",1679397462,1679397462,-85.0415,33.6888,7490.46,!1,175.13,244.79,10.08,null,7589.52,"0220",!1,0],["477d7c","FRICTON5","Hungary",1679397244,1679397244,19.2559,47.442,null,!0,8.23,118.12,null,null,null,null,!1,0],["3451da","ANE12GB ","Spain",1679397462,1679397462,-3.5575,40.4504,4465.32,!1,184.05,162.93,9.75,null,4625.34,"5163",!1,0],["4841aa","TRA5022 ","Kingdom of the Netherlands",1679397463,1679397463,-.3788,45.5214,11582.4,!1,235.16,25.67,0,null,11643.36,"1000",!1,0],["a6dc2b","IFL541  ","United States",1679397462,1679397462,-85.1887,42.4543,10363.2,!1,183.28,272.25,.33,null,10195.56,"5716",!1,0],["ad474c","DAL2533 ","United States",1679397461,1679397462,-82.3989,35.3377,10363.2,!1,202.63,225.51,0,null,10416.54,"3060",!1,0],["4841ad","KLM753  ","Kingdom of the Netherlands",1679397462,1679397462,-7.2548,53.3177,11277.6,!1,270.85,77.49,0,null,11224.26,"6251",!1,0],["3571ca","MRL25   ","Spain",1679397462,1679397462,-.7838,37.797,76.2,!1,60.93,229.45,-3.9,null,182.88,null,!1,0],["a3338c","SKW4506 ","United States",1679397162,1679397162,-87.8949,41.9873,null,!0,3.09,180,null,null,null,null,!1,0],["4079f7","BAW51P  ","United Kingdom",1679397461,1679397462,-6.3062,40.9781,10972.8,!1,232.47,45.81,.33,null,11178.54,"2273",!1,0],["3571cc","MRL26   ","Spain",1679397240,1679397240,-.8166,37.7728,null,!0,.9,317.81,null,null,null,null,!1,0],["4841c3","MPH6516 ","Kingdom of the Netherlands",1679397462,1679397463,4.493,52.5063,1341.12,!1,115.88,57.51,-4.55,null,1341.12,"6254",!1,0],["4601f5","FIN3KC  ","Finland",1679397462,1679397462,26.55,61.5645,7010.4,!1,127.46,26.36,0,null,6697.98,"0442",!1,0],["a8f9f2","FDX1544 ","United States",1679397462,1679397462,-95.5608,44.964,10965.18,!1,227.19,335.23,0,null,10706.1,"1550",!1,0],["3451cf","AEA194  ","Spain",1679397462,1679397462,-8.166,41.7187,10355.58,!1,254.58,98.83,-.33,null,10576.56,null,!1,0],["c06229","CGLEM   ","Canada",1679397462,1679397462,-71.1898,46.6955,5486.4,!1,146.83,8.87,7.15,null,5273.04,null,!1,0],["4601f7","FIN285  ","Finland",1679397462,1679397462,25.7151,61.9278,2606.04,!1,130.31,18.65,-5.53,null,2438.4,null,!1,0],["e49889","GLO1543 ","Brazil",1679397428,1679397428,-46.1555,-22.0388,8526.78,!1,190.69,190.89,-12.35,null,9151.62,null,!1,0],["47ba1d","SAS69E  ","Norway",1679397462,1679397462,18.1228,60.3512,8983.98,!1,204.18,19.12,7.48,null,8785.86,null,!1,0],["aa8469","SWA782  ","United States",1679397462,1679397462,-85.3501,29.6346,10972.8,!1,198.23,286.74,0,null,11292.84,"1043",!1,0],["440a8d","TAY816  ","Austria",1679397462,1679397462,17.3333,47.5447,10972.8,!1,233.77,295.83,0,null,10911.84,"1000",!1,0],["3451d8","","Spain",1679397460,1679397460,-6.7605,42.3864,9448.8,!1,210.32,319.96,-.33,null,9616.44,null,!1,0],["3451d9","ANE29HN ","Spain",1679397462,1679397462,.9966,41.334,9761.22,!1,250.61,91.41,-.65,null,10005.06,null,!1,0],["aa9793","SWA2256 ","United States",1679397462,1679397462,-73.676,39.5982,9151.62,!1,206.3,217.3,-.33,null,9067.8,"1442",!1,0],["a6a6e6","N528CP  ","United States",1679397462,1679397462,-66.1838,18.4803,259.08,!1,64.85,268.18,.33,null,274.32,null,!1,0],["a03510","N112QS  ","United States",1679397455,1679397455,12.5972,41.7917,null,!0,0,67.5,null,null,null,null,!1,0],["4bb264","THY5LX  ","Turkey",1679397462,1679397462,3.8417,50.9715,10050.78,!1,226.97,119.76,-.33,null,10043.16,"4707",!1,0],["3ae5ff","FLY4    ","France",1679397350,1679397350,2.3775,48.727,null,!0,8.75,75.94,null,null,null,null,!1,0],["3451d5","VLG13MV ","Spain",1679397462,1679397462,-6.3087,35.2365,10972.8,!1,247.93,41.13,0,null,11353.8,null,!1,0],["4601fb","FIN9VM  ","Finland",1679397462,1679397462,23.3355,61.6847,5181.6,!1,105.23,331.05,.33,null,4937.76,null,!1,0],["a44031","DAL2673 ","United States",1679397462,1679397462,-75.5347,40.2389,10363.2,!1,208.14,230.01,.33,null,10226.04,"3540",!1,0],["43c925","LEE93   ","United Kingdom",1679397462,1679397462,-1.5374,54.3197,449.58,!1,76.67,286.37,-9.75,null,342.9,"0410",!1,0],["a919cd","DAL1008 ","United States",1679397198,1679397198,-84.4248,33.6327,null,!0,8.75,53.44,null,null,null,"6565",!1,0],["a403df","AAL1230 ","United States",1679397462,1679397462,-98.2787,29.9588,4861.56,!1,209.58,9.32,14.31,null,4983.48,null,!1,0],["478454","LNJMP   ","Norway",1679397462,1679397462,8.364,51.5706,1501.14,!1,82.64,24.65,.33,null,1562.1,"7742",!1,0],["47ba0d","SAS2967 ","Norway",1679397461,1679397462,19.9656,51.379,11277.6,!1,253.68,162.78,0,null,11170.92,"1172",!1,0],["8a0805","LNI075  ","Indonesia",1679397456,1679397460,100.4924,.4751,11887.2,!1,241.3,127.72,0,null,12611.1,null,!1,0],["4bab2f","THY1JB  ","Turkey",1679397462,1679397462,24.8309,42.8345,9753.6,!1,214.71,290.48,0,null,9806.94,null,!1,0],["43c922","VYT96   ","United Kingdom",1679397462,1679397462,-4.0387,53.2736,2933.7,!1,101.43,92.33,-9.75,null,2887.98,"3747",!1,0],["4bab2c","THY3LG  ","Turkey",1679397458,1679397458,21.718,42.9691,10965.18,!1,212.55,265.7,0,null,10995.66,null,!1,0],["4841a9","TRA16E  ","Kingdom of the Netherlands",1679397445,1679397445,5.3904,51.4586,null,!0,3.6,123.75,null,null,null,"1047",!1,0],["4079d0","CFE9KJ  ","United Kingdom",1679397462,1679397462,-6.436,53.403,3406.14,!1,153.34,157.31,8.13,null,3345.18,"7734",!1,0],["a630c6","N4984T  ","United States",1679397457,1679397457,-77.8937,37.2848,1257.3,!1,46.53,198.03,-.33,null,1341.12,null,!1,0],["020118","MAC368  ","Morocco",1679397462,1679397462,.9744,44.4434,11894.82,!1,223.54,189.94,0,null,12024.36,"7620",!1,0],["abe124","SWA2800 ","United States",1679397181,1679397181,-87.745,41.7883,null,!0,2.06,132.19,null,null,null,"2067",!1,0],["424625","VPBLU   ","United Kingdom",1679397316,1679397316,20.1962,40.3539,14317.98,!1,248.58,323.41,-.33,null,14325.6,"2037",!1,0],["a69f9d","JIA5600 ","United States",1679397462,1679397462,-80.8317,35.2175,2293.62,!1,138.73,175.96,-8.45,null,2369.82,"7140",!1,0],["4079d3","CFE57J  ","United Kingdom",1679397462,1679397462,-3.1162,54.6595,10668,!1,229.55,151.19,.33,null,10523.22,"4621",!1,0],["4ca8ec","ITY1713 ","Ireland",1679397401,1679397442,14.649,37.6462,3101.34,!1,148.87,177.03,-13,null,3185.16,"4645",!1,0],["ad2114","N945PV  ","United States",1679397385,1679397449,-77.204,36.9819,1211.58,!1,93.09,290.04,-.98,null,1303.02,null,!1,0],["4bab47","THY42YP ","Turkey",1679397462,1679397462,28.4836,41.4913,3268.98,!1,153.43,300.86,9.1,null,3314.7,null,!1,0],["e49866","AZU4800 ","Brazil",1679397462,1679397462,-47.9959,-15.8843,1325.88,!1,70.12,86.21,-3.58,null,1394.46,null,!1,0],["4bab52","THY5XD  ","Turkey",1679397462,1679397462,16.4217,45.6634,10972.8,!1,209.73,285.95,0,null,11003.28,null,!1,0],["a0c075","AAL430  ","United States",1679397462,1679397462,-82.9505,35.274,8298.18,!1,213.31,266.82,14.96,null,8343.9,null,!1,0],["abda54","DAL2872 ","United States",1679397462,1679397462,-86.5412,42.6377,10363.2,!1,203.4,291.05,0,null,10180.32,"7075",!1,0],["a81000","UAL2122 ","United States",1679397462,1679397462,-74.0615,40.2707,3429,!1,150.85,203.94,6.83,null,3436.62,"2773",!1,0],["aa1aab","N750GM  ","United States",1679397463,1679397463,-71.6361,21.8393,13716,!1,247.35,122.17,0,null,14317.98,null,!1,0],["c012ba","CJT952  ","Canada",1679397462,1679397462,-88.2749,33.8591,11590.02,!1,210.14,208.2,0,null,11704.32,"6707",!1,0],["a8dfc7","DAL1047 ","United States",1679397461,1679397461,-81.3207,26.4056,4930.14,!1,192.21,127.61,-9.75,null,5158.74,"2523",!1,0],["a81005","UAL2464 ","United States",1679397462,1679397462,-78.1279,36.9977,11582.4,!1,249.37,24.24,0,null,11582.4,"0703",!1,0],["a5d68a","UAL1217 ","United States",1679397462,1679397462,-98.9673,41.2843,10363.2,!1,207.89,268.72,0,null,10187.94,null,!1,0],["a87cbb","NKS1615 ","United States",1679397462,1679397462,-83.4689,42.2763,2118.36,!1,149.55,27.01,-11.38,null,2148.84,"2617",!1,0],["84bd16","SFJ55   ","Japan",1679397462,1679397462,139.7963,35.5225,457.2,!1,73.85,148.97,13.98,null,457.2,"0477",!1,0],["c012bd","WJA611  ","Canada",1679397462,1679397462,-81.1089,47.9382,11582.4,!1,210.14,298.2,0,null,11163.3,"6203",!1,0],["4ca8fa","NOS130  ","Ireland",1679397462,1679397462,7.54,44.9813,6545.58,!1,232.08,94.07,-5.53,null,6713.22,"1000",!1,0],["400684","BAW185  ","United Kingdom",1679397462,1679397462,-.7047,51.7664,3078.48,!1,153.72,355.78,9.75,null,3055.62,"1457",!1,0],["400683","BAW165K ","United Kingdom",1679397461,1679397461,28.323,38.7875,11887.2,!1,261.43,130.05,0,null,11940.54,"7571",!1,0],["a69f3f","N526AG  ","United States",1679397462,1679397462,6.4953,49.0731,8229.6,!1,106.95,172.26,0,null,8328.66,"4115",!1,0],["a07bb3","FDX204  ","United States",1679397462,1679397462,-80.1211,25.6426,2773.68,!1,124.45,305.07,-5.85,null,2895.6,null,!1,0],["a6dc08","JIA5495 ","United States",1679397412,1679397462,-81.756,37.3167,9144,!1,212.48,179.31,0,null,9159.24,"7451",!1,0],["738284","ISR662  ","Israel",1679397461,1679397462,51.7401,26.2827,10363.2,!1,164.96,296.49,0,null,10599.42,null,!1,0],["a7bfa0","JBU136  ","United States",1679397462,1679397463,-90.5646,38.6754,10058.4,!1,259.46,68.11,0,null,10005.06,"6710",!1,0],["490d0a","NJE315D ","Portugal",1679397290,1679397290,-1.3214,51.8323,null,!0,14.4,191.25,null,null,null,"2231",!1,0],["c01ec6","FLE325  ","Canada",1679397462,1679397462,-79.0727,45.8755,11582.4,!1,203.02,286.18,.33,null,11231.88,"6552",!1,0],["a4b64b","RPA4346 ","United States",1679397462,1679397462,-77.5131,40.2303,10363.2,!1,189.74,261.74,-.33,null,10248.9,"1651",!1,0],["4bb28b","THY4ZF  ","Turkey",1679397375,1679397381,30.7943,36.9172,10363.2,!1,206.69,356.43,0,null,10492.74,"5661",!1,0],["4bb28c","THY6XV  ","Turkey",1679397462,1679397462,16.4163,44.1661,10363.2,!1,223.21,277.68,-.33,null,10416.54,"7750",!1,0],["4bb28a","THY9CS  ","Turkey",1679397462,1679397462,18.1765,57.1983,10363.2,!1,232.6,200.32,0,null,10241.28,"5602",!1,0],["c8280d","PLC1    ","New Zealand",1679397462,1679397462,174.8255,-36.9077,586.74,!1,39.53,218.66,.33,null,617.22,null,!1,0],["490d07","NJE2BX  ","Portugal",1679397462,1679397462,9.7345,49.6017,9448.8,!1,247.59,144.13,0,null,9547.86,"7714",!1,0],["abf486","HAF403  ","United States",1679397461,1679397462,23.5856,38.0756,2735.58,!1,106.56,342,0,null,2827.02,"1445",!1,0],["a58672","UAL1666 ","United States",1679397462,1679397462,-74.0842,40.8193,640.08,!1,98.27,205.09,0,null,708.66,"4263",!1,0],["44cdcb","BEL2QY  ","Belgium",1679397462,1679397462,-2.18,46.3072,10668,!1,231.57,220.95,0,null,10736.58,"1052",!1,0],["490d05","NJE598Y ","Portugal",1679397462,1679397462,-.8384,51.2805,12496.8,!1,245.45,149.24,.33,null,12504.42,"5240",!1,0],["a82307","SWQ3601 ","United States",1679397462,1679397462,-98.3635,29.6206,3368.04,!1,139.13,304.45,11.38,null,3444.24,null,!1,0],["4bb268","THY3JY  ","Turkey",1679397462,1679397462,22.9375,53.9729,9761.22,!1,236.93,192.29,0,null,9608.82,"5611",!1,0],["4bb275","THY68P  ","Turkey",1679397462,1679397462,10.4313,51.2267,10965.18,!1,202.23,296.11,.33,null,11018.52,"1000",!1,0],["4bb273","THY50L  ","Turkey",1679397462,1679397462,14.7492,57.7337,10675.62,!1,242.95,153.33,.33,null,10553.7,"1150",!1,0],["4bb274","THY9MJ  ","Turkey",1679397265,1679397265,28.7288,41.2124,388.62,!1,67.91,359.57,-3.58,null,502.92,"1451",!1,0],["c025d2","CJT991  ","Canada",1679397462,1679397462,-76.5004,43.7675,11277.6,!1,262.22,59.46,0,null,10988.04,"4043",!1,0],["a238a6","","United States",1679397344,1679397351,-93.3973,37.2406,null,!0,1.03,84.38,null,null,null,null,!1,0],["43ea5f","MABJL   ","United Kingdom",1679397462,1679397462,4.3638,47.0857,11582.4,!1,262.05,333.28,0,null,11658.6,"6765",!1,0],["4bb272","THY1MR  ","Turkey",1679397463,1679397463,13.2066,48.7393,10972.8,!1,199.52,309.56,0,null,11026.14,"1000",!1,0],["7585e1","APG606  ","Philippines",1679397462,1679397462,121.7032,12.7027,8343.9,!1,208.11,335.46,-4.88,null,8900.16,null,!1,0],["43ea66","VSB04   ","United Kingdom",1679397462,1679397462,-3.2515,53.7988,2377.44,!1,131.53,346.89,-3.58,null,2293.62,"7750",!1,0],["4bb26e","THY8ZU  ","Turkey",1679397462,1679397462,-3.294,40.7652,3368.04,!1,179.03,68.6,5.2,null,3528.06,null,!1,0],["a15516","AAL548  ","United States",1679397460,1679397461,-81.0883,34.7416,2339.34,!1,120.17,61.35,-6.83,null,2415.54,null,!1,0],["4bb26c","THY9TU  ","Turkey",1679397462,1679397462,3.5685,39.7263,10058.4,!1,209.81,254.5,0,null,10347.96,"7225",!1,0],["7585ed","CEB971  ","Philippines",1679397462,1679397462,121.4365,14.1687,4290.06,!1,201.03,129.39,10.08,null,4594.86,null,!1,0],["4bb26a","THY4CF  ","Turkey",1679397462,1679397462,10.0476,44.471,10675.62,!1,243.7,108.21,-.33,null,10828.02,"0461",!1,0],["4066ce","TOM20T  ","United Kingdom",1679397462,1679397462,.7616,42.4247,10972.8,!1,222.97,346.25,0,null,11170.92,"5343",!1,0],["ae04eb","        ","United States",1679397461,1679397462,16.5924,56.4236,7010.4,!1,186.64,231.27,2.6,null,6979.92,"0130",!1,0],["4bb279","THY6QJ  ","Turkey",1679397462,1679397462,24.5878,43.1229,9738.36,!1,212.36,296.94,0,null,9799.32,null,!1,0],["4bb288","THY2TW  ","Turkey",1679397462,1679397462,2.6033,49.029,281.94,!1,70.71,265.41,-4.23,null,358.14,"6614",!1,0],["4066d1","TOM9DG  ","United Kingdom",1679397457,1679397457,-2.7128,51.3845,null,!0,2.83,87.19,null,null,null,null,!1,0],["4066d0","TOM8FR  ","United Kingdom",1679397460,1679397462,-6.0047,46.5793,10058.4,!1,248.61,200.72,0,null,10165.08,"0525",!1,0],["4bb287","THY38B  ","Turkey",1679397462,1679397462,20.6641,46.0006,10347.96,!1,204.84,298.17,0,null,10302.24,null,!1,0],["a238b9","N242PG  ","United States",1679397426,1679397426,-78.93,43.1095,114.3,!1,50.42,270.58,-3.58,null,167.64,"3474",!1,0],["404166","FFCC021 ","United Kingdom",1679397462,1679397462,-.4404,51.2822,556.26,!1,32.43,221.78,.33,null,541.02,null,!1,0],["896409","ETD79H  ","United Arab Emirates",1679397462,1679397462,12.6092,35.9537,11269.98,!1,256.46,95.76,-.33,null,11483.34,null,!1,0],["a3f844","N355KC  ","United States",1679397462,1679397462,-117.811,47.1273,11285.22,!1,229.86,303.41,-.33,null,10965.18,null,!1,0],["44cdc6","BEL2TH  ","Belgium",1679397462,1679397462,5.1486,50.9524,1943.1,!1,140.14,295.44,-5.85,null,2011.68,"1000",!1,0],["44cdc5","BEL3CM  ","Belgium",1679397462,1679397462,3.7464,50.4297,6461.76,!1,176.73,207.76,5.85,null,6522.72,"7111",!1,0],["44cdc4","BEL1MR  ","Belgium",1679397439,1679397440,-6.3021,43.3669,10668,!1,229.39,220.91,0,null,10820.4,null,!1,0],["a1b86b","N21NX   ","United States",1679397462,1679397462,-92.9805,45.0682,7536.18,!1,127.25,111.59,3.25,null,7383.78,null,!1,0],["020177","MAC224F ","Morocco",1679397462,1679397462,1.2168,44.8026,11887.2,!1,224.88,192.96,0,null,12016.74,"4136",!1,0],["020176","MAC482A ","Morocco",1679397462,1679397462,1.9637,41.2099,11887.2,!1,205.84,228.14,0,null,12115.8,"4050",!1,0],["39916c","FHELM   ","France",1679397202,1679397202,3.8237,48.6147,1402.08,!1,42.82,331.28,4.55,null,1417.32,"7030",!1,0],["44cdca","BEL1LH  ","Belgium",1679397462,1679397462,.6532,51.2894,6781.8,!1,201.6,98.07,13.98,null,6713.22,"2062",!1,0],["89640a","ETD9    ","United Arab Emirates",1679397432,1679397432,50.355,27.032,11582.4,!1,195.47,312.97,.33,null,11803.38,null,!1,0],["a13b1e","FDX1537 ","United States",1679397462,1679397462,-97.2137,26.9764,4861.56,!1,188.83,217.81,-1.95,null,5059.68,"1601",!1,0],["440a49","OEDAF   ","Austria",1679397462,1679397462,12.6761,47.1635,4876.8,!1,69.51,298.27,0,null,4991.1,"1000",!1,0],["43ea1f","MFALZ   ","United Kingdom",1679397462,1679397462,1.3017,51.0931,3741.42,!1,186.61,351.76,-13,null,3756.66,"3047",!1,0],["484299","BKN13   ","Kingdom of the Netherlands",1679397452,1679397452,4.7979,52.3203,null,!0,15.95,126.56,null,null,null,null,!1,0],["a728c1","AAL1982 ","United States",1679397461,1679397462,-81.128,32.0036,10675.62,!1,253.66,19.43,0,null,10873.74,"3657",!1,0],["c8285c","QFA7382 ","New Zealand",1679397462,1679397462,148.5911,-35.2477,10645.14,!1,235.62,52.63,.33,null,11132.82,"4377",!1,0],["a01b56","DAL401  ","United States",1679397462,1679397462,-91.4551,34.4981,11269.98,!1,271.62,66.45,0,null,11361.42,"0536",!1,0],["a64520","N503AL  ","United States",1679397462,1679397462,10.3897,50.4924,7200.9,!1,120.31,113.17,3.9,null,7322.82,"7712",!1,0],["3c0d0c","TUI96W  ","Germany",1679397462,1679397462,2.1875,49.1462,10668,!1,211.94,249.54,-.33,null,10690.86,"1126",!1,0],["467728","SAHKO4  ","Finland",1679397451,1679397451,24.9721,60.3177,null,!0,7.72,315,null,null,null,null,!1,0],["a0e5d7","SKW4759 ","United States",1679397462,1679397462,-85.5792,39.6295,8534.4,!1,231.9,354.91,.33,null,8503.92,null,!1,0],["a082bb","N132BC  ","United States",1679397462,1679397462,-66.2603,18.4312,1066.8,!1,71,293.04,-4.23,null,1127.76,null,!1,0],["781ba7","CES2317 ","China",1679397426,1679397426,108.8293,21.9914,9479.28,!1,255.63,129.94,-.33,null,9951.72,null,!1,0],["a4c8de","","United States",1679397462,1679397462,-93.2171,44.89,null,!0,7.72,300.94,null,null,null,null,!1,0],["a44090","N373SR  ","United States",1679397462,1679397462,-73.8809,41.0671,358.14,!1,95.17,90,0,null,426.72,"0217",!1,0],["a32bf3","AAL1196 ","United States",1679397462,1679397462,-79.1489,28.4758,9144,!1,228.23,193.16,0,null,9479.28,null,!1,0],["e48519","TAM3925 ","Brazil",1679397334,1679397336,-44.1084,-23.4164,9136.38,!1,196.52,251.38,0,null,9669.78,null,!1,0],["a465df","UAL1688 ","United States",1679397462,1679397462,-82.9946,36.0167,10972.8,!1,199.9,236.76,0,null,11003.28,"2731",!1,0],["a9ffeb","RPA3540 ","United States",1679397432,1679397435,-74.1816,40.6987,null,!0,4.37,163.12,null,null,null,"3541",!1,0],["02012b","MAC458  ","Morocco",1679397462,1679397462,1.8705,41.1466,11277.6,!1,203.66,228.17,0,null,11536.68,"4041",!1,0],["a8cce3","N6660H  ","United States",1679397461,1679397461,-75.583,40.0511,243.84,!1,57.44,186.17,-.98,null,320.04,null,!1,0],["3d32dc","DERMY   ","Germany",1679397462,1679397462,5.2791,47.8601,5486.4,!1,80.4,262.65,-.65,null,5577.84,"1000",!1,0],["70c10a","OMS485  ","Oman",1679397462,1679397462,82.3788,17.9494,11887.2,!1,265.66,108.4,0,null,null,"4751",!1,0],["c0003e","","Canada",1679397462,1679397462,-75.8278,45.2849,2560.32,!1,141.89,44.12,-3.9,null,2484.12,"0505",!1,0],["70c10d","OMS225  ","Oman",1679397461,1679397461,48.0328,29.148,548.64,!1,70.64,334.55,-4.23,null,502.92,null,!1,0],["a81c78","N6211J  ","United States",1679397462,1679397462,-84.2754,36.2298,5341.62,!1,94.37,340.58,7.8,null,5402.58,null,!1,0],["70c108","OMA164  ","Oman",1679397462,1679397462,30.1736,41.8427,8168.64,!1,222.47,75.67,8.13,null,8252.46,null,!1,0],["70c101","OMA693  ","Oman",1679397453,1679397462,52.5788,25.7261,8427.72,!1,183.2,298.15,-6.5,null,8587.74,null,!1,0],["3d8e7c","DGAFC   ","Germany",1679397462,1679397462,9.9548,49.2719,1600.2,!1,74.29,126.55,1.63,null,1661.16,"1250",!1,0],["a906f3","PDT5992 ","United States",1679397462,1679397462,-88.9268,40.5241,1828.8,!1,133.86,53.44,9.75,null,1828.8,null,!1,0],["a1a56d","RPA5722 ","United States",1679397462,1679397462,-81.817,41.0108,9448.8,!1,239.19,72.73,-.33,null,9326.88,"6651",!1,0],["020122","RAM910  ","Morocco",1679397461,1679397461,9.2013,40.5751,12184.38,!1,259.23,86.59,-.33,null,12367.26,"6466",!1,0],["7c764c","JST612  ","Australia",1679397455,1679397455,151.1777,-33.945,null,!0,6.69,33.75,null,null,null,"3650",!1,0],["ac141f","SKW4229 ","United States",1679397382,1679397400,-83.3567,42.2394,190.5,!1,62.16,208.69,-2.93,null,236.22,"7262",!0,0],["345281","MEECMMQ ","Spain",1679397462,1679397462,-5.512,36.0325,777.24,!1,62.26,305.92,0,null,876.3,null,!1,0],["a6e376","JIA5300 ","United States",1679397462,1679397462,-78.0334,39.0811,3947.16,!1,179.93,108.33,-6.18,null,3977.64,"3116",!1,0],["152adf","VDA1436 ","Russian Federation",1679397457,1679397462,37.6427,56.1856,1303.02,!1,103.33,160.21,-1.95,null,1249.68,null,!1,0],["781bdb","JYH1202 ","China",1679397462,1679397462,100.3793,13.1451,11277.6,!1,228.47,13.41,0,null,11940.54,"0754",!1,0],["a8102a","UAL2035 ","United States",1679397462,1679397462,-96.7925,41.1262,7886.7,!1,217.42,264.98,9.43,null,7772.4,null,!1,0],["020145","MAC128C ","Morocco",1679397462,1679397462,1.2149,46.6959,11277.6,!1,216.41,208.7,-.33,null,11353.8,"2126",!1,0],["a8e6f2","AAL1106 ","United States",1679397462,1679397462,-82.2268,37.0652,8229.6,!1,210.24,165.69,0,null,8252.46,"0433",!1,0],["8005f4","AIC148  ","India",1679397462,1679397462,7.8231,50.3026,11887.2,!1,263.77,102.27,0,null,11902.44,"3402",!1,0],["781148","CSN383  ","China",1679397461,1679397461,91.9156,22.1001,10972.8,!1,193.76,236.48,0,null,11399.52,"3115",!1,0],["3c1459","KLM1856 ","Germany",1679397462,1679397462,4.7261,52.5152,624.84,!1,80.93,183.64,-.65,null,647.7,"1000",!1,0],["e80609","JAP7224 ","Chile",1679397462,1679397462,-77.8438,-11.2146,8473.44,!1,217.09,321.45,7.48,null,null,null,!1,0],["a81bc4","UPS62   ","United States",1679397200,1679397200,-113.7087,54.2071,11582.4,!1,237.57,303.52,0,null,11163.3,null,!1,0],["4ca98a","ITY1612 ","Ireland",1679397462,1679397462,12.1849,41.9863,1051.56,!1,98.27,252.32,-4.55,null,1135.38,null,!1,0],["484236","","Kingdom of the Netherlands",1679397338,1679397338,4.7746,52.3128,null,!0,7.2,261.56,null,null,null,null,!1,0],["8005f0","AIC307  ","India",1679397462,1679397462,93.6072,23.4403,13106.4,!1,199.77,274.73,-.33,null,13555.98,"5032",!1,0],["a968f8","AAL1748 ","United States",1679397461,1679397461,-79.6229,43.6871,null,!0,0,90,null,null,null,"0550",!1,0],["3c5aae","AHO797X ","Germany",1679397462,1679397462,9.8785,46.8175,12192,!1,212.43,282.59,.33,null,12306.3,"1000",!1,0],["896371","ABY175  ","United Arab Emirates",1679397462,1679397462,50.7733,26.6169,9136.38,!1,180.1,289,.33,null,9273.54,null,!1,0],["e80610","JAP7001 ","Chile",1679396799,1679397462,-76.017,-12.9437,9220.2,!1,236.65,131.03,0,null,null,null,!1,0],["4ca993","ITY107  ","Ireland",1679397457,1679397462,4.775,52.3156,null,!0,5.66,0,null,null,null,null,!1,0],["344043","7777XPML","Spain",1679397400,1679397462,2.9244,39.5269,null,!0,0,165.94,null,null,null,null,!1,0],["acd83d","DAL752  ","United States",1679397462,1679397462,-74.0367,45.0607,4442.46,!1,175.16,209.95,13,null,4312.92,"6537",!1,0],["acbe34","ASA98   ","United States",1679397461,1679397461,-128.5748,53.9063,10668,!1,219.3,146.38,0,null,10340.34,null,!1,0],["8a07a0","AWQ257  ","Indonesia",1679397462,1679397462,100.4224,13.7308,2506.98,!1,143.64,174.66,8.78,null,2621.28,"6121",!1,0],["a22702","JBU518  ","United States",1679397462,1679397462,-72.5006,41.3429,7010.4,!1,231.24,64.29,-.33,null,6903.72,"7114",!1,0],["780a5d","CRK776  ","China",1679397189,1679397191,113.9326,22.3141,null,!0,.77,337.5,null,null,null,null,!1,0],["78114b","","China",1679397434,1679397434,117.3201,24.1135,9784.08,!1,222.99,225.28,0,null,10279.38,null,!1,0],["ad2baa","JBU861  ","United States",1679397161,1679397164,-68.2591,39.6608,10066.02,!1,237.87,145.49,.33,null,10005.06,null,!1,0],["7c1471","QFA69   ","Australia",1679397462,1679397463,77.1396,27.6542,5486.4,!1,167.81,10.24,0,null,5585.46,null,!1,0],["e8060b","JAP7033 ","Chile",1679397462,1679397462,-76.8573,-12.1751,3489.96,!1,164.64,108.77,13,null,null,null,!1,0],["7c1473","QFA128  ","Australia",1679397462,1679397462,114.6644,21.3867,7414.26,!1,240.74,154.97,6.18,null,6355.08,null,!1,0],["34668c","CFG2198 ","Spain",1679397462,1679397462,6.3127,51.2625,8564.88,!1,231.43,311.49,3.9,null,8610.6,"0132",!1,0],["a6456d","DAL26   ","United States",1679397460,1679397460,141.274,36.8209,10668,!1,313.28,84.35,0,null,10782.3,"4326",!1,0],["780a6c","CRK609  ","China",1679397309,1679397309,118.549,22.9593,12192,!1,213.5,237.5,0,null,12786.36,null,!1,0],["7c146d","QFA778  ","Australia",1679397461,1679397461,136.8366,-37.2935,12496.8,!1,269.2,99.57,0,null,12900.66,null,!1,0],["7c146e","QFA655  ","Australia",1679397462,1679397462,136.3953,-34.1879,12192,!1,220.5,273.08,0,null,12679.68,"4313",!1,0],["7c146a","QFA499  ","Australia",1679397462,1679397462,150.7118,-34.4892,7063.74,!1,200.3,231.57,10.73,null,7429.5,"4253",!1,0],["85d098","ANA1272 ","Japan",1679397462,1679397462,136.3275,36.3274,11582.4,!1,176.7,221.81,0,null,11704.32,"2165",!1,0],["abfefd","AAL2782 ","United States",1679397462,1679397462,-93.5988,35.8989,10972.8,!1,193.69,227.37,0,null,10995.66,"3773",!1,0],["346691","VLG1704 ","Spain",1679397462,1679397462,1.6601,41.2742,3718.56,!1,179.55,290.46,10.4,null,3863.34,null,!1,0],["abf2c2","SWA690  ","United States",1679397462,1679397462,-84.1148,33.4138,3276.6,!1,171.88,312.33,-5.2,null,3360.42,null,!1,0],["780a6d","CRK619  ","China",1679397461,1679397462,117.6624,22.4303,12192,!1,220.76,237.27,0,null,12793.98,null,!1,0],["346692","VLG2BT  ","Spain",1679397462,1679397462,-13.2889,30.9397,10347.96,!1,243.01,34.56,0,null,10713.72,null,!1,0],["a2ab6c","ENY3329 ","United States",1679397462,1679397462,-87.5937,42.0332,1165.86,!1,104.4,224.8,0,null,1188.72,"5342",!1,0],["c060b7","POE2458 ","Canada",1679397462,1679397462,-63.7651,44.8711,3703.32,!1,108.28,293.52,10.4,null,3627.12,null,!1,0],["c060b4","POE2459 ","Canada",1679397463,1679397463,-81.6211,42.3855,6202.68,!1,184.59,58.21,-4.88,null,6149.34,"7426",!1,0],["896354","ETD204  ","United Arab Emirates",1679397264,1679397271,55.4307,24.1449,6400.8,!1,242.58,112.7,-.33,null,6560.82,null,!1,0],["c060b5","POE2206 ","Canada",1679397462,1679397462,-75.0715,45.5126,2385.06,!1,113.87,248.54,-5.53,null,2324.1,"3107",!1,0],["a81bcc","SKW5332 ","United States",1679397462,1679397462,-82.2081,41.1278,10972.8,!1,184.58,273.84,0,null,10820.4,"3303",!1,0],["780a7a","CRK636  ","China",1679397462,1679397462,120.1761,23.6077,10675.62,!1,255.8,43.61,0,null,11201.4,null,!1,0],["c060b1","POE2610 ","Canada",1679397462,1679397462,-80.4267,47.1534,7620,!1,182.44,159.88,0,null,7299.96,null,!1,0],["abebbe","SWA1255 ","United States",1679397462,1679397463,-96.7953,32.7999,1249.68,!1,109.48,139.57,6.5,null,1242.06,null,!1,0],["345359","VLG3LF  ","Spain",1679397462,1679397462,4.6404,46.7557,10370.82,!1,222.44,326.6,0,null,10485.12,"1000",!1,0],["346689","IBB92DY ","Spain",1679397440,1679397442,-13.6267,30.4283,11536.68,!1,234.43,34.18,.65,null,11894.82,null,!1,0],["a89887","AJT520  ","United States",1679397462,1679397462,-90.3309,34.1789,11582.4,!1,205.35,222.56,-.33,null,11689.08,"1462",!1,0],["3d343a","DESAK   ","Germany",1679397462,1679397462,8.9406,49.2552,1988.82,!1,62.15,353.35,.98,null,2072.64,"4452",!1,0],["ad58fc","MRA682  ","United States",1679397462,1679397462,-78.4275,35.7335,1371.6,!1,85.85,118.25,0,null,1478.28,"4602",!1,0],["aba573","N85ER   ","United States",1679397462,1679397462,-84.7719,42.4424,10332.72,!1,153.39,271.92,8.13,null,10149.84,"5703",!1,0],["780a93","CPA929  ","China",1679397446,1679397446,113.9031,22.3255,null,!0,8.75,70.31,null,null,null,null,!1,0],["a44be5","UPS966  ","United States",1679397463,1679397463,-118.5657,34.7503,9761.22,!1,221.17,318.3,.33,null,9761.22,"1012",!1,0],["896357","","United Arab Emirates",1679397450,1679397450,48.9526,28.5965,9144,!1,234.14,325.93,0,null,9166.86,null,!1,0],["44ce9a","OOSTZ   ","Belgium",1679397458,1679397460,5.2366,50.1876,708.66,!1,38.28,216.25,.33,null,777.24,"2000",!1,0],["4ca97a","RYR6KH  ","Ireland",1679397462,1679397463,13.7833,51.6025,10416.54,!1,226.97,104.57,-5.2,null,10431.78,"5220",!1,0],["77044e","ALK116  ","Sri Lanka",1679397236,1679397299,77.3532,5.5651,10660.38,!1,228.06,64.76,0,null,11239.5,null,!1,0],["4ca97b","RYR54QP ","Ireland",1679397462,1679397462,6.3675,51.4692,11582.4,!1,210.03,285.19,0,null,11582.4,"0603",!1,0],["896364","ABY214  ","United Arab Emirates",1679397334,1679397334,54.6255,25.688,4732.02,!1,168.89,92.44,-10.73,null,4815.84,null,!1,0],["a452c4","DAL2115 ","United States",1679397462,1679397462,-81.427,38.7404,9753.6,!1,218.19,214.63,0,null,9723.12,"5776",!1,0],["4d03c9","NATO02  ","Luxembourg",1679397462,1679397462,7.2604,50.1969,7391.4,!1,209.08,139.49,4.23,null,7498.08,"4105",!1,0],["780a8a","CPA549  ","China",1679397462,1679397462,114.904,22.2691,4823.46,!1,171.94,267.94,-9.75,null,5593.08,null,!1,0],["7c6ded","QFA157  ","Australia",1679397462,1679397462,174.1005,-37.4227,5859.78,!1,210.02,73.78,-10.73,null,5928.36,null,!1,0],["7c6dec","QFA552  ","Australia",1679397462,1679397462,151.9466,-32.4728,10584.18,!1,232.48,17.91,4.23,null,11109.96,"1536",!1,0],["884343","BKP214  ","Thailand",1679397461,1679397461,100.6648,14.3418,4419.6,!1,150.61,173.72,-6.18,null,4648.2,"4447",!1,0],["a1b7ab","N21FE   ","United States",1679397462,1679397462,-81.8665,39.2088,12192,!1,211.3,239.25,0,null,12123.42,null,!1,0],["acab54","EDV5501 ","United States",1679397462,1679397462,-75.4247,39.3346,7010.4,!1,204.91,34.57,0,null,6979.92,"0460",!1,0],["44ce78","BEL27A  ","Belgium",1679397462,1679397462,10.0582,55.9265,10965.18,!1,204.17,215.77,0,null,10888.98,"0734",!1,0],["405456","BAW855  ","United Kingdom",1679397462,1679397462,3.3493,51.8213,10972.8,!1,211.86,284.34,-.33,null,10911.84,"0617",!1,0],["a8e813","NKS358  ","United States",1679397462,1679397462,-76.6181,36.7389,9913.62,!1,243.01,34.56,-3.25,null,9921.24,"1076",!1,0],["896326","ETD455  ","United Arab Emirates",1679397462,1679397462,148.4449,-33.1916,9144,!1,240.94,288.94,0,null,9624.06,"0575",!1,0],["ad2bda","LTA48   ","United States",1679397462,1679397462,-88.1591,41.2505,1280.16,!1,60.05,316.74,0,null,1287.78,"1200",!1,0],["a34729","DAL1027 ","United States",1679397462,1679397462,-94.4948,29.8352,11285.22,!1,265.77,75.43,0,null,11597.64,"2563",!1,0],["896334","FDB838  ","United Arab Emirates",1679397386,1679397387,47.9946,27.3376,10668,!1,266.82,107.74,0,null,10820.4,null,!1,0],["44ce6f","BEL5MQ  ","Belgium",1679397462,1679397462,4.612,51.6363,6073.14,!1,202.32,213.49,-11.7,null,6149.34,"1372",!1,0],["89631c","UAE157  ","United Arab Emirates",1679397462,1679397462,18.2617,58.7943,7071.36,!1,198.23,357.62,-10.08,null,6987.54,"5335",!1,0],["44ce86","OOSTF   ","Belgium",1679397462,1679397462,4.4736,51.253,411.48,!1,47.16,309.25,2.6,null,441.96,"7000",!1,0],["896335","FDB1WF  ","United Arab Emirates",1679397452,1679397452,54.3103,25.522,7315.2,!1,183.35,287.98,0,null,7452.36,null,!1,0],["aa2e2d","SWA2994 ","United States",1679397459,1679397462,-83.4873,31.4668,11582.4,!1,209.96,339.79,0,null,11826.24,"3726",!1,0],["c827a3","ANZ228  ","New Zealand",1679397462,1679397462,169.8412,-42.558,10675.62,!1,213.87,110.27,0,null,10728.96,null,!1,0],["40675e","VIR109V ","United Kingdom",1679397462,1679397462,-7.0582,54.0284,11437.62,!1,222.62,285,2.93,null,11353.8,"5447",!1,0],["a76516","DAL836  ","United States",1679397462,1679397462,-85.0219,34.0121,3169.92,!1,156.91,159.66,-16.26,null,3261.36,"2603",!1,0],["c01f1e","FLE148  ","Canada",1679397462,1679397462,-79.6816,43.4906,2065.02,!1,151.39,133.35,-.65,null,2057.4,"6345",!1,0],["008ffb","GBB132  ","South Africa",1679397462,1679397462,19.2966,-33.6667,6301.74,!1,215.18,87.94,9.1,null,6614.16,"4543",!1,0],["aa2e36","SKW4950 ","United States",1679397460,1679397461,-97.604,35.4028,null,!0,5.92,0,null,null,null,null,!1,0],["a6eed5","GJS4442 ","United States",1679397462,1679397462,-76.9952,37.8223,4114.8,!1,199.81,38.73,11.05,null,4145.28,null,!1,0],["896306","UAE2F   ","United Arab Emirates",1679397462,1679397462,12.8928,55.5431,1615.44,!1,122.4,293.01,-2.93,null,1623.06,"3212",!1,0],["88434a","BKP1180 ","Thailand",1679397458,1679397458,100.4092,12.5046,5478.78,!1,131.92,6.04,0,null,5775.96,null,!1,0],["a74b1b","SCX3044 ","United States",1679397460,1679397462,-82.529,35.7438,11277.6,!1,228.42,359.48,0,null,11315.7,"3630",!1,0],["841e00","ADO74   ","Japan",1679397462,1679397462,139.9504,35.5708,685.8,!1,79.74,270.37,-4.23,null,716.28,"2275",!1,0],["c827b1","ANZ206  ","New Zealand",1679397462,1679397462,171.2772,-42.4543,9707.88,!1,217.83,129.44,-18.21,null,9730.74,null,!1,0],["44ce62","BEL1GW  ","Belgium",1679397462,1679397462,11.3891,52.0829,9319.26,!1,214.27,257.1,3.58,null,9372.6,"1000",!1,0],["44ce61","BEL3LZ  ","Belgium",1679397461,1679397462,9.255,45.5041,1074.42,!1,84.31,336.25,10.08,null,1158.24,"1000",!1,0],["345319","IBE6501 ","Spain",1679397462,1679397462,-3.7967,40.6385,2468.88,!1,143.05,268.76,13,null,2613.66,null,!1,0],["a848e9","","United States",1679397447,1679397448,-79.3846,26.3799,3284.22,!1,99,74.01,0,null,3436.62,null,!1,0],["345313","VLG630R ","Spain",1679397322,1679397338,-4.7377,36.8043,1264.92,!1,109.06,148.11,-4.88,null,1402.08,null,!1,0],["345314","VLG2TR  ","Spain",1679397214,1679397219,2.3542,48.7262,null,!0,0,292.5,null,null,null,"2000",!1,0],["4bb0e8","THY3MC  ","Turkey",1679397462,1679397462,28.0042,41.6885,5890.26,!1,197.77,303.11,9.1,null,5966.46,null,!1,0],["406753","EZY61ZV ","United Kingdom",1679397462,1679397462,-.6502,45.3186,10972.8,!1,221.14,347.1,0,null,11064.24,"5371",!1,0],["a728f0","N560WT  ","United States",1679397461,1679397461,-84.6939,34.087,1706.88,!1,133.93,231.24,-.98,null,1775.46,null,!1,0],["44ce68","BEL8RN  ","Belgium",1679397462,1679397462,5.1324,43.4942,1143,!1,102.62,313.38,5.53,null,1242.06,"1000",!1,0],["406754","EZY58ZR ","United Kingdom",1679397462,1679397462,-4.382,40.2341,11269.98,!1,213.29,190.98,0,null,11506.2,"5402",!1,0],["44ce66","BEL4SF  ","Belgium",1679397462,1679397462,5.1688,45.7549,2644.14,!1,147.09,6.63,22.76,null,2727.96,null,!1,0],["73348c","IRB9702 ","Islamic Republic of Iran",1679397462,1679397462,29.8122,40.8731,4488.18,!1,180.48,273.92,-6.83,null,4602.48,null,!1,0],["a6587b","JBU405  ","United States",1679397433,1679397433,-74.1658,40.6995,null,!0,0,25.31,null,null,null,"2653",!1,0],["44ce73","BEL47P  ","Belgium",1679397461,1679397462,8.7669,50.3558,9768.84,!1,207.12,284.38,-2.28,null,9852.66,"1000",!1,0],["89630c","UAE934  ","United Arab Emirates",1679397454,1679397454,47.2945,27.5151,11277.6,!1,314.31,103.54,0,null,11460.48,null,!1,0],["a90824","NKS2    ","United States",1679397462,1679397462,-85.9567,37.0069,10660.38,!1,236.87,159.4,0,null,10629.9,"6571",!1,0],["84cefa","SFJ87   ","Japan",1679397392,1679397396,132.3937,34.1578,6393.18,!1,172.45,249.02,-10.08,null,6598.92,"3436",!1,0],["86787c","ANA39   ","Japan",1679397174,1679397180,135.4582,34.767,45.72,!1,72.39,314.71,-3.58,null,68.58,"2440",!1,0],["88084c","AIQ3549 ","Thailand",1679397462,1679397462,100.6856,14.1151,1082.04,!1,85.37,164.62,-2.28,null,1074.42,"4471",!1,0],["7c6da0","QFA636  ","Australia",1679397462,1679397463,153.1217,-28.5895,9189.72,!1,231.12,12.86,-11.7,null,9776.46,"1345",!1,0],["a22771","ENY3824 ","United States",1679397461,1679397462,-91.3174,36.6304,10058.4,!1,271.46,84.24,-.33,null,10073.64,"1565",!1,0],["45b8c1","NFA044  ","Denmark",1679397462,1679397462,1.4292,43.1287,11574.78,!1,235.39,352.84,.33,null,11719.56,"5513",!1,0],["880850","AIQ3170 ","Thailand",1679397462,1679397462,101.5129,15.3828,10668,!1,249.07,31.23,0,null,11300.46,"4555",!1,0],["a06a5a","DAL1718 ","United States",1679397454,1679397454,-73.8686,40.7765,null,!0,.06,123.75,null,null,null,"1474",!1,0],["7609eb","","Pakistan",1679397249,1679397249,55.6705,25.1523,1463.04,!1,97.12,205.07,-6.18,null,1508.76,null,!1,0],["ac0094","SWA537  ","United States",1679397462,1679397462,-80.9511,32.9802,11582.4,!1,225.26,186.56,0,null,11750.04,"5110",!1,0],["880844","AIQ3394 ","Thailand",1679397462,1679397462,100.5018,13.8473,1402.08,!1,130.19,250.13,10.73,null,1440.18,"4416",!1,0],["a68d02","DAL352  ","United States",1679397462,1679397462,-86.3117,34.3797,9029.7,!1,280.66,107.6,-15.28,null,9166.86,"1061",!1,0],["346613","VOE2625 ","Spain",1679397462,1679397462,5.3246,43.3561,624.84,!1,76.74,336.7,-2.28,null,746.76,"1000",!1,0],["86789e","ANA77   ","Japan",1679397462,1679397462,139.9931,36.4112,7604.76,!1,221.87,11.91,9.43,null,7696.2,"2041",!1,0],["a777b8","UPS104  ","United States",1679397462,1679397462,-110.3821,52.855,11582.4,!1,235.43,303.41,0,null,11102.34,"4027",!1,0],["70c0ef","OMA116  ","Oman",1679397462,1679397462,25.4165,44.2486,11879.58,!1,261.36,120,0,null,11864.34,"7716",!1,0],["3df902","DHONY   ","Germany",1679397462,1679397462,10.8958,48.7288,647.7,!1,41.95,66.89,0,null,731.52,null,!1,0],["346603","GES061C ","Spain",1679397458,1679397459,-3.5749,40.4564,null,!0,0,45,null,null,null,null,!1,0],["7586cf","CEB014  ","Philippines",1679397462,1679397462,99.9877,13.945,10972.8,!1,227.4,269.35,0,null,11620.5,"2717",!1,0],["ad2094","JRE945  ","United States",1679397462,1679397462,-97.458,35.9475,9136.38,!1,262.07,182.36,.33,null,9144,"1161",!1,0],["3c0ca3","TUI6BM  ","Germany",1679397461,1679397461,-14.6247,32.18,11277.6,!1,220.3,213.76,0,null,11612.88,null,!1,0],["a5741d","SWA3287 ","United States",1679397450,1679397454,-93.2276,44.876,null,!0,1.8,129.38,null,null,null,null,!1,0],["aaf8ba","MTN8387 ","United States",1679397461,1679397462,-82.1162,33.6906,6096,!1,123.28,293.36,0,null,6172.2,null,!1,0],["a06a54","DAL1249 ","United States",1679397462,1679397462,-83.4319,42.1364,1089.66,!1,118.18,218.82,6.18,null,1120.14,"7466",!1,0],["a0978f","N1370E  ","United States",1679397462,1679397462,-83.6763,34.3765,1554.48,!1,45.19,67.23,.65,null,1630.68,null,!0,0],["a8d566","N6688E  ","United States",1679397462,1679397462,-84.0543,33.8062,2011.68,!1,78.2,147.36,-.33,null,2057.4,null,!1,0],["89639d","UAE431  ","United Arab Emirates",1679397450,1679397459,153.123,-27.3576,null,!0,0,326.25,null,null,null,null,!1,0],["3d1a68","DEIGE   ","Germany",1679397458,1679397458,9.8138,49.1306,693.42,!1,49.71,83.46,-.33,null,784.86,null,!1,0],["4ca8e7","RYR1T   ","Ireland",1679397420,1679397420,-8.8191,52.7354,495.3,!1,87.96,351.25,-2.6,null,518.16,null,!1,0],["4ca8e8","RYR7ST  ","Ireland",1679397462,1679397463,6.4456,45.6684,11277.6,!1,239.36,135,0,null,11422.38,"2224",!1,0],["c06147","SWG32   ","Canada",1679397462,1679397462,-80.1234,39.5317,12192,!1,215.81,190.85,-.33,null,12100.56,"2267",!1,0],["a2bdff","ENY4207 ","United States",1679397462,1679397462,-87.96,44.165,3276.6,!1,174.34,168.42,.33,null,3238.5,null,!1,0],["7c6de9","QFA639  ","Australia",1679397462,1679397462,150.1119,-31.1989,11582.4,!1,219.82,219.02,0,null,12153.9,"1021",!1,0],["7c6de7","QFA139  ","Australia",1679397462,1679397462,172.5651,-43.4604,129.54,!1,63.11,220.7,-3.58,null,167.64,"1521",!1,0],["89639b","UAE62T  ","United Arab Emirates",1679397462,1679397462,19.9588,46.9951,12192,!1,236.21,294.44,0,null,null,"5331",!1,0],["89639a","UAE7CN  ","United Arab Emirates",1679397461,1679397462,17.8119,45.1748,12496.8,!1,263.05,136.03,0,null,12496.8,"7572",!1,0],["abe09a","SWA1569 ","United States",1679397462,1679397462,-81.6408,33.2987,10668,!1,183.59,296.64,0,null,10797.54,null,!1,0],["70c0a7","OMA413  ","Oman",1679397383,1679397383,54.3012,24.9197,8534.4,!1,192.61,301.57,0,null,8740.14,null,!1,0],["780a27","HKC6651 ","China",1679397221,1679397226,103.2984,19.2661,10980.42,!1,210.1,259.85,-.33,null,11612.88,null,!1,0],["70c0a5","","Oman",null,1679397439,null,null,null,!1,226.02,298.26,0,null,null,null,!1,0],["a19167","N20TV   ","United States",1679397462,1679397462,-74.9379,39.9993,213.36,!1,56.94,57.17,-.33,null,251.46,null,!1,0],["4bab26","THY23Q  ","Turkey",1679397461,1679397462,33.5188,32.4538,8359.14,!1,210.09,305.13,6.83,null,8229.6,"4141",!1,0],["e48fc2","TAM8104 ","Brazil",null,1679397451,null,null,null,!1,229.15,293.98,0,null,null,null,!1,0],["7c6ddc","QFA637  ","Australia",1679397368,1679397368,144.8479,-37.6653,null,!0,7.72,163.12,null,null,null,"1201",!1,0],["780a29","CPA3684 ","China",1679397462,1679397462,-95.9151,47.5414,10668,!1,258.6,116.21,0,null,10309.86,null,!1,0],["3d1a57","","Germany",1679397462,1679397462,8.67,47.9289,1623.06,!1,61.93,101.27,-2,null,1700,"7000",!1,3],["7c0d46","CWO     ","Australia",1679397462,1679397462,116.207,-31.731,1531.62,!1,119.99,210.96,-6.18,null,1554.48,"3712",!1,0],["4ca8f4","ITY1747 ","Ireland",1679397462,1679397462,12.4146,40.9422,11574.78,!1,197.14,322.74,-.33,null,11704.32,null,!1,0],["31ff14","ADM349  ","Italy",1679397462,1679397462,-7.7192,38.7025,944.88,!1,39.34,117.24,2.93,null,1082.04,null,!1,0],["7c6dd8","QFA498  ","Australia",1679397462,1679397462,151.1573,-33.8745,220.98,!1,74.77,167.68,-4.23,null,365.76,"4213",!1,0],["800756","IGO6073 ","India",1679397462,1679397462,77.3289,27.8703,5669.28,!1,175.91,343,-9.43,null,5783.58,null,!1,0],["ab18ef","N814HH  ","United States",1679397462,1679397463,-81.4355,29.5799,4511.04,!1,98.65,354.91,0,null,4625.34,null,!1,0],["a2aac9","N271G   ","United States",1679397462,1679397462,-75.9263,39.3181,1242.06,!1,60.17,210.29,0,null,1287.78,"1546",!1,0],["780a36","CPA542  ","China",1679397461,1679397461,135.5307,33.1727,11277.6,!1,285.85,73.59,0,null,11590.02,"3532",!1,0],["3d3478","DESCU   ","Germany",1679397462,1679397462,10.8057,44.6153,304.8,!1,48.37,29.29,1.3,null,373.38,null,!1,0],["4ca8df","ITY061  ","Ireland",1679397462,1679397462,-.9612,41.2737,11574.78,!1,254.54,75.49,0,null,11803.38,null,!1,0],["4ca8dc","ITY121  ","Ireland",1679397462,1679397462,6.2175,51.7234,8816.34,!1,212.03,141.6,7.48,null,8869.68,"1000",!1,0],["a2147c","RPA5682 ","United States",1679397462,1679397462,-71.4339,42.5173,3078.48,!1,161.89,105.67,-5.85,null,3078.48,"5766",!1,0],["c1e43d","SER320  ","Canada",1679397259,1679397259,-73.7402,45.461,null,!0,9.26,42.19,null,null,null,null,!1,0],["4ca8da","RYR1729 ","Ireland",1679397458,1679397460,-.4724,39.2901,3703.32,!1,172.04,240.83,3.9,null,3863.34,null,!1,0],["89637b","FDB3NP  ","United Arab Emirates",1679397462,1679397462,48.1917,29.6092,10965.18,!1,212.48,330.08,0,null,11003.28,null,!1,0],["ac25c4","FDX30   ","United States",1679397462,1679397462,-74.2651,42.2908,11277.6,!1,280.75,74.16,-.33,null,11049,"7317",!1,0],["a0ba4e","EDV4909 ","United States",1679397462,1679397462,-79.0038,35.6161,10058.4,!1,270.24,70.77,0,null,10073.64,"7137",!1,0],["a31a34","UAL181  ","United States",1679397462,1679397462,7.888,50.2114,3886.2,!1,195.42,316.6,13,null,3970.02,"2530",!1,0],["895062","RBA685  ","Brunei Darussalam",1679397462,1679397462,117.9262,8.5735,11887.2,!1,229.7,35.61,0,null,12649.2,null,!1,0],["7609b8","PIA178  ","Pakistan",1679397462,1679397462,55.2136,24.2457,5943.6,!1,185.88,119.33,6.18,null,6080.76,null,!1,0],["70c0c7","OMA232  ","Oman",1679397462,1679397462,72.9967,19.1564,10972.8,!1,199.24,297.03,0,null,11483.34,null,!1,0],["4ca8af","RYR214N ","Ireland",1679397197,1679397197,16.0463,45.4488,2202.18,!1,127.45,317.62,-1.95,null,2293.62,null,!1,0],["ab686f","AAL2549 ","United States",1679397462,1679397462,-95.6332,30.569,11468.1,!1,246.73,52.8,3.9,null,11734.8,"2470",!1,0],["4853f4","KLM52Q  ","Kingdom of the Netherlands",1679397462,1679397462,6.5993,47.7198,10972.8,!1,236.54,352.63,.33,null,11094.72,"1000",!1,0],["70c0c4","QTR641  ","Oman",1679397462,1679397462,51.8114,25.0486,1089.66,!1,108.09,260.13,-1.63,null,1036.32,null,!1,0],["a13af4","DAL307  ","United States",1679397462,1679397462,-93.3735,44.9481,975.36,!1,83.11,121.33,-4.55,null,952.5,"2610",!1,0],["7c6dbb","QFA561  ","Australia",1679397462,1679397462,151.0908,-33.4852,2301.24,!1,145.84,174.13,-6.5,null,2506.98,"1124",!1,0],["e48fb6","GLO1501 ","Brazil",1679397463,1679397463,-47.8449,-22.5049,9014.46,!1,201.47,124.18,-10.08,null,9570.72,null,!1,0],["4ca8d6","RYR5869 ","Ireland",1679397462,1679397462,15.2991,45.9774,3817.62,!1,201.2,133.86,-13.98,null,3924.3,"1000",!1,0],["84ceef","JJP516  ","Japan",1679397443,1679397448,132.2332,33.1897,9525,!1,267.02,81.25,3.25,null,9837.42,null,!1,0],["4ca8d8","RYR4958 ","Ireland",1679397453,1679397453,-14.665,30.2204,11887.2,!1,216.39,197.57,0,null,12252.96,null,!1,0],["4ca8d9","RYR97DF ","Ireland",1679397462,1679397462,2.3781,48.826,11277.6,!1,230.2,137.9,0,null,11300.46,"1170",!1,0],["7c6db6","QFA747  ","Australia",1679397462,1679397462,142.7043,-34.6208,12184.38,!1,215.94,263.43,0,null,12641.58,"3754",!1,0],["4ca8d4","RYR5ZJ  ","Ireland",1679397462,1679397462,-6.0542,37.5406,1600.2,!1,136.01,251.02,-4.55,null,1752.6,null,!1,0],["800734","AIC301  ","India",1679397452,1679397456,77.6099,25.4635,13098.78,!1,228.44,353.28,0,null,13441.68,null,!1,0],["4ca8d5","RYR44LA ","Ireland",1679397462,1679397462,16.4358,47.1692,10972.8,!1,202.49,302.76,0,null,10965.18,"2661",!1,0],["800735","AIC169  ","India",1679397462,1679397463,21.4926,55.6022,12192,!1,240.78,270.73,0,null,12024.36,"3513",!1,0],["a07176","AMX001  ","United States",1679397462,1679397462,-7.6959,41.4277,10363.2,!1,224.7,86.59,-.33,null,10568.94,null,!1,0],["a07177","AAL2717 ","United States",1679397463,1679397463,-97.2361,32.7353,3299.46,!1,148.93,262.46,5.85,null,3329.94,null,!1,0],["4ca8d0","ITY1724 ","Ireland",1679397462,1679397462,12.1723,42.0613,1325.88,!1,111.89,168.33,-4.55,null,1417.32,null,!1,0],["4ca8bd","EIN158  ","Ireland",1679397462,1679397462,-.3046,51.4653,541.02,!1,74.08,269.6,-4.88,null,563.88,"6203",!1,0],["800742","AIC309  ","India",1679397460,1679397461,77.3359,24.1763,12184.38,!1,223.61,354.98,0,null,12580.62,null,!1,0],["3571c9","MRL27   ","Spain",1679397462,1679397462,-.6311,37.805,2087.88,!1,124.67,31.33,-8.13,null,2225.04,"1267",!1,0],["4ca8bb","SAS2684 ","Ireland",1679397462,1679397462,11.942,52.5245,10363.2,!1,222.12,8.52,0,null,10393.68,"6644",!1,0],["3571c7","MRL23   ","Spain",1679397462,1679397462,-.5706,37.9214,1120.14,!1,88.26,254.1,-5.85,null,1242.06,null,!1,0],["acd838","AAL1098 ","United States",1679397462,1679397462,-95.6316,34.7766,11178.54,!1,218.29,201.43,-4.55,null,11254.74,"7722",!1,0],["c1e41a","SUR8901 ","Canada",null,1679397418,null,null,null,!1,2.06,53.44,null,null,null,null,!1,0],["aa7e9b","UAL1847 ","United States",1679397462,1679397462,-80.2029,26.1067,3451.86,!1,170.67,354.12,4.88,null,3596.64,null,!1,0],["4baa44","THY6ER  ","Turkey",1679397459,1679397462,28.9397,41.1598,3589.02,!1,192.9,184.13,10.4,null,3665.22,null,!1,0],["aa7e9a","UAL1066 ","United States",1679397461,1679397461,-86.4676,28.1868,9753.6,!1,206.02,284.9,0,null,10096.5,"3616",!1,0],["ab8b62","N843E   ","United States",1679397462,1679397462,-74.6538,40.3883,6126.48,!1,124.61,258.09,-1.3,null,6080.76,"3461",!1,0],["4baa42","THY6SQ  ","Turkey",1679397461,1679397462,30.0359,39.6201,10187.94,!1,210.15,336.64,-4.55,null,10264.14,"3210",!1,0],["847517","NCA226  ","Japan",1679397462,1679397462,139.692,34.32,8755.38,!1,277.03,69.68,-9.43,null,9006.84,"4402",!1,0],["3c7438","TUI7BD  ","Germany",1679397462,1679397462,15.6254,46.6192,11277.6,!1,252.56,145.79,-.33,null,11308.08,"1117",!1,0],["3c7439","TUI32X  ","Germany",1679397461,1679397462,22.2065,39.3349,11277.6,!1,237.74,140.97,0,null,11338.56,null,!1,0],["a68d6f","JBU1247 ","United States",1679397462,1679397462,-79.8387,36.1984,10965.18,!1,206.51,216.18,0,null,10980.42,"6516",!1,0],["a5aa47","UPS896  ","United States",1679397462,1679397462,-114.2175,41.2859,12199.62,!1,206.42,254.68,-.65,null,12001.5,null,!1,0],["400759","TOM56Y  ","United Kingdom",1679397460,1679397461,-11.135,39.6425,11277.6,!1,237.88,210.11,0,null,11521.44,"2071",!1,0],["841ebc","JJP213  ","Japan",1679397463,1679397463,139.1861,35.2356,7315.2,!1,169.49,260.57,-.33,null,7467.6,"2141",!1,0],["c00ceb","MAL8940 ","Canada",1679397461,1679397461,-96.0136,49.8096,3276.6,!1,93.28,106.34,0,null,3154.68,null,!1,0],["a2fa6a","ENY3327 ","United States",1679397462,1679397462,-88.463,42.3532,3299.46,!1,186.58,100.16,0,null,3276.6,"5305",!1,0],["4baa56","THY7ZM  ","Turkey",1679397445,1679397445,19.2058,43.4186,10058.4,!1,221.54,98.41,.33,null,10081.26,null,!1,0],["3c0ac5","CFG024  ","Germany",1679397462,1679397462,17.0087,44.1113,10668,!1,239.22,143.13,0,null,10698.48,"5546",!1,0],["c05007","ACA314  ","Canada",1679397460,1679397460,-73.7287,45.4673,null,!0,38.07,222.19,null,null,null,"7032",!1,0],["3c0ac6","CFG4HF  ","Germany",1679397198,1679397203,-9.7422,35.3331,10668,!1,215.16,205.34,0,null,11010.9,"4644",!1,0],["a4414a","DAL2801 ","United States",1679397462,1679397462,-75.4286,39.8925,1935.48,!1,134.08,342.82,15.93,null,1988.82,null,!1,0],["4baa50","THY17AH ","Turkey",1679397462,1679397462,26.0643,58.0148,10363.2,!1,235.59,206.17,0,null,10104.12,"4052",!1,0],["4842ba","OH16    ","Kingdom of the Netherlands",1679397457,1679397457,4.7472,52.3093,null,!0,9.26,241.88,null,null,null,null,!1,0],["8830e9","TLM509  ","Thailand",1679397282,1679397347,100.6257,13.95,9395.46,!1,72.06,208.58,-3.9,null,167.64,"3346",!0,0],["3c743a","TUI2TC  ","Germany",1679397462,1679397462,24.6966,36.8341,11277.6,!1,242.12,142.42,0,null,11407.14,"0621",!1,0],["4baa4d","THY3EL  ","Turkey",1679397462,1679397462,18.0789,45.351,10675.62,!1,246.97,112.67,0,null,10683.24,"3065",!1,0],["4bb146","THY34   ","Turkey",1679397462,1679397462,2.4193,51.1283,11277.6,!1,262.65,102.21,0,null,11247.12,"2272",!1,0],["4bb143","THY98K  ","Turkey",1679397462,1679397462,2.3323,36.6115,10972.8,!1,224.17,264.87,0,null,11300.46,null,!1,0],["4bb142","THY18A  ","Turkey",1679397462,1679397462,21.086,46.9886,11277.6,!1,257.69,125.66,0,null,11216.64,"1154",!1,0],["aa7e99","UAL2279 ","United States",1679397461,1679397462,-77.0468,38.9548,11582.4,!1,197.53,225.11,0,null,11513.82,"1715",!1,0],["a5aa3a","UAL1067 ","United States",1679397462,1679397462,-76.3279,39.067,9784.08,!1,254.21,42.21,-13.33,null,9753.6,"2673",!1,0],["4ca7fb","ABR2221 ","Ireland",1679397248,1679397248,-3.5657,40.4705,null,!0,14.92,343.12,null,null,null,null,!1,0],["8963f3","UAE7AM  ","United Arab Emirates",1679397461,1679397462,-2.7863,40.3494,3436.62,!1,134.21,251.22,-1.95,null,3589.02,null,!1,0],["8963f2","UAE4PV  ","United Arab Emirates",1679397462,1679397462,14.4441,45.0455,12184.38,!1,231.79,282.43,-.33,null,12237.72,"2336",!1,0],["501e83","CTN71F  ","Croatia",1679397462,1679397462,8.2799,47.7331,11269.98,!1,248.96,112.22,-.33,null,11376.66,"1000",!1,0],["c06366","POE2118 ","Canada",1679397462,1679397462,-75.4543,41.4633,6705.6,!1,132.41,299.05,0,null,6629.4,"1607",!1,0],["c06361","POE2202 ","Canada",1679397462,1679397462,-77.5739,43.9584,6705.6,!1,148.82,246.36,.33,null,6545.58,"0625",!1,0],["c06360","POE2190 ","Canada",1679397462,1679397462,-70.5943,45.6599,7315.2,!1,148.49,277.77,.33,null,7078.98,null,!1,0],["8963df","UAE3PW  ","United Arab Emirates",1679397462,1679397462,8.6149,51.0076,8008.62,!1,213.07,301.27,-10.73,null,8107.68,"3203",!1,0],["c06362","POE2205 ","Canada",1679397462,1679397462,-76.7712,44.7469,6911.34,!1,188.7,53.54,-9.43,null,6720.84,"6310",!1,0],["4baa0d","THY7LA  ","Turkey",1679397458,1679397458,28.8644,40.8909,1508.76,!1,113.1,259.25,-.33,null,1592.58,null,!1,0],["aa7e7c","UAL1289 ","United States",1679397462,1679397462,-75.4601,39.801,5974.08,!1,210.38,43.02,-12.68,null,5951.22,"5652",!1,0],["00834c","LNK916  ","South Africa",1679397462,1679397462,27.9807,-30.794,11864.34,!1,210.34,9.72,4.88,null,12420.6,null,!1,0],["4ca7e1","ITY319  ","Ireland",1679397462,1679397462,2.9372,47.8314,9456.42,!1,213.66,156.89,8.45,null,9547.86,"1000",!1,0],["3c0aca","CFG5AF  ","Germany",1679397462,1679397462,-2.8029,45.7333,10058.4,!1,238.65,221.77,0,null,10142.22,"1106",!1,0],["aa7e7b","UAL1977 ","United States",1679397462,1679397463,-92.2673,40.6038,9753.6,!1,205.36,259.9,0,null,9616.44,"7405",!1,0],["4baa0c","THY6RB  ","Turkey",1679397296,1679397296,30.0929,38.475,8686.8,!1,230.31,159.74,-7.48,null,8968.74,"5107",!1,0],["491541","NJE831D ","Portugal",1679397462,1679397462,11.3199,43.6472,9601.2,!1,229.06,139.19,-2.28,null,9723.12,"7616",!1,0],["7c779b","UTY807  ","Australia",1679397462,1679397462,117.5077,-29.9534,10363.2,!1,199.49,231.39,0,null,10873.74,null,!1,0],["3df746","HUMMEL6 ","Germany",1679397301,1679397301,6.7847,51.2896,15.24,!1,2.18,135,.33,null,83.82,"4426",!1,0],["a511fe","AWI3728 ","United States",1679397462,1679397462,-82.2714,35.5501,9448.8,!1,195.73,348.63,0,null,9502.14,null,!1,0],["a511fd","TAI581  ","United States",1679397462,1679397462,-83.1169,29.8164,10965.18,!1,199.93,212.71,0,null,11262.36,"2147",!1,0],["c0635c","POE2121 ","Canada",1679397462,1679397462,-75.9036,42.3353,6096,!1,197.72,120.84,-4.55,null,6004.56,"0540",!1,0],["8963ec","UAE9CL  ","United Arab Emirates",1679397462,1679397462,11.9445,48.3762,906.78,!1,81.3,263.46,-4.55,null,998.22,"3207",!1,0],["c0635e","POE2217 ","Canada",1679397410,1679397410,-86.1712,47.2218,7612.38,!1,181.53,116.06,0,null,7360.92,null,!1,0],["c0502e","ACA341  ","Canada",1679397462,1679397462,-75.5341,45.2429,1165.86,!1,116.45,167.5,13,null,1143,null,!1,0],["4842c1","OH46    ","Kingdom of the Netherlands",1679397403,1679397412,4.7445,52.3064,null,!0,1.03,5.62,null,null,null,null,!1,0],["ab8b7f","FDX4    ","United States",1679397462,1679397462,-64.7588,42.8437,11277.6,!1,296.6,69.49,0,null,11132.82,"1604",!1,0],["aa988a","N782G   ","United States",1679397462,1679397462,-73.0962,40.8183,152.4,!1,46.21,46.35,-2.6,null,228.6,null,!1,0],["a7178c","AAL312  ","United States",1679397462,1679397462,-81.776,36.8239,8420.1,!1,211.45,184.05,-4.55,null,8458.2,null,!1,0],["a7045b","JIA5367 ","United States",1679397462,1679397462,-80.7731,35.369,3055.62,!1,146.81,211.24,-5.53,null,3116.58,null,!1,0],["a83781","UAL2430 ","United States",1679397453,1679397462,-93.2119,44.8859,null,!0,1.03,163.12,null,null,null,null,!1,0],["aa1be0","AAL2159 ","United States",1679397462,1679397462,-76.3673,39.4898,3733.8,!1,181.88,225,-5.2,null,3779.52,"3407",!1,0],["a08fb3","N135VV  ","United States",1679397443,1679397443,-80.1162,37.2192,1356.36,!1,62.66,257.68,-.98,null,1440.18,null,!1,0],["a7a1a0","FDX47   ","United States",1679397462,1679397462,-76.3209,48.1111,10980.42,!1,232.08,224.82,0,null,10507.98,null,!1,0],["4602ef","ABF5    ","Finland",1679397462,1679397462,23.2671,60.4202,3048,!1,85.17,280.09,-.33,null,null,null,!1,0],["3c0acc","CFG7LA  ","Germany",1679397462,1679397462,-7.263,36.0329,11277.6,!1,209.87,219.23,0,null,11567.16,"4646",!1,0],["4842b9","OH15    ","Kingdom of the Netherlands",1679397458,1679397458,4.7439,52.3167,null,!0,11.32,180,null,null,null,null,!1,0],["3c0acb","CFG068  ","Germany",1679397462,1679397462,24.2867,39.5354,10668,!1,236.12,135.97,0,null,10751.82,"2544",!1,0],["a119af","FDX1490 ","United States",1679397461,1679397462,-112.1949,40.647,10972.8,!1,193.49,274.42,0,null,10805.16,null,!1,0],["acb2ad","SWA3621 ","United States",1679397462,1679397462,-73.9387,40.2554,7627.62,!1,209.78,42.22,0,null,7528.56,"5677",!1,0],["a6dd76","DAL2506 ","United States",1679397462,1679397462,-87.0692,31.9552,10066.02,!1,273.86,55.18,0,null,10271.76,"2565",!1,0],["a03618","UAL1991 ","United States",1679397462,1679397462,-86.2209,42.1474,8869.68,!1,242.16,86.83,6.83,null,8755.38,"3177",!1,0],["4baa88","THY85PR ","Turkey",1679397342,1679397390,19.6505,43.7215,10668,!1,222.28,107.09,-.33,null,10683.24,"0475",!1,0],["440b86","OEKDM   ","Austria",1679397462,1679397462,15.6624,46.7312,1889.76,!1,70.28,17.9,-.33,null,1973.58,"3643",!1,0],["4baa89","THY8QW  ","Turkey",1679397461,1679397462,28.5073,41.6402,4465.32,!1,150.39,312.37,12.68,null,4541.52,null,!1,0],["4baa87","THY662  ","Turkey",1679397462,1679397462,14.0824,36.522,10363.2,!1,240.88,96.75,0,null,10546.08,null,!1,0],["4baa84","THY6LZ  ","Turkey",1679397462,1679397462,8.7159,50.4408,7490.46,!1,193.23,120.39,7.48,null,7589.52,"7705",!1,0],["8963d4","UAE751  ","United Arab Emirates",1679397462,1679397462,-2.0629,34.7878,11582.4,!1,223.69,251.36,0,null,11955.78,"2351",!1,0],["4baa85","THY41S  ","Turkey",1679397460,1679397462,29.9344,41.9582,8656.32,!1,224.28,78.36,7.48,null,8732.52,null,!1,0],["a346a8","N31YK   ","United States",1679397461,1679397462,-76.7502,41.0256,1402.08,!1,107.58,99.91,-7.48,null,1432.56,null,!1,0],["8963d2","UAE857  ","United Arab Emirates",1679397462,1679397462,54.0101,25.6098,9753.6,!1,187.6,287.39,0,null,10005.06,null,!1,0],["4b3911","PJS240  ","Switzerland",1679397462,1679397462,.0055,43.0856,13708.38,!1,204.28,229.29,0,null,13876.02,"3072",!1,0],["3452c8","ANE39AZ ","Spain",1679397462,1679397462,-1.1983,43.8363,7734.3,!1,238.32,39.39,-12.68,null,7863.84,"1000",!1,0],["8963cc","ETD11K  ","United Arab Emirates",1679397462,1679397462,24.7226,39.156,11277.6,!1,255.02,135.74,0,null,11369.04,"0672",!1,0],["aa8548","N777ZA  ","United States",1679397462,1679397462,-74.0549,40.4768,182.88,!1,53.41,13.37,0,null,251.46,"1200",!1,0],["4855d0","KLM1895 ","Kingdom of the Netherlands",1679397462,1679397462,5.1823,52.2462,2644.14,!1,156.09,93.02,15.28,null,2682.24,"1000",!1,0],["a239e0","UAL418  ","United States",1679397462,1679397462,-80.8086,40.6089,6248.4,!1,173.98,285.43,15.61,null,6195.06,"4114",!1,0],["39a5e5","FHJPF   ","France",1679397385,1679397387,5.0993,45.0791,525.78,!1,41.18,244.08,-3.58,null,632.46,"7000",!1,0],["ac159a","RPA5593 ","United States",1679397462,1679397462,-73.658,41.0875,1097.28,!1,135.4,172.58,0,null,1165.86,"1433",!1,0],["a0232a","RPA4496 ","United States",1679397462,1679397462,-74.9497,41.5375,6096,!1,157.58,305.3,0,null,6027.42,"1506",!1,0],["a083c4","N132MT  ","United States",1679397462,1679397462,-86.282,36.1214,1447.8,!1,58.36,350.87,2.93,null,1493.52,"1200",!1,0],["8963e1","UAE398  ","United Arab Emirates",1679397461,1679397462,101.8708,2.2031,11277.6,!1,246.65,134.32,0,null,11978.64,null,!1,0],["4baa92","THY9ZA  ","Turkey",1679397462,1679397462,18.3854,46.131,10972.8,!1,205.51,297.91,.65,null,10942.32,"4561",!1,0],["8963ce","ETD6HZ  ","United Arab Emirates",1679397440,1679397457,31.1632,33.4722,11887.2,!1,276.27,137.04,-.33,null,12016.74,"2251",!1,0],["4baa90","THY3AQ  ","Turkey",1679397462,1679397462,16.0639,49.5865,10660.38,!1,253.22,134.01,0,null,10637.52,"7607",!1,0],["ad82e5","N97SJ   ","United States",1679397462,1679397462,-82.5798,39.4293,12496.8,!1,224.19,211.39,0,null,12420.6,"5731",!1,0],["4bb189","THY7LK  ","Turkey",1679397462,1679397462,-.5998,49.103,11879.58,!1,261.09,102.75,.33,null,11917.68,null,!1,0],["4baa8f","THY3DB  ","Turkey",1679397462,1679397462,18.2391,51.3825,11262.36,!1,248.42,144.27,0,null,11170.92,"4522",!1,0],["4bb185","THY209  ","Turkey",1679397461,1679397461,50.783,26.7583,11574.78,!1,181.75,289.51,-.33,null,11841.48,null,!1,0],["8963de","UAE109  ","United Arab Emirates",1679397462,1679397462,15.8094,35.5984,6278.88,!1,182.98,266.45,-9.75,null,6477,null,!1,0],["4baa8b","THY7DY  ","Turkey",1679397462,1679397462,17.3074,44.5438,10972.8,!1,209.5,284.65,0,null,10988.04,null,!1,0],["4bb184","THY223  ","Turkey",1679397450,1679397451,-63.4849,12.9795,11582.4,!1,250.84,235.95,-.33,null,12214.86,"1272",!1,0],["4bb181","THY190  ","Turkey",1679397428,1679397461,-99.0175,19.4504,2354.58,!1,658.59,127.03,0,null,2438.4,null,!1,0],["4baa8a","THY8MS  ","Turkey",1679397461,1679397462,19.9545,46.3527,10972.8,!1,212.73,301.65,.33,null,10927.08,null,!1,0],["8963e9","UAE123  ","United Arab Emirates",1679397459,1679397461,28.7314,41.0742,1196.34,!1,99.81,.59,-2.28,null,1257.3,null,!1,0],["8963e8","UAE25K  ","United Arab Emirates",1679397455,1679397456,22.6128,44.8242,11887.2,!1,253.72,113.29,0,null,11833.86,"7555",!1,0],["a359bc","DAL1485 ","United States",1679397462,1679397462,-81.2719,28.4836,678.18,!1,95.54,28.64,6.83,null,746.76,null,!1,0],["a4fddb","RPA4745 ","United States",1679397462,1679397462,-77.6841,38.9913,3063.24,!1,154.87,108.19,-8.45,null,3124.2,"3765",!1,0],["aa7e51","UAL342  ","United States",1679397461,1679397462,-87.0841,38.2331,10972.8,!1,211.46,223.13,-.33,null,10911.84,"4164",!1,0],["a19cc7","JBU2963 ","United States",1679397462,1679397462,-76.0961,36.7695,10370.82,!1,205.75,210.67,0,null,10393.68,"3316",!1,0],["4baa62","THY4YK  ","Turkey",1679397460,1679397460,29.2361,40.8281,6393.18,!1,230.58,103.94,.33,null,6507.48,null,!1,0],["4baa63","THY7SL  ","Turkey",1679397462,1679397462,21.8314,43.2248,10652.76,!1,233.97,109.39,0,null,10675.62,"0271",!1,0],["7586fc","CEB582  ","Philippines",1679397462,1679397462,120.9867,14.2173,2148.84,!1,137.9,300.49,-4.88,null,2301.24,null,!1,0],["888041","VJC838  ","Viet Nam",1679397459,1679397462,119.122,22.0104,10058.4,!1,249.63,41.57,0,null,10599.42,null,!1,0],["440b9c","ABB862  ","Austria",1679397462,1679397462,7.1243,50.5608,7155.18,!1,190.88,269.07,-5.2,null,7269.48,"1000",!1,0],["4bb149","THY9KC  ","Turkey",1679397462,1679397462,7.1151,44.9925,10668,!1,263.45,109.74,0,null,10843.26,"0435",!1,0],["aa2ed8","RPA3406 ","United States",1679397462,1679397462,-80.1266,43.6757,4876.8,!1,147.85,256.11,11.7,null,4792.98,"2257",!1,0],["abe289","N865MM  ","United States",1679397462,1679397462,-97.2853,32.9048,1348.74,!1,43.95,163.69,3.58,null,1333.5,null,!1,0],["e49785","PSAMA   ","Brazil",1679397226,1679397227,-46.7445,-23.5773,1508.76,!1,116.64,280.42,5.2,null,1600.2,null,!1,0],["4baa76","THY4AP  ","Turkey",1679397461,1679397462,4.5791,40.8839,9182.1,!1,254.19,93.83,4.55,null,9425.94,null,!1,0],["4baa73","THY24QL ","Turkey",1679397461,1679397461,27.6262,40.5747,8747.76,!1,228.86,228.46,4.88,null,8862.06,null,!1,0],["4baa74","THY1DX  ","Turkey",1679397462,1679397462,20.159,45.2658,10363.2,!1,201.19,308.04,0,null,10355.58,"1734",!1,0],["aa7e36","UAL493  ","United States",1679397461,1679397461,-77.4488,38.9466,null,!0,6.43,92.81,null,null,null,"4147",!1,0],["4baa72","THY8NJ  ","Turkey",1679397462,1679397462,18.0014,45.4657,10355.58,!1,208.88,293.98,0,null,10363.2,"6044",!1,0],["4067ef","TOM6EJ  ","United Kingdom",1679397462,1679397462,.358,43.5974,10972.8,!1,228.58,340.95,0,null,11117.58,"5375",!1,0],["8963af","FDB274  ","United Arab Emirates",1679397368,1679397368,54.4946,25.6574,4297.68,!1,215.34,116.69,-15.61,null,4434.84,null,!1,0],["3c6d43","ITY1299 ","Germany",1679397461,1679397462,13.7704,41.1624,6019.8,!1,213.23,165.9,-15.28,null,6111.24,"1000",!1,0],["8963ad","FDB804  ","United Arab Emirates",1679397111,1679397240,55.4475,25.1127,1501.14,!1,112.71,347.61,-6.18,null,1432.56,null,!1,0],["a14f51","N1838R  ","United States",1679397384,1679397412,-82.0656,29.1239,274.32,!1,49.46,333.43,3.9,null,335.28,null,!1,0],["4baa6f","THY2CZ  ","Turkey",1679397458,1679397458,23.0557,45.1576,10972.8,!1,219.08,310.05,0,null,10934.7,null,!1,0],["4067f2","TOM7BV  ","United Kingdom",1679397462,1679397462,-16.5256,31.4758,11277.6,!1,223.83,201.43,0,null,11612.88,null,!1,0],["4067f1","TOM2XT  ","United Kingdom",1679397462,1679397462,-11.0387,36.9648,11277.6,!1,222.55,198.18,0,null,11597.64,"0574",!1,0],["4baa6d","THY6PC  ","Turkey",1679397462,1679397462,12.4376,52.9932,9273.54,!1,247.96,114.38,5.85,null,9304.02,"7612",!1,0],["4baa6e","THY8PL  ","Turkey",1679397462,1679397462,16.141,47.1028,10668,!1,249.25,120.38,0,null,10675.62,"7717",!1,0],["4067f3","TOM31V  ","United Kingdom",1679397462,1679397462,-8.438,38.5874,10668,!1,217.51,196.21,0,null,10949.94,"4602",!1,0],["8963ba","FDB7LV  ","United Arab Emirates",1679395948,1679397459,42.7775,53.6613,11277.6,!1,236.21,104.76,0,null,11087.1,null,!1,0],["abe299","N865NC  ","United States",1679397462,1679397462,-77.9974,35.9834,175.26,!1,65.98,93.58,0,null,266.7,"1200",!1,0],["8007b0","IGO2516 ","India",1679397461,1679397461,86.5262,23.3415,10706.1,!1,201.18,304.06,2.6,null,11056.62,"2635",!1,0],["86eb36","JAL12   ","Japan",1679397461,1679397461,-113.3204,44.702,11277.6,!1,266.89,116.07,0,null,10980.42,"1134",!1,0],["896523","UAE8PA  ","United Arab Emirates",1679397462,1679397462,151.1733,-33.9437,null,!0,3.6,348.75,null,null,null,"7221",!1,0],["a75f15","UPS340  ","United States",1679397261,1679397263,-68.7247,21.6532,11887.2,!1,256.25,138.66,0,null,12458.7,null,!1,0],["4ac9e1","SAS23N  ","Sweden",1679397395,1679397395,-7.6749,37.1503,1813.56,!1,142.22,183.32,-5.53,null,1958.34,"3513",!1,0],["4b1f2f","HBLVB   ","Switzerland",1679397217,1679397217,5.1231,45.3631,1089.66,!1,76.74,87.31,-1.95,null,1280.16,"1000",!1,0],["4ac9e2","SAS1421 ","Sweden",1679397461,1679397462,12.7302,55.6658,342.9,!1,62.67,221.67,-3.58,null,373.38,"0266",!1,0],["4ac9e3","SAS822  ","Sweden",1679397462,1679397462,8.668,58.0676,11887.2,!1,236.15,21.87,-.33,null,11757.66,"3151",!1,0],["4ac9e6","SAS45C  ","Sweden",1679397405,1679397406,17.9303,59.6525,null,!0,0,70.31,null,null,null,null,!1,0],["4ca912","RYR50AB ","Ireland",1679397462,1679397462,18.726,50.6545,10972.8,!1,234.38,216.97,-.33,null,10881.36,"1330",!1,0],["896531","FDB15L  ","United Arab Emirates",1679397460,1679397460,51.7892,26.2604,6301.74,!1,156.72,298,-5.53,null,6385.56,null,!1,0],["896530","FDB4NZ  ","United Arab Emirates",1679397457,1679397462,53.8455,26.3719,7719.06,!1,209.38,161.08,-5.2,null,7863.84,null,!1,0],["4ac9e9","SAS1042 ","Sweden",1679397462,1679397462,17.7386,60.212,9052.56,!1,194.56,7.44,9.75,null,8862.06,null,!1,0],["4b1f30","HBLVC   ","Switzerland",1679397462,1679397462,8.4318,47.5581,998.22,!1,85.13,135.98,-3.9,null,1112.52,"2046",!1,0],["a586aa","KPO455  ","United States",1679397462,1679397462,-80.8936,27.6367,12496.8,!1,219.13,341.52,.33,null,12885.42,"3731",!1,0],["4ca910","RYR5156 ","Ireland",1679397277,1679397293,-4.0129,37.9246,9326.88,!1,169.3,215.48,-8.45,null,9631.68,"6745",!1,0],["ac2813","SWA785  ","United States",1679397462,1679397462,-81.7706,38.206,11582.4,!1,205.18,250.52,0,null,11529.06,"7006",!1,0],["a7ea7e","UPS223  ","United States",1679397462,1679397462,-62.624,43.306,10668,!1,303.3,73.75,0,null,10523.22,"6011",!1,0],["a0103b","DAL2737 ","United States",1679397462,1679397462,-83.2741,42.3013,678.18,!1,69.3,208.85,-3.9,null,731.52,"3417",!1,0],["3d31f8","DEREE   ","Germany",1679397461,1679397462,10.8663,48.5551,853.44,!1,50.03,4.13,.33,null,922.02,"7000",!1,0],["896536","ETD74   ","United Arab Emirates",1679397462,1679397462,26.2237,37.9639,11887.2,!1,251.22,138.9,-.33,null,11993.88,"3042",!1,0],["896535","ETD25   ","United Arab Emirates",1679397462,1679397462,29.6139,42.6058,11574.78,!1,227.28,307.18,-.65,null,11574.78,null,!1,0],["43c8eb","","United Kingdom",1679397252,1679397252,-2.6652,52.7944,152.4,!1,3.64,351.87,.65,null,137.16,null,!1,0],["a3a9ff","AAL2035 ","United States",1679397462,1679397462,-97.8391,32.9969,10675.62,!1,278.62,116.19,.33,null,10850.88,null,!1,0],["43c8ed","SYS95   ","United Kingdom",1679397462,1679397462,-2.8688,52.8029,411.48,!1,56.36,95.76,-1.3,null,381,null,!1,0],["896539","ETD58B  ","United Arab Emirates",1679397462,1679397462,17.1232,48.7144,11582.4,!1,231.95,301.12,-.33,null,11551.92,"5341",!1,0],["896537","ETD99P  ","United Arab Emirates",1679397462,1679397462,22.0986,41.2304,11887.2,!1,247.83,138.53,0,null,11925.3,null,!1,0],["4ac9f3","SAS804  ","Sweden",1679397462,1679397462,3.7334,54.3667,11285.22,!1,243.19,25.97,0,null,11193.78,"1422",!1,0],["4ac9f5","SAS556  ","Sweden",1679397462,1679397462,8.677,54.8962,11269.98,!1,241.36,39.12,0,null,11209.02,"3157",!1,0],["ad4804","JBU630  ","United States",1679397462,1679397462,-78.7469,26.9693,11277.6,!1,255.66,125.42,0,null,11719.56,null,!1,0],["4ac9f8","SAS9241 ","Sweden",1679397461,1679397462,11.5107,58.5419,11582.4,!1,197.11,358.35,0,null,11437.62,"0246",!1,0],["683327","VSV492  ","Kazakhstan",1679397306,1679397318,32.1079,40.3287,10668,!1,245.3,104.33,0,null,10706.1,null,!1,0],["4ac9f9","SAS64P  ","Sweden",1679397462,1679397462,11.2648,62.432,11574.78,!1,227.23,194.82,-.33,null,11300.46,"0413",!1,0],["43c8f2","SYS63   ","United Kingdom",1679397462,1679397462,-2.9494,52.7382,251.46,!1,42.79,161.78,-1.63,null,236.22,null,!1,0],["89652d","ABY1732 ","United Arab Emirates",1679397461,1679397461,50.8434,26.5952,11582.4,!1,164.8,288.94,0,null,11856.72,null,!1,0],["43c8f3","SYS24   ","United Kingdom",1679397462,1679397462,-2.3705,52.7488,739.14,!1,37.04,260.41,-.33,null,723.9,null,!1,0],["683329","VSV5306 ","Kazakhstan",1679397461,1679397462,79.9658,27.2758,10972.8,!1,216.45,326.54,0,null,11170.92,null,!1,0],["abb8a0","SWA424  ","United States",1679397462,1679397462,-84.0227,30.6352,10965.18,!1,207.4,324.69,0,null,11224.26,"7462",!1,0],["0701a1","SZN404  ","Senegal",1679397462,1679397462,-7.4343,39.1477,11887.2,!1,239.88,192.64,-.33,null,12146.28,"7676",!1,0],["a51f4a","RPA4627 ","United States",1679397254,1679397255,-77.0417,38.8556,null,!0,1.8,334.69,null,null,null,null,!1,0],["c82759","ANZ148  ","New Zealand",1679397266,1679397267,174.8533,-36.9935,281.94,!1,63.78,250.69,-3.58,null,297.18,null,!1,0],["a3e658","AAL2996 ","United States",1679397462,1679397462,-73.7814,40.1109,2705.1,!1,147.13,32.58,-7.48,null,2750.82,"1617",!1,0],["4a0662","ROT391Z ","Romania",1679397461,1679397462,20.0871,46.972,11590.02,!1,220.59,294.23,0,null,11544.3,"2671",!1,0],["02006f","RAM270  ","Morocco",1679397462,1679397462,6.2156,40.2752,10965.18,!1,243.18,75.67,0,null,11201.4,"6444",!1,0],["896504","ABY522  ","United Arab Emirates",1679397460,1679397460,75.6459,23.1796,11269.98,!1,284.52,89.17,.33,null,11673.84,null,!1,0],["40557f","WDG64   ","United Kingdom",1679397410,1679397410,-7.0502,56.888,2202.18,!1,105.86,225.59,-4.88,null,2103.12,null,!1,0],["4ac9c6","BLX9VT  ","Sweden",1679397456,1679397462,-11.3592,36.194,11277.6,!1,218.17,197.71,0,null,11605.26,"2262",!1,0],["845b9c","FDA348  ","Japan",1679397459,1679397460,135.2719,33.4974,7620,!1,237.73,57.1,0,null,7856.22,"2432",!1,0],["4a0664","ROT362J ","Romania",1679397462,1679397463,10.5289,51.4611,11269.98,!1,251.17,104.35,0,null,11285.22,"1000",!1,0],["8a074e","AWQ194  ","Indonesia",1679397461,1679397462,99.9982,1.6319,10355.58,!1,242.43,326.95,-.33,null,11018.52,null,!1,0],["020073","RAM780S ","Morocco",1679397461,1679397462,.8453,47.1516,8534.4,!1,248.94,26.25,0,null,8595.36,"1446",!1,0],["ac75a5","AAL1426 ","United States",1679397462,1679397462,-86.6851,41.6016,4282.44,!1,183.08,304.58,-10.73,null,4259.58,"5733",!1,0],["a5e9f4","EDV4716 ","United States",1679397462,1679397462,-75.3317,42.4983,9448.8,!1,276.66,114.85,-.33,null,9227.82,"0512",!1,0],["896517","FDB1449 ","United Arab Emirates",1679397461,1679397462,16.1392,47.1968,11277.6,!1,215.44,290.99,-.33,null,11285.22,"5313",!0,0],["a1433a","SWA1513 ","United States",1679397462,1679397462,-89.7658,39.4161,10363.2,!1,209.25,261.23,0,null,10264.14,"4024",!1,0],["a849ab","JBU1867 ","United States",1679397461,1679397462,-76.3319,37.2147,10972.8,!1,207.52,202.75,.33,null,10980.42,"2604",!1,0],["896516","FDB849  ","United Arab Emirates",1679397462,1679397462,52.0149,26.1604,7315.2,!1,192.57,296.15,0,null,7406.64,null,!1,0],["02005b","RAM665Z ","Morocco",1679397462,1679397462,2.1143,48.5501,2506.98,!1,134.97,196.16,5.53,null,2567.94,"7634",!1,0],["c01fb9","MAL7051 ","Canada",1679397462,1679397462,-114.845,51.0676,6766.56,!1,228.81,254.21,11.05,null,6545.58,null,!1,0],["89650a","ETD9711 ","United Arab Emirates",1679397462,1679397463,30.9913,42.1777,10363.2,!1,229.4,289.25,0,null,10378.44,null,!1,0],["a070fc","N12766  ","United States",1679397461,1679397461,-72.7813,41.9062,91.44,!1,35.83,201.04,4.55,null,152.4,null,!1,0],["7c01b5","AMF     ","Australia",1679397462,1679397462,145.4564,-39.0624,5181.6,!1,141.39,162.42,0,null,5387.34,"3767",!1,0],["8007f6","GOW6202 ","India",1679397448,1679397449,77.0795,28.5686,304.8,!1,77.11,104.69,-4.23,null,228.6,null,!1,0],["7c5d71","QFA7292 ","Australia",1679397461,1679397461,152.5651,-29.0402,6096,!1,204.24,196.84,2.28,null,6484.62,"1011",!1,0],["a9ede9","EJA739  ","United States",1679397462,1679397462,-81.2309,27.6716,10668,!1,221.56,318.39,-1.3,null,11049,null,!1,0],["a93d7c","EDV4722 ","United States",1679397462,1679397462,-82.9296,42.4338,2042.16,!1,125.54,249.11,0,null,2049.78,"7461",!0,0],["4067a3","DHK793  ","United Kingdom",1679397457,1679397460,50.668,26.7133,2423.16,!1,158.95,156.34,-5.2,null,2400.3,null,!1,0],["8007f7","GOW350  ","India",1679397462,1679397462,76.8209,21.725,10972.8,!1,200.49,223.65,0,null,11414.76,null,!1,0],["aa6b9d","UAL879  ","United States",1679397462,1679397462,-4.7179,55.8814,10058.4,!1,232.11,308.52,-.33,null,9906,"7632",!1,0],["a37023","DAL2550 ","United States",1679397462,1679397462,-84.1251,33.7515,3535.68,!1,148.37,217.11,-.65,null,3627.12,"2156",!1,0],["3e175a","AZE39KW ","Germany",1679397462,1679397462,7.1354,45.6838,6309.36,!1,188.53,24.68,-4.88,null,6477,"6773",!1,0],["ad350a","DAL2804 ","United States",1679397382,1679397446,-85.798,30.3545,null,!0,0,351.56,null,null,null,null,!1,0],["c05af1","CRN711  ","Canada",1679397462,1679397462,-122.4936,49.7841,5745.48,!1,156.32,228.34,-2.28,null,5593.08,null,!1,0],["a7ea48","SKW3652 ","United States",1679397462,1679397462,-88.9211,39.8317,5753.1,!1,178.02,180.99,9.1,null,5722.62,"1137",!1,0],["4ca95e","RYR9UR  ","Ireland",1679397460,1679397462,-1.7611,41.0927,10972.8,!1,269.45,73.81,0,null,11186.16,"2233",!1,0],["7c7777","QFA1957 ","Australia",1679397308,1679397323,138.5373,-34.94,-45.72,!0,0,320.62,null,null,null,"4254",!1,0],["ac5bb0","DAL0807 ","United States",1679397462,1679397462,-93.2098,44.8857,null,!0,.9,213.75,null,null,null,null,!1,0],["a70491","EJA551  ","United States",1679397452,1679397461,-82.69,27.9045,null,!0,0,348.75,null,null,null,null,!1,0],["7810a5","CGZ7135 ","China",1679397462,1679397462,113.2116,22.9549,4472.94,!1,165.43,153.99,-4.88,null,4671.06,null,!1,0],["a44cca","DAL2216 ","United States",1679397462,1679397462,-91.9383,36.5368,11887.2,!1,271.42,107.2,0,null,11887.2,"1103",!1,0],["4ac9eb","SAS55D  ","Sweden",1679397344,1679397351,6.7076,59.3004,4777.74,!1,173.01,243.13,-12.03,null,4732.02,"1220",!1,0],["ad8ed7","AAL1690 ","United States",1679397462,1679397462,-76.2648,39.5429,9128.76,!1,214.67,229.86,0,null,9067.8,"3445",!1,0],["4ac9ed","SAS157  ","Sweden",1679397462,1679397462,12.4468,57.8454,1249.68,!1,99.16,206.17,-4.55,null,1242.06,"1207",!1,0],["4ca92d","EIN3AM  ","Ireland",1679397462,1679397462,3.0719,52.9273,10980.42,!1,225.09,284.29,0,null,10919.46,"6667",!1,0],["45d069","","Denmark",1679397462,1679397462,-15.5228,33.1284,10660.38,!1,222.95,207.33,0,null,10980.42,null,!1,0],["48a687","SPKWH   ","Poland",1679397429,1679397435,20.2786,52.6889,365.76,!1,38.07,359.23,-.33,null,419.1,null,!1,0],["7c4a0f","FD618   ","Australia",1679397462,1679397462,115.534,-31.9539,2202.18,!1,127.88,170.27,-6.18,null,2293.62,"4270",!1,0],["abb8ea","SWA2124 ","United States",1679397462,1679397462,-84.2661,41.5162,11628.12,!1,206.29,262.98,-14.96,null,11483.34,"3551",!1,0],["4ca92b","RYR58RC ","Ireland",1679397310,1679397312,9.7596,45.6581,358.14,!1,76.12,284.88,-3.9,null,457.2,"2211",!1,0],["aa7288","AAL2265 ","United States",1679397462,1679397462,-85.4148,42.7961,9753.6,!1,198.69,261.51,0,null,9593.58,"3413",!1,0],["a320a2","N300PL  ","United States",1679397454,1679397454,-93.2102,45.1378,259.08,!1,51.45,.57,-3.58,null,289.56,null,!1,0],["a25c6e","ENY3749 ","United States",1679397461,1679397462,-97.8287,28.0069,8229.6,!1,215.07,341.31,-.33,null,8519.16,null,!1,0],["34538e","AEA65TM ","Spain",1679397451,1679397458,-4.0043,43.8515,10668,!1,227.15,182.86,0,null,10782.3,"5225",!1,0],["4ca938","ITY806  ","Ireland",1679397462,1679397462,31.0155,34.2287,11887.2,!1,266.49,122.06,.33,null,12009.12,"1205",!1,0],["4ca935","EIN524  ","Ireland",1679397463,1679397463,2.4672,49.2576,2941.32,!1,148.59,94.37,-7.48,null,3017.52,"1146",!1,0],["846250","ADO80   ","Japan",1679397462,1679397462,141.1772,38.5345,11879.58,!1,197.97,200.7,-4.88,null,11833.86,null,!1,0],["34538d","VLG5FK  ","Spain",1679397462,1679397462,-.466,45.3264,10370.82,!1,244.33,26.24,0,null,10454.64,"1000",!1,0],["abe200","CXK210  ","United States",1679397462,1679397462,-71.8303,42.2643,388.62,!1,32,274.61,-1.63,null,441.96,null,!1,0],["45d065","VKG1122 ","Denmark",1679397461,1679397461,-15.5701,30.8787,10675.62,!1,218.71,208.67,.33,null,10995.66,null,!1,0],["48436f","KLM877  ","Kingdom of the Netherlands",1679397462,1679397462,4.7796,52.2642,457.2,!1,101.7,154.21,1.63,null,495.3,"3165",!1,0],["43c8e3","SYS144  ","United Kingdom",1679397462,1679397462,-2.7296,52.8278,929.64,!1,53.62,351.17,-.33,null,906.78,null,!1,0],["aace5c","AAL954  ","United States",1679397462,1679397462,-76.7606,34.4876,11277.6,!1,274.53,15.99,0,null,11399.52,"1461",!1,0],["40428b","GBZBF   ","United Kingdom",1679397459,1679397460,-.8539,53.5624,121.92,!1,22.94,222.27,-3.25,null,76.2,"5077",!1,0],["a8d4d2","UAL2391 ","United States",1679397461,1679397462,-95.6317,39.166,8694.42,!1,193.49,265.58,11.7,null,8602.98,"2122",!1,0],["4ac9fa","SAS4083 ","Sweden",1679397461,1679397461,12.8212,64.7074,11567.16,!1,230.68,198.6,0,null,11186.16,null,!1,0],["43c8e7","SYS52   ","United Kingdom",1679397462,1679397462,-2.9369,52.775,274.32,!1,38.71,274.57,-.98,null,259.08,null,!1,0],["43c8e8","SYS55   ","United Kingdom",1679397462,1679397462,-2.925,52.7517,251.46,!1,33.88,41.92,1.63,null,228.6,null,!1,0],["a26f98","UPS972  ","United States",1679397462,1679397462,-122.0349,42.725,11574.78,!1,248.99,340.07,-.33,null,11247.12,"7224",!1,0],["a7a1e8","JBU935  ","United States",1679397366,1679397366,-72.3449,37.1356,10668,!1,207.34,179.29,0,null,10698.48,"2304",!1,0],["a9f4c6","RPA3300 ","United States",1679397462,1679397462,-77.6298,38.9556,1767.84,!1,118.11,71.72,-6.18,null,1836.42,null,!1,0],["345393","MEECMPJ ","Spain",1679397155,1679397358,-1.8916,39.0315,944.88,!1,66.57,126.52,-3.25,null,1051.56,null,!1,0],["8007cf","IGO5222 ","India",1679397460,1679397460,76.5549,21.4646,10370.82,!1,211.77,223.62,0,null,10782.3,null,!1,0],["43c8ca","VYT83   ","United Kingdom",1679397462,1679397462,-3.9683,53.016,2743.2,!1,128,122.86,0,null,2697.48,"6442",!1,0],["43c8cb","VYT81   ","United Kingdom",1679397462,1679397462,-4.3163,52.9244,4549.14,!1,127.47,156.95,11.05,null,4503.42,"6443",!1,0],["43c8cf","VYT87   ","United Kingdom",1679397462,1679397462,-3.8584,52.9035,2727.96,!1,134.48,126.91,0,null,2697.48,"6441",!1,0],["4a068a","ROT703H ","Romania",1679397194,1679397324,26.7751,46.3356,5181.6,!1,144.68,11.07,-.65,null,5181.6,"1000",!1,0],["4ca947","EIN5LN  ","Ireland",1679397462,1679397462,.2314,44.3511,10972.8,!1,228.79,336.55,0,null,11094.72,"5553",!1,0],["4a068c","ROT603F ","Romania",1679397461,1679397462,26.1084,44.5785,236.22,!1,62.15,83.35,13.98,null,281.94,"1000",!1,0],["43c8d0","VYT73   ","United Kingdom",1679397462,1679397462,-4.5245,53.5285,2080.26,!1,135.78,118.02,-7.48,null,2034.54,"3744",!1,0],["3c11fe","AIB284B ","Germany",1679397462,1679397462,10.4794,53.6162,9136.38,!1,201.63,84.29,9.75,null,9174.48,"7751",!1,0],["89647b","UAE6AQ  ","United Arab Emirates",1679397461,1679397461,17.9239,44.0586,11887.2,!1,258.93,129.92,0,null,11887.2,"7536",!1,0],["acbf63","AAL1509 ","United States",1679397462,1679397462,-75.9081,43.0734,11574.78,!1,201.76,271.75,0,null,11346.18,"3562",!1,0],["89647f","UAE41P  ","United Arab Emirates",1679397462,1679397462,26.9553,44.4709,12496.8,!1,261.62,136.35,0,null,12435.84,"7675",!1,0],["a4f366","N418RY  ","United States",1679397462,1679397462,5.3788,49.561,8542.02,!1,210.88,258.03,-.98,null,8618.22,"1000",!1,0],["78125e","CSN6783 ","China",1679397461,1679397461,112.2502,22.8625,4465.32,!1,220.15,46.42,-10.08,null,4648.2,null,!1,0],["4d02b5","JFA14P  ","Luxembourg",1679397462,1679397462,8.7459,47.968,7018.02,!1,109.21,2.97,4.23,null,7155.18,"3006",!1,0],["404e46","GCDMX   ","United Kingdom",1679397462,1679397462,-2.3171,52.0008,647.7,!1,31.9,270,.65,null,632.46,null,!1,0],["a76683","UPS56   ","United States",1679397463,1679397463,-120.1931,32.002,11582.4,!1,184.56,227.15,.33,null,11696.7,"1037",!1,0],["4258c0","RANGER 3","United Kingdom",1679397267,1679397267,-2.2762,53.3581,null,!0,5.4,50.62,null,null,null,null,!1,0],["a75359","JIA5029 ","United States",1679397462,1679397462,-86.396,36.0545,3406.14,!1,171.83,89.66,12.68,null,3467.1,"5647",!1,0],["e8408d","RER871  ","Ecuador",1679397462,1679397462,-78.3576,.065,3726.18,!1,134.63,4.16,12.03,null,null,null,!1,0],["ad9645","AAL1823 ","United States",1679397462,1679397463,-89.5303,42.5867,7261.86,!1,229.72,107.87,-4.88,null,7170.42,"2646",!1,0],["ab5699","N83GB   ","United States",1679397454,1679397459,-86.5536,32.9463,3543.3,!1,162.48,285.05,-1.3,null,3611.88,null,!1,0],["ac6f8a","DAL1343 ","United States",1679397462,1679397462,-84.2855,33.9301,3284.22,!1,178.43,312.43,5.53,null,3352.8,null,!1,0],["4d02c4","JFA25A  ","Luxembourg",1679397462,1679397462,2.1902,39.5374,5928.36,!1,152.65,276.19,13.98,null,6126.48,null,!1,0],["ae062f","SPORT21 ","United States",1679397462,1679397462,51.7972,25.7446,4023.36,!1,122.96,158.91,-.33,null,4061.46,null,!1,0],["ac0cf8","DAL2622 ","United States",1679397410,1679397416,-83.3264,42.2302,167.64,!1,64.96,209.41,-3.58,null,259.08,"3440",!1,0],["781284","CSZ9887 ","China",1679397462,1679397462,113.9684,23.2299,5554.98,!1,223.35,38.45,9.75,null,5798.82,null,!1,0],["a0851b","GTI3822 ","United States",1679397462,1679397462,-84.668,39.1736,624.84,!1,80.78,181.09,0,null,685.8,"3746",!1,0],["e495cc","GLO2006 ","Brazil",1679397462,1679397462,-42.7749,-22.0423,7711.44,!1,218.8,26.99,7.15,null,8168.64,null,!1,0],["344157","VLG6615 ","Spain",1679397462,1679397462,-3.0714,47.15,10668,!1,239.85,189.38,0,null,10736.58,"2003",!1,0],["344158","VLG1427 ","Spain",1679397457,1679397462,-2.1061,42.9711,5547.36,!1,206.93,118.35,10.08,null,5699.76,null,!1,0],["aa70b1","CKS834  ","United States",1679397233,1679397234,151.1737,-33.9281,null,!0,1.29,163.12,null,null,null,null,!1,0],["ac13f9","SWA3446 ","United States",1679397462,1679397462,-77.3554,35.0402,10972.8,!1,220.24,194.75,0,null,11056.62,"2447",!1,0],["4ca84b","RYR76XE ","Ireland",1679397462,1679397462,-5.9877,41.0866,10965.18,!1,242.35,24.99,.33,null,11163.3,"2052",!1,0],["a810af","FDX9153 ","United States",1679397461,1679397461,140.7818,37.0242,11574.78,!1,184.15,231.47,0,null,11666.22,null,!1,0],["896469","FDB575  ","United Arab Emirates",1679397461,1679397462,73.6428,28.3476,10058.4,!1,254.15,89.3,-.33,null,10241.28,null,!1,0],["896473","UAE8ER  ","United Arab Emirates",1679397462,1679397462,-66.7008,48.3882,12192,!1,230.68,220.3,.33,null,11856.72,"7477",!1,0],["896472","UAE37V  ","United Arab Emirates",1679397462,1679397462,25.3818,45.4412,11887.2,!1,254.35,133.61,0,null,11833.86,"7672",!1,0],["ab436f","AAL71   ","United States",1679397462,1679397462,3.0065,54.6933,10363.2,!1,264.09,328.14,-.33,null,10264.14,"0125",!1,0],["896476","UAE211  ","United Arab Emirates",1679397406,1679397406,50.1409,63.2682,10363.2,!1,244.18,347.84,0,null,null,null,!1,0],["4ca859","RYR28GF ","Ireland",1679397462,1679397462,-.5284,46.2176,10972.8,!1,220.88,353.98,.33,null,11033.76,"5374",!1,0],["ab4383","AAL465  ","United States",1679397462,1679397462,-77.7181,38.426,5806.44,!1,208.25,229.11,9.43,null,5806.44,null,!1,0],["4ca850","RYR6GT  ","Ireland",1679397463,1679397463,.7723,52.0221,2263.14,!1,110.62,269.2,-3.25,null,2255.52,"6602",!1,0],["e48ec6","TAM3184 ","Brazil",1679397462,1679397462,-44.1386,-19.0448,11277.6,!1,242.76,25.48,0,null,11910.06,null,!1,0],["4ca852","RYR1W   ","Ireland",1679397440,1679397461,-3.7655,43.7687,11590.02,!1,224.08,344.14,0,null,11711.94,null,!1,0],["4018c4","GRVRT   ","United Kingdom",1679397462,1679397462,-.8193,54.0169,731.52,!1,59.15,346.93,-1.63,null,678.18,"7601",!1,0],["4ca85b","ITY1762 ","Ireland",1679397462,1679397462,10.5382,43.302,10713.72,!1,203.04,340.92,-5.2,null,10881.36,"1000",!1,0],["896481","UAE903  ","United Arab Emirates",1679397440,1679397458,50.0425,26.8266,12192,!1,188.06,288.34,0,null,12428.22,null,!1,0],["484f72","KLM627  ","Kingdom of the Netherlands",1679397462,1679397462,-10.009,55.9158,10363.2,!1,211.97,293.45,0,null,10203.18,"2105",!1,0],["ac00d6","SWA2677 ","United States",1679397462,1679397462,-87.5641,36.7966,10668,!1,256.32,132.56,.33,null,10668,"1765",!1,0],["484f76","HNL17A  ","Kingdom of the Netherlands",1679397461,1679397461,4.5483,53.7137,1524,!1,65.86,180.9,0,null,1516.38,null,!1,0],["a01bbc","RPA4795 ","United States",1679397463,1679397463,-89.1788,38.4642,7261.86,!1,214.18,96.07,6.83,null,7239,"2143",!1,0],["a035db","AMF1022 ","United States",1679397462,1679397462,-84.846,43.0213,3634.74,!1,114.87,329.3,.33,null,3611.88,null,!1,0],["40688b","BAW207  ","United Kingdom",1679397462,1679397462,-8.8469,53.8418,10972.8,!1,228.01,303.87,-.33,null,10896.6,"4443",!1,0],["a07228","RPA4477 ","United States",1679397462,1679397462,-74.5021,40.478,2926.08,!1,187.91,87.8,0,null,2971.8,"4136",!1,0],["403b57","GJOYZ   ","United Kingdom",1679397177,1679397454,-1.5051,51.6134,1264.92,!1,52.24,302.12,0,null,1234.44,"0430",!1,0],["896455","UAE7E   ","United Arab Emirates",1679397462,1679397462,-63.7148,49.9102,10972.8,!1,228.46,224.45,0,null,10576.56,null,!1,0],["40688f","BAW276  ","United Kingdom",1679397462,1679397462,12.829,48.8039,13106.4,!1,232.14,296.17,-.33,null,13121.64,"0605",!1,0],["896453","UAE3U   ","United Arab Emirates",1679397462,1679397462,20.3457,48.5451,9753.6,!1,236.29,304.17,0,null,9677.4,"5301",!1,0],["020095","RAM229  ","Morocco",1679397461,1679397462,-2.7566,37.2129,11887.2,!1,210.22,235.07,.33,null,12192,"1022",!1,0],["a022c6","DAL746  ","United States",1679397461,1679397461,-82.0658,38.2666,10363.2,!1,214.14,250.35,-.33,null,10325.1,"1145",!1,0],["a19e61","ENY3361 ","United States",1679397436,1679397436,-97.0449,38.3763,7147.56,!1,195.13,188.64,7.8,null,7056.12,null,!1,0],["406897","GRIDB   ","United Kingdom",1679397462,1679397462,-1.2032,52.4045,441.96,!1,71.89,9.06,-.33,null,434.34,"0036",!1,0],["89644b","UAE181  ","United Arab Emirates",1679396827,1679397331,55.0857,26.7017,10972.8,!1,194.2,308.11,0,null,11224.26,null,!1,0],["896457","UAE7ER  ","United Arab Emirates",1679397369,1679397376,-.0877,51.1623,426.72,!1,65.9,257.37,-3.25,null,null,"3253",!1,0],["484300","TD47    ","Kingdom of the Netherlands",1679397311,1679397311,4.7576,52.3105,null,!0,4.89,219.38,null,null,null,null,!1,0],["a1ee27","SWA206  ","United States",1679397462,1679397462,-95.316,30.7757,12428.22,!1,253.11,53.01,6.83,null,12672.06,"0611",!1,0],["a693aa","GTI3671 ","United States",1679397462,1679397462,-100.9735,34.2755,11887.2,!1,288.68,109.79,0,null,12016.74,null,!1,0],["a26ec9","N256LG  ","United States",1679397462,1679397462,-74.3907,41.4904,12192,!1,191.08,217.67,0,null,12039.6,"3424",!1,0],["896464","ETD140  ","United Arab Emirates",1679397304,1679397443,31.4737,33.2672,11887.2,!1,275.74,140.91,0,null,12024.36,"2212",!1,0],["aa8fdd","N78TG   ","United States",1679397277,1679397277,-79.6509,35.0157,708.66,!1,77.85,225,-.98,null,807.72,null,!1,0],["4d02cd","JFA53W  ","Luxembourg",1679397462,1679397462,5.0305,52.3445,1722.12,!1,124.43,43.99,-8.13,null,1744.98,"1000",!1,0],["484f2e","CND217  ","Kingdom of the Netherlands",1679397452,1679397463,19.9665,41.4448,11277.6,!1,236.7,141.88,.33,null,11277.6,null,!1,0],["867904","ANA76   ","Japan",1679397153,1679397153,139.7937,35.5505,null,!0,4.89,329.06,null,null,null,"2066",!1,0],["4ca88f","RYR36RX ","Ireland",1679397432,1679397453,-4.3016,39.4492,10668,!1,194.33,213.77,0,null,10927.08,"7103",!1,0],["aa7cb4","N775MG  ","United States",1679397461,1679397462,-85.634,32.9745,6080.76,!1,190.18,78.29,-13,null,6179.82,"2353",!1,0],["a06b0b","SCM12   ","United States",1679397462,1679397462,-97.3307,30.9234,10332.72,!1,259.19,125.14,-11.38,null,10591.8,null,!1,0],["e48eff","GLO1935 ","Brazil",1679397462,1679397462,-46.82,-22.8706,4206.24,!1,156.51,92.26,-2.28,null,4457.7,null,!1,0],["a716f6","DAL2427 ","United States",1679397462,1679397462,-82.9749,34.8581,8252.46,!1,213.96,223.64,-5.2,null,8336.28,"5056",!1,0],["c00d51","FLE309  ","Canada",1679397458,1679397458,-79.622,43.6818,null,!0,6.69,315,null,null,null,"0533",!1,0],["a716ee","JIA5399 ","United States",1679397462,1679397462,-81.0707,35.2391,2468.88,!1,121.76,175.64,-6.5,null,2537.46,"7434",!1,0],["a573ec","UPS992  ","United States",1679397462,1679397462,-118.4265,44.5257,10972.8,!1,234.68,1.63,.33,null,10614.66,null,!1,0],["a3e69d","UPS312  ","United States",1679397375,1679397380,-98.4927,29.5483,289.56,!1,66.69,131.56,-3.9,null,289.56,"6665",!1,0],["a99f16","SKW4999 ","United States",1679397462,1679397462,-94.6903,30.8919,8260.08,!1,189.13,299.49,6.83,null,8503.92,null,!1,0],["a4ec6b","SWA2452 ","United States",1679397286,1679397287,-81.3264,28.3945,68.58,!1,59.68,359.51,-3.25,null,160.02,"3461",!1,0],["4005bf","BAW156  ","United Kingdom",1679397461,1679397462,16.4213,45.8462,12192,!1,236.1,315.62,0,null,12199.62,"2244",!1,0],["aa4953","ENY3631 ","United States",1679397462,1679397462,-83.0722,43.1273,9753.6,!1,200.93,252.26,0,null,9578.34,"0537",!1,0],["896441","ETD902  ","United Arab Emirates",1679397181,1679397181,8.5611,50.0306,null,!0,.51,247.5,null,null,null,"2247",!1,0],["3d09f4","DECAE   ","Germany",1679397462,1679397462,11.7809,52.023,487.68,!1,47.16,353.11,-.33,null,594.36,"7744",!1,0],["4005ba","BAW75   ","United Kingdom",1679397462,1679397462,.3803,49.0672,10728.96,!1,253.9,169.97,5.53,null,10721.34,"2213",!1,0],["a63eb2","N501LS  ","United States",1679397462,1679397462,-82.6564,40.522,5890.26,!1,195.46,22.11,3.58,null,5859.78,"4006",!1,0],["a0ce7c","CXK595  ","United States",1679397462,1679397462,-82.6885,27.9007,-83.82,!1,30.69,39.56,-3.25,null,-15.24,"0154",!1,0],["a1f557","UAL107  ","United States",1679397462,1679397463,11.6737,48.3585,1127.76,!1,115.54,283.91,7.48,null,1219.2,"6652",!1,0],["a382b3","UPS970  ","United States",1679397449,1679397449,-122.6331,45.5997,99.06,!1,68.85,119.05,-3.58,null,60.96,"3127",!1,0],["738488","","Israel",1679397239,1679397239,34.8912,31.9979,null,!0,1.03,50.62,null,null,null,null,!1,0],["484f22","","Kingdom of the Netherlands",1679397433,1679397435,11.5073,44.4631,304.8,!1,41.65,162.01,-1.95,null,373.38,null,!1,0],["a51ed1","UAL445  ","United States",1679397462,1679397462,-74.4169,40.9308,1211.58,!1,142.69,79.82,-8.78,null,1303.02,"6617",!1,0],["780b08","","China",1679397260,1679397262,118.1097,24.667,9784.08,!1,199.53,255.21,0,null,10241.28,null,!1,0],["a34884","N310TK  ","United States",1679397461,1679397461,-6.2456,53.434,null,!0,7.2,16.88,null,null,null,null,!1,0],["a18b71","AAL1561 ","United States",1679397449,1679397457,-74.1851,40.6833,null,!0,0,5.62,null,null,null,null,!1,0],["aaf9c1","SKW4123 ","United States",1679397462,1679397463,-83.2277,42.3608,1120.14,!1,79.92,203.93,-1.3,null,1143,"7171",!1,0],["c81fcc","LFT01   ","New Zealand",1679397393,1679397395,175.4983,-41.1379,2240.28,!1,112.27,67.08,-4.55,null,2301.24,"5204",!1,0],["a34878","SKW4002 ","United States",1679397462,1679397462,-99.0978,41.5198,10363.2,!1,185.45,277.97,0,null,10157.46,null,!1,0],["3d338c","DERTS   ","Germany",1679397462,1679397462,12.5264,50.9972,259.08,!1,47.1,220.13,-.33,null,320.04,"6344",!1,0],["abb930","SWA201  ","United States",1679397462,1679397462,-84.3613,33.5368,3177.54,!1,145.59,269.8,-8.78,null,3276.6,null,!1,0],["a658de","NKS1698 ","United States",1679397462,1679397462,-81.9276,29.3986,7360.92,!1,223.11,166.67,-12.03,null,7642.86,"5751",!1,0],["acbf03","N920JS  ","United States",1679397460,1679397460,12.5952,41.7959,null,!0,10.29,331.88,null,null,null,null,!1,0],["a98051","FFT1076 ","United States",1679397462,1679397462,-81.7423,30.5062,11277.6,!1,220.87,349.4,.33,null,11567.16,null,!1,0],["484f06","KLM99C  ","Kingdom of the Netherlands",1679397459,1679397459,4.7607,52.2979,null,!0,59.16,239.06,null,null,null,null,!1,0],["a2bec7","SWA1500 ","United States",1679397462,1679397462,-84.2912,33.3126,12199.62,!1,221.1,339.29,0,null,12321.54,"3634",!1,0],["a67b07","GTI3681 ","United States",1679397462,1679397462,-93.2954,33.9996,12192,!1,199.6,233.28,0,null,12306.3,"7376",!1,0],["a9dc5e","UAL782  ","United States",1679397462,1679397462,-82.0221,28.2702,6477,!1,196.47,257.6,20.81,null,6736.08,"0725",!1,0],["ac893a","AAL1269 ","United States",1679397463,1679397463,-82.1718,29.401,10363.2,!1,207.47,335.85,0,null,10668,"7720",!1,0],["ab3c0d","AAL905  ","United States",1679397461,1679397461,-44.8983,-20.2848,11879.58,!1,238.22,149.5,.33,null,12534.9,null,!1,0],["ac760d","AAL1746 ","United States",1679397462,1679397462,-81.5696,38.4377,9761.22,!1,226.51,185.87,0,null,9723.12,"0573",!1,0],["038259","VRE821  ","Côte d'Ivoire",1679397338,1679397338,-.8848,5.8625,11567.16,!1,226.34,262.29,-.33,null,12291.06,null,!1,0],["781e5b","CTJ3834 ","China",1679397462,1679397462,118.369,15.4291,9144,!1,218.43,312.71,0,null,9738.36,null,!1,0],["a2b2da","ENY3936 ","United States",1679397462,1679397462,-85.0294,40.849,7924.8,!1,180.97,300.21,0,null,7856.22,"6701",!1,0],["c1e567","SER620  ","Canada",1679397447,1679397455,-73.748,45.4591,null,!0,3.09,239.06,null,null,null,null,!1,0],["addf01","AAL2551 ","United States",1679397461,1679397462,-95.7912,31.5363,7315.2,!1,205.75,328.5,-.33,null,7498.08,"2541",!1,0],["a3f8b8","AAL17   ","United States",1679397462,1679397462,-80.5703,25.8972,5234.94,!1,185.59,231.41,9.1,null,5455.92,null,!1,0],["0082f1","ZSBCI   ","South Africa",1679397461,1679397461,26.9586,-27.6478,8839.2,!1,146.62,19.9,.33,null,9349.74,null,!1,0],["4ca7d8","EIN960  ","Ireland",1679397462,1679397462,-6.2559,53.4223,null,!0,4.89,95.62,null,null,null,"7665",!1,0],["ab4f5d","JBU28   ","United States",1679397462,1679397462,-76.0014,39.3457,7818.12,!1,236.67,42.53,-8.13,null,7802.88,"5637",!1,0],["c1e571","SER460  ","Canada",1679397213,1679397213,-73.761,45.4582,null,!0,12.86,168.75,null,null,null,null,!1,0],["aae6d5","DAL51   ","United States",1679397462,1679397462,-1.2834,52.8412,8298.18,!1,169.51,326.26,4.55,null,8206.74,"1474",!1,0],["a98c7a","PAC945  ","United States",1679397462,1679397462,-85.5012,39.3232,5989.32,!1,207.45,316.81,10.08,null,5951.22,null,!1,0],["744de2","FJR300  ","Jordan",1679397461,1679397462,34.7525,32.0199,8808.72,!1,206.73,273.71,10.73,null,8938.26,"5667",!1,0],["abb94f","SWA1657 ","United States",1679397462,1679397462,-90.8319,29.0793,10972.8,!1,196.92,276.9,0,null,11308.08,"7433",!0,0],["a32e8c","DAL1706 ","United States",1679397457,1679397459,-93.2167,44.8839,null,!0,.06,120.94,null,null,null,"0522",!1,0],["a1f595","SWA1704 ","United States",1679397462,1679397462,-85.4452,33.9021,10172.7,!1,190.34,287.95,10.08,null,10294.62,"3161",!1,0],["43c91a","STGRY01 ","United Kingdom",1679397462,1679397462,-2.3608,56.4214,5181.6,!1,161.11,155.07,0,null,5052.06,"6101",!1,0],["ac763e","AAL2131 ","United States",1679397462,1679397462,-90.4014,34.9541,11574.78,!1,189.21,259.82,0,null,11650.98,"1051",!1,0],["488a66","TCUKU   ","Poland",1679397462,1679397462,29.4769,40.3678,1272.54,!1,45.69,144.16,-3.25,null,1333.5,null,!1,0],["0d09bf","VOI744  ","Mexico",1679397462,1679397462,-99.1825,19.354,5760.72,!1,186.06,260.77,7.8,null,6088.38,null,!1,0],["89649f","UAE74A  ","United Arab Emirates",1679397462,1679397462,10.1842,56.0312,9753.6,!1,231.47,311.31,0,null,9723.12,"3257",!1,0],["3848f0","FBSHQ   ","France",1679397391,1679397424,5.3877,43.4837,243.84,!1,42.5,321.88,-.33,null,274.32,"5471",!1,0],["a3355e","JBU960  ","United States",1679397462,1679397462,-74.8671,39.8531,10668,!1,270.03,46.7,0,null,10568.94,"7167",!1,0],["740736","RJA117  ","Jordan",1679397462,1679397462,16.1278,44.3021,10363.2,!1,222.42,294.31,0,null,10401.3,"5654",!1,0],["740735","RJA111  ","Jordan",1679397462,1679397462,26.6037,37.6386,9761.22,!1,207.33,318.32,0,null,9913.62,"5657",!1,0],["740730","RJA611  ","Jordan",1679397151,1679397151,48.9088,27.2647,8511.54,!1,206.32,298.93,4.88,null,7978.14,null,!1,0],["acd964","AAL1546 ","United States",1679397462,1679397462,-77.6972,38.4939,7924.8,!1,188.37,212.74,0,null,7924.8,"7446",!1,0],["491463","RVP101  ","Portugal",1679397462,1679397462,-8.0355,38.9784,975.36,!1,42.12,61.56,0,null,1112.52,null,!1,0],["501dd1","CTN56E  ","Croatia",1679397462,1679397462,15.2781,46.1074,4351.02,!1,142.31,133.1,-6.5,null,4465.32,"1000",!1,0],["781e8a","CKK229  ","China",1679397462,1679397462,137.1728,33.7025,9448.8,!1,288.47,87.04,-.33,null,9723.12,"4410",!1,0],["76d24c","TGW540  ","Singapore",1679397300,1679397410,98.6033,3.7624,11582.4,!1,235.6,281.97,.33,null,12313.92,"2237",!1,0],["ad8f4b","FDX1166 ","United States",1679397462,1679397462,-111.9784,40.8031,null,!0,6.94,14.06,null,null,null,null,!1,0],["a658a1","GTI4762 ","United States",1679397462,1679397462,-9.1031,54.3334,9448.8,!1,212.72,298.61,0,null,9334.5,"4110",!1,0],["4ca7b9","RYR67GL ","Ireland",1679397462,1679397462,-6.5163,51.6705,10668,!1,241.64,113.73,.33,null,10652.76,"1254",!1,0],["49144c","GSP351  ","Portugal",1679397461,1679397462,-7.9117,38.8784,876.3,!1,40.67,2.17,-.98,null,975.36,null,!1,0],["ad3fde","DAL2760 ","United States",1679397298,1679397298,-93.2151,44.882,null,!0,2.83,36.56,null,null,null,null,!1,0],["740741","RJA101  ","Jordan",1679397463,1679397463,25.1206,36.8453,11590.02,!1,204.66,302.37,.33,null,11719.56,"5663",!1,0],["0d09e5","AMX029  ","Mexico",1679397462,1679397462,-97.3285,17.6323,11582.4,!1,240.57,318.64,0,null,12176.76,null,!1,0],["a382b6","DAL2562 ","United States",1679397462,1679397462,-82.3486,41.5006,7078.98,!1,179.44,306.61,-5.2,null,7033.26,"2164",!1,0],["86796c","ANA430  ","Japan",1679397462,1679397462,135.5946,34.4043,1950.72,!1,99.7,58.93,-2.6,null,2042.16,null,!1,0],["a9f655","GLG7393 ","United States",1679397214,1679397214,-79.5835,8.0504,11887.2,!1,225.96,181.83,.33,null,12588.24,null,!1,0],["501dc4","CTN461  ","Croatia",1679397387,1679397387,15.5529,45.7711,2606.04,!1,139.69,117.89,-6.18,null,2766.06,"1000",!1,0],["78124c","CSH9251 ","China",1679397462,1679397462,113.7995,23.472,9784.08,!1,223.71,193.97,.33,null,10271.76,null,!1,0],["3ff9a1","DMLED   ","Germany",1679397462,1679397462,4.7872,44.9909,3657.6,!1,76.06,23.1,0,null,3749.04,"3730",!1,0],["a34480","N31AH   ","United States",1679397462,1679397462,-72.2669,21.798,198.12,!1,42.57,313.53,1.3,null,243.84,null,!1,0],["7811f2","CHH7005 ","China",1679397270,1679397270,113.1385,23.1369,2781.3,!1,157.79,3.93,.33,null,2849.88,null,!1,0],["888180","VJC974  ","Viet Nam",1679397463,1679397463,119.9831,22.7519,10066.02,!1,245.61,28.39,0,null,10607.04,null,!1,0],["3965a0","AFR069  ","France",1679397462,1679397462,-11.235,50.5198,10668,!1,274.43,102.89,0,null,10706.1,null,!1,0],["4077b3","BND86L  ","United Kingdom",1679397462,1679397462,-2.1096,57.1948,800.1,!1,58.36,95.06,5.85,null,708.66,null,!1,0],["aa8e76","N78CY   ","United States",1679397462,1679397462,-97.1342,37.5084,13098.78,!1,203.04,303.53,-.33,null,13045.44,"7420",!1,0],["3965a4","AFR460  ","France",1679397462,1679397462,-7.9245,42.8138,9448.8,!1,264.25,218.68,0,null,9669.78,null,!1,0],["841ff4","JAL529  ","Japan",1679397462,1679397462,139.9518,35.6211,3147.06,!1,152.86,358.26,13.66,null,3238.5,"2260",!1,0],["ab1890","DAL2048 ","United States",1679397462,1679397462,-72.9686,41.8634,2933.7,!1,128.53,281.31,12.35,null,2933.7,"1465",!1,0],["a3f4ea","DAL2782 ","United States",1679397462,1679397462,-85.8843,34.2684,7155.18,!1,254.14,107.55,-12.03,null,7284.72,"1647",!1,0],["a5977e","MMN46   ","United States",1679397177,1679397177,-82.4331,35.3287,1226.82,!1,109.45,274.85,-5.2,null,1501.14,null,!1,0],["3462c9","AEA175  ","Spain",1679397456,1679397462,-77.246,-9.1153,12192,!1,253.97,183.02,-.33,null,12900.66,null,!1,0],["3462c8","IBE2601 ","Spain",1679397213,1679397215,-44.6967,-24.2977,11582.4,!1,225.33,228.89,0,null,12214.86,null,!1,0],["a414e8","DAL1040 ","United States",1679397463,1679397463,-93.3773,32.5369,11887.2,!1,246.25,38.81,0,null,12047.22,"1740",!1,0],["4077a0","GIRJE   ","United Kingdom",1679397462,1679397462,-1.409,54.3898,1097.28,!1,67.08,171.62,-1.63,null,1036.32,"0401",!1,0],["3965b2","AFR442  ","France",1679397461,1679397461,-6.5883,44.012,10058.4,!1,261.96,219.66,0,null,10218.42,null,!1,0],["3965b1","AFR682  ","France",1679397462,1679397462,-9.1428,51.088,9753.6,!1,215.63,293.63,.33,null,9791.7,"5622",!1,0],["c023c7","ACA845  ","Canada",1679397331,1679397358,-10.0512,57.0132,11582.4,!1,241.43,293.62,-.33,null,11422.38,"2567",!1,0],["4ca6c4","EIN58P  ","Ireland",1679397437,1679397461,-3.9969,37.3547,6545.58,!1,216.64,20.29,8.13,null,6812.28,null,!1,0],["aa8e4d","N78BG   ","United States",null,1679397462,null,null,426.72,!1,71,323.55,.98,null,411.48,null,!1,0],["aad21c","ABX2042 ","United States",1679397462,1679397462,-90.8833,35.477,12192,!1,201.47,236.35,-.65,null,12252.96,"6712",!1,0],["e4961c","PSFPG   ","Brazil",1679397462,1679397462,-46.4952,-20.8522,12192,!1,231.82,240.19,-.33,null,12832.08,null,!1,0],["a641b6","DAL27   ","United States",1679397462,1679397462,-151.4604,57.3565,11582.4,!1,225.54,257.49,.33,null,11109.96,null,!1,0],["a21142","EDV5468 ","United States",1679397462,1679397462,-76.6189,38.087,10363.2,!1,253.27,40.39,0,null,10317.48,"7127",!1,0],["accee2","ASA344  ","United States",1679397462,1679397462,-89.62,37.5297,10675.62,!1,263.74,81.47,0,null,10645.14,"6351",!1,0],["c06c53","","Canada",1679397241,1679397242,-71.6124,46.7345,2217.42,!1,137.21,49.56,-6.83,null,2156.46,"5274",!1,0],["485ecc","KLM119  ","Kingdom of the Netherlands",1679397462,1679397462,8.6972,43.9207,10058.4,!1,264.51,178.55,0,null,10241.28,"3142",!1,0],["a641bf","DAL810  ","United States",1679397462,1679397462,-71.091,42.564,1203.96,!1,118.69,77.23,-12.03,null,1249.68,"6602",!1,0],["a40de9","SCM36   ","United States",1679397462,1679397462,-95.3565,29.7103,502.92,!1,67.31,134.07,-3.9,null,518.16,"0522",!1,0],["4ca6d9","SAS1467 ","Ireland",1679397462,1679397463,12.844,55.8302,1287.78,!1,100.53,137.9,-5.2,null,1295.4,"1202",!1,0],["a33d68","DAL2699 ","United States",1679397462,1679397462,-90.3855,38.674,2621.28,!1,137.96,288.03,19.18,null,2598.42,null,!1,0],["888190","BAV1627 ","Viet Nam",1679397452,1679397452,106.0865,17.6369,10988.04,!1,237.17,180.5,.33,null,11597.64,null,!1,0],["683273","VSV5210 ","Kazakhstan",1679397461,1679397461,84.9495,24.6519,10972.8,!1,198.16,300.76,.33,null,11247.12,"6152",!1,0],["e4962e","AZU4347 ","Brazil",1679397459,1679397462,-47.2682,-23.2914,3070.86,!1,189.34,213.47,19.51,null,3261.36,null,!1,0],["ac72af","AAL1152 ","United States",1679397461,1679397462,-80.1639,33.7343,7254.24,!1,214.21,29.34,-5.2,null,7345.68,null,!1,0],["aa2ba2","UAL2376 ","United States",1679397462,1679397462,-77.9775,33.9898,9448.8,!1,233.17,1.9,0,null,9525,"3715",!1,0],["a6b7f0","CSI532  ","United States",1679397246,1679397246,-107.053,33.8083,6400.8,!1,122.05,199.96,0,null,6484.62,null,!1,0],["aa7b10","SWA3541 ","United States",1679397462,1679397462,-83.6209,34.2851,6461.76,!1,199.45,223.12,-16.26,null,6545.58,"0537",!1,0],["e49635","PSGSV   ","Brazil",1679397461,1679397461,-47.02,-21.6566,2567.94,!1,85.88,338.2,7.15,null,2735.58,null,!1,0],["888148","PIC6908 ","Viet Nam",1679397460,1679397460,114.5267,24.1531,10096.5,!1,238.6,23.91,.33,null,10599.42,null,!1,0],["aade8d","N8QD    ","United States",1679397253,1679397264,-81.7592,41.3042,426.72,!1,55.16,19.62,0,null,502.92,"5552",!1,0],["49c2ae","OKZUN20 ","Czech Republic",1679397461,1679397461,16.9711,49.226,609.6,!1,53.22,253.14,-.33,null,null,null,!1,0],["4242f9","VPBMP   ","United Kingdom",1679397212,1679397345,25.4545,35.5453,12496.8,!1,280.97,128.23,-.33,null,12611.1,"0405",!1,0],["c02fb8","ACA81   ","Canada",1679397462,1679397462,28.4076,36.0709,10363.2,!1,230.27,318.26,0,null,10507.98,null,!1,0],["a64db9","NKS355  ","United States",1679397462,1679397462,-80.783,32.4363,11269.98,!1,243.91,25.48,.33,null,11452.86,null,!1,0],["aae597","AAL723  ","United States",1679397462,1679397462,-10.087,54.6386,10972.8,!1,232.89,297.92,-.33,null,10873.74,"6225",!1,0],["3c49cb","EWG18L  ","Germany",1679397462,1679397462,11.4207,50.1905,8648.7,!1,197.52,284.33,-10.08,null,8763,"1000",!1,0],["4bb069","THY1LN  ","Turkey",1679397462,1679397462,19.3535,47.3335,899.16,!1,89.71,194.28,-.65,null,967.74,null,!1,0],["8964fa","ETD98V  ","United Arab Emirates",1679397462,1679397462,22.6125,40.83,11879.58,!1,248.47,134.25,0,null,11917.68,null,!1,0],["4bb067","THY2CY  ","Turkey",1679397461,1679397462,6.4504,45.5189,8046.72,!1,221.32,129.91,8.45,null,8199.12,"3300",!1,0],["a44a6d","DAL2295 ","United States",1679397462,1679397462,-77.8041,36.6144,10675.62,!1,258.27,37.55,0,null,10683.24,"0530",!1,0],["3c49d4","EWG1UZ  ","Germany",1679397462,1679397462,12.267,42.2459,11277.6,!1,250.59,145.2,0,null,11399.52,"0635",!1,0],["4bb061","THY538  ","Turkey",1679397461,1679397462,24.2275,40.6047,11277.6,!1,243.71,71.03,.33,null,11338.56,null,!1,0],["abeb57","SWA3343 ","United States",1679397462,1679397462,-77.6992,39.4503,3832.86,!1,178.52,90.66,.33,null,3855.72,"3141",!1,0],["a59760","N46BE   ","United States",1679397462,1679397462,-91.1209,33.3006,13106.4,!1,160.9,294.76,0,null,13243.56,"0767",!1,0],["48408f","DVR260  ","Kingdom of the Netherlands",1679397449,1679397449,-70.0396,12.5077,160.02,!1,35.48,119.54,-4.23,null,167.64,null,!1,0],["8964d1","","United Arab Emirates",1679397231,1679397231,55.2517,25.4174,2529.84,!1,128.64,131.6,0,null,2529.84,null,!1,0],["8964bf","ETD75F  ","United Arab Emirates",1679397462,1679397462,1.8153,51.7471,7879.08,!1,191.89,270.46,-2.93,null,7833.36,"3227",!1,0],["8964be","ETD9TA  ","United Arab Emirates",1679397462,1679397462,15.0889,45.734,11269.98,!1,266.5,137.35,-.33,null,11315.7,"7647",!1,0],["4064a7","BHL530  ","United Kingdom",1679397462,1679397462,1.0182,53.2488,1219.2,!1,75.38,347.39,0,null,1196.34,null,!1,0],["8964bc","ETD428  ","United Arab Emirates",1679397462,1679397462,101.6377,14.0556,11277.6,!1,278.25,99.79,-.33,null,11948.16,"3460",!1,0],["3965ad","AFR842  ","France",1679397462,1679397462,2.1996,48.6699,1173.48,!1,115.17,237.59,7.15,null,1242.06,"0644",!1,0],["4bb029","THY3YJ  ","Turkey",1679397462,1679397462,29.4594,40.4026,3375.66,!1,152.73,274.44,-5.53,null,3467.1,null,!1,0],["ad8bed","JBU909  ","United States",1679397462,1679397462,-70.7645,41.8107,6416.04,!1,180.98,208.9,9.1,null,6316.98,null,!1,0],["ade2b8","AAL1675 ","United States",1679397462,1679397462,-81.9868,33.3601,9204.96,!1,223.48,2.51,-4.88,null,9326.88,"0564",!1,0],["ac72f0","AAL2510 ","United States",1679397462,1679397462,-75.7106,38.1074,9753.6,!1,215.52,201.42,0,null,9730.74,"1603",!1,0],["88814d","PIC6822 ","Viet Nam",1679397462,1679397462,101.2407,14.6954,8221.98,!1,251.83,35.61,11.05,null,8694.42,"6105",!1,0],["02a196","TAR719  ","Tunisia",1679397462,1679397462,2.7585,47.557,8107.68,!1,222.48,163.2,7.48,null,8221.98,"7640",!1,0],["e48f6a","TAM3360 ","Brazil",1679397215,1679397215,-45.9847,-22.9238,5372.1,!1,158.58,57.86,6.5,null,3375.66,null,!1,0],["02a193","TAR635  ","Tunisia",1679397462,1679397462,4.4105,43.3831,11277.6,!1,243.88,147.32,0,null,11475.72,"7624",!1,0],["02a192","TAR757  ","Tunisia",1679397462,1679397462,8.5812,45.6617,1531.62,!1,110.39,280.47,10.08,null,1623.06,"0426",!1,0],["3c1cb2","","Germany",1679397458,1679397458,9.8329,53.5316,null,!0,0,205.31,null,null,null,null,!1,0],["ac0b96","SWA3468 ","United States",1679397463,1679397463,-99.3411,30.5754,9753.6,!1,195.27,283.56,0,null,10050.78,"2460",!1,0],["888158","VJC943  ","Viet Nam",1679397446,1679397449,119.3178,23.4099,8526.78,!1,222.22,237.67,0,null,8961.12,null,!1,0],["8964e3","UAE69T  ","United Arab Emirates",1679397165,1679397177,17.4588,35.9968,11887.2,!1,271.66,97.95,0,null,12009.12,null,!1,0],["4077bb","EXS5TR  ","United Kingdom",1679397462,1679397462,-2.603,49.2797,10668,!1,225.4,204.4,-.33,null,10690.86,"5204",!1,0],["8964e2","UAE8UW  ","United Arab Emirates",1679397434,1679397436,17.9933,38.9491,11277.6,!1,254.8,118.32,0,null,11300.46,"1256",!1,0],["43c5ed","RRR4542 ","United Kingdom",1679397462,1679397462,2.6321,53.0977,10050.78,!1,225.94,36.95,0,null,9966.96,"2014",!1,0],["478e27","WIF1H   ","Norway",1679397432,1679397433,7.7839,62.5217,12192,!1,223.86,206.33,.33,null,11963.4,"0403",!1,0],["a414fb","DAL1627 ","United States",1679397462,1679397462,-94.7774,30.7026,11277.6,!1,243.41,33.62,0,null,11559.54,"2430",!1,0],["a009da","EJA101  ","United States",1679397461,1679397462,-84.9907,39.8773,12824.46,!1,206.03,267.14,5.53,null,12733.02,"6627",!1,0],["e49671","PTOPK   ","Brazil",1679397462,1679397462,-42.1753,-22.942,822.96,!1,81.53,77.98,-3.25,null,861.06,null,!1,0],["4ca6fc","RYR9XD  ","Ireland",1679397463,1679397463,4.9653,51.7655,10972.8,!1,206.36,211.23,0,null,10942.32,"0747",!1,0],["3ce91a","DCPOS   ","Germany",1679397462,1679397462,11.5693,52.2244,9425.94,!1,217.98,263.5,7.48,null,9464.04,"1000",!1,0],["4ca6fd","RYR7FE  ","Ireland",1679397446,1679397458,-2.9732,42.0916,11277.6,!1,205.77,265.99,0,null,11437.62,"4025",!1,0],["ac259b","DAL686  ","United States",1679397461,1679397461,-82.4173,36.799,9144,!1,220.52,298.42,0,null,9136.38,"5665",!1,0],["4910f7","VVV131  ","Portugal",1679397462,1679397462,-8.9075,39.1201,8648.7,!1,177.48,53.13,8.78,null,8884.92,"2225",!1,0],["8008d2","CIVLJEEP","India",1679397462,1679397462,88.4409,22.6511,null,!0,3.6,42.19,null,null,null,null,!1,0],["a761fc","N575LF  ","United States",1679397237,1679397268,-79.8565,40.2589,571.5,!1,66.49,146.68,-1.3,null,647.7,null,!1,0],["3ddc6b","CHX51   ","Germany",1679397258,1679397262,9.2139,48.8666,281.94,!1,28.14,120.78,-1.95,null,373.38,null,!1,0],["a7fa65","FDX1342 ","United States",1679397462,1679397462,-103.9102,34.8147,10675.62,!1,294.52,87.6,-.33,null,10828.02,null,!1,0],["e8043e","ARE4052 ","Chile",1679397357,1679397357,-74.9023,4.7065,5669.28,!1,187.68,60.98,-5.85,null,6027.42,null,!1,0],["a70181","EDG550  ","United States",1679397462,1679397462,-91.9856,32.632,13106.4,!1,198.53,221.95,.33,null,13281.66,"2150",!1,0],["40789e","BHL43G  ","United Kingdom",1679397462,1679397463,-1.3469,57.3635,1043.94,!1,81.59,68.94,0,null,960.12,null,!1,0],["a81a76","FDX1438 ","United States",1679397461,1679397462,-104.9258,35.154,11574.78,!1,194.06,268.03,0,null,11666.22,"5677",!1,0],["70606d","KAC117  ","Kuwait",1679397462,1679397463,6.4436,52.0556,10972.8,!1,237.19,307.86,0,null,10965.18,"3273",!1,0],["48406f","PHLAB   ","Kingdom of the Netherlands",1679397462,1679397462,5.5047,51.8747,1706.88,!1,108.48,262.37,-3.9,null,1737.36,"7050",!1,0],["3ddc74","CHX84   ","Germany",1679397461,1679397461,11.6158,51.2934,373.38,!1,66.72,72.96,0,null,434.34,null,!1,0],["ac10ed","CXK285  ","United States",1679397462,1679397462,-72.6192,41.7251,1889.76,!1,48.37,240.71,0,null,1889.76,"5777",!1,0],["40788c","AUR704  ","United Kingdom",1679397462,1679397462,-1.7785,52.4812,297.18,!1,56.65,145.73,-2.93,null,289.56,"1220",!1,0],["4ca808","RYR7BH  ","Ireland",1679397462,1679397462,21.0653,54.0024,11582.4,!1,222.64,266.56,0,null,11430,"7243",!1,0],["88596a","TVJ343  ","Thailand",1679397425,1679397426,100.7714,13.7309,297.18,!1,69,194.24,-3.25,null,236.22,"7236",!1,0],["4ca809","RYR953E ","Ireland",1679397462,1679397462,1.16,52.9518,11277.6,!1,246.91,100.44,0,null,11201.4,"2056",!1,0],["4ca803","RYR3XJ  ","Ireland",1679397462,1679397462,-8.6096,39.2268,5989.32,!1,194.26,44.36,13,null,6202.68,"5211",!1,0],["4ca805","RYR7GH  ","Ireland",1679397443,1679397447,-1.9549,40.5438,7071.36,!1,194.84,249.6,-13.66,null,7299.96,"4052",!1,0],["e80461","LPE2083 ","Chile",1679397462,1679397462,-76.3568,-6.601,731.52,!1,70.03,349.85,-3.9,null,754.38,null,!1,0],["aaf804","SCX3081 ","United States",1679397290,1679397304,-97.3257,33.0262,335.28,!1,64.11,170.76,-3.25,null,327.66,"2450",!1,0],["e8045c","LPE2421 ","Chile",1679397461,1679397462,-57.7195,-33.7368,11315.7,!1,197.63,296.1,2.93,null,11902.44,"6150",!1,0],["a6b911","NKS3642 ","United States",1679397462,1679397462,-81.5469,28.1799,5067.3,!1,217.2,185.85,16.91,null,5257.8,"0710",!1,0],["780aa4","CPA846  ","China",1679397420,1679397420,115.0839,21.8023,6743.7,!1,231.01,102.74,4.55,null,6187.44,null,!1,0],["345084","VLG4HN  ","Spain",1679397176,1679397461,-3.5627,40.4941,null,!0,10.8,0,null,null,null,null,!1,0],["780aa2","","China",1679397223,1679397223,132.8868,32.6688,10058.4,!1,260.66,47.24,0,null,10370.82,null,!1,0],["780aa7","CRK765  ","China",1679397456,1679397456,113.9314,22.3095,null,!0,2.31,104.06,null,null,null,null,!1,0],["780aa8","CPA2082 ","China",1679397459,1679397459,119.9949,23.4316,9448.8,!1,270.76,43.31,.33,null,9936.48,null,!1,0],["4bb075","THY15M  ","Turkey",1679397462,1679397462,15.0649,50.2051,11277.6,!1,244.91,133.38,0,null,11269.98,"7611",!1,0],["484c9b","TRA49V  ","Kingdom of the Netherlands",1679397462,1679397462,8.6594,49.1003,10668,!1,219.51,150.67,0,null,10751.82,"1000",!1,0],["8880a1","HVN920  ","Viet Nam",1679397220,1679397220,103.7859,15.2639,10668,!1,232.56,359.11,0,null,11285.22,null,!1,0],["400efd","EZY86KF ","United Kingdom",1679397462,1679397462,-1.0182,46.7964,11574.78,!1,223.62,350.73,0,null,11635.74,"1055",!1,0],["400efb","EZY72GK ","United Kingdom",1679397192,1679397193,-2.7092,51.3853,null,!0,0,267.19,null,null,null,"5624",!1,0],["a4fc00","DAL263  ","United States",1679397462,1679397462,2.4434,49.0172,1021.08,!1,83.57,265.76,9.1,null,1089.66,"0642",!1,0],["780ab5","HKE112  ","China",1679397455,1679397455,114.8095,21.8147,6858,!1,270,104.12,7.8,null,6728.46,null,!1,0],["780ab2","","China",1679397420,1679397420,113.2191,21.415,7399.02,!1,238.51,70.86,-8.78,null,7810.5,null,!1,0],["4bb06e","THY9HK  ","Turkey",1679397462,1679397462,-8.4056,41.4371,3238.5,!1,158.61,87.4,4.88,null,3375.66,null,!1,0],["a596b1","UAL187  ","United States",1679397462,1679397462,-74.2643,40.0353,1699.26,!1,132.46,313.43,-.33,null,1752.6,null,!1,0],["780aad","CPA657  ","China",1679397452,1679397459,104.1068,1.6354,3276.6,!1,168.22,179.82,-5.53,null,3482.34,"5343",!1,0],["780aab","CPA382  ","China",1679397462,1679397462,8.6358,47.4481,1295.4,!1,101.13,44.59,7.8,null,1386.84,"3075",!1,0],["40653d","EZY15YR ","United Kingdom",1679397462,1679397462,-1.1182,51.6555,4572,!1,189.05,139.64,-.33,null,4526.28,"6317",!1,0],["a7fa70","FFT1165 ","United States",1679397462,1679397462,-77.0749,36.2525,9753.6,!1,219.44,204.22,0,null,9799.32,"7107",!1,0],["3ddc6f","CHX83   ","Germany",1679397173,1679397173,9.3511,52.1083,45.72,!1,1.03,270,-3.9,null,121.92,null,!1,0],["a3ef55","N3525U  ","United States",1679397312,1679397312,-78.1779,39.0858,693.42,!1,53.18,347.71,-2.6,null,746.76,null,!1,0],["8008c3","IGO775  ","India",1679397462,1679397462,87.8411,23.2386,5349.24,!1,148.49,148.46,-5.53,null,5486.4,"1467",!1,0],["ae036f","PAT009  ","United States",1679397461,1679397462,-78.8426,38.0595,10782.3,!1,152.96,281.84,4.55,null,10736.58,"7044",!1,0],["e49608","AZU4702 ","Brazil",1679397450,1679397461,-47.029,-23.0273,1577.34,!1,142.53,8.51,15.93,null,1691.64,null,!1,0],["4ca82e","ITY077  ","Ireland",1679397463,1679397463,2.5282,40.9752,5623.56,!1,203.58,93.48,11.7,null,5821.68,null,!1,0],["a83451","N628DS  ","United States",1679397462,1679397462,-81.2108,29.2224,2339.34,!1,145.71,327.54,1.63,null,2438.4,null,!1,0],["3e0f76","CHX18   ","Germany",1679397196,1679397196,9.5572,50.4979,662.94,!1,71.95,69.49,0,null,769.62,null,!1,0],["ad5817","SWA19   ","United States",1679397462,1679397462,-78.9113,38.7647,11582.4,!1,201.61,257.77,0,null,11506.2,"7054",!1,0],["4910b9","DBT525  ","Portugal",1679397196,1679397196,-2.7325,42.2303,7231.38,!1,198.32,26.17,-9.75,null,7543.8,"5071",!1,0],["706047","KUG013  ","Kuwait",1679397462,1679397462,1.3539,52.0373,5646.42,!1,225,58.27,10.4,null,5623.56,"5235",!1,0],["780ac9","","China",null,1679397457,null,null,null,!1,166.15,228.26,-9.43,null,null,null,!1,0],["a330a0","UAL2168 ","United States",1679397454,1679397454,-81.8502,30.5488,4274.82,!1,190.48,236.01,13.33,null,4343.4,null,!1,0],["4ca836","EIN69X  ","Ireland",1679397463,1679397463,-5.445,53.6911,2849.88,!1,150.65,251.07,-9.1,null,2811.78,"0133",!1,0],["a88df0","NKS463  ","United States",1679397462,1679397462,-81.7906,32.8886,11590.02,!1,219.26,190.55,0,null,11765.28,"7442",!1,0],["76d1c4","TGW689  ","Singapore",1679397254,1679397255,103.9785,1.3515,53.34,!1,66.6,23.2,-.98,null,30.48,"0762",!1,0],["ab050f","UAL1392 ","United States",1679397462,1679397462,-75.8717,39.9088,9761.22,!1,197.12,221.72,0,null,9631.68,"3325",!1,0],["76d1c5","TGW615  ","Singapore",1679397259,1679397259,103.5877,2.9593,8633.46,!1,225.57,151.68,-5.2,null,9204.96,null,!1,0],["346384","AEA7706 ","Spain",1679397462,1679397462,.6876,40.8852,8793.48,!1,192.92,269.54,5.2,null,9044.94,null,!1,0],["a03399","UCA4342 ","United States",1679397461,1679397462,-78.2695,38.164,2004.06,!1,135.55,33.39,.33,null,2080.26,null,!1,0],["706059","KAC672  ","Kuwait",1679397300,1679397300,48.014,29.1838,320.04,!1,67.91,335.38,-3.58,null,259.08,null,!1,0],["ac98ac","SWA1821 ","United States",1679397462,1679397462,-82.6456,26.2993,9144,!1,213.05,297,0,null,9509.76,null,!1,0],["a26025","ENY4035 ","United States",1679397462,1679397462,-77.2055,39.0119,952.5,!1,96.51,142.58,-3.25,null,1028.7,"0232",!1,0],["780acf","CCA475  ","China",1679397286,1679397286,106.9077,18.77,10980.42,!1,237.46,156.1,-.33,null,11582.4,null,!1,0],["4ca847","RYR1DR  ","Ireland",1679397462,1679397462,8.4731,44.8455,11582.4,!1,205.78,320.58,0,null,11711.94,"0211",!1,0],["4ca848","RYR5183 ","Ireland",1679397462,1679397462,5.1016,42.2182,11582.4,!1,229.14,30.19,0,null,11780.52,"5540",!1,0],["780aca","CXA8686 ","China",1679397457,1679397457,113.9279,22.3086,null,!0,1.54,73.12,null,null,null,null,!1,0],["706051","KAC788  ","Kuwait",1679397461,1679397461,47.9788,28.6667,2842.26,!1,149.03,22.32,-3.25,null,2865.12,null,!1,0],["ab184d","AAL1238 ","United States",1679397462,1679397462,-79.6636,36.3574,9144,!1,208.42,219.19,0,null,9144,"7052",!1,0],["88819d","BAV1602 ","Viet Nam",1679397462,1679397462,106.0835,19.6349,7955.28,!1,206.36,343.19,-5.85,null,8389.62,null,!1,0],["ac98c1","EDV5280 ","United States",1679397460,1679397461,-73.8737,40.7819,-114.3,!1,61.24,211.95,-.65,null,-22.86,"1434",!1,0],["88819c","BAV1431 ","Viet Nam",1679397462,1679397462,106.4556,20.0135,8359.14,!1,223.83,157.86,2.93,null,8770.62,null,!1,0],["4ca80f","RYR610P ","Ireland",1679397462,1679397462,6.3187,54.9696,11582.4,!1,215.72,231.68,0,null,11490.96,"0755",!1,0],["501d20","CTN4AS  ","Croatia",1679397462,1679397462,10.5099,49.0454,11887.2,!1,241.93,135.78,0,null,11902.44,"1000",!1,0],["ab5ed8","SWA2884 ","United States",1679397462,1679397462,-76.8868,39.2155,1828.8,!1,134.91,280.32,15.93,null,1889.76,"2175",!1,0],["a8ddb4","BTQ861  ","United States",1679397463,1679397463,-72.8591,43.9065,6400.8,!1,158.78,125.9,-.33,null,6263.64,null,!1,0],["4ca80d","RYR34TH ","Ireland",1679397462,1679397462,6.2525,44.8568,11582.4,!1,211.49,327.32,0,null,11734.8,"4005",!1,0],["ac250b","SWA3601 ","United States",1679397462,1679397462,-89.1427,39.0991,7551.42,!1,189.4,250.48,-4.88,null,7513.32,"4112",!1,0],["a04692","DAL1734 ","United States",1679397457,1679397457,-73.8608,40.7711,null,!0,0,303.75,null,null,null,null,!1,0],["4780b8","","Norway",1679397213,1679397345,5.7245,58.8173,304.8,!1,14.81,249.68,-.98,null,274.32,null,!1,0],["e12345","PSARV   ","Argentina",1679397431,1679397444,-47.7556,-20.9833,8534.4,!1,135.6,348.18,0,null,9075.42,null,!1,0],["a04695","DAL2444 ","United States",1679397461,1679397462,-83.0603,42.0926,3116.58,!1,161.03,80.81,11.38,null,3108.96,"5755",!1,0],["a6e151","N542WC  ","United States",1679397462,1679397462,-81.8752,33.4233,10972.8,!1,245.6,170.6,0,null,11125.2,null,!1,0],["a6f482","UAL2251 ","United States",1679397462,1679397462,-77.0203,39.7807,9753.6,!1,206.19,238.57,.33,null,9669.78,"3305",!1,0],["484c5a","TRA30U  ","Kingdom of the Netherlands",1679397425,1679397429,-7.9814,37.0185,null,!0,6.43,98.44,null,null,null,"2140",!1,0],["4ca814","RYR7MA  ","Ireland",1679397462,1679397463,10.7018,50.5712,11582.4,!1,208.91,289.42,0,null,11605.26,"3561",!1,0],["34635a","AEA1301 ","Spain",1679397462,1679397462,28.6343,35.2991,11887.2,!1,269.48,115.2,-.33,null,11993.88,"0217",!1,0],["885966","TVJ564  ","Thailand",1679397461,1679397462,119.53,22.3816,10058.4,!1,248.06,39.7,0,null,10584.18,null,!1,0],["3e1685","CHX3    ","Germany",1679397155,1679397155,6.9219,50.9148,60.96,!1,1.46,135,0,null,137.16,"0020",!1,0],["3e1688","BPO25   ","Germany",1679397263,1679397270,11.5657,48.2328,null,!0,.9,78.75,null,null,null,"0023",!1,0],["496c2c","FM017   ","Portugal",1679397448,1679397448,-9.1316,38.7665,null,!0,1.29,126.56,null,null,null,null,!1,0],["885963","TVJ202  ","Thailand",1679397274,1679397274,102.1917,16.3411,7825.74,!1,251.07,38.68,-11.7,null,8298.18,"4222",!1,0],["3e1684","CHX7    ","Germany",1679397173,1679397174,9.4535,51.312,190.5,!1,4.15,187.13,-1.95,null,266.7,null,!1,0],["4ac8da","BLX663  ","Sweden",1679397462,1679397462,17.345,56.1039,11277.6,!1,257.74,192.57,0,null,11148.06,"5604",!1,0],["7811cf","CSH9497 ","China",1679397439,1679397440,117.3118,24.0813,10393.68,!1,209.22,218.11,0,null,10904.22,null,!1,0],["a2cf43","N280PC  ","United States",1679397462,1679397462,-83.8172,30.4268,12496.8,!1,247.42,158.02,-.33,null,12778.74,"2533",!1,0],["70606b","KAC167  ","Kuwait",1679397461,1679397462,3.1657,48.9382,2484.12,!1,137.95,313.04,-2.6,null,2545.08,"3254",!1,0],["496c32","FM010   ","Portugal",1679397456,1679397456,-9.131,38.7678,null,!0,8.23,345.94,null,null,null,null,!1,0],["a894f2","JBU121  ","United States",1679397462,1679397462,-75.4342,37.5916,10972.8,!1,202.75,208,0,null,10965.18,"7162",!1,0],["ad08bd","SKW4675 ","United States",1679397462,1679397462,-81.6349,40.837,2209.8,!1,128.76,253.52,11.7,null,2247.9,"4137",!1,0],["ac3857","FDX8    ","United States",1679397462,1679397462,-78.3572,38.5291,10058.4,!1,272.35,73.65,0,null,10012.68,"1602",!1,0],["a34fe6","SKW3976 ","United States",1679397462,1679397462,-88.0741,39.8508,10972.8,!1,204.8,308.17,0,null,10835.64,"6614",!1,0],["501d18","CTN481  ","Croatia",1679397462,1679397462,13.4927,52.4468,11887.2,!1,248.3,177.03,0,null,11856.72,"7676",!1,0],["a02c94","DAL820  ","United States",1679397462,1679397462,-84.5275,33.7331,1965.96,!1,137.36,270,-10.73,null,2042.16,"5754",!1,0],["70605c","KAC101  ","Kuwait",1679397461,1679397461,21.9026,46.1972,10363.2,!1,225.33,298.2,0,null,10317.48,"4017",!1,0],["484c53","KLM47E  ","Kingdom of the Netherlands",1679397462,1679397462,5.0968,52.5983,5966.46,!1,191.62,49.68,13.66,null,6012.18,"3175",!1,0],["473f9c","HAYCI   ","Hungary",1679397462,1679397462,19.2218,47.5861,533.4,!1,51.66,285,0,null,601.98,"7067",!1,0],["abc8d3","SWQ565  ","United States",1679397462,1679397462,-83.1166,34.2805,10668,!1,243.51,158.69,0,null,10759.44,"4065",!1,0],["aa7b54","SWA646  ","United States",1679397462,1679397462,-96.0279,39.1362,9799.32,!1,209.49,260.82,9.1,null,9692.64,"1145",!1,0],["484c59","TRA6215 ","Kingdom of the Netherlands",1679397462,1679397462,5.3862,51.4606,null,!0,9.26,216.56,null,null,null,null,!1,0],["e80448","TAM8180 ","Chile",1679397455,1679397455,-72.0502,37.4935,11574.78,!1,255.09,337.47,-.33,null,11628.12,null,!1,0],["496c29","FM007   ","Portugal",1679397461,1679397461,-9.1308,38.7672,null,!0,2.57,272.81,null,null,null,null,!1,0],["89659c","ETD93C  ","United Arab Emirates",1679397462,1679397462,24.6535,45.7692,10972.8,!1,239.09,316.66,0,null,10919.46,"3262",!1,0],["345146","CASA985 ","Spain",1679397462,1679397462,-7.2641,37.0859,2400.3,!1,85.82,244.05,-.65,null,2537.46,null,!1,0],["4bcde8","SXS4Y   ","Turkey",1679397462,1679397462,10.8821,48.1777,11582.4,!1,202.76,312.84,0,null,11643.36,"3235",!1,0],["496c26","FM004   ","Portugal",1679397310,1679397310,-9.1315,38.7711,null,!0,1.29,75.94,null,null,null,null,!1,0],["4bcdf6","SXS1JL  ","Turkey",1679397462,1679397462,14.8715,46.5412,11887.2,!1,249.03,124.9,0,null,11917.68,"7654",!1,0],["abaf47","FDX21   ","United States",1679397463,1679397463,19.5776,46.5464,10972.8,!1,223.97,298.39,0,null,10919.46,null,!1,0],["a4034f","JBU1455 ","United States",1679397462,1679397462,-71.7219,42.0102,8534.4,!1,198.78,243.24,-.33,null,8336.28,"1311",!1,0],["4bcdf4","SXS1RC  ","Turkey",1679397462,1679397462,14.0765,47.1145,10447.02,!1,198.62,315.21,-7.15,null,10515.6,"3271",!1,0],["a2c35b","UAL1402 ","United States",1679397462,1679397462,-87.3816,40.7464,10972.8,!1,206.6,213.73,0,null,10820.4,"6502",!1,0],["4bcdee","SXS12U  ","Turkey",1679397462,1679397462,14.0155,48.6025,11582.4,!1,207.64,307.55,0,null,11597.64,"2673",!1,0],["a8df2c","DAL1604 ","United States",1679397462,1679397462,-89.8215,40.457,11277.6,!1,237.44,165.57,0,null,11132.82,"3662",!1,0],["4bcded","SXS1    ","Turkey",1679397462,1679397462,10.6338,49.2803,7513.32,!1,199.09,307.02,-7.48,null,7642.86,"3250",!1,0],["4bcdec","SXS4PU  ","Turkey",1679397462,1679397462,14.4503,52.2214,3162.3,!1,136.59,312.1,-5.85,null,3215.64,"3201",!1,0],["4ca75e","RYR96LG ","Ireland",1679397462,1679397462,4.9937,43.0562,5097.78,!1,194.4,194.4,11.38,null,5234.94,"6775",!1,0],["4ca75f","RYR1HB  ","Ireland",1679397462,1679397462,25.9696,44.7187,3550.92,!1,168.08,301.35,15.28,null,3589.02,"2656",!1,0],["461f9c","FIN20C  ","Finland",1679397365,1679397365,-10.3969,35.607,11879.58,!1,207.73,216.64,0,null,12199.62,"3577",!1,0],["461f9d","FIN953  ","Finland",1679397271,1679397271,12.6706,55.6274,30.48,!1,65.62,221.19,-3.58,null,91.44,"0212",!1,0],["461f9e","FIN36M  ","Finland",1679397462,1679397462,11.2421,54.8315,10965.18,!1,215.72,229.74,0,null,10919.46,"3515",!1,0],["34644b","IBS3677 ","Spain",1679397462,1679397462,12.9728,52.194,3954.78,!1,170.2,255.29,11.7,null,4008.12,"1105",!1,0],["34644d","IBS39NM ","Spain",1679397462,1679397462,-5.7172,39.8826,10972.8,!1,210.06,237.4,1.95,null,11216.64,null,!1,0],["394c12","AFR95XT ","France",1679397340,1679397340,-9.1315,38.7711,null,!0,2.31,84.38,null,null,null,"7661",!1,0],["ab5f87","SWA127  ","United States",1679397463,1679397463,-90.6078,38.8076,952.5,!1,117.54,29.93,-6.83,null,975.36,"5612",!1,0],["4ca765","RYR6XV  ","Ireland",1679397461,1679397462,25.8843,44.5614,944.88,!1,109.19,83.78,-6.18,null,1005.84,"0411",!1,0],["4ca766","RYR6XG  ","Ireland",1679397462,1679397462,-7.7856,51.9071,9281.16,!1,253.57,98.87,6.83,null,9265.92,"6024",!1,0],["394c14","AFR62XJ ","France",1679397462,1679397462,-.8433,51.6547,5943.6,!1,246.15,144.18,6.18,null,5905.5,"1164",!1,0],["4ca762","RYR319B ","Ireland",1679397462,1679397463,-3.6935,50.6238,11582.4,!1,212.42,330.39,0,null,11582.4,"5334",!1,0],["a3d042","MLN345  ","United States",1679397462,1679397462,-87.7609,41.787,null,!0,.06,154.69,null,null,null,"5713",!1,0],["4ca763","RYR135  ","Ireland",1679397462,1679397462,-2.8496,37.9491,11277.6,!1,204.04,221.73,0,null,11590.02,null,!1,0],["346458","IBE33LC ","Spain",1679397462,1679397462,7.4997,54.011,10668,!1,244.83,39.54,-.33,null,10637.52,"2334",!1,0],["a2602c","AAY4202 ","United States",1679397462,1679397462,-99.8022,35.3533,11582.4,!1,175.82,266.14,0,null,11650.98,"2106",!1,0],["e0648b","ARG1732 ","Argentina",1679397462,1679397462,-59.4296,-32.6738,11277.6,!1,226.2,334.54,-.33,null,11894.82,"1713",!1,0],["aa596c","SKW3065 ","United States",1679397462,1679397462,-96.4965,43.581,2667,!1,145.81,102.22,11.38,null,2583.18,null,!1,0],["7bd01b","HYT9040 ","China",1679397462,1679397462,86.3845,25.3573,10668,!1,269.73,100.22,-.33,null,10927.08,"0444",!1,0],["aa3f65","BKA776  ","United States",1679397462,1679397462,-87.6915,33.724,13106.4,!1,170.34,268.44,0,null,13235.94,"1004",!1,0],["461f6c","FIN9KL  ","Finland",1679397460,1679397460,11.1096,60.1857,null,!0,9.77,16.88,null,null,null,"0240",!1,0],["461f6d","FIN3EJ  ","Finland",1679397462,1679397462,17.951,59.6328,null,!0,10.29,219.38,null,null,null,null,!1,0],["461f6e","FIN4MW  ","Finland",1679397462,1679397462,26.4478,64.4046,3985.26,!1,166.34,332.96,-9.75,null,3688.08,"1217",!1,0],["a700a4","JIA5353 ","United States",1679397462,1679397462,-86.4413,31.0576,6537.96,!1,219.05,53.21,12.03,null,6736.08,"0766",!1,0],["ad56e0","JBU2130 ","United States",1679397461,1679397462,-66.1735,18.6931,3048,!1,158.29,309.33,12.03,null,3162.3,null,!1,0],["4bcdd4","SXS9X   ","Turkey",1679397462,1679397462,30.5463,41.2247,11277.6,!1,246.42,123.16,0,null,11285.22,"7644",!1,0],["abb63f","N854AL  ","United States",1679397462,1679397462,-103.9351,42.0101,7010.4,!1,149.21,17.25,-.65,null,6941.82,"5175",!1,0],["aba30b","UAL2128 ","United States",1679397462,1679397462,-74.058,40.8917,899.16,!1,119.86,168.11,-8.13,null,975.36,"1345",!1,0],["896598","ETD11B  ","United Arab Emirates",1679397462,1679397462,18.618,48.2468,10972.8,!1,233.54,301.03,0,null,10911.84,"3234",!1,0],["4ca736","RYR33AQ ","Ireland",1679397216,1679397216,-16.5622,29.2797,10347.96,!1,220.48,208.12,-16.26,null,10698.48,null,!1,0],["896597","ETD47N  ","United Arab Emirates",1679397462,1679397462,24.0659,38.5124,11894.82,!1,256.36,129.95,.33,null,11963.4,"5240",!1,0],["c06aad","SYB203  ","Canada",1679397462,1679397462,-73.0825,46.2092,4503.42,!1,172.15,46.82,0,null,4351.02,"4253",!1,0],["4ca737","RYR58UP ","Ireland",1679397462,1679397463,-6.3124,53.5234,1882.14,!1,132.17,69.73,11.7,null,1805.94,null,!1,0],["4ca738","RYR3SV  ","Ireland",1679397462,1679397462,7.5455,44.2509,11277.6,!1,209.73,238.34,0,null,11452.86,"1113",!1,0],["e06491","ARG1280 ","Argentina",1679397462,1679397462,-61.4349,-34.2862,10972.8,!1,191.99,274.61,0,null,11536.68,"0551",!1,0],["896596","ETD76T  ","United Arab Emirates",1679397462,1679397462,23.8223,39.9179,11887.2,!1,250.27,135,0,null,11932.92,"4641",!1,0],["4ca739","RYR3ZQ  ","Ireland",1679397462,1679397462,3.8149,53.1287,11590.02,!1,216.58,275.59,0,null,11536.68,"6607",!1,0],["ac731b","N901CF  ","United States",1679397461,1679397462,-120.7751,39.1898,1828.8,!1,68.03,239.56,-1.3,null,1752.6,null,!1,0],["345116","VLG1AA  ","Spain",1679397462,1679397462,13.9705,39.5485,10675.62,!1,251.95,103.1,0,null,10782.3,"5536",!1,0],["841442","SFJ53   ","Japan",1679397448,1679397462,130.3713,33.7041,632.46,!1,78.5,151.42,0,null,647.7,null,!1,0],["a210c5","RPA5821 ","United States",1679397462,1679397462,-78.0456,36.6996,11277.6,!1,256.63,36.11,.33,null,11330.94,"2020",!1,0],["740826","RJA272  ","Jordan",1679397462,1679397462,28.0266,39.8032,12496.8,!1,251.45,158.9,-.33,null,12534.9,"2207",!1,0],["4ca73f","RYR6UC  ","Ireland",1679397462,1679397462,11.593,49.1006,11483.34,!1,198.8,295.77,1.95,null,11513.82,"6601",!1,0],["4a0495","YRADU   ","Romania",1679397459,1679397462,21.2918,45.1603,868.68,!1,68.12,126.09,.33,null,937.26,null,!1,0],["aa9fe4","IRO8393 ","United States",1679397460,1679397462,-85.5668,42.9814,1181.1,!1,67.91,359.57,3.25,null,1181.1,"1325",!1,0],["740825","RJA261G ","Jordan",1679397462,1679397462,21.5952,45.5931,10972.8,!1,225.19,315.65,-.33,null,10942.32,null,!1,0],["39c912","FWI40C  ","France",1679397462,1679397462,-.66,47.9138,9540.24,!1,249.32,229.77,4.23,null,9593.58,"5643",!1,0],["740827","RJA263  ","Jordan",1679397462,1679397462,18.3101,51.2518,10965.18,!1,234.4,316.96,0,null,10881.36,"2255",!1,0],["740823","RJA267  ","Jordan",1679397462,1679397462,14.4174,53.6781,11582.4,!1,230.3,314,0,null,11536.68,"2252",!1,0],["4ca73e","RYR57LM ","Ireland",1679397462,1679397462,-.2582,40.0656,9288.78,!1,221.05,196.49,-2.28,null,9547.86,"0502",!1,0],["a1f0b4","RPA5747 ","United States",1679397462,1679397462,-75.293,38.8051,4747.26,!1,169.35,265.12,0,null,4770.12,"3555",!1,0],["a02088","AAL1881 ","United States",1679397462,1679397462,-81.2691,28.7035,2933.7,!1,149.31,352.87,12.03,null,3040.38,null,!1,0],["3cd5ae","DCIFM   ","Germany",1679397461,1679397462,9.892,52.0931,10363.2,!1,217.54,262.25,0,null,10386.06,"1000",!1,0],["4bcde5","SXS8880 ","Turkey",1679397462,1679397462,25.7371,39.3084,12192,!1,205.24,311.24,0,null,12245.34,"3273",!1,0],["a2c336","UAL575  ","United States",1679397462,1679397462,-82.5782,34.4982,7315.2,!1,215.46,235.7,0,null,7399.02,null,!1,0],["4bcde3","SXS2VK  ","Turkey",1679397462,1679397462,17.5222,45.0951,11582.4,!1,202.01,316.96,.33,null,11574.78,null,!1,0],["345108","VLG5YE  ","Spain",1679397461,1679397462,-2.0604,40.9801,10980.42,!1,266.19,79.65,0,null,11216.64,"5073",!1,0],["4bcdce","SXS5EQ  ","Turkey",1679397463,1679397463,11.3373,53.2431,5532.12,!1,162.3,308.18,-4.88,null,5585.46,"6577",!1,0],["345101","VLG73GF ","Spain",1679397249,1679397249,10.8313,43.7828,1821.18,!1,123.82,137.69,-5.53,null,1920.24,"1000",!1,0],["345102","VLG36RL ","Spain",1679397462,1679397462,1.1858,42.8754,9753.6,!1,216.69,341.74,0,null,9944.1,"1474",!1,0],["89655d","UAE6VH  ","United Arab Emirates",1679397462,1679397462,1.0431,51.6972,5212.08,!1,174.07,276.79,-9.1,null,5204.46,"3275",!1,0],["e494f1","","Brazil",1679397461,1679397461,-12.968,33.4267,10668,!1,231.45,206.39,0,null,11018.52,null,!1,0],["a08e2c","N135ED  ","United States",1679397462,1679397462,-77.1669,39.0888,167.64,!1,69.86,133.81,-.33,null,259.08,null,!1,0],["a2b081","UAL2367 ","United States",1679397462,1679397462,-80.4654,40.538,2263.14,!1,129.54,285.2,14.31,null,2293.62,null,!1,0],["ab402b","ERU824  ","United States",1679397461,1679397462,-80.8773,28.6007,678.18,!1,44.09,160.93,0,null,746.76,null,!1,0],["48af05","LOT437  ","Poland",1679397461,1679397462,2.3308,41.3789,1051.56,!1,88.11,282.82,-2.28,null,1158.24,"1740",!1,0],["48af01","LOT15A  ","Poland",1679397461,1679397462,27.0191,38.1685,10972.8,!1,203.48,325.51,0,null,11087.1,"7215",!1,0],["461f67","FIN40L  ","Finland",1679397462,1679397462,21.7162,58.8882,9471.66,!1,225.15,236.27,2.93,null,9281.16,"3512",!1,0],["60084f","AHY076  ","Azerbaijan",1679397174,1679397176,44.5021,41.4258,10683.24,!1,222.12,98.52,0,null,10629.9,null,!1,0],["48af02","LOT282  ","Poland",1679397462,1679397462,4.0526,52.2527,11277.6,!1,249.24,83.12,0,null,11239.5,"4616",!1,0],["461f69","FIN9ML  ","Finland",1679397462,1679397462,8.7083,50.4147,5715,!1,223.65,27.39,9.1,null,5821.68,"7722",!1,0],["48af00","LOT433  ","Poland",1679397462,1679397463,8.3839,47.9144,11582.4,!1,209.31,228.99,0,null,11658.6,"3121",!1,0],["461f64","FIN85B  ","Finland",1679397462,1679397462,17.1584,46.5673,10972.8,!1,211.96,25.13,-.33,null,10957.56,"1212",!1,0],["89655f","UAE7DK  ","United Arab Emirates",1679397462,1679397462,144.6937,-37.5337,1485.9,!1,133.84,286.07,10.73,null,1592.58,"1305",!1,0],["a08e46","FDX89   ","United States",1679397461,1679397462,-97.4338,26.8643,11590.02,!1,236.05,204.05,0,null,11993.88,"2406",!1,0],["89655e","UAE5CL  ","United Arab Emirates",1679397462,1679397462,151.1215,-34.1889,2476.5,!1,149.06,330.43,11.7,null,2659.38,"1244",!1,0],["a4c6af","AAL551  ","United States",1679397462,1679397462,-80.2317,25.7941,640.08,!1,101.02,117.61,6.5,null,701.04,null,!1,0],["ad9f7f","AAL1110 ","United States",1679397462,1679397462,-81.1692,35.2926,2979.42,!1,125.93,109.32,-5.85,null,3063.24,"6730",!1,0],["ae63b4","NACHO71 ","United States",1679397462,1679397462,21.7055,52.004,8534.4,!1,204.98,161.57,0,null,8435.34,"2017",!1,0],["461f62","FIN5TU  ","Finland",1679397462,1679397462,10.2126,55.1634,11285.22,!1,238.52,57.96,-.33,null,11231.88,"0204",!1,0],["ad8c4c","AAL2972 ","United States",1679397461,1679397461,-85.6567,39.8407,8534.4,!1,241.37,358.41,0,null,8473.44,"7726",!1,0],["406531","BAW474K ","United Kingdom",1679397462,1679397463,.2886,49.3673,10759.44,!1,242.39,164.49,6.5,null,10744.2,"0530",!1,0],["89656a","","United Arab Emirates",null,1679397453,null,null,null,!1,238.93,156.53,-.33,null,null,null,!1,0],["407862","EXS20SJ ","United Kingdom",1679397463,1679397463,-8.1532,43.0535,10668,!1,236.74,206.18,0,null,10858.5,"5735",!0,0],["ace96c","AAL491  ","United States",1679397462,1679397462,-81.0654,28.6469,9448.8,!1,220.82,340.26,0,null,9776.46,"3714",!1,0],["89656d","ETD81C  ","United Arab Emirates",1679397460,1679397461,18.0965,44.0194,11269.98,!1,255.82,131.58,0,null,11300.46,"2707",!1,0],["ad3cdf","JBU881  ","United States",1679397438,1679397438,-73.7731,40.6462,null,!0,0,188.44,null,null,null,null,!1,0],["ac10af","DAL745  ","United States",1679397462,1679397462,-80.0664,26.2081,1470.66,!1,139.3,337.41,14.31,null,1402.08,null,!1,0],["a3dc47","DAL2571 ","United States",1679397462,1679397462,-88.3755,42.9141,8206.74,!1,221.92,315.75,7.8,null,8100.06,"3126",!1,0],["ab5383","AAL2240 ","United States",1679397461,1679397462,-81.9333,36.6181,7414.26,!1,216.26,150.81,-4.55,null,7444.74,"0754",!1,0],["ada6ed","AAL2770 ","United States",1679397462,1679397462,-92.1771,32.6922,7932.42,!1,194.86,260.89,0,null,8122.92,"4403",!1,0],["89653b","ETD35Q  ","United Arab Emirates",1679397461,1679397462,23.5569,35.8732,11277.6,!1,285.95,110.1,-.33,null,11430,"1266",!1,0],["89653a","ETD23N  ","United Arab Emirates",1679397461,1679397461,20.2725,46.5806,11277.6,!1,262.44,118.57,0,null,11247.12,"4736",!1,0],["ac10d8","FDX1403 ","United States",1679397461,1679397462,-103.1594,35.1971,10972.8,!1,180.2,267.71,0,null,11079.48,"5657",!1,0],["abf0c7","FDX1413 ","United States",1679397462,1679397462,-102.3498,41.4063,9753.6,!1,227.77,296.28,0,null,9570.72,"5634",!1,0],["a6ffc6","N550DR  ","United States",1679397462,1679397462,-1.5338,35.6221,12496.8,!1,269.73,119.35,.33,null,12870.18,"4544",!1,0],["4ca76f","EIN65W  ","Ireland",1679397461,1679397462,-.143,53.3356,10972.8,!1,219.45,280.81,.65,null,10866.12,"2546",!1,0],["7c7800","QFA945  ","Australia",null,1679397350,null,null,null,!1,1.29,270,null,null,null,null,!1,0],["394c0c","AFR31UE ","France",1679397462,1679397462,2.915,49.0108,1196.34,!1,104.13,266.32,-.65,null,1257.3,"1000",!1,0],["4ca76a","RYR32TY ","Ireland",1679397383,1679397461,-6.1376,41.1174,10363.2,!1,222.17,42.18,0,null,10553.7,"2053",!1,0],["c01d16","CJT920  ","Canada",1679397462,1679397462,-89.1815,35.5881,10363.2,!1,197.31,229.12,0,null,10424.16,"6634",!1,0],["491187","NJE358U ","Portugal",1679397462,1679397462,3.2976,41.9577,5989.32,!1,200.96,81.16,15.61,null,6172.2,null,!1,0],["40650b","CFE133  ","United Kingdom",1679397462,1679397462,2.3785,39.9387,6705.6,!1,208.14,168.88,.33,null,6911.34,"0512",!1,0],["3d08c5","DEBON   ","Germany",1679397459,1679397462,9.6732,49.2089,891.54,!1,54.03,283.77,-.65,null,982.98,null,!1,0],["ab4c9f","UAL373  ","United States",1679397462,1679397462,-78.7093,43.6424,11567.16,!1,200.96,261.16,0,null,11292.84,"1423",!1,0],["781ead","CXA8307 ","China",1679397462,1679397462,114.5854,22.7669,10401.3,!1,204.41,263.79,.33,null,10957.56,null,!1,0],["adf658","N999ZG  ","United States",1679397354,1679397354,-86.9478,40.3334,723.9,!1,94.69,330.37,-3.25,null,746.76,null,!1,0],["a65652","N5070J  ","United States",1679397454,1679397454,-66.1828,18.4468,175.26,!1,98.03,249.09,1.95,null,198.12,null,!1,0],["a859bd","HRC637  ","United States",1679397462,1679397462,-94.6863,29.6599,4389.12,!1,126.32,78.96,7.8,null,4495.8,null,!1,0],["4b9903","FHM8311 ","Turkey",1679397462,1679397462,10.0084,46.519,11277.6,!1,254.7,124.3,0,null,11384.28,"1000",!1,0],["ab538b","DAL122  ","United States",1679397462,1679397462,-3.7906,51.7852,11277.6,!1,260.07,105.14,0,null,11247.12,"6325",!1,0],["896555","FDB7VH  ","United Arab Emirates",1679397456,1679397456,55.1682,25.2119,2903.22,!1,120.08,238.49,4.55,null,2354.58,null,!1,0],["a1f0f6","N224MF  ","United States",1679397461,1679397461,-82.5276,28.3518,662.94,!1,85.41,197.89,.33,null,708.66,null,!1,0],["781ebc","CSN5203 ","China",1679397461,1679397462,8.6172,54.3644,10363.2,!1,224.81,224.63,0,null,10347.96,"1000",!1,0],["461f53","FIN7KL  ","Finland",1679397462,1679397462,2.2263,52.6802,10492.74,!1,267.9,49.67,4.23,null,10401.3,"1446",!1,0],["407837","EZY43WT ","United Kingdom",1679397462,1679397462,-2.7273,51.3824,null,!0,19.03,267.19,null,null,null,"5771",!1,0],["461f55","FIN142  ","Finland",1679397462,1679397462,25.1755,45.8425,12192,!1,238.26,310.53,0,null,12123.42,"5336",!1,0],["4ca783","ITY575  ","Ireland",1679397462,1679397462,9.8383,43.2288,10668,!1,252.22,130.28,0,null,10843.26,"1000",!1,0],["461f50","FIN19   ","Finland",1679397462,1679397462,17.9117,61.8365,10972.8,!1,215.71,291.55,0,null,10645.14,null,!1,0],["461f0e","FIN56M  ","Finland",1679397462,1679397462,24.3822,58.1399,12496.8,!1,232.69,10.32,0,null,12260.58,"5304",!1,0],["8964b0","UAE372  ","United Arab Emirates",1679397461,1679397462,100.8216,14.0776,1752.6,!1,111.35,133.5,-3.9,null,1790.7,"0506",!1,0],["461f0d","FIN16   ","Finland",1679397462,1679397462,25.1515,60.4107,655.32,!1,85.76,220.38,.33,null,624.84,"0415",!1,0],["400f9a","BAW814L ","United Kingdom",1679397462,1679397462,12.5581,55.7231,1295.4,!1,164.27,63.6,-2.28,null,1303.02,"4661",!1,0],["aa58a6","ENY4130 ","United States",1679397462,1679397462,-84.0822,42.3076,6370.32,!1,182.32,306.74,10.4,null,6301.74,"4154",!1,0],["abfd8c","SWA3491 ","United States",1679397462,1679397462,-92.1373,29.4642,10363.2,!1,199.73,267.93,0,null,10683.24,null,!1,0],["a08e82","RPA4330 ","United States",1679397462,1679397462,-82.0959,39.6338,4427.22,!1,161.73,252.6,-8.45,null,4450.08,"1523",!1,0],["adf4e9","JBU551  ","United States",1679397462,1679397462,-75.755,37.4466,10363.2,!1,206.44,215.67,0,null,10340.34,"3557",!1,0],["e48274","TAM3112 ","Brazil",1679397462,1679397462,-47.696,-20.9152,11574.78,!1,236.32,349.72,0,null,12230.1,null,!1,0],["750236","FFM2753 ","Malaysia",1679397459,1679397459,100.4448,4.7075,3528.06,!1,180.97,324.95,-11.7,null,3840.48,null,!1,0],["a7506a","SWA204  ","United States",1679397462,1679397462,-97.1136,31.6513,5494.02,!1,194.1,189.61,0,null,5631.18,null,!1,0],["8964b4","UAE69R  ","United Arab Emirates",1679397462,1679397463,13.0841,54.5045,10972.8,!1,225.24,313.61,0,null,10896.6,"3242",!1,0],["ac249e","SWA519  ","United States",1679397462,1679397462,-80.9832,27.6259,4701.54,!1,183.34,341.51,-10.4,null,4907.28,null,!1,0],["ae01ae","FALCN39 ","United States",1679397462,1679397462,12.7445,65.4289,11269.98,!1,220.63,26.45,.33,null,10873.74,null,!1,0],["a3eeb0","UAL2333 ","United States",1679397462,1679397462,-82.2358,36.2542,11582.4,!1,206.6,333.05,0,null,11590.02,null,!1,0],["8964c1","ETD36V  ","United Arab Emirates",1679397459,1679397461,31.5575,33.0736,12496.8,!1,268.47,134.53,0,null,12611.1,"0472",!1,0],["c06b6a","WSW740  ","Canada",1679397462,1679397462,-80.057,41.9744,10485.12,!1,226.87,180.26,8.45,null,10302.24,"2234",!1,0],["0ac332","NSE8865 ","Colombia",1679397447,1679397454,-74.1972,4.6138,3703.32,!1,90.36,262.15,5.2,null,3909.06,null,!1,0],["461f39","FIN4PF  ","Finland",1679397462,1679397462,12.5369,55.9802,11894.82,!1,235.46,60.41,.33,null,11795.76,"3160",!1,0],["3cc2eb","DCBCT   ","Germany",1679397462,1679397462,10.3889,51.8952,6568.44,!1,197.76,272.68,-7.8,null,6629.4,"7761",!1,0],["461f35","FIN1NB  ","Finland",1679397463,1679397463,15.7767,56.674,11285.22,!1,226.59,52.19,.33,null,11148.06,"3734",!1,0],["461f30","FIN2CM  ","Finland",1679397462,1679397462,9.8445,49.9408,11590.02,!1,226.69,15.8,0,null,11620.5,"7513",!1,0],["750245","MAS1058 ","Malaysia",1679397463,1679397463,103.4958,1.7602,2179.32,!1,144.06,291.8,16.26,null,2217.42,null,!1,0],["a27eca","N26Y    ","United States",1679397461,1679397461,15.9173,48.4189,701.04,!1,71.52,271.24,.33,null,784.86,null,!1,0],["4076ed","EXS35T  ","United Kingdom",1679397462,1679397462,-3.0016,48.8283,10668,!1,237.31,203.51,0,null,10698.48,"0531",!1,0],["4851f5","KLM803  ","Kingdom of the Netherlands",1679397331,1679397331,121.0137,14.5166,null,!0,5.14,315,null,null,null,null,!1,0],["75020c","MAS1450 ","Malaysia",1679397462,1679397462,101.2534,3.2087,8374.38,!1,238.3,329.23,5.53,null,8900.16,"0336",!1,0],["0ac326","NSE8686 ","Colombia",1679397354,1679397354,-74.2692,4.6035,3992.88,!1,92.98,262.05,4.23,null,4168.14,null,!1,0],["75020a","MAS780  ","Malaysia",1679397191,1679397191,100.2295,7.7737,10363.2,!1,231.95,5.22,0,null,11003.28,"2153",!1,0],["461f07","FIN122  ","Finland",1679397462,1679397462,23.9991,57.0196,11887.2,!1,233.34,9.77,0,null,11673.84,"5315",!1,0],["a15ebc","DAL183  ","United States",1679397462,1679397462,-13.7721,53.8656,10363.2,!1,204.31,280.89,-.33,null,10241.28,"6605",!1,0],["461f08","FIN5KF  ","Finland",1679397462,1679397462,17.2968,55.4524,12192,!1,223.07,337.63,0,null,12070.08,"5353",!1,0],["05a054","DQA503  ","Maldives",1679397462,1679397462,82.4301,15.9677,10370.82,!1,224.38,215.29,0,null,null,"4752",!1,0],["780c48","CHH7996 ","China",1679397357,1679397357,101.5728,16.2285,10668,!1,255.63,27.44,0,null,11277.6,"0725",!1,0],["4076dd","EXS69G  ","United Kingdom",1679397456,1679397457,-16.181,29.9032,11277.6,!1,216.13,208.27,0,null,11590.02,null,!1,0],["abf17f","AAL2211 ","United States",1679397462,1679397462,-59.4336,13.0889,670.56,!1,109.43,76.68,6.5,null,685.8,null,!1,0],["a47809","UAL2648 ","United States",1679397441,1679397458,-89.3431,43.1388,null,!0,3.34,30.94,null,null,null,null,!1,0],["4076da","EXS155  ","United Kingdom",1679397442,1679397442,-11.6176,40.8034,10668,!1,247.33,202.24,-.33,null,10919.46,null,!1,0],["8964a1","UAE89   ","United Arab Emirates",1679397462,1679397462,8.1029,45.755,10073.64,!1,213.06,285.55,-7.8,null,10233.66,"3263",!1,0],["a0de3a","N155RA  ","United States",1679397462,1679397462,-87.723,41.7668,1607.82,!1,53.71,110.17,0,null,1577.34,"5154",!1,0],["461f09","FIN8J   ","Finland",1679397462,1679397462,14.6268,54.8218,7825.74,!1,181.9,314.31,-8.78,null,7848.6,"3225",!1,0],["4a29f9","HYM346  ","Romania",1679397461,1679397461,30.1188,40.2863,10972.8,!1,215.92,339.06,0,null,11041.38,null,!1,0],["4076e4","BAW84LG ","United Kingdom",1679397462,1679397462,9.6225,54.896,11285.22,!1,239.96,63.65,.33,null,11239.5,"4611",!1,0],["4076e2","BAW406  ","United Kingdom",1679397462,1679397462,6.1742,50.3411,10668,!1,231.59,129.77,0,null,10706.1,"2227",!1,0],["8964a3","UAE52M  ","United Arab Emirates",1679397462,1679397462,12.4219,50.169,10934.7,!1,218.19,291.73,-4.23,null,10980.42,"1000",!1,0],["750223","MAS2593 ","Malaysia",1679397441,1679397441,102.1644,2.8208,4724.4,!1,169.18,353.89,-9.43,null,4983.48,null,!1,0],["8964a8","UAE83   ","United Arab Emirates",1679397454,1679397456,53.3501,25.796,10363.2,!1,184.69,287.17,.33,null,10637.52,null,!1,0],["8964a7","UAE9J   ","United Arab Emirates",1679397461,1679397462,6.499,50.6868,10972.8,!1,225.56,290.01,0,null,10995.66,"3260",!1,0],["8964a6","UAE183  ","United Arab Emirates",1679397462,1679397462,7.3728,50.559,10972.8,!1,190.93,271.54,.33,null,11064.24,"3202",!1,0],["a87c4f","JBU1974 ","United States",1679397462,1679397462,-77.2295,41.7011,10668,!1,266.31,110.47,0,null,10469.88,"7066",!1,0],["a8d327","NKS1967 ","United States",1679397462,1679397462,-96.7919,32.7256,3116.58,!1,199.1,94.15,9.75,null,3154.68,null,!1,0],["4ca6a5","RYR1ML  ","Ireland",1679397462,1679397462,-7.9435,36.497,11582.4,!1,244.77,39.71,0,null,11902.44,"6262",!1,0],["a7767e","CXK481  ","United States",1679397411,1679397411,-79.9145,40.3543,289.56,!1,34.99,269.16,-2.6,null,373.38,null,!1,0],["a846fa","UPS204  ","United States",1679397462,1679397462,-75.1674,39.8863,167.64,!1,72.62,256.06,-3.58,null,259.08,"0726",!1,0],["4864ee","KLM92V  ","Kingdom of the Netherlands",1679397462,1679397462,9.8152,54.8183,12192,!1,220.07,229.65,-.33,null,12108.18,"0752",!1,0],["a4a0cd","","United States",null,1679397444,null,null,null,!1,3.34,160.31,null,null,null,null,!1,0],["aa2050","N7511W  ","United States",1679397454,1679397454,-82.3329,27.9954,152.4,!1,24.22,77.74,-.33,null,220.98,"1775",!1,0],["a75039","UPS1545 ","United States",1679397462,1679397462,-86.5997,38.2155,3390.9,!1,157.11,75.01,-7.8,null,3406.14,"7220",!1,0],["a0e56d","N157NS  ","United States",1679397462,1679397462,-83.7223,36.8917,10972.8,!1,239.58,8.15,-.33,null,10957.56,"7163",!1,0],["a45210","FFT2518 ","United States",1679397461,1679397462,-82.5542,28.1054,1394.46,!1,134.81,358.91,18.86,null,1470.66,null,!1,0],["a26be1","UPS984  ","United States",1679397458,1679397458,-122.3014,47.5323,null,!0,11.32,329.06,null,null,null,"7255",!1,0],["abb601","SWA27   ","United States",1679397462,1679397462,-81.5472,38.3946,10972.8,!1,204.38,255.72,0,null,10911.84,"3626",!1,0],["4851af","KLM717  ","Kingdom of the Netherlands",1679397462,1679397462,-7.532,53.2351,11879.58,!1,267.9,77.81,0,null,11826.24,"6252",!1,0],["ae6498","CD70    ","United States",1679397332,1679397346,127.118,37.4725,274.32,!1,33.76,187.88,-5.2,null,281.94,null,!1,0],["e06442","ARG1884 ","Argentina",1679397442,1679397442,-58.9322,-36.8279,10363.2,!1,199.61,198.48,0,null,10774.68,"1776",!1,0],["750208","MAS850  ","Malaysia",1679397462,1679397462,101.5711,2.9841,1516.38,!1,113.2,169,-7.15,null,1569.72,"4107",!1,0],["ab5f43","SWA255  ","United States",1679397463,1679397463,-93.9695,36.5648,11887.2,!1,248.46,32.57,0,null,11887.2,"4400",!1,0],["4864eb","KLM80Y  ","Kingdom of the Netherlands",1679397462,1679397462,5.3996,58.0178,8793.48,!1,194.61,189.59,8.45,null,8717.28,null,!1,0],["47947c","NOZ1640 ","Norway",1679397462,1679397462,2.282,58.2869,11582.4,!1,213.52,249.99,0,null,11422.38,null,!1,0],["491116","RVP089  ","Portugal",1679397419,1679397419,-9.3526,38.7179,0,!1,27.01,342.26,-1.63,null,152.4,"0246",!1,0],["a33222","ENY3625 ","United States",1679397463,1679397463,-86.4624,32.817,7612.38,!1,242.28,139.48,10.08,null,7757.16,null,!1,0],["491114","RVP055  ","Portugal",1679397462,1679397462,-8.6651,38.0312,1280.16,!1,47.08,33.86,0,null,1432.56,"1334",!1,0],["aaa954","SWA2458 ","United States",1679397462,1679397462,-81.808,28.994,11582.4,!1,245.86,9.03,0,null,11925.3,"1460",!1,0],["ac860c","N906G   ","United States",1679397300,1679397302,-77.5595,39.0827,-15.24,!1,32.05,161.27,-.98,null,83.82,null,!1,0],["a272b8","ENY3831 ","United States",1679397462,1679397462,-91.0983,33.0499,10363.2,!1,189.2,236.31,.33,null,10530.84,"3133",!1,0],["a5106e","RPA4697 ","United States",1679397462,1679397462,-76.9026,38.9745,1699.26,!1,137.31,252.11,.33,null,1775.46,"3505",!1,0],["ad4fb2","ASH6235 ","United States",1679397462,1679397462,-95.8019,29.9027,1516.38,!1,133.14,45,-10.4,null,1546.86,null,!1,0],["a2bba4","UAL2266 ","United States",1679397462,1679397462,-95.8219,36.6538,6858,!1,180.1,290.92,10.4,null,6850.38,"1163",!1,0],["ac2fc3","SWA3600 ","United States",1679397462,1679397462,-77.0981,35.8069,9753.6,!1,224.89,191.08,0,null,9791.7,"5630",!1,0],["484abc","PHPAZ   ","Kingdom of the Netherlands",1679397462,1679397462,9.4712,47.6779,1798.32,!1,67.2,70.32,-1.95,null,1889.76,"6206",!1,0],["3c1271","AIB46ZO ","Germany",1679397462,1679397462,3.7753,43.2638,10972.8,!1,214.66,330.73,.33,null,11170.92,"2630",!1,0],["4ac962","NVR297  ","Sweden",1679397462,1679397462,-7.6138,43.8472,10668,!1,243.41,206.62,0,null,10835.64,"2250",!1,0],["e0645a","ARG1602 ","Argentina",1679397460,1679397460,-58.0968,-36.1346,9448.8,!1,204.58,176.68,0,null,9867.9,"1721",!1,0],["a953b2","N70RF   ","United States",1679397461,1679397461,-79.8752,38.0367,7391.4,!1,236.03,102.46,-5.85,null,7414.26,null,!1,0],["ab4c1d","DAL173  ","United States",1679397462,1679397462,7.6678,45.5718,6149.34,!1,210.26,315,7.48,null,6301.74,"0464",!1,0],["a09590","DAL2833 ","United States",1679397462,1679397462,-84.0936,39.8532,7620,!1,220.52,43.49,2.93,null,7589.52,"4070",!1,0],["4984b2","AOD39   ","Czech Republic",1679397160,1679397160,14.4166,50.2131,259.08,!1,68,284.46,-3.9,null,358.14,"2614",!1,0],["accf07","SWA2841 ","United States",1679397462,1679397462,-76.6088,37.4624,9151.62,!1,234.69,175.85,3.58,null,9136.38,"4067",!1,0],["4984b6","SMGLR23 ","Czech Republic",1679397462,1679397462,14.7938,50.0819,556.26,!1,99.04,299.23,2.28,null,624.84,"3367",!1,0],["3d2b5c","DEORC   ","Germany",1679397462,1679397462,8.6406,48.6302,1325.88,!1,51.35,280.97,1.63,null,1386.84,"7000",!1,0],["abb624","SWA1503 ","United States",1679397462,1679397462,-76.6035,36.0201,10972.8,!1,207.07,211.28,0,null,10995.66,"1574",!1,0],["48adad","LOT3KY  ","Poland",1679397462,1679397462,22.0551,43.5913,10058.4,!1,233.61,138.48,0,null,10104.12,"1000",!1,0],["484ac0","ZXP26   ","Kingdom of the Netherlands",1679397461,1679397461,5.1763,52.4188,99.06,!1,54.73,85.15,-1.63,null,137.16,"6220",!1,0],["48adab","LOT266  ","Poland",1679397462,1679397462,20.9495,51.9499,1775.46,!1,126.64,103.87,-6.18,null,1805.94,"1000",!1,0],["a1a2a2","UAL135  ","United States",1679397462,1679397462,-3.2217,53.7915,10363.2,!1,223.75,301.46,0,null,10256.52,"3002",!1,0],["ac7f41","AAL2963 ","United States",1679397353,1679397353,-74.1863,40.6833,null,!0,0,337.5,null,null,null,null,!1,0],["a33272","FFT535  ","United States",1679397318,1679397318,-77.0419,38.8458,null,!0,.45,81.56,null,null,null,null,!1,0],["e49527","","Brazil",1679397411,1679397412,-48.1711,-15.873,2446.02,!1,106.24,109.22,-5.85,null,2583.18,null,!1,0],["49131a","NJE302H ","Portugal",1679397457,1679397461,-6.419,45.339,12192,!1,214.22,35.03,0,null,12275.82,"5431",!1,0],["ac0c41","SWA1861 ","United States",1679397462,1679397462,-94.3152,42.1839,10363.2,!1,208.5,256.44,0,null,10187.94,"1332",!1,0],["4ab568","BRX363  ","Sweden",1679397458,1679397460,17.9498,59.3515,15.24,!1,49.94,304.51,-.98,null,45.72,null,!1,0],["ac86e5","EJA906  ","United States",1679397462,1679397462,-81.2052,32.2205,1341.12,!1,133.78,358.9,20.48,null,1417.32,null,!1,0],["4853d0","TRA77Q  ","Kingdom of the Netherlands",1679397462,1679397462,.7975,46.4916,11582.4,!1,226.21,352.55,0,null,11650.98,"5360",!1,0],["4ca5c8","EIN233  ","Ireland",1679397462,1679397462,-.5647,51.1199,3261.36,!1,138.78,282.85,8.45,null,3268.98,"2065",!1,0],["4853d1","TRA5225 ","Kingdom of the Netherlands",1679397462,1679397462,22.5285,37.1063,10972.8,!1,228.46,153.09,0,null,11087.1,"0167",!1,0],["4ca5c7","EIN105  ","Ireland",1679397462,1679397462,-6.9187,53.6432,4084.32,!1,172.86,300,12.35,null,4008.12,"6016",!1,0],["3c48f1","EWG97XH ","Germany",1679397462,1679397462,2.7488,44.0699,11887.2,!1,219.33,177.71,0,null,12031.98,"0136",!1,0],["a788fd","FDX1750 ","United States",1679397462,1679397462,-109.6834,36.4505,10980.42,!1,186.01,253.12,0,null,11003.28,null,!1,0],["a895b0","PDT6129 ","United States",1679397293,1679397293,-75.2262,39.8746,-129.54,!1,63.76,255.52,-3.58,null,7.62,"3471",!1,0],["4853d4","TRA47P  ","Kingdom of the Netherlands",1679397462,1679397462,-.1057,47.874,11582.4,!1,240.58,37.7,0,null,11628.12,"1000",!1,0],["abec26","SWA3043 ","United States",1679397462,1679397462,-85.4905,37.9989,12207.24,!1,221.25,350.36,0,null,12153.9,"0717",!1,0],["e49524","GLO1569 ","Brazil",1679397455,1679397455,-46.998,-23.3447,3794.76,!1,155.31,144.57,-5.53,null,4137.66,null,!1,0],["a44b62","N376PH  ","United States",1679397461,1679397462,-122.3592,40.4992,1135.38,!1,60.08,155.19,.33,null,1028.7,"1200",!1,0],["706132","JZR115  ","Kuwait",1679397343,1679397343,48.6588,28.9169,6713.22,!1,227.09,126.25,13.33,null,6019.8,null,!1,0],["a3e2f6","N35FE   ","United States",1679397462,1679397462,-88.685,35.912,7178.04,!1,180.45,240.07,-9.75,null,7223.76,"7447",!1,0],["49130d","NJE5EC  ","Portugal",1679397462,1679397462,.3988,43.9863,12192,!1,207.84,343.31,0,null,12298.68,"5561",!1,0],["e4952e","GLO1426 ","Brazil",1679397462,1679397462,-47.3861,-22.5014,10050.78,!1,239.55,349.61,6.83,null,10629.9,null,!1,0],["491310","NJE265M ","Portugal",1679397462,1679397462,9.8034,45.7948,6697.98,!1,192.3,76.86,15.28,null,6835.14,"1000",!1,0],["501c0b","BLX73B  ","Croatia",1679397462,1679397462,-15.1,31.5633,10668,!1,229.43,213.48,0,null,10972.8,null,!1,0],["48c9f3","PPU01   ","Poland",1679397462,1679397462,16.4253,52.3898,1036.32,!1,97.44,173.03,0,null,1082.04,null,!1,0],["a5d557","CXK504  ","United States",1679397462,1679397462,-80.7311,35.3869,381,!1,47.79,194.34,1.95,null,472.44,null,!1,0],["341683","IBE0532 ","Spain",1679397461,1679397461,-5.2369,41.3622,8839.2,!1,199.42,299.01,.33,null,9014.46,null,!1,0],["a402d1","N358DA  ","United States",1679397461,1679397462,-8.6762,41.0917,13106.4,!1,245.47,77.04,0,null,13296.9,null,!1,0],["501c15","SDR62SB ","Croatia",1679397462,1679397462,27.7586,36.9416,10668,!1,234.33,156.59,-.33,null,10805.16,"7423",!1,0],["e48e3d","PROHI   ","Brazil",1679397457,1679397462,-42.1703,-23.192,632.46,!1,74.68,19.31,-2.93,null,685.8,null,!1,0],["491314","NJE638H ","Portugal",1679397462,1679397462,13.1719,52.4804,4853.94,!1,169.75,353.74,20.81,null,4907.28,"7261",!1,0],["ac0c64","SWA3952 ","United States",1679397277,1679397282,-82.8615,24.755,9144,!1,221.14,192.9,0,null,9578.34,"1265",!1,0],["ac1f98","UAL2311 ","United States",1679397461,1679397461,-84.8162,27.3498,9745.98,!1,209.56,300.22,0,null,10157.46,"3653",!1,0],["8a0926","BTK6849 ","Indonesia",1679397237,1679397237,103.9248,-1.5846,10066.02,!1,228.91,140.84,0,null,10713.72,null,!1,0],["c0611f","ACA912  ","Canada",1679397461,1679397462,-80.031,39.8555,12192,!1,235.33,182.51,0,null,12070.08,"2212",!1,0],["7c404c","MZI     ","Australia",1679397436,1679397462,148.2116,-35.9295,2956.56,!1,74.56,230.6,-.98,null,3162.3,"7247",!1,0],["491307","NJE646C ","Portugal",1679397462,1679397462,1.4982,41.1131,12192,!1,203.95,347.47,0,null,12382.5,"5341",!1,0],["484cbb","KLM515  ","Kingdom of the Netherlands",1679397453,1679397453,19.8969,41.0186,11163.3,!1,245.15,150.31,6.18,null,11087.1,null,!1,0],["abafff","AAL1255 ","United States",1679397462,1679397462,-94.4058,38.2079,8008.62,!1,238.63,134.83,6.83,null,7970.52,"1772",!1,0],["ac0027","SWA3224 ","United States",1679397462,1679397462,-90.4384,41.2462,10972.8,!1,210.26,240.86,0,null,10812.78,"3377",!1,0],["4ab54a","DFL2R   ","Sweden",1679397462,1679397462,9.422,59.7142,7985.76,!1,171.5,47.55,-4.55,null,7871.46,null,!1,0],["484cb4","KLM39Y  ","Kingdom of the Netherlands",1679397462,1679397462,4.4365,52.3448,3535.68,!1,184.97,333.22,16.91,null,3489.96,"6271",!1,0],["aa46cb","ENY3389 ","United States",1679397462,1679397462,-88.8634,42.4051,4122.42,!1,176,99.93,-13.98,null,4076.7,"2406",!1,0],["a8352b","NKS590  ","United States",1679397462,1679397462,-96.0069,30.065,5768.34,!1,182.19,276.32,12.03,null,5943.6,null,!1,0],["3cd50b","TYW211F ","Germany",1679397462,1679397462,-1.1656,52.8336,693.42,!1,66.89,269.12,-3.25,null,null,"6663",!1,0],["76cd03","SIA214  ","Singapore",1679397462,1679397462,115.7122,-31.211,5958.84,!1,220.27,1.61,8.13,null,6271.26,"1241",!1,0],["750287","AXM892  ","Malaysia",1679397462,1679397462,100.6732,14.0348,739.14,!1,84.95,208.58,-7.15,null,754.38,"2135",!1,0],["76cd07","SIA494  ","Singapore",1679397462,1679397462,75.9608,13.863,12192,!1,238.22,298.23,0,null,12786.36,null,!1,0],["8a0909","SJV776  ","Indonesia",1679397462,1679397462,110.2978,-7.9926,3124.2,!1,131.02,110.21,12.68,null,3268.98,null,!1,0],["e48e88","AZU4173 ","Brazil",1679397274,1679397282,-46.1017,-23.47,8313.42,!1,204.85,100.12,6.5,null,8816.34,null,!1,0],["ad8cec","AAL2049 ","United States",1679397462,1679397462,-97.1657,32.9222,2567.94,!1,130.16,.68,-9.75,null,2575.56,null,!1,0],["a5ce0f","UPS2348 ","United States",1679397462,1679397462,-80.1474,26.2503,2964.18,!1,148.7,289.19,.65,null,3086.1,null,!1,0],["e48232","GLO1121 ","Brazil",1679397364,1679397364,-46.6342,-22.9595,3558.54,!1,155.05,162.23,-4.88,null,3916.68,null,!1,0],["76cd10","SIA921  ","Singapore",1679397460,1679397460,121.0134,14.5067,null,!0,11.32,239.06,null,null,null,null,!1,0],["478f5c","SAS903  ","Norway",1679397460,1679397460,3.0497,61.7413,10363.2,!1,217.42,281.6,0,null,10165.08,"0203",!1,0],["86ebfa","ANA880  ","Japan",1679397462,1679397462,150.2092,-31.942,10888.98,!1,245.37,348.88,4.23,null,11452.86,"1341",!1,0],["76cd14","SIA421  ","Singapore",1679397462,1679397462,102.5521,1.9927,9532.62,!1,234.48,126.79,-10.73,null,10126.98,null,!1,0],["76cd13","SIA504  ","Singapore",1679397461,1679397462,102.6725,2.711,8275.32,!1,245.15,299.69,3.25,null,8778.24,"2236",!1,0],["ab40f0","AAL1047 ","United States",1679397462,1679397462,-85.0407,36.066,10058.4,!1,243.25,168.29,0,null,10073.64,"6733",!1,0],["76cd17","SIA714  ","Singapore",1679397462,1679397462,100.8788,13.8054,2026.92,!1,117.81,15.19,-1.95,null,2072.64,"0124",!1,0],["780d13","CHH7219 ","China",1679397462,1679397462,112.8283,23.0475,9479.28,!1,258.48,94.34,0,null,9944.1,null,!1,0],["75027f","MAS1397 ","Malaysia",1679397446,1679397446,101.6492,2.8569,601.98,!1,88.89,145.85,-4.23,null,624.84,"7214",!1,0],["aac04c","JRE792  ","United States",1679397461,1679397462,-80.054,26.481,2065.02,!1,146.45,151,0,null,2186.94,null,!1,0],["43c6f6","TARTN29 ","United Kingdom",1679397462,1679397462,-.5701,55.9828,4267.2,!1,140.45,270.63,0,null,4183.38,"6530",!1,0],["4b8594","TCALT   ","Turkey",1679397461,1679397461,27.6588,41.1665,4594.86,!1,188.27,130.57,-8.45,null,4678.68,null,!1,0],["4d0233","SVW51XL ","Luxembourg",1679397462,1679397462,6.6332,45.6643,6416.04,!1,223.52,352.73,-9.1,null,6576.06,"1000",!1,0],["acb0c7","N917BB  ","United States",1679397462,1679397462,-77.9641,35.8943,1684.02,!1,135.85,268.7,-.33,null,1752.6,"6707",!1,0],["750263","MAS6115 ","Malaysia",1679397462,1679397462,101.8453,2.8975,3322.32,!1,148.88,293.2,-10.08,null,3497.58,"5341",!1,0],["44ccc2","BEL359R ","Belgium",1679397461,1679397461,7.2258,42.1137,11277.6,!1,246.7,182.75,0,null,11483.34,"0105",!1,0],["49d4e1","TIE210B ","Czech Republic",1679397463,1679397463,14.1978,49.7478,6103.62,!1,195.9,36.78,-23.41,null,6156.96,"1000",!1,0],["405ee0","BAW554R ","United Kingdom",1679397462,1679397462,11.2609,45.9694,11277.6,!1,252.45,166.93,0,null,11376.66,"5251",!1,0],["a5ce40","SWA2562 ","United States",1679397462,1679397462,-84.9214,40.9201,9136.38,!1,208.32,335.33,-1.63,null,9044.94,"6223",!1,0],["a69206","TAI433  ","United States",1679397460,1679397462,-99.086,19.427,null,!0,0,61.88,null,null,null,null,!1,0],["a3328d","ASH524  ","United States",1679397462,1679397462,-86.9767,39.3599,9753.6,!1,199.28,272.52,0,null,9639.3,null,!1,0],["44ccc7","BEL379  ","Belgium",1679397462,1679397462,6.6017,48.5838,11277.6,!1,224.61,172.63,0,null,11330.94,"0106",!1,0],["44ccc6","BEL1CP  ","Belgium",1679397462,1679397462,-8.5122,53.1874,10972.8,!1,215.64,298.03,0,null,10866.12,"4414",!1,0],["abf375","SWA625  ","United States",1679397217,1679397217,-82.5372,27.9858,null,!0,13.38,92.81,null,null,null,"1025",!0,0],["845d1c","JAL328  ","Japan",1679397462,1679397462,139.7248,34.9299,5021.58,!1,176.3,75.64,-14.63,null,5151.12,"2272",!1,0],["8965f8","ABY147  ","United Arab Emirates",1679397460,1679397462,52.4699,25.9582,10355.58,!1,171.64,295.95,-.33,null,10599.42,null,!1,0],["e48e72","TAM8115 ","Brazil",1679397462,1679397462,2.3626,38.3405,9448.8,!1,235.89,182.75,.33,null,9730.74,null,!1,0],["a57231","AWI3760 ","United States",1679397462,1679397462,-82.2525,37.7586,10363.2,!1,196.64,306.06,0,null,10325.1,"2047",!1,0],["75025f","MAS705  ","Malaysia",1679397462,1679397462,114.2416,7.7547,11887.2,!1,239.73,233.38,0,null,12656.82,null,!1,0],["78140c","CHH7276 ","China",1679397461,1679397461,113.4187,22.658,3048,!1,130.6,175.26,-2.93,null,3154.68,null,!1,0],["c037d1","MAL8088 ","Canada",1679397447,1679397447,-110.5251,51.1203,6096,!1,136.64,266.11,0,null,5821.68,null,!1,0],["c0872b","CRQ5375 ","Canada",1679397462,1679397462,-72.3369,45.7327,5113.02,!1,171.09,68.29,.33,null,4953,"5256",!1,0],["8965fb","ADY046  ","United Arab Emirates",1679397462,1679397462,77.0905,28.8548,10370.82,!1,216.48,264.68,-.33,null,10538.46,null,!1,0],["a4ae5f","N400TW  ","United States",1679397462,1679397462,-78.3676,38.0036,6713.22,!1,107.1,230.65,0,null,6736.08,"0553",!1,0],["44ccca","BEL205  ","Belgium",1679397462,1679397462,.4289,45.7455,11887.2,!1,232.87,207.64,0,null,11971.02,"7115",!1,0],["49d4eb","ABP951  ","Czech Republic",1679397461,1679397462,9.5939,46.1089,7406.64,!1,202.69,191.57,-7.48,null,7551.42,"1000",!1,0],["c00b9e","JZA631  ","Canada",1679397462,1679397462,-73.6298,45.5427,533.4,!1,77.17,222.84,-3.9,null,556.26,"1164",!1,0],["48418b","KLM1613 ","Kingdom of the Netherlands",1679397462,1679397462,10.6218,49.8873,11277.6,!1,249.93,117.99,0,null,11277.6,"3163",!1,0],["a0cab1","FDX1742 ","United States",1679397462,1679397462,-116.8182,34.2777,9304.02,!1,183.38,244.23,-5.85,null,9349.74,null,!1,0],["acaa77","AAL1597 ","United States",1679397462,1679397462,-77.9003,39.365,10363.2,!1,200.63,242.84,0,null,10264.14,"2750",!1,0],["48418d","KLM35F  ","Kingdom of the Netherlands",1679397462,1679397462,7.0268,51.259,10165.08,!1,230.07,142.54,5.85,null,10157.46,"3167",!1,0],["3cc24b","DCAWP   ","Germany",1679397462,1679397462,4.9315,52.278,2095.5,!1,133.21,43.12,-5.2,null,2110.74,"1000",!1,0],["7c530f","QLK819D ","Australia",1679397462,1679397462,152.6255,-26.6025,5189.22,!1,182,140.51,-9.75,null,5577.84,null,!1,0],["7c5325","QFA88   ","Australia",1679397460,1679397460,127.5013,36.7115,7444.74,!1,259.74,134.52,5.2,null,7536.18,null,!1,0],["ae4af8","HERKY21 ","United States",1679397460,1679397461,5.888,50.1563,967.74,!1,115.74,313.2,-5.85,null,1021.08,"7000",!1,0],["3d925a","PTO303  ","Germany",1679397462,1679397462,10.868,52.4419,1211.58,!1,63.81,209.46,0,null,1272.54,"7772",!1,0],["461fbd","FSF944J ","Finland",1679397456,1679397458,5.3639,45.427,1485.9,!1,79.83,277.03,-.65,null,1592.58,null,!1,0],["e80335","SKX5003 ","Chile",1679397462,1679397462,-75.5135,-12.6545,9936.48,!1,232.64,108.03,4.55,null,null,null,!1,0],["e480f0","PRLCF   ","Brazil",1679397463,1679397463,-40.4241,-20.4869,922.02,!1,67.09,322.16,0,null,990.6,null,!1,0],["781ee5","CES9012 ","China",null,1679397459,null,null,null,!1,212.98,17.43,-.33,null,null,null,!1,0],["aaa9b6","SWA1238 ","United States",1679397462,1679397462,-86.6523,36.0651,11887.2,!1,248.2,159.87,0,null,11910.06,"1464",!1,0],["600805","AHY064  ","Azerbaijan",1679395697,1679397428,28.0741,44.4549,10668,!1,234.94,132.07,0,null,10645.14,"7604",!1,0],["3cc23c","PWF1904 ","Germany",1679397455,1679397455,22.2821,45.8947,8229.6,!1,171.42,136.82,.33,null,8221.98,"7635",!1,0],["e480f9","TAM3020 ","Brazil",1679397176,1679397176,-47.1965,-24.8725,9745.98,!1,205.51,200.98,12.35,null,8763,null,!1,0],["780bb9","CAO1027 ","China",1679397462,1679397462,10.4044,53.5012,10363.2,!1,231.04,223.83,0,null,10363.2,"1000",!1,0],["780bb8","CAO1048 ","China",1679397463,1679397463,15.5228,55.5188,9448.8,!1,249.86,54.22,0,null,9403.08,"6435",!1,0],["84b495","APJ586  ","Japan",1679397435,1679397435,141.4365,39.8188,10378.44,!1,211.73,186.42,0,null,10309.86,null,!1,0],["7c530d","QLK817D ","Australia",1679397462,1679397462,153.1589,-27.1041,1173.48,!1,104.33,82.35,-5.2,null,1348.74,null,!1,0],["acaa74","NKS1610 ","United States",1679397462,1679397462,-81.037,25.7012,7696.2,!1,220.85,253.21,7.48,null,8054.34,null,!1,0],["478f0b","SCQ22A  ","Norway",1679397462,1679397462,16.282,59.2064,922.02,!1,49.05,274.81,-.33,null,899.16,null,!1,0],["461fa7","FIN2MF  ","Finland",1679397223,1679397223,26.1876,66.5561,2141.22,!1,140.9,17.64,-7.15,null,1943.1,null,!1,0],["8881ba","VAG131  ","Viet Nam",1679397462,1679397462,102.0292,13.1826,8214.36,!1,211.86,277.82,-5.53,null,8671.56,"5640",!1,0],["7c5304","QLK815D ","Australia",1679397276,1679397276,153.1223,-27.3818,null,!0,8.75,298.12,null,null,null,null,!1,0],["e8033e","SKX5224 ","Chile",1679397462,1679397462,-78.5225,-9.9991,11582.4,!1,226.85,333.03,0,null,null,null,!1,0],["40666d","EZY1945 ","United Kingdom",1679397461,1679397461,23.6665,42.0446,10668,!1,224.89,145.44,0,null,10713.72,"4643",!1,0],["484186","TRA2K   ","Kingdom of the Netherlands",1679397462,1679397462,-2.5629,42.0906,11582.4,!1,239.96,24.04,-.33,null,11696.7,"4541",!1,0],["c2b549","CFC2919 ","Canada",1679397456,1679397456,15.1756,42.1104,8839.2,!1,188.8,202.93,.33,null,8877.3,"7340",!1,0],["40799b","CFE72JF ","United Kingdom",1679397462,1679397462,10.1415,44.279,8610.6,!1,195.88,308.5,8.13,null,8770.62,"0476",!1,0],["40666a","EZY84FE ","United Kingdom",1679397459,1679397459,-2.2765,53.3586,null,!0,4.89,5.62,null,null,null,"4227",!0,0],["4911e7","DBT510  ","Portugal",1679397462,1679397462,8.8916,45.8365,9944.1,!1,180.58,17.92,-2.28,null,10081.26,"1000",!1,0],["406673","EZY41JD ","United Kingdom",1679397462,1679397462,24.475,40.1579,11269.98,!1,239.05,130.37,-.33,null,11346.18,"4726",!1,0],["48548c","KLM1445 ","Kingdom of the Netherlands",1679397461,1679397461,2.3688,54.9968,10972.8,!1,229.45,295.07,0,null,10820.4,"6264",!1,0],["e480d1","TAM3091 ","Brazil",1679397462,1679397462,-47.0183,-19.9832,11269.98,!1,221.18,172.25,0,null,11925.3,null,!1,0],["7812ab","FZA6592 ","China",1679397449,1679397449,114.5355,23.6119,9479.28,!1,252.05,60.4,0,null,9951.72,null,!1,0],["8881ac","VJC931  ","Viet Nam",1679397462,1679397462,106.96,22.4426,7315.2,!1,189.27,229.08,0,null,7635.24,null,!1,0],["406670","EZY32BR ","United Kingdom",1679397462,1679397462,.8762,41.7125,10058.4,!1,244.67,4.7,0,null,10287,null,!1,0],["a9f2c6","CKS852  ","United States",1679397461,1679397461,140.653,36.889,12192,!1,199.75,239.34,.33,null,12230.1,null,!1,0],["40665e","TOM2CH  ","United Kingdom",1679397458,1679397461,-8.8265,49.0833,10972.8,!1,229.85,193.2,.33,null,11033.76,"6210",!1,0],["780bcc","CSN3734 ","China",1679397462,1679397462,113.2902,22.7334,3589.02,!1,153.11,162.6,-3.58,null,3718.56,null,!1,0],["a0e4b2","FDX1151 ","United States",1679397462,1679397462,-116.0596,34.1281,10363.2,!1,178.22,263.2,.33,null,10454.64,null,!1,0],["a2b10d","UAL2469 ","United States",1679397462,1679397462,-98.0429,42.8682,7315.2,!1,226.55,229.33,0,null,7193.28,null,!1,0],["aaf93e","RPA4656 ","United States",1679397462,1679397462,-83.5925,37.9269,10530.84,!1,246.9,93.58,8.13,null,10477.5,null,!1,0],["73244b","IRA718  ","Islamic Republic of Iran",1679397461,1679397462,31.8396,41.7893,11285.22,!1,246.27,110.29,0,null,null,null,!1,0],["4bcda4","SXS4NT  ","Turkey",1679397462,1679397462,19.636,45.3317,12192,!1,222.9,320.43,.33,null,12184.38,"3217",!1,0],["4bcda2","SXS7Z   ","Turkey",1679397462,1679397462,10.7751,48.4735,5989.32,!1,186.46,289.33,-5.2,null,6111.24,"6465",!1,0],["4ca718","ITY1592 ","Ireland",1679397462,1679397462,12.2154,41.9558,670.56,!1,104.47,162.81,-2.6,null,754.38,null,!1,0],["484160","        ","Kingdom of the Netherlands",1679397462,1679397462,4.753,52.2979,null,!0,8.75,118.12,null,null,null,"1000",!1,0],["c00b71","JZA982  ","Canada",1679397463,1679397463,-77.4462,42.9785,8229.6,!1,219.72,97.94,0,null,8061.96,"6337",!1,0],["a2b112","","United States",1679397423,1679397423,-92.4717,27.7158,10972.8,!1,211.54,319.14,0,null,11346.18,null,!1,0],["a6f581","SCX3048 ","United States",1679397461,1679397462,-87.737,34.0474,12192,!1,193.79,298.2,0,null,12298.68,"7475",!1,0],["484161","        ","Kingdom of the Netherlands",1679397462,1679397462,4.7335,52.3069,null,!0,13.89,182.81,null,null,null,"6321",!1,0],["70aa67","HIM679  ","Nepal",1679397461,1679397462,87.3724,25.1476,10988.04,!1,204.76,307.45,-.33,null,11277.6,"4703",!1,0],["484163","KLM24T  ","Kingdom of the Netherlands",1679397462,1679397462,12.3546,55.491,2697.48,!1,140.15,237.59,16.91,null,2651.76,"5661",!1,0],["a224f9","UAL1573 ","United States",1679397461,1679397462,-80.7721,37.1485,11582.4,!1,200.1,238.88,0,null,11574.78,"3302",!1,0],["a8222c","JBU2293 ","United States",1679397461,1679397461,-77.4637,34.2124,10363.2,!1,221.16,189.51,0,null,10462.26,"3350",!1,0],["48414e","TRA66F  ","Kingdom of the Netherlands",1679397461,1679397462,1.0233,45.0905,11590.02,!1,231,353.35,0,null,11650.98,"5550",!1,0],["a2d76a","SWA1628 ","United States",1679397462,1679397462,-96.8783,31.9439,8229.6,!1,226.78,171.52,0,null,8420.1,null,!1,0],["8a096f","SJV888  ","Indonesia",1679397419,1679397421,100.1771,1.1682,10972.8,!1,237.18,315,0,null,11681.46,null,!1,0],["aaf960","AAL1224 ","United States",1679397462,1679397462,-95.1298,30.4535,4259.58,!1,203.24,19.67,12.35,null,4366.26,null,!1,0],["a762d3","AAL2527 ","United States",1679397462,1679397462,-82.7494,38.0715,8542.02,!1,216.95,249.89,0,null,8542.02,"3526",!1,0],["a2b110","UAL2651 ","United States",1679397462,1679397462,-92.3722,44.6048,6530.34,!1,186.86,112.33,12.03,null,6377.94,null,!1,0],["a7beea","GLG1690 ","United States",1679397448,1679397448,-78.5607,-.0115,5425.44,!1,155.3,243.86,4.55,null,5760.72,null,!1,0],["c2b52b","CFC2918 ","Canada",1679397462,1679397462,7.1689,49.8702,7010.4,!1,177.42,59.12,0,null,7094.22,"1000",!1,0],["c00b7c","JZA632  ","Canada",1679397462,1679397462,-73.8112,43.0372,8534.4,!1,184.21,178.88,0,null,8313.42,"1005",!1,0],["346499","IBE31PB ","Spain",1679397461,1679397462,9.1754,40.3763,11277.6,!1,243.27,100.48,0,null,11483.34,"5326",!1,0],["a38d49","DAL2931 ","United States",1679397295,1679397295,-84.4249,33.6327,null,!0,10.29,59.06,null,null,null,null,!1,0],["8a0965","BTK7630 ","Indonesia",1679397462,1679397462,100.8698,12.9262,8092.44,!1,224.55,153.61,8.78,null,8564.88,"0716",!1,0],["ac6ca9","N9YJ    ","United States",1679397461,1679397461,-87.9747,43.0329,518.16,!1,38.94,254.68,-.98,null,525.78,null,!1,0],["780bff","CES506  ","China",1679397458,1679397462,113.8986,22.2962,266.7,!1,79.42,249.92,15.28,null,220.98,null,!1,0],["86da16","ANA1414 ","Japan",1679397462,1679397462,140.2142,36.2394,4472.94,!1,150.44,192.04,-3.25,null,4594.86,null,!1,0],["501c08","ASL4040 ","Croatia",1679397461,1679397462,12.7409,47.9864,4198.62,!1,153.16,300.7,-6.18,null,4320.54,"2662",!1,0],["a96877","JIA5097 ","United States",1679397462,1679397462,-76.849,39.1088,10370.82,!1,209.53,225.4,.65,null,10287,"1725",!1,0],["aaa9fb","SWA2651 ","United States",1679397462,1679397462,-91.0816,31.8398,10325.1,!1,184.79,244.79,5.85,null,10561.32,null,!1,0],["a1a435","JBU1184 ","United States",1679397462,1679397462,-77.0451,35.9548,10058.4,!1,256.74,35.95,0,null,10104.12,"5753",!1,0],["ac1f61","RPA5860 ","United States",1679397462,1679397462,-75.2635,40.6884,3848.1,!1,189.42,104.79,0,null,3863.34,"3764",!1,0],["3cce71","FCK2FT  ","Germany",1679397462,1679397462,7.7081,51.5519,487.68,!1,79.06,239.93,-5.53,null,541.02,"0030",!1,0],["872766","ANA833  ","Japan",1679397462,1679397462,136.2588,32.2985,11574.78,!1,208.66,238.82,0,null,11917.68,"3665",!1,0],["abf308","SWA3610 ","United States",1679397462,1679397462,-73.556,41.6919,5166.36,!1,179.81,3.12,-4.88,null,5113.02,"7301",!1,0],["a38d36","DAL796  ","United States",1679397462,1679397462,-82.4091,42.5902,3931.92,!1,149.45,259.89,-10.4,null,3909.06,"3577",!1,0],["4bcda1","SXS73C  ","Turkey",1679397462,1679397462,13.7571,47.6714,10972.8,!1,196.05,318.4,0,null,11026.14,"5364",!1,0],["4ca707","RYR37LL ","Ireland",1679397462,1679397462,.846,41.653,10363.2,!1,201,335.67,0,null,10576.56,null,!1,0],["4ca708","RYR3NN  ","Ireland",1679397462,1679397462,-3.4108,51.5512,9448.8,!1,232.88,98.26,0,null,9425.94,"1251",!1,0],["a8d2a8","ENY3581 ","United States",1679397462,1679397462,-88.6595,41.5326,3604.26,!1,192.86,62,-.33,null,3566.16,"2156",!1,0],["70aa79","HIM891  ","Nepal",1679397440,1679397458,100.0398,6.0187,10363.2,!1,250.01,325.39,-.33,null,11018.52,"2162",!1,0],["4243c3","AZG9983 ","United Kingdom",1679397462,1679397462,75.118,28.2571,10058.4,!1,270.79,85.86,.33,null,10256.52,null,!1,0],["4243c4","AZG789  ","United Kingdom",1679397462,1679397462,24.5165,45.2395,10668,!1,257.02,117.54,0,null,10637.52,"5253",!1,0],["a8deda","UAL50   ","United States",1679397462,1679397462,-9.1542,43.2795,9448.8,!1,233.72,303.24,0,null,9646.92,null,!1,0],["841538","JAL524  ","Japan",1679397461,1679397462,140.6626,37.7526,10919.46,!1,184.43,225.34,-4.88,null,10980.42,null,!1,0],["a451cf","DAL2514 ","United States",1679397462,1679397462,-86.3086,39.2939,4450.08,!1,181.93,174.48,14.63,null,4434.84,null,!1,0],["3c0a02","TUI7KJ  ","Germany",1679397462,1679397462,6.5449,50.5205,10363.2,!1,206.12,220.65,0,null,10401.3,"1130",!1,0],["a82dbd","NKS1350 ","United States",1679397462,1679397462,-76.6353,36.8959,11582.4,!1,211.2,206.32,0,null,11612.88,"7135",!1,0],["a94dc7","HPJ699  ","United States",1679397430,1679397430,-65.4003,16.9133,10668,!1,253.1,132.28,.33,null,11247.12,null,!1,0],["abfdaf","SWA3201 ","United States",1679397462,1679397462,-91.2025,41.0896,8663.94,!1,229.96,93.85,-5.2,null,8564.88,null,!1,0],["a0a9b2","UCA4869 ","United States",1679397438,1679397438,-77.4476,38.9473,null,!0,0,101.25,null,null,null,"3525",!1,0],["407944","BAW134  ","United Kingdom",1679397462,1679397462,23.9572,45.2643,11582.4,!1,235.85,299.25,0,null,11536.68,"7213",!1,0],["a23914","SKW4044 ","United States",1679397462,1679397462,-71.1448,42.16,4777.74,!1,149.04,259.66,-.33,null,4739.64,null,!1,0],["ad44b9","NKS3141 ","United States",1679397461,1679397461,-87.1879,28.1062,11262.36,!1,257.12,106.98,0,null,11635.74,null,!1,0],["40792f","SHT18G  ","United Kingdom",1679397462,1679397462,-2.2414,57.2607,533.4,!1,60.28,158.47,-1.95,null,449.58,"5445",!1,0],["aa7ac8","SWA2778 ","United States",1679397462,1679397462,-98.8292,30.8259,7307.58,!1,211.26,332.12,0,null,7513.32,null,!1,0],["4ca63a","EIN43R  ","Ireland",1679397462,1679397462,7.3629,47.4007,10363.2,!1,215.5,290.25,.33,null,10500.36,"7531",!1,0],["abfdd1","AAL113  ","United States",1679397462,1679397462,-7.3404,41.2014,10965.18,!1,245.65,251.94,0,null,11186.16,null,!1,0],["a7ad0d","JBU320  ","United States",1679397462,1679397462,-77.2826,36.3971,11887.2,!1,270.1,60.07,0,null,11940.54,"2061",!1,0],["4ca645","RYR81FD ","Ireland",1679397461,1679397462,.3521,41.9127,11277.6,!1,205.36,190.1,0,null,11468.1,"7117",!1,0],["407936","LFA201  ","United Kingdom",1679397462,1679397462,-1.1413,52.1689,2438.4,!1,59.52,255.48,0,null,2423.16,"2244",!1,0],["8880f1","HVN513  ","Viet Nam",1679397417,1679397417,105.8737,21.4338,1996.44,!1,109.94,227.28,-4.23,null,2103.12,null,!1,0],["345248","VLG9CQ  ","Spain",1679397462,1679397462,3.5104,41.694,8999.22,!1,237.88,59.89,2.28,null,9243.06,null,!1,0],["345249","VLG8WC  ","Spain",1679397462,1679397462,2.6311,48.6341,2103.12,!1,155.47,69.47,-10.4,null,2186.94,"2232",!1,0],["407930","BAW949L ","United Kingdom",1679397462,1679397462,-.3844,51.4651,259.08,!1,57.62,269.49,-2.93,null,266.7,"0615",!1,0],["78018e","CPA369  ","China",1679397450,1679397455,117.7123,23.3086,9144,!1,225.11,222.04,0,null,9631.68,null,!1,0],["aa94be","FDX1487 ","United States",1679397462,1679397462,-101.1904,38.4168,11582.4,!1,201.46,279.7,0,null,11490.96,null,!1,0],["a2b136","UAL310  ","United States",1679397462,1679397462,-74.1211,40.7615,312.42,!1,90.22,204.96,-5.2,null,403.86,"7430",!1,0],["3deda7","","Germany",1679397461,1679397461,10.3282,47.7575,929.64,!1,56.44,29.5,3,null,1031,"0020",!1,3],["a2b134","UAL1367 ","United States",1679397463,1679397463,-71.1794,41.8313,3619.5,!1,179.43,60.64,-2.93,null,3611.88,"1065",!1,0],["a2b133","UAL2639 ","United States",1679397349,1679397455,-74.1838,40.6849,null,!0,0,92.81,null,null,null,null,!1,0],["405f12","EZY42UK ","United Kingdom",1679397461,1679397461,4.7227,52.3282,null,!0,8.75,129.38,null,null,null,"6332",!1,0],["405f13","EZY83QN ","United Kingdom",1679397462,1679397462,-1.2582,49.0369,10980.42,!1,215.94,349.71,0,null,11003.28,"1044",!1,0],["ac6118","UAL1511 ","United States",1679397462,1679397462,-84.7124,39.2744,9723.12,!1,229.65,328.84,-7.8,null,9654.54,"2555",!1,0],["405f11","EZY177  ","United Kingdom",1679397246,1679397246,-.3746,51.8762,null,!0,7.72,354.38,null,null,null,"4220",!1,0],["a1f1de","SWA1120 ","United States",1679397462,1679397462,-87.4481,34.3496,10972.8,!1,187.57,288.39,0,null,11071.86,"7005",!1,0],["8a08a7","TMG922  ","Indonesia",1679397462,1679397462,116.0172,6.2829,10363.2,!1,213.88,5.24,0,null,11003.28,null,!1,0],["4bccab","SXS63R  ","Turkey",1679397403,1679397403,11.7805,48.3478,null,!0,4.63,351.56,null,null,null,"1000",!1,0],["a37a3f","JBU42   ","United States",1679397462,1679397462,-77.8622,34.4022,11277.6,!1,248.5,11.71,0,null,11391.9,"2141",!1,0],["4ca61e","RYR3249 ","Ireland",1679397462,1679397462,-2.2685,53.3607,null,!0,0,315,null,null,null,"2752",!1,0],["4ca61f","RYR7YX  ","Ireland",1679397452,1679397460,19.5813,51.7613,891.54,!1,91.43,250.95,-6.5,null,944.88,"0111",!1,0],["478df2","WIF3D   ","Norway",1679397462,1679397462,12.9801,66.1852,12496.8,!1,234.71,33.38,0,null,12108.18,"0437",!1,0],["4bccb9","SXS2M   ","Turkey",1679397462,1679397462,10.6757,51.6287,5981.7,!1,147.1,335.41,-12.68,null,6073.14,"1000",!1,0],["4ca61c","RYR6ZD  ","Ireland",1679397462,1679397462,3.3791,49.964,9182.1,!1,207.19,214.48,11.05,null,9174.48,"7144",!1,0],["4ca61d","RYR58DT ","Ireland",1679397462,1679397462,-5.8808,49.998,10058.4,!1,234.4,173.83,0,null,10088.88,"5246",!1,0],["abfdf8","SWA2858 ","United States",1679397462,1679397462,-99.7798,30.1731,9753.6,!1,202.87,288.02,-.33,null,10066.02,null,!1,0],["4ca622","RYR35SX ","Ireland",1679397462,1679397462,-4.2341,40.6241,5730.24,!1,162.72,182.54,-7.48,null,5920.74,null,!1,0],["407913","EXS5CD  ","United Kingdom",1679397462,1679397462,-2.4615,48.6294,11277.6,!1,231.45,194.28,-.33,null,11308.08,"5216",!1,0],["4c3c42","YUPCC   ","Serbia",1679397460,1679397461,30.4711,39.6069,12192,!1,191.36,338.89,0,null,12207.24,"7221",!1,0],["4bccaf","SXS1GM  ","Turkey",1679397460,1679397462,30.6333,40.8944,10972.8,!1,208.93,295.68,0,null,10995.66,null,!1,0],["a4ea77","AAL470  ","United States",1679397462,1679397462,-77.6205,39.4953,9753.6,!1,208.85,238.19,0,null,9685.02,"3015",!1,0],["346555","","Spain",1679397360,1679397441,-12.8659,39.2565,12496.8,!1,260.89,81.84,.65,null,12755.88,"3371",!1,0],["407994","BAW60   ","United Kingdom",1679397462,1679397462,54.2205,24.6955,10972.8,!1,207.6,317.81,0,null,11353.8,null,!1,0],["acb10a","","United States",null,1679397450,null,null,null,!1,185.18,284.81,14.31,null,null,null,!1,0],["406669","EZY15ZN ","United Kingdom",1679397460,1679397462,-3.8756,45.6991,10980.42,!1,215.88,3.14,0,null,11064.24,"7456",!1,0],["407997","LFA203  ","United Kingdom",1679397462,1679397462,.061,52.4395,2735.58,!1,91.61,72.68,0,null,2720.34,"1407",!1,0],["7501fc","AXM385  ","Malaysia",1679397462,1679397462,101.6128,3.0615,2278.38,!1,113.01,325.95,-9.1,null,2400.3,null,!1,0],["e480a2","TAM8032 ","Brazil",1679397462,1679397462,-48.7644,-26.5473,10972.8,!1,218.87,213.69,-.33,null,11597.64,null,!1,0],["e480a3","TAM3412 ","Brazil",1679397281,1679397281,-47.6878,-25.0405,9860.28,!1,225.77,212.53,6.5,null,9265.92,null,!1,0],["4d00c1","LGL31P  ","Luxembourg",1679397462,1679397462,-3.5003,46.0418,10668,!1,227.46,230.87,0,null,10767.06,"3501",!1,0],["34520e","IBE31AP ","Spain",1679397462,1679397462,-1.6008,50.6247,7315.2,!1,232.6,206.96,.33,null,7338.06,"5247",!1,0],["c02501","","Canada",1679397457,1679397457,-73.7204,45.4768,null,!0,2.31,45,null,null,null,null,!1,0],["3415ce","IBE31YZ ","Spain",1679397462,1679397462,-7.859,39.017,8001,!1,187.74,244,-9.75,null,8267.7,"6065",!1,0],["c2b3ff","CFC4004 ","Canada",1679397462,1679397462,23.8488,44.0118,10668,!1,227.07,138.58,0,null,10683.24,"4642",!1,0],["e48ce7","TAM3189 ","Brazil",1679397367,1679397367,-46.8872,-23.4635,3276.6,!1,165.05,151.52,-8.45,null,3512.82,null,!1,0],["345215","AEA74FQ ","Spain",1679397462,1679397462,-4.3626,40.5557,6385.56,!1,188.68,253.69,13,null,6568.44,null,!1,0],["a6a711","JIA5295 ","United States",1679397462,1679397462,-75.6416,39.5002,8221.98,!1,248.99,56.8,.65,null,8176.26,"3650",!1,0],["a309b4","SKW4052 ","United States",1679397462,1679397462,-89.1995,43.8015,9144,!1,203.38,296.76,0,null,8999.22,"4101",!1,0],["e493e6","PPAFN   ","Brazil",1679397460,1679397462,-45.1214,-21.3185,9448.8,!1,159.73,35.43,0,null,10005.06,null,!1,0],["a08321","FDX57   ","United States",1679397463,1679397463,-72.9017,23.1412,10066.02,!1,263.81,131.68,0,null,10607.04,null,!1,0],["a0a9f8","UCA4353 ","United States",1679397462,1679397462,-97.2504,40.7587,4434.84,!1,159.49,270.55,10.73,null,4373.88,null,!1,0],["40796b","SWG604  ","United Kingdom",1679397461,1679397462,-77.0078,39.4038,9753.6,!1,234.82,193.94,0,null,9677.4,"1024",!1,0],["4d00c6","LGL6553 ","Luxembourg",1679397462,1679397462,9.9991,46.4631,7620,!1,180.94,145.54,.33,null,7787.64,"1000",!1,0],["a299bb","N267HP  ","United States",1679397460,1679397460,-81.621,27.9002,822.96,!1,66.64,285.22,-.65,null,853.44,null,!1,0],["4d00c9","LGL8255 ","Luxembourg",1679397462,1679397462,6.8776,45.4267,7620,!1,167.92,171.72,-.33,null,7810.5,"1000",!1,0],["45da13","BIO10   ","Denmark",1679397443,1679397443,-5.9781,53.9052,495.3,!1,59.71,271.97,0,null,441.96,null,!1,0],["8880b5","HVN657  ","Viet Nam",1679397332,1679397332,103.9876,1.3419,null,!0,9.77,202.5,null,null,null,"5523",!1,0],["345206","VLG46YA ","Spain",1679397462,1679397462,-1.1238,47.3194,10965.18,!1,222.85,350.3,.65,null,11026.14,"5354",!1,0],["8880b0","VJC488  ","Viet Nam",1679397455,1679397455,106.635,20.3765,2560.32,!1,149.62,348.5,-7.8,null,2667,null,!1,0],["a53774","","United States",1679397461,1679397462,-97.0508,32.897,251.46,!1,73.57,179.6,13.66,null,243.84,null,!1,0],["a046f2","RPA4713 ","United States",1679397341,1679397341,-78.793,35.8793,null,!0,0,225,null,null,null,null,!1,0],["ad2af2","DAL2724 ","United States",1679397462,1679397462,-84.569,33.6495,868.68,!1,90.03,89.67,-4.88,null,960.12,"3446",!1,0],["a059e3","UAL1665 ","United States",1679397462,1679397463,-73.0412,42.7325,8770.62,!1,242.05,97.94,-9.1,null,8542.02,"3360",!1,0],["4ca660","SAS85D  ","Ireland",1679397365,1679397365,13.3737,55.5485,83.82,!1,64.77,173.16,-3.25,null,129.54,"0225",!1,0],["a74a02","N569T   ","United States",1679397462,1679397462,-97.5107,35.491,640.08,!1,36.06,165.96,0,null,579.12,null,!1,0],["400fdb","EZY74GF ","United Kingdom",1679397462,1679397462,-.258,52,2895.6,!1,151.82,91.55,-3.58,null,2880.36,"7736",!1,0],["a49a82","EJA396  ","United States",1679397462,1679397462,-75.8631,37.2001,13106.4,!1,248.86,20.2,.33,null,13144.5,"7447",!1,0],["a3ca43","UPS960  ","United States",1679397460,1679397460,-115.0311,38.9027,10980.42,!1,185.62,262.84,0,null,10850.88,"4032",!1,0],["a63d42","AAL2342 ","United States",1679397462,1679397462,-98.2785,30.6193,7010.4,!1,223.14,8.49,0,null,7208.52,"2442",!1,0],["a10614","AAL698  ","United States",1679397459,1679397462,-112.0016,33.4382,null,!0,0,227.81,null,null,null,null,!1,0],["400fe3","EZY59FV ","United Kingdom",1679397461,1679397462,-3.2194,41.7007,10980.42,!1,237.72,1.12,0,null,11148.06,"4532",!1,0],["400fda","EZY13TC ","United Kingdom",1679397462,1679397462,9.9106,48.8542,11269.98,!1,241.7,123.89,0,null,11330.94,"4746",!1,0],["a0a9d4","UCA4299 ","United States",1679397462,1679397462,-86.96,34.4614,3032.76,!1,136.74,233.26,13.33,null,3108.96,null,!1,0],["a0a9d1","UCA4970 ","United States",1679397462,1679397462,-77.4344,39.0561,586.74,!1,95.18,180.93,-4.23,null,670.56,"3543",!1,0],["846ec8","APJ114  ","Japan",1679397462,1679397462,134.5049,35.4324,9410.7,!1,188.08,217,-13,null,9616.44,"3417",!1,0],["e493b9","AZU4193 ","Brazil",1679397462,1679397462,-43.0189,-22.8952,1760.22,!1,146.06,128.57,11.38,null,1866.9,null,!1,0],["346515","ARK341Z ","Spain",1679397462,1679397462,2.3002,41.5941,754.38,!1,46.24,147.72,-.33,null,1714.5,null,!1,0],["a3816b","KII507  ","United States",1679397462,1679397462,-85.7312,38.1533,9204.96,!1,215.94,261.37,7.48,null,9174.48,null,!1,0],["a5d4aa","N475LC  ","United States",1679397419,1679397420,-76.1847,36.9103,-76.2,!1,69.66,217.8,-3.9,null,22.86,"4607",!1,0],["a3e473","USC801  ","United States",1679397462,1679397462,-95.4899,32.6184,9578.34,!1,241.98,105.16,5.2,null,9768.84,null,!1,0],["8832aa","TLM827  ","Thailand",1679397461,1679397462,100.6348,13.9663,6202.68,!1,71.11,208.05,-4.88,null,6164.58,"3300",!1,0],["8965d2","FDB171  ","United Arab Emirates",1679397298,1679397298,49.7034,27.0066,7924.8,!1,190.74,295.74,0,null,7985.76,null,!1,0],["e4814b","GLO1241 ","Brazil",1679397165,1679397266,-46.6663,-23.4002,1821.18,!1,95.73,96.17,-3.9,null,1920.24,null,!1,0],["8965d1","FDB2PX  ","United Arab Emirates",1679397313,1679397382,55.4757,25.2822,1752.6,!1,117.6,126.82,-3.58,null,1706.88,null,!1,0],["8965d0","FDB3PL  ","United Arab Emirates",1679397462,1679397462,26.9459,44.6973,6416.04,!1,177.13,275,-13.33,null,6484.62,"6333",!1,0],["8832b5","TLM544  ","Thailand",1679397461,1679397462,100.9792,15.7379,10363.2,!1,227.92,341.44,1.95,null,10980.42,"7213",!1,0],["8832b1","TLM220  ","Thailand",1679397462,1679397462,88.0399,24.6812,10363.2,!1,206.81,299.18,-.65,null,10690.86,"0744",!1,0],["3cc1db","AHO212T ","Germany",1679397462,1679397462,14.279,56.8354,12192,!1,219.74,213.06,0,null,12062.46,"3516",!1,0],["a2396e","SWA840  ","United States",1679397462,1679397462,-91.8352,32.6581,12192,!1,201.59,226.45,.33,null,12367.26,"1521",!1,0],["7c77f7","QFA939  ","Australia",1679397462,1679397462,120.2786,-31.7124,11574.78,!1,209.68,259.68,0,null,12077.7,null,!1,0],["a033f9","DAL1656 ","United States",1679397462,1679397462,-83.9597,40.4789,9654.54,!1,224.5,198.43,6.18,null,9578.34,"7406",!1,0],["8965e4","WAZ7152 ","United Arab Emirates",1679397360,1679397360,49.204,28.6485,10652.76,!1,253.57,152.45,0,null,10744.2,null,!1,0],["8965cf","FDB863  ","United Arab Emirates",1679397461,1679397461,53.0808,25.53,7315.2,!1,183.47,282.63,0,null,7452.36,null,!1,0],["15205e","SVR299  ","Russian Federation",1679397462,1679397462,39.7824,56.0219,10149.84,!1,250.71,72.2,4.23,null,9906,null,!1,0],["49c36c","OKBUR69 ","Czech Republic",1679397315,1679397452,13.5985,50.3643,556.26,!1,43.18,254.8,.65,null,624.84,"2000",!1,0],["49c37a","OKCWF22 ","Czech Republic",1679397460,1679397460,14.0832,49.7106,609.6,!1,30.69,166.43,-.33,null,640.08,"7000",!1,0],["8965e5","WAZ457  ","United Arab Emirates",1679397458,1679397460,52.1198,27.8402,9761.22,!1,217.3,344.48,0,null,9875.52,null,!1,0],["780d59","CDG4911 ","China",1679397461,1679397461,113.5364,22.3346,1356.36,!1,122.13,209.8,-2.93,null,1356.36,null,!1,0],["a56c19","AAL2006 ","United States",1679397207,1679397207,-77.0397,38.8571,null,!0,5.66,354.38,null,null,null,null,!1,0],["448447","CFG2033 ","Belgium",1679397462,1679397462,.8327,52.283,11887.2,!1,259.75,98.77,0,null,11841.48,"2254",!1,0],["15206d","SVR547  ","Russian Federation",1679397420,1679397424,42.9405,53.3102,10660.38,!1,222.85,156.75,0,null,10507.98,null,!1,0],["abeb9f","SWA3687 ","United States",1679397462,1679397462,-82.0685,30.4188,11582.4,!1,211.62,193.5,0,null,11856.72,"3655",!1,0],["4d00d6","LGL42   ","Luxembourg",1679397462,1679397462,11.9796,39.597,7322.82,!1,156.43,339.6,0,null,7482.84,null,!1,0],["4d00d5","LGL31   ","Luxembourg",1679397462,1679397462,6.221,49.63,null,!0,35.5,239.06,null,null,null,"4460",!1,0],["780d66","CSZ8965 ","China",1679397459,1679397461,114.1874,22.8612,3901.44,!1,202.53,29.69,0,null,4046.22,null,!1,0],["a954fd","N700EL  ","United States",1679397462,1679397462,-2.3953,51.6913,9144,!1,106.49,285.98,0,null,9090.66,"6755",!1,0],["4d00d8","LGL5807 ","Luxembourg",1679397462,1679397462,18.0492,48.2526,7444.74,!1,193.4,129.28,-6.18,null,7475.22,"1000",!1,0],["8965b5","FDB4MA  ","United Arab Emirates",1679397462,1679397462,18.2495,45.3492,9753.6,!1,208.91,277.07,0,null,9784.08,"2363",!1,0],["a1ff46","FFT2334 ","United States",1679397462,1679397462,-85.6538,39.6735,10668,!1,259.4,80.99,0,null,10576.56,"6777",!1,0],["e48135","LAP1300 ","Brazil",1679397462,1679397462,-48.2264,-23.3694,10309.86,!1,221.46,254.09,3.9,null,10896.6,null,!1,0],["76cd71","SIA317  ","Singapore",1679397462,1679397462,-.5477,51.4583,899.16,!1,84.1,166.56,4.23,null,891.54,"5255",!1,0],["8965b8","UAE9393 ","United Arab Emirates",1679397460,1679397460,31.2469,42.2045,10363.2,!1,225.48,284.67,0,null,10378.44,null,!1,0],["76cd75","SIA895  ","Singapore",1679397462,1679397462,113.9322,22.3073,null,!0,3.34,230.62,null,null,null,null,!1,0],["8832ba","TLM792  ","Thailand",1679397462,1679397462,100.671,13.3769,6202.68,!1,196.94,153.3,8.45,null,6537.96,"3321",!1,0],["a789b4","JIA5019 ","United States",1679397463,1679397463,-79.5515,36.882,9753.6,!1,216.45,213.95,0,null,9761.22,"1502",!1,0],["4d00f2","LGL942  ","Luxembourg",1679397462,1679397462,6.4589,49.2354,3825.24,!1,161.09,1.65,-6.83,null,3931.92,"1000",!1,0],["a21f57","FFT1097 ","United States",1679397462,1679397462,-77.0302,36.0028,10972.8,!1,199.48,214.39,0,null,11010.9,"1567",!1,0],["8965c4","FDB887  ","United Arab Emirates",1679397219,1679397219,48.8208,26.7655,7315.2,!1,188.8,270.16,0,null,7383.78,null,!1,0],["a8d46a","UAL2112 ","United States",1679397462,1679397462,-85.3928,28.123,9753.6,!1,202.75,284.25,0,null,10104.12,"6110",!1,0],["8965c3","FDB1210 ","United Arab Emirates",1679397420,1679397449,34.877,32.0048,null,!0,0,345.94,null,null,null,null,!1,0],["a08f94","UPS888  ","United States",1679397462,1679397462,-107.5546,35.4351,6286.5,!1,258.52,94.45,-5.53,null,6316.98,"7241",!1,0],["a39fb1","UAL1564 ","United States",1679397462,1679397462,-75.3196,39.8356,563.88,!1,111.99,229.28,13.98,null,640.08,null,!1,0],["89409e","GFA013  ","Bahrain",1679397461,1679397461,49.9684,27.7274,9357.36,!1,255.15,145.35,-8.13,null,9578.34,null,!1,0],["4852f4","KLM31B  ","Kingdom of the Netherlands",1679397462,1679397462,16.5269,51.0972,4846.32,!1,188.01,112.35,-11.38,null,4876.8,"3702",!1,0],["3ce7ec","M28C    ","Germany",1679397223,1679397223,7.4251,49.2383,533.4,!1,58.13,187.63,-3.58,null,647.7,"0025",!1,0],["c06022","WJA18   ","Canada",1679397462,1679397462,-5.0639,55.476,11887.2,!1,263,134.92,0,null,11788.14,"7653",!1,0],["76cd7a","SIA25   ","Singapore",1679397462,1679397462,98.5261,50.034,null,!0,3.34,241.88,null,null,null,null,!1,0],["4bce0b","SXS3FP  ","Turkey",1679397462,1679397462,14.0855,50.957,12192,!1,211.42,313.52,0,null,12169.14,"1000",!1,0],["a4ea7e","AVA9462 ","United States",1679397443,1679397443,-74.0506,4.7969,3939.54,!1,156.4,6.61,15.28,null,4130.04,null,!1,0],["a403c6","DAL1160 ","United States",1679397462,1679397463,-78.6972,35.7873,3474.72,!1,188.49,205.03,5.53,null,3550.92,"0550",!1,0],["750319","MMAS1162","Malaysia",1679397462,1679397462,101.6857,2.555,3360.42,!1,176.06,307.64,5.2,null,3512.82,null,!1,0],["4b9856","FHY861  ","Turkey",1679397461,1679397461,17.9342,59.6555,null,!0,7.72,255.94,null,null,null,"5373",!1,0],["152019","AFL1287 ","Russian Federation",1679397462,1679397462,40.085,55.7865,8938.26,!1,180.89,273.42,-8.13,null,8763,null,!1,0],["152014","AFL1610 ","Russian Federation",1679396413,1679397460,42.9062,53.3558,10058.4,!1,219.2,156.93,.33,null,10066.02,null,!1,0],["a7ad68","MTU94   ","United States",1679397462,1679397462,-86.3504,35.9287,822.96,!1,31.02,139.71,4.55,null,906.78,null,!1,0],["15201e","AFL1231 ","Russian Federation",1679397458,1679397459,37.6532,56.0067,960.12,!1,75.49,255.4,-.98,null,922.02,null,!1,0],["75031a","MAS2631 ","Malaysia",1679397438,1679397438,116.0573,5.9492,null,!0,4.89,292.5,null,null,null,null,!1,0],["a1ff90","RPA5608 ","United States",1679397462,1679397462,-73.7914,40.8803,487.68,!1,92.05,212.45,.33,null,563.88,"3746",!1,0],["aa7aeb","SWA1271 ","United States",1679397462,1679397462,-95.8746,41.0563,11582.4,!1,206.55,267.14,0,null,11391.9,"5613",!1,0],["3ce7eb","M28B    ","Germany",1679397462,1679397462,9.5359,48.1051,876.3,!1,90.04,60.95,.65,null,922.02,"0025",!1,0],["ab540d","UAL363  ","United States",1679397451,1679397460,-74.1827,40.6818,null,!0,6.43,275.62,null,null,null,"7463",!1,0],["750324","AXM79   ","Malaysia",1679397461,1679397461,101.2055,4.3239,9540.24,!1,249.63,335.92,1.63,null,10149.84,"0334",!1,0],["a45f64","DAL736  ","United States",1679397462,1679397462,-88.202,34.5542,11582.4,!1,191.32,287.85,0,null,11681.46,"2002",!1,0],["a32c47","UPS9703 ","United States",1679397462,1679397462,-81.2202,41.2318,10370.82,!1,214.11,231.34,0,null,10195.56,"4157",!1,0],["7c77fd","QFA781  ","Australia",1679397446,1679397446,120.2066,-33.1909,11582.4,!1,204.78,290.44,0,null,12031.98,null,!1,0],["7c77fc","QFA653  ","Australia",1679397401,1679397401,121.5871,-32.686,8534.4,!1,226.01,277.06,0,null,8938.26,null,!1,0],["c010e4","ACA256  ","Canada",1679397462,1679397462,-87.7805,48.1614,10668,!1,256.84,120.31,0,null,10287,null,!1,0],["894097","GFA002  ","Bahrain",1679397462,1679397462,16.8814,48.7921,11879.58,!1,263.43,116.31,-.33,null,11856.72,"7322",!1,0],["ab674b","AAL2068 ","United States",1679397440,1679397445,-73.8718,40.7749,null,!0,0,0,null,null,null,"3673",!1,0],["a45f59","DAL1188 ","United States",1679397462,1679397462,-84.6147,37.8253,9265.92,!1,235.24,159.39,8.78,null,9235.44,null,!1,0],["47956b","NOZ1086 ","Norway",1679397462,1679397462,21.0331,55.8278,822.96,!1,99.31,38.06,-5.53,null,830.58,"4261",!1,0],["a2e9fd","SWA2514 ","United States",1679397462,1679397462,-91.8536,35.0655,12496.8,!1,251.73,34.76,0,null,12534.9,"7700",!1,0],["894098","GFA248  ","Bahrain",1679397462,1679397462,84.9593,23.112,11879.58,!1,299.62,92.16,.33,null,12283.44,"2270",!1,0],["4bce08","SXS2DW  ","Turkey",1679397462,1679397462,26.2348,43.536,11277.6,!1,240.56,127.09,0,null,11269.98,"6432",!1,0],["a821e4","FDX1419 ","United States",1679397459,1679397459,-114.7252,38.7246,11590.02,!1,191.05,265.06,-.33,null,11490.96,null,!1,0],["4b22a4","","Switzerland",1679397453,1679397462,8.165,47.1505,1165.86,!1,72.14,-43.88,-4,null,1282,"7000",!1,3],["4bce04","SXS8PT  ","Turkey",1679397462,1679397462,23.6623,43.0209,11277.6,!1,229.16,117.26,0,null,11285.22,"0173",!1,0],["152035","AFL1004 ","Russian Federation",1679397462,1679397462,21.8528,59.2265,10370.82,!1,209.59,243.62,0,null,10149.84,"4537",!1,0],["152031","AFL1003 ","Russian Federation",1679397462,1679397462,20.1684,57.4336,11277.6,!1,217.53,17.62,0,null,11087.1,"6621",!1,0],["89408f","GFA003  ","Bahrain",1679397462,1679397462,29.9017,41.8195,11582.4,!1,223.96,302.05,-.33,null,11590.02,null,!1,0],["4b1bb7","HBKMX   ","Switzerland",1679397462,1679397462,7.5599,47.0033,1158.24,!1,45.69,187.77,.65,null,1264.92,"7000",!1,0],["15203d","AFL1700 ","Russian Federation",1679397462,1679397462,44.2061,60.2193,10668,!1,259.69,49.18,-.33,null,10309.86,null,!1,0],["a7ad84","DAL1445 ","United States",1679397425,1679397426,-93.2213,44.8912,null,!0,0,28.12,null,null,null,null,!1,0],["ac7419","NKS287  ","United States",1679397462,1679397462,-73.3954,40.6883,6614.16,!1,215.31,33.99,-12.68,null,6537.96,"3066",!1,0],["aaddd4","N8GU    ","United States",1679397462,1679397462,-82.9142,34.8025,6705.6,!1,113.09,342.8,.65,null,6812.28,null,!1,0],["750304","MXD1908 ","Malaysia",1679397375,1679397376,101.5402,3.1464,106.68,!1,62.03,149.61,-3.25,null,68.58,"0334",!1,0],["aa5b9f","ABX804  ","United States",1679397462,1679397462,-99.5492,43.4319,10972.8,!1,211.36,285.96,0,null,10713.72,"6714",!1,0],["ab7b8c","UAL301  ","United States",1679397462,1679397462,-81.9686,42.6013,10972.8,!1,198.62,278.34,0,null,10767.06,"5743",!1,0],["a92d6d","UAL788  ","United States",1679397462,1679397462,-79.2728,42.4882,11582.4,!1,222.39,288.06,0,null,11391.9,"3337",!1,0],["732541","IRA711  ","Islamic Republic of Iran",1679397462,1679397462,25.6826,44.2787,11582.4,!1,222.6,284.45,0,null,11574.78,null,!1,0],["899080","EVA088  ","Taiwan",1679397462,1679397462,5.0258,48.6198,9448.8,!1,257.95,111.04,0,null,9547.86,"0641",!1,0],["ac058a","DAL2773 ","United States",1679397462,1679397462,-77.1283,39.2319,10363.2,!1,208.54,230.1,0,null,10271.76,"3565",!1,0],["ade8ff","DAL1294 ","United States",1679397462,1679397462,-82.8952,41.5917,6926.58,!1,183.26,337.03,-12.03,null,6888.48,"3135",!1,0],["4d0101","CLX4482 ","Luxembourg",1679397462,1679397462,13.7872,49.0945,10058.4,!1,267.1,111.82,0,null,10104.12,"3506",!1,0],["4d0105","CLX6361 ","Luxembourg",1679397462,1679397462,-6.279,37.769,11582.4,!1,266.84,50.63,0,null,11879.58,"6235",!1,0],["4d0104","CLX6682 ","Luxembourg",1679397462,1679397462,-116.7761,33.1638,7467.6,!1,157.44,278.08,-10.08,null,7520.94,null,!1,0],["89907d","EVA025  ","Taiwan",1679397462,1679397462,-150.0037,57.998,10622.28,!1,234.41,282.42,1.63,null,10119.36,null,!1,0],["89907e","EVA159  ","Taiwan",1679397460,1679397461,126.3372,37.5063,1203.96,!1,103.92,270.28,6.18,null,1203.96,null,!1,0],["89907b","EVA072  ","Taiwan",1679397462,1679397462,14.7697,47.8657,9570.72,!1,266.15,108.01,7.48,null,9639.3,"4361",!1,0],["899097","EVA129  ","Taiwan",1679397419,1679397453,121.4325,25.2249,1280.16,!1,82.81,229.28,-1.63,null,1295.4,null,!1,0],["a24c01","SWA2702 ","United States",1679397462,1679397462,-88.8584,32.7651,11582.4,!1,186.66,253.01,0,null,11750.04,"3141",!1,0],["84655a","ANA558  ","Japan",1679397445,1679397445,140.8051,37.476,8702.04,!1,177.61,206.49,-4.88,null,8816.34,null,!1,0],["abd26b","SWA1223 ","United States",1679397462,1679397462,-91.8811,35.4501,11582.4,!1,215.41,197.66,0,null,11628.12,"1763",!1,0],["040171","ETH552  ","Ethiopia",1679397462,1679397462,-74.4975,48.0529,12192,!1,239.99,220.83,0,null,11795.76,null,!1,0],["a7e152","DAL2574 ","United States",1679397462,1679397462,-89.4026,32.3288,4709.16,!1,211.41,84.41,12.35,null,4815.84,null,!1,0],["39b493","FWI70Q  ","France",1679397421,1679397448,2.377,48.728,null,!0,.13,253.12,null,null,null,"0664",!1,0],["04015c","ETH3807 ","Ethiopia",1679397462,1679397462,-41.9982,-22.6723,10363.2,!1,247.23,261.26,0,null,10942.32,null,!1,0],["468648","SXARH   ","Greece",1679397462,1679397462,23.8392,36.9537,1341.12,!1,51.17,105.15,-.33,null,1386.84,null,!1,0],["a1a924","RPA5733 ","United States",1679397462,1679397462,-90.1607,38.7304,2179.32,!1,143.12,82.77,10.73,null,2171.7,null,!1,0],["a67181","NKS2057 ","United States",1679397462,1679397462,-87.9222,41.7474,4267.2,!1,149.91,155.9,8.78,null,4213.86,"6564",!1,0],["a02631","N109AP  ","United States",1679397462,1679397463,-96.2079,43.2339,7985.76,!1,141.42,140.46,8.13,null,7848.6,null,!1,0],["3b776b","CARVEX35","France",1679397401,1679397437,1.2224,43.5628,335.28,!1,66.27,216.16,.33,null,449.58,"7077",!1,0],["a64924","DAL1002 ","United States",1679397458,1679397458,-93.2121,44.8815,null,!0,0,11.25,null,null,null,"2664",!0,0],["872841","APJ528  ","Japan",1679397462,1679397462,130.6585,33.4151,2941.32,!1,141.27,126.41,14.63,null,3009.9,null,!1,0],["a4b9c7","SWA946  ","United States",1679397461,1679397462,-104.6427,39.7819,2423.16,!1,120.48,159.24,13.33,null,2331.72,null,!1,0],["3e2727","DIGAH   ","Germany",1679397462,1679397462,9.8718,48.627,1341.12,!1,80.36,193.32,.65,null,1424.94,"4452",!1,0],["a3117c","SWA1702 ","United States",1679397462,1679397462,-81.7393,40.5615,12496.8,!1,259.73,113.21,0,null,12359.64,"6273",!1,0],["a92123","","United States",1679397462,1679397462,-71.3417,42.4771,472.44,!1,96.26,278.61,1.95,null,533.4,null,!1,0],["4075af","EXS55DG ","United Kingdom",1679397462,1679397462,11.9664,49.343,10668,!1,249.01,122.77,0,null,10728.96,"4622",!1,0],["a6e767","GJS4501 ","United States",1679397454,1679397459,-74.1743,40.6988,null,!0,0,284.06,null,null,null,"4241",!1,0],["c07995","TSC398  ","Canada",1679397423,1679397423,-73.7498,45.4667,-38.1,!1,5.14,90,0,null,7.62,null,!1,0],["a5a10a","AAL1958 ","United States",1679397461,1679397462,-86.5444,40.0105,8534.4,!1,217.48,273.39,0,null,8496.3,"4455",!1,0],["7c4ca4","VHPFA   ","Australia",1679397462,1679397462,103.7544,1.2631,4572,!1,137.7,34.34,-.33,null,4823.46,"4263",!1,0],["7c1960","FAQ     ","Australia",1679397462,1679397462,152.858,-27.4706,937.26,!1,75.32,156.24,-5.53,null,1120.14,null,!1,0],["a060ae","AAL1021 ","United States",1679397462,1679397462,-80.8011,42.5679,8763,!1,208.87,256.03,6.18,null,8709.66,"7470",!1,0],["4075b3","VIR10H  ","United Kingdom",1679397462,1679397462,-12.7543,52.8523,12496.8,!1,271.7,97.18,0,null,12435.84,null,!1,0],["a2af3e","EDV5088 ","United States",1679397462,1679397462,-85.2606,39.8814,8237.22,!1,236.34,62.1,9.1,null,8191.5,null,!1,0],["a18ce8","GTI3857 ","United States",1679397461,1679397462,-120.7796,45.5233,8244.84,!1,210.46,271.26,-11.38,null,8016.24,null,!1,0],["4ca4eb","RYR4CN  ","Ireland",1679397462,1679397462,.4523,52.0095,1127.76,!1,78.95,265.52,-4.55,null,1127.76,"3541",!1,0],["846516","ANA740  ","Japan",1679397462,1679397462,135.864,34.4818,2430.78,!1,128.72,149.23,0,null,2522.22,"3324",!1,0],["4ca4ea","RYR6LV  ","Ireland",1679397461,1679397462,-.3253,55.7069,12192,!1,219.25,262.99,0,null,12070.08,"2270",!1,0],["a501e0","N4211Q  ","United States",1679397462,1679397462,-72.9858,40.8846,518.16,!1,52.96,230.12,0,null,556.26,"0450",!1,0],["4ca4f5","RYR89VW ","Ireland",1679397249,1679397253,.2603,51.9021,220.98,!1,67.38,222.21,-3.58,null,228.6,"5762",!1,0],["4ca4f4","RYR909Q ","Ireland",1679397462,1679397462,2.0004,49.156,5242.56,!1,173.37,180.34,13.33,null,5273.04,"7636",!1,0],["a00c7a","DAL2838 ","United States",1679397462,1679397462,-82.0384,41.0657,3581.4,!1,175.68,201.83,5.53,null,3589.02,"4133",!1,0],["0101fe","MSR771  ","Egypt",1679397462,1679397462,11.0307,45.1184,10972.8,!1,205.4,291.3,-.33,null,11094.72,"5517",!1,0],["a2b622","JBU254  ","United States",1679397462,1679397462,-71.3871,41.7434,4556.76,!1,204,59.88,-9.1,null,4503.42,"3603",!1,0],["a7f409","N611SD  ","United States",1679397462,1679397462,-98.6312,29.6639,891.54,!1,80.74,159.49,0,null,891.54,"4524",!1,0],["040159","ETH3013 ","Ethiopia",1679397462,1679397463,14.7798,55.0429,10363.2,!1,239.57,234.26,0,null,10302.24,"2301",!1,0],["c0797b","ACA441  ","Canada",1679397448,1679397453,-79.6176,43.6826,null,!0,.19,351.56,null,null,null,"6531",!1,0],["a5ad5f","N465NE  ","United States",1679397462,1679397462,-82.4231,27.8994,205.74,!1,53.23,113.34,1.3,null,266.7,"5523",!0,0],["4ca4f0","RYR4EZ  ","Ireland",1679397428,1679397431,-2.4048,41.9535,11277.6,!1,213.83,188.58,0,null,11445.24,"0504",!1,0],["899057","TTW541  ","Taiwan",1679397462,1679397462,121.4735,12.7708,7825.74,!1,210.98,152.87,-7.48,null,8389.62,null,!1,0],["a73ab6","JIA5372 ","United States",1679397462,1679397462,-82.5175,30.8403,8503.92,!1,217.37,4.89,5.2,null,8755.38,null,!1,0],["89900e","","Taiwan",null,1679397428,null,null,null,!1,248.85,28.53,0,null,null,null,!1,0],["4d0115","CLX9981 ","Luxembourg",1679397147,1679397150,126.6773,34.8938,10972.8,!1,238.56,184.95,0,null,11186.16,null,!1,0],["469934","SEH3MT  ","Greece",1679397462,1679397462,24.4027,37.9922,4130.04,!1,109.06,58.11,4.23,null,4221.48,"1447",!1,0],["899019","CAL062  ","Taiwan",1679397462,1679397462,19.0843,46.8917,9448.8,!1,259.37,111.53,0,null,9410.7,"7702",!1,0],["a6d450","N53903  ","United States",1679397395,1679397396,-77.8823,37.3108,1280.16,!1,45.57,208.3,.33,null,1363.98,null,!1,0],["70620c","JZR103  ","Kuwait",1679397156,1679397156,50.8712,26.2316,906.78,!1,119.66,205.46,-4.23,null,944.88,null,!1,0],["040128","","Ethiopia",1679397459,1679397459,19.2366,-33.2986,5829.3,!1,215.28,199.69,-13.33,null,6134.1,null,!1,0],["899029","TTW203  ","Taiwan",1679397424,1679397424,133.8232,33.5453,10363.2,!1,186.48,241.31,0,null,10637.52,"3662",!1,0],["49848b","CEF401  ","Czech Republic",1679397462,1679397462,8.054,49.7463,510.54,!1,53.78,284.97,-.33,null,594.36,"4451",!1,0],["a86ddf","NKS219  ","United States",1679397462,1679397462,-95.96,30.0544,9776.46,!1,264.53,98.16,7.48,null,10088.88,"2455",!1,0],["899024","MDA1278 ","Taiwan",1679397449,1679397455,118.9413,24.0137,5745.48,!1,214.64,122.47,5.85,null,6004.56,null,!1,0],["a7912a","DAL1121 ","United States",1679397462,1679397462,-86.0666,34.2396,10972.8,!1,210.45,329.93,0,null,11049,"6556",!1,0],["a7f432","N611TV  ","United States",1679397460,1679397462,-76.8788,38.7128,220.98,!1,1.46,135,.33,null,304.8,"5254",!1,0],["8940b9","DHX745  ","Bahrain",1679397462,1679397462,75.1272,22.3358,11887.2,!1,280.64,107.94,0,null,12321.54,null,!1,0],["484a93","ZXP03   ","Kingdom of the Netherlands",1679397462,1679397462,5.0549,51.9501,175.26,!1,30.14,62.56,-1.63,null,220.98,"6220",!1,0],["3006ff","ISEFA   ","Italy",1679397349,1679397353,7.5235,45.058,739.14,!1,46.4,93.81,-.33,null,807.72,null,!1,0],["400e16","LFA206  ","United Kingdom",1679397461,1679397461,-.5231,52.1652,739.14,!1,45.12,208.61,-1.95,null,762,"7417",!1,0],["04012e","SKK021  ","Ethiopia",1679397462,1679397462,1.4667,6.3378,1219.2,!1,121.53,40.36,-.65,null,1280.16,null,!1,0],["a2af23","ENY3326 ","United States",1679397462,1679397462,-74.3927,41.2394,5951.22,!1,166.85,286.48,12.68,null,5882.64,"1140",!1,0],["89901a","CAL722  ","Taiwan",1679396862,1679397317,121.2463,25.1871,1729.74,!1,71.14,229.4,-3.58,null,1706.88,null,!1,0],["8940c4","DHX400  ","Bahrain",1679397461,1679397461,46.5069,24.7766,11582.4,!1,162.45,244.49,.33,null,11917.68,null,!1,0],["406ea2","BHL532  ","United Kingdom",1679397462,1679397462,.7888,53.874,891.54,!1,67.25,166.28,0,null,868.68,null,!1,0],["8940c3","","Bahrain",null,1679397263,null,null,null,!1,230.29,121.67,0,null,null,null,!1,0],["8940c2","GFA018  ","Bahrain",1679397462,1679397462,15.1741,47.0559,11277.6,!1,243.01,98.64,0,null,11323.32,"2105",!1,0],["49d3d4","TVQ6630 ","Czech Republic",1679397462,1679397462,26.7605,43.8178,10812.78,!1,242.27,123.66,6.5,null,10797.54,"2225",!1,0],["04012d","SKK019  ","Ethiopia",1679397462,1679397462,1.404,6.3528,1524,!1,123.25,219.07,-.65,null,1615.44,null,!1,0],["49d3d3","TVP7316 ","Czech Republic",1679397289,1679397289,-7.891,35.0332,11277.6,!1,212.43,231.69,0,null,11628.12,"4007",!1,0],["a203a9","ENY3490 ","United States",1679397462,1679397462,-95.5828,31.0099,7315.2,!1,203.8,349.09,0,null,7543.8,"2571",!1,0],["34618e","PUE701  ","Spain",1679397462,1679397462,-11.6914,39.6691,11277.6,!1,228.09,256.43,.33,null,11536.68,"2634",!1,0],["c05f94","R0U1521 ","Canada",1679397460,1679397461,-67.1259,46.8554,10363.2,!1,213.94,250.91,0,null,9997.44,"7226",!1,0],["c05f93","ROU1634 ","Canada",1679397462,1679397462,-73.7727,45.4105,746.76,!1,97.44,201.69,4.88,null,754.38,null,!1,0],["4d010c","ICV7112 ","Luxembourg",1679397462,1679397462,13.8808,45.196,9448.8,!1,257.41,103.76,0,null,9517.38,"0434",!1,0],["8940ba","DHX727A ","Bahrain",1679397451,1679397451,53.3707,26.0099,11277.6,!1,294.72,106.95,0,null,11559.54,null,!1,0],["c0799a","TSC852  ","Canada",1679397462,1679397462,-74.0274,44.5281,6797.04,!1,211.17,177.21,6.5,null,6591.3,"0677",!1,0],["a0267b","DAL839  ","United States",1679397461,1679397462,-84.3598,33.8131,3009.9,!1,142.59,272.07,7.8,null,3078.48,null,!1,0],["a5031a","AAL851  ","United States",1679397462,1679397462,-81.7219,40.3053,10058.4,!1,254.2,88.72,0,null,9974.58,"7365",!1,0],["a3cf6d","UAL2316 ","United States",1679397462,1679397462,-95.7756,41.467,10728.96,!1,202.8,268.11,4.23,null,10546.08,null,!1,0],["406f7c","BAW282  ","United Kingdom",1679397462,1679397462,-.2232,51.4655,861.06,!1,72.54,270,-4.55,null,868.68,"7664",!1,0],["a0c3fc","GTI3717 ","United States",1679397462,1679397462,-86.4436,38.3412,6598.92,!1,236.54,68.57,-4.55,null,6591.3,"3220",!1,0],["49d3e9","NTF68A  ","Czech Republic",1679397462,1679397462,11.5475,50.1841,7620,!1,146.35,115.39,0,null,7680.96,"6433",!1,0],["346195","BOV776  ","Spain",1679397462,1679397462,-14.973,31.7232,11841.48,!1,247.41,33.72,3.58,null,12199.62,null,!1,0],["406f7b","BAW89P  ","United Kingdom",1679397462,1679397462,-3.96,54.8342,12489.18,!1,261.58,135.88,-.33,null,12420.6,"7661",!1,0],["406f87","EXS98BS ","United Kingdom",1679397462,1679397462,-.7633,38.3109,914.4,!1,103.95,99.98,-5.85,null,1036.32,"0572",!1,0],["c90002","AVN51   ","Vanuatu",1679397462,1679397462,174.5926,-36.8525,2918.46,!1,183.02,341.31,11.7,null,2948.94,null,!1,0],["a4ef4d","JTZ417  ","United States",1679397462,1679397462,-86.2864,33.7099,12496.8,!1,275.31,83.78,-.33,null,12626.34,"1674",!1,0],["49d3dd","OKHEZ   ","Czech Republic",1679397462,1679397462,14.188,49.933,662.94,!1,48.58,95.47,.33,null,723.9,"2000",!1,0],["48ad85","LOT78M  ","Poland",1679397403,1679397403,24.8015,59.4154,null,!0,1.54,320.62,null,null,null,"4265",!1,0],["aa74c2","CXK361  ","United States",1679397460,1679397462,-73.092,40.8042,-45.72,!1,32.38,225.64,-1.63,null,38.1,null,!1,0],["48ad86","LOT3WD  ","Poland",1679397462,1679397462,20.9963,52.1324,243.84,!1,66.06,331.64,-3.58,null,304.8,"4265",!1,0],["869278","ANA447  ","Japan",1679397280,1679397280,130.4384,33.6039,83.82,!1,70.26,150.62,-3.9,null,99.06,null,!1,0],["48ad84","LOT48F  ","Poland",1679397462,1679397462,21.1197,52.0869,2095.5,!1,131.78,132.79,-1.63,null,2125.98,"4265",!1,0],["48ad81","LOT6EB  ","Poland",1679397382,1679397382,20.9785,52.1528,106.68,!1,69.51,331.73,-4.23,null,182.88,"1000",!1,0],["48ad82","LOT6LT  ","Poland",1679397462,1679397462,25.1042,44.8295,3832.86,!1,182.46,139.57,-5.2,null,3901.44,"1000",!1,0],["a2536f","SWA1507 ","United States",1679397462,1679397462,-96.6804,32.734,2263.14,!1,161.19,73.88,14.31,null,2255.52,null,!1,0],["48ad80","LOT3908 ","Poland",1679397462,1679397462,19.749,50.1569,2103.12,!1,134.61,27.54,5.2,null,2148.84,"1000",!1,0],["346184","VLG7GQ  ","Spain",1679397462,1679397462,3.1258,41.0242,7810.5,!1,233.04,97.61,8.45,null,8039.1,null,!1,0],["407667","EZY8285 ","United Kingdom",1679397462,1679397462,15.8965,43.8004,10660.38,!1,244.51,129.45,0,null,10698.48,"2711",!1,0],["346181","AEA48UN ","Spain",1679397462,1679397462,.4498,45.7075,12496.8,!1,238.92,208.28,0,null,12611.1,"2125",!1,0],["507c75","UZP558  ","Uzbekistan",1679397392,1679397392,38.5345,54.8527,9974.58,!1,218.3,146.53,5.2,null,9654.54,null,!1,0],["76cce4","SIA22   ","Singapore",1679397461,1679397461,-74.1745,40.6876,null,!0,5.92,25.31,null,null,null,"1466",!1,0],["76cce2","SIA23   ","Singapore",1679397462,1679397462,25.3014,44.9137,11887.2,!1,258.15,116,0,null,11826.24,"5216",!1,0],["76cce3","SIA24   ","Singapore",1679397247,1679397247,144.9659,37.9404,11277.6,!1,292.83,47.85,.33,null,11300.46,"0107",!1,0],["c00fab","JZA689  ","Canada",1679397462,1679397462,-77.0631,43.0637,9799.32,!1,188.17,264.35,-5.2,null,9555.48,"3560",!1,0],["a3998f","N331AJ  ","United States",1679397462,1679397462,-83.8687,33.7369,1089.66,!1,125.05,318.84,-.33,null,1181.1,null,!1,0],["406f75","BAW118  ","United Kingdom",1679397462,1679397462,23.4684,40.3607,12184.38,!1,240.65,317.34,-.33,null,12230.1,"7223",!1,0],["40631a","EZY37FL ","United Kingdom",1679397462,1679397462,-1.3932,52.3295,6332.22,!1,218.85,143.51,-9.1,null,6286.5,"1403",!1,0],["a3866d","DAL2560 ","United States",1679397462,1679397462,-84.3169,42.366,11582.4,!1,206.84,296.12,0,null,11384.28,"7030",!1,0],["a3999e","ATN3401 ","United States",1679397462,1679397462,-77.0761,39.6563,10363.2,!1,201.47,245.73,0,null,10218.42,"1721",!1,0],["780cce","CSN5344 ","China",1679397449,1679397450,113.5677,22.6792,1615.44,!1,131.25,1.8,-5.53,null,1623.06,null,!1,0],["e4894e","TAM3599 ","Brazil",1679397462,1679397462,-44.7984,-20.4371,10629.9,!1,213.77,207.68,7.48,null,11201.4,null,!1,0],["406f73","BAW108  ","United Kingdom",1679397460,1679397461,47.7764,30.1285,10965.18,!1,225.43,310.74,0,null,10972.8,null,!1,0],["a3866a","UPS232  ","United States",1679397462,1679397462,-74.7712,39.5347,2613.66,!1,129.16,271.37,.33,null,2644.14,"0730",!1,0],["400cd8","EZY23DZ ","United Kingdom",1679397462,1679397462,-5.0936,54.0689,7010.4,!1,199.21,126.07,0,null,6941.82,"6233",!1,0],["406f79","BAW242  ","United Kingdom",1679397461,1679397461,-11.186,50.3325,11887.2,!1,267.18,83.48,-.33,null,11910.06,null,!1,0],["aab202","AAL973  ","United States",1679397462,1679397462,-43.357,-22.7504,609.6,!1,87.79,125.46,-4.23,null,655.32,null,!1,0],["a13391","DAL169  ","United States",1679397462,1679397462,-1.9859,42.9233,9448.8,!1,227.75,299.05,-.33,null,9585.96,"0430",!1,0],["7502dd","MXD1213 ","Malaysia",1679397462,1679397462,101.5131,3.192,426.72,!1,63.44,149.28,-3.25,null,403.86,"0370",!1,0],["406f72","BAW283  ","United Kingdom",1679397462,1679397462,-1.8896,53.6962,10218.42,!1,244.33,333.22,3.58,null,10119.36,"6033",!1,0],["a64996","JBU2902 ","United States",1679397462,1679397462,-79.4027,26.5325,6286.5,!1,212.11,46.08,9.75,null,6568.44,null,!1,0],["3c4901","EWG1TK  ","Germany",1679397461,1679397461,2.7945,39.5709,137.16,!1,68.11,238.59,-3.25,null,251.46,"2536",!1,0],["c07973","ACA334  ","Canada",1679397454,1679397454,-73.7495,45.4593,null,!0,0,180,null,null,null,"3357",!1,0],["4791dd","NOZ1083 ","Norway",1679397462,1679397462,24.5632,54.6562,5204.46,!1,194.46,306.72,14.31,null,5113.02,"7012",!1,0],["780ce2","CQH8933 ","China",1679397462,1679397462,106.9391,22.4544,9753.6,!1,196.77,256.55,.33,null,10226.04,null,!1,0],["c07971","ACA2334 ","Canada",1679397460,1679397460,-74.0529,45.6756,null,!0,0,146.25,null,null,null,null,!1,0],["3c4903","EWG20WR ","Germany",1679397462,1679397462,10.6947,49.1149,11277.6,!1,246.6,132.04,0,null,11338.56,"1000",!1,0],["aa140f","ABX3129 ","United States",1679397462,1679397462,-104.1729,34.2255,10668,!1,277.7,96.81,0,null,10812.78,null,!1,0],["150699","TUL9726 ","Russian Federation",1679397383,1679397383,48.9305,55.6163,1325.88,!1,107.7,316.16,-5.2,null,1417.32,null,!1,0],["486483","KLM91D  ","Kingdom of the Netherlands",1679397462,1679397462,7.3935,50.8512,12108.18,!1,235.48,149.4,3.58,null,12115.8,"1000",!1,0],["4ca4ef","RYR7MW  ","Ireland",1679397462,1679397462,-4.6563,40.6441,10363.2,!1,229.17,130.45,-.33,null,10553.7,null,!1,0],["4ca4ec","RYR82UC ","Ireland",1679397462,1679397462,-7.134,43.6204,10972.8,!1,213.91,41.59,0,null,11117.58,null,!1,0],["acaec8","AAL1703 ","United States",1679397462,1679397462,-78.1605,38.0091,7924.8,!1,215.77,226.26,0,null,7947.66,"7644",!1,0],["c07966","ACA605  ","Canada",1679397462,1679397462,-70.7164,45.6776,10355.58,!1,203.42,272.61,0,null,10012.68,null,!1,0],["407642","TOM7WV  ","United Kingdom",1679397462,1679397463,-.7566,47.6815,11109.96,!1,224.35,353.15,2.28,null,11155.68,"5542",!1,0],["a24c73","UAL222  ","United States",1679397462,1679397462,-77.0054,38.4972,10614.66,!1,240.46,44.57,-5.2,null,10576.56,"3145",!1,0],["ad251e","N946TC  ","United States",1679397462,1679397462,-82.0486,28.4337,8092.44,!1,185.64,246.13,11.05,null,8404.86,"0764",!1,0],["407646","GKFTI   ","United Kingdom",1679397462,1679397462,-2.4193,49.4521,2819.4,!1,141,141.67,-6.18,null,2865.12,"6015",!1,0],["a696ef","N52332  ","United States",1679397462,1679397462,-74.6338,43.2519,1371.6,!1,55.87,216.76,0,null,1402.08,null,!1,0],["a7a616","DAL2262 ","United States",1679397462,1679397462,-83.476,41.5672,6050.28,!1,202.7,198.34,10.08,null,5989.32,"5732",!1,0],["40762b","WUK8009 ","United Kingdom",1679397462,1679397462,9.8153,48.4502,10965.18,!1,206.3,307.3,0,null,11056.62,"7545",!1,0],["a336f0","EDV5111 ","United States",1679397462,1679397462,-74.2158,40.1945,5059.68,!1,195.49,188.32,0,null,5052.06,"3031",!1,0],["c00fe2","CJT1926 ","Canada",1679397462,1679397462,-97.7703,45.4259,10972.8,!1,215.19,298.1,0,null,10660.38,"3341",!1,0],["a336df","AAL901  ","United States",1679397462,1679397462,-84.4761,38.6756,9753.6,!1,222.48,333.2,0,null,9685.02,null,!1,0],["347487","ECNSV   ","Spain",1679397461,1679397462,1.6423,41.5335,922.02,!1,55,187.52,2.93,null,998.22,null,!1,0],["ad385f","AAL894  ","United States",1679397445,1679397454,-93.2137,44.8869,null,!0,0,165.94,null,null,null,null,!1,0],["a3e957","N351JL  ","United States",1679397462,1679397462,-93.0348,45.0113,723.9,!1,84.6,256.64,-.33,null,701.04,null,!1,0],["acf204","NKS1675 ","United States",1679397459,1679397459,-80.6167,37.7597,10957.56,!1,225.83,186.67,0,null,10934.7,null,!1,0],["851bdc","JAL499  ","Japan",1679397462,1679397462,136.611,34.2666,11574.78,!1,178,233.46,0,null,11833.86,"0475",!1,0],["346147","IBE3300 ","Spain",1679397462,1679397462,-5.8823,36.7622,11269.98,!1,216.73,188.19,-.33,null,11605.26,"6006",!1,0],["3411d9","SEI18   ","Spain",1679397375,1679397375,2.735,39.5492,null,!0,1.8,315,null,null,null,null,!1,0],["7502b2","MAS190  ","Malaysia",1679397462,1679397462,101.4336,3.5416,8244.84,!1,239,357.16,6.5,null,8732.52,"2171",!1,0],["486449","NCG08   ","Kingdom of the Netherlands",1679397462,1679397462,3.6919,51.6598,91.44,!1,56.13,199.27,-.33,null,137.16,"5177",!1,0],["a50f40","SWA3540 ","United States",1679397461,1679397462,-87.4466,41.7646,1112.52,!1,123.13,318.05,-2.28,null,1143,"6763",!1,0],["ad7ecb","NKS414  ","United States",1679397462,1679397462,-88.2428,43.0302,3444.24,!1,171.09,248.29,5.2,null,3413.76,null,!1,0],["7502b1","MAS759  ","Malaysia",1679397462,1679397462,102.0145,3.0972,5532.12,!1,164.48,136.52,-10.73,null,5859.78,"5650",!1,0],["3006b5","DLH9CL  ","Italy",1679397444,1679397448,22.4076,47.0816,7284.72,!1,219.51,97.54,-12.35,null,7284.72,"1000",!1,0],["498421","CEF03   ","Czech Republic",1679397462,1679397462,20.1766,47.4576,10058.4,!1,245.98,123.66,0,null,9989.82,"1466",!1,0],["40768a","EZY8731 ","United Kingdom",1679397462,1679397462,10.5365,48.0583,11879.58,!1,244.16,126.6,0,null,11940.54,"1167",!1,0],["3ccd39","IFA6090 ","Germany",1679397462,1679397462,6.6875,44.0185,7833.36,!1,222.37,330.17,14.31,null,8016.24,"6774",!1,0],["407698","VIR8F   ","United Kingdom",1679397462,1679397462,-2.2747,51.4654,6134.1,!1,218.53,101.68,-8.13,null,6126.48,"7662",!1,0],["407699","VIR24M  ","United Kingdom",1679397462,1679397462,-61.1443,52.0643,11887.2,!1,272.7,91.08,0,null,11490.96,null,!1,0],["a7da9c","JBU144  ","United States",1679397462,1679397462,-77.9415,35.4588,11277.6,!1,235.61,356.24,0,null,11361.42,"7405",!1,0],["84659e","ANA799  ","Japan",1679397462,1679397462,135.7792,35.0085,10378.44,!1,174.77,257.76,3.58,null,10607.04,"4660",!1,0],["406f9f","AUR502  ","United Kingdom",1679397462,1679397462,-1.7019,50.4427,1844.04,!1,101.94,202.55,0,null,null,null,!1,0],["ae08fb","WING78  ","United States",1679397462,1679397462,-79.4539,35.5824,5775.96,!1,80.84,317.58,6.18,null,5852.16,"7012",!1,0],["4409aa","GAC419M ","Austria",1679397462,1679397462,11.4185,44.7264,9387.84,!1,204.38,165.72,-5.2,null,9525,"1000",!1,0],["3950d1","AFR76AC ","France",1679397461,1679397462,1.5208,43.4784,1013.46,!1,111.38,309.94,-1.3,null,1074.42,"1000",!1,0],["486435","HNL22A  ","Kingdom of the Netherlands",1679397462,1679397462,4.3764,52.7224,457.2,!1,86.28,73.73,0,null,480.06,null,!1,0],["851bfe","JAL158  ","Japan",1679397462,1679397462,140.5173,37.3357,8534.4,!1,193.18,192.93,0,null,8641.08,null,!1,0],["407687","EZY32EN ","United Kingdom",1679397462,1679397462,-2.8623,43.1955,11574.78,!1,228.05,7,0,null,11719.56,"4545",!1,0],["48ad0c","LOT7AN  ","Poland",1679397462,1679397462,20.1153,51.724,6027.42,!1,184.95,68.29,-12.68,null,5996.94,"1000",!1,0],["48ad0b","","Poland",1679397462,1679397462,20.9498,52.1707,236.22,!1,74.12,294.61,13.66,null,297.18,null,!1,0],["a2b691","ENY3845 ","United States",1679397462,1679397462,-94.0801,36.0983,3147.06,!1,153.37,131.87,15.28,null,3154.68,"1512",!1,0],["34610f","VLG5HK  ","Spain",1679397462,1679397462,.7658,40.3124,10424.16,!1,202.08,214.94,7.8,null,10683.24,null,!1,0],["a67ca6","NKS519  ","United States",1679397462,1679397462,-88.093,41.2201,7589.52,!1,206.91,192.93,7.8,null,7505.7,"3170",!1,0],["40766d","EXS8DB  ","United Kingdom",1679397462,1679397463,-3.366,50.3263,10668,!1,235.22,190.2,0,null,10675.62,"0532",!1,0],["702702","UBG106  ","Bangladesh",1679397462,1679397462,91.0451,23.2181,3665.22,!1,108.52,338.3,.65,null,3703.32,"4740",!1,0],["48ad10","LOT4MD  ","Poland",1679397462,1679397462,16.5324,52.8111,10668,!1,233.97,101.29,.65,null,10591.8,"7614",!1,0],["a49f89","UAL1647 ","United States",1679397462,1679397462,-83.7512,35.6254,12192,!1,197.47,236.48,.33,null,12230.1,"7035",!1,0],["a9966f","MLN717  ","United States",1679397461,1679397461,-80.7621,35.7191,12192,!1,229.2,187.22,.33,null,12245.34,"4123",!1,0],["a97c69","N710DS  ","United States",1679397462,1679397462,-85.9684,43.6038,5798.82,!1,136.17,164.44,-.33,null,5730.24,null,!1,0],["c04af4","JZA948  ","Canada",1679397462,1679397462,-82.3959,37.6933,11887.2,!1,250.6,27.77,-.33,null,11864.34,"2012",!1,0],["a2fe03","CVR243  ","United States",1679397203,1679397208,-90.5301,28.6734,1729.74,!1,71.38,195.04,0,null,1813.56,null,!1,0],["780297","CSN3720 ","China",1679397445,1679397445,113.398,22.4209,2567.94,!1,118.12,162.51,-9.43,null,2659.38,null,!1,0],["8463b5","APJ526  ","Japan",1679397462,1679397462,140.1132,34.4601,7536.18,!1,239.63,58.7,-4.88,null,7749.54,"2437",!1,0],["3c4969","TUI6KL  ","Germany",1679397351,1679397356,-16.7766,32.6936,null,!0,0,137.81,null,null,null,null,!1,0],["ac4c7d","EDV5225 ","United States",1679397459,1679397462,-84.8299,33.3994,1927.86,!1,122.95,359.76,-2.6,null,2004.06,null,!1,0],["a2c8b5","JBU540  ","United States",1679397462,1679397463,-80.0912,41.9741,9288.78,!1,246.87,73.04,6.83,null,9128.76,"4121",!1,0],["ad734a","JBU1941 ","United States",1679397462,1679397462,-70.7171,42.278,2682.24,!1,139.06,177.24,14.31,null,2682.24,null,!1,0],["8463b4","IBX44   ","Japan",1679397461,1679397461,134.8714,35.8082,10462.26,!1,259.77,64.3,5.2,null,10629.9,"2335",!1,0],["a73059","SWA1173 ","United States",1679397462,1679397462,-95.2838,29.6124,609.6,!1,83.65,142.5,9.1,null,617.22,null,!1,0],["c04aee","CJT919  ","Canada",1679397461,1679397461,-93.0553,43.4186,10363.2,!1,225.01,303.44,0,null,10142.22,"4020",!1,0],["47a743","NOZ16L  ","Norway",1679397462,1679397462,4.5463,54.7511,10363.2,!1,199.47,209.34,0,null,10279.38,"2264",!1,0],["48ad02","LOT5TJ  ","Poland",1679397462,1679397462,20.487,50.9576,6004.56,!1,221.58,183.33,6.83,null,5928.36,"5551",!1,0],["49d501","OKAAA   ","Czech Republic",1679397457,1679397457,20.6379,48.8975,3108.96,!1,70.12,287.5,0,null,3070.86,null,!1,0],["aa60da","SKW4925 ","United States",1679397459,1679397461,-98.6526,37.6686,10972.8,!1,219.85,184.56,.33,null,10904.22,null,!1,0],["a1f822","RPA5813 ","United States",1679397462,1679397462,-81.0518,41.2774,10668,!1,254.87,68.2,.33,null,10507.98,"4077",!1,0],["aab0de","SWA2796 ","United States",1679397462,1679397462,-96.7631,32.619,3093.72,!1,140.93,245.87,16.58,null,3139.44,null,!1,0],["78029d","CSZ8964 ","China",1679397415,1679397416,114.3572,22.7432,2164.08,!1,110.21,263.84,-1.3,null,2225.04,null,!1,0],["ac03ff","SWA462  ","United States",1679397462,1679397462,-87.4172,41.3296,11582.4,!1,206.76,273.85,0,null,11414.76,"4175",!1,0],["45a1b0","BBX01B  ","Denmark",1679397457,1679397458,4.5616,54.3943,1524,!1,79.74,.37,0,null,1508.76,"4301",!1,0],["34620b","VLG7VG  ","Spain",1679397462,1679397462,-6.0897,34.7924,11277.6,!1,212.99,216.45,.33,null,11643.36,null,!1,0],["c04adc","CJT245  ","Canada",1679397462,1679397463,-74.4199,41.3046,2026.92,!1,141.99,152.14,0,null,2049.78,"0577",!1,0],["845ce4","APJ116  ","Japan",1679397385,1679397385,139.3483,39.7014,11582.4,!1,194.27,224.14,1.63,null,11521.44,null,!1,0],["acb679","EDV4853 ","United States",1679397462,1679397462,-73.9781,40.6923,1104.9,!1,137.98,42.73,0,null,1158.24,"3136",!1,0],["50841b","URARTA  ","Ukraine",1679397462,1679397462,15.1575,48.9861,1813.56,!1,50.58,94.67,0,null,1851.66,"2000",!1,0],["a97c49","","United States",1679397414,1679397446,128.8485,37.5367,9212.58,!1,274.15,104.9,4.88,null,9288.78,null,!1,0],["3c496a","EWG4HW  ","Germany",1679397462,1679397462,13.7037,41.0694,11277.6,!1,259.65,165.66,-.33,null,11376.66,"2542",!1,0],["a98f6f","N715JG  ","United States",1679397458,1679397461,-76.0383,38.5366,1706.88,!1,78.79,229.24,0,null,1760.22,"1750",!1,0],["a98f6a","JBU21   ","United States",1679397462,1679397462,-80.5306,27.7773,7795.26,!1,241.88,151.96,7.15,null,8115.3,null,!1,0],["346206","ANZ174  ","Spain",1679397461,1679397461,120.1755,-33.5241,11902.44,!1,261.66,111.57,0,null,12344.4,"1515",!1,0],["851c42","JAL377  ","Japan",1679397460,1679397461,132.9669,34.3398,10363.2,!1,184.67,248.94,.33,null,10622.28,"7302",!1,0],["4684b4","SXAET   ","Greece",1679397462,1679397462,24.9202,40.463,2743.2,!1,67.7,335.77,0,null,2819.4,null,!1,0],["adb014","AAL1108 ","United States",1679397462,1679397462,-95.1131,34.5957,10782.3,!1,200.83,220.01,-5.53,null,10858.5,"5075",!1,0],["a9965c","CCQ717  ","United States",1679397462,1679397462,-95.6809,44.7633,6111.24,!1,126.69,264.17,0,null,5951.22,null,!1,0],["c051da","TSC610  ","Canada",1679397462,1679397462,-71.6563,38.2107,10050.78,!1,225.88,167.1,.33,null,10012.68,"1741",!1,0],["aa60bb","ENY3423 ","United States",1679397462,1679397462,-72.5059,42.1277,7757.16,!1,184.09,295.49,6.83,null,7597.14,"7310",!1,0],["76cda4","SIA893  ","Singapore",1679397460,1679397460,104.0956,1.377,2369.82,!1,167.46,203.73,-6.83,null,2461.26,"5124",!1,0],["76cda7","SIA807  ","Singapore",1679397461,1679397462,113.8641,23.384,11612.88,!1,256.19,179.88,0,null,12184.38,null,!1,0],["76cda6","SIA365  ","Singapore",1679397461,1679397461,21.707,35.5726,11894.82,!1,268.25,124.06,0,null,11978.64,null,!1,0],["a3739b","N321SD  ","United States",1679397462,1679397462,-84.1974,37.2465,12192,!1,229.63,348.89,.33,null,12192,"1026",!1,0],["76cda9","SIA323  ","Singapore",1679397460,1679397460,21.5992,46.1834,11277.6,!1,260.44,114.13,0,null,11224.26,"4135",!1,0],["a86371","N64FT   ","United States",1679397461,1679397462,-95.5948,32.943,9425.94,!1,248.54,73.4,1.3,null,9585.96,null,!1,0],["407630","EXS217  ","United Kingdom",1679397415,1679397460,-4.9087,46.3927,10668,!1,245.93,194.41,0,null,10751.82,"0505",!1,0],["406f3e","GNHAD   ","United Kingdom",1679397423,1679397461,-1.5205,55.132,556.26,!1,85.68,349.97,0,null,480.06,"0020",!1,0],["a6d3af","DAL1763 ","United States",1679397461,1679397462,-66.4122,18.9084,4907.28,!1,213.76,317.63,10.08,null,5128.26,null,!1,0],["76cdb5","SIA52   ","Singapore",1679397461,1679397462,-7.9965,55.9317,11582.4,!1,246.63,314.83,0,null,11445.24,"2043",!1,0],["a6dffe","CLY107  ","United States",1679397462,1679397462,2.4057,47.7885,11887.2,!1,253.97,159.36,0,null,11925.3,"6342",!1,0],["a670a3","DAL238  ","United States",1679397461,1679397461,-79.9227,32.8556,12192,!1,214.94,291.78,0,null,12374.88,null,!1,0],["394a07","AFR084  ","France",1679397462,1679397462,-3.62,55.4311,9753.6,!1,226.34,318.59,0,null,9608.82,"5606",!1,0],["a1f884","ENY3630 ","United States",1679397462,1679397462,-91.355,34.9334,5737.86,!1,222.88,71.15,7.48,null,5814.06,null,!1,0],["394a06","AFR066  ","France",1679397462,1679397462,-5.3764,56.0284,9753.6,!1,219.47,309.96,0,null,9608.82,"5601",!1,0],["76cdaa","SIA126  ","Singapore",1679397462,1679397462,101.6848,2.972,2758.44,!1,139.29,291.45,-5.2,null,2880.36,"0156",!1,0],["a4e35f","DAL221  ","United States",1679397462,1679397462,-5.3951,56.4703,10668,!1,237.81,317.72,0,null,10492.74,"5615",!1,0],["c0174f","ACA56   ","Canada",1679397462,1679397462,30.7686,42.0681,10668,!1,254.31,109.5,0,null,10683.24,"2155",!1,0],["394a14","AFR179  ","France",1679397462,1679397462,-.325,49.3785,8945.88,!1,232.34,93.05,-3.58,null,8983.98,null,!1,0],["a9df2f","SWA1898 ","United States",1679397462,1679397462,-95.5984,32.238,7635.24,!1,174.44,287.15,-13,null,7795.26,null,!1,0],["a6e6e9","N544BH  ","United States",1679397462,1679397462,-82.2736,34.8809,1668.78,!1,97.1,164.64,12.68,null,1760.22,null,!1,0],["394a17","AFR788  ","France",1679397462,1679397462,-5.4158,46.808,10370.82,!1,241.49,246.66,-.33,null,10477.5,"5634",!1,0],["adcf9a","","United States",null,1679397461,null,null,null,!1,207.85,231.23,-.33,null,null,null,!1,0],["a385ae","MAK001  ","United States",1679397461,1679397461,-76.7372,39.6669,944.88,!1,119.77,227.26,-8.78,null,1036.32,"1200",!1,0],["4ca568","RYR8FF  ","Ireland",1679397462,1679397462,-5.7112,52.9611,2994.66,!1,143.99,342.54,-7.48,null,2948.94,"4425",!1,0],["ad10ec","AAL1970 ","United States",1679397462,1679397462,-91.6544,34.9801,10972.8,!1,192.65,235.33,0,null,11049,"5700",!1,0],["4ca567","RYR2PR  ","Ireland",1679397462,1679397462,2.7974,43.2331,10789.92,!1,213.14,177.79,-10.08,null,10988.04,"7141",!1,0],["a1a8da","AVA9536 ","United States",1679397452,1679397452,-74.153,4.7117,null,!0,4.89,329.06,null,null,null,null,!1,0],["a24ba8","N247SZ  ","United States",1679397461,1679397461,-79.1989,37.8842,6096,!1,156.52,186.98,0,null,6134.1,null,!1,0],["a24ba7","SKW3611 ","United States",1679397461,1679397462,-82.1737,43.9832,10972.8,!1,183.15,270.48,0,null,10721.34,"6323",!1,0],["c051c6","TSC866  ","Canada",1679397462,1679397462,-76.4549,36.5316,10355.58,!1,231.5,156.28,0,null,10363.2,"5645",!1,0],["86e184","ANA551  ","Japan",1679397461,1679397462,135.3818,34.7713,1127.76,!1,89,180.66,4.23,null,1188.72,null,!1,0],["aa73c3","SWA3432 ","United States",1679397462,1679397462,-84.2198,37.493,12192,!1,201.23,249.34,0,null,12146.28,"7105",!1,0],["a7f3ae","JIA5302 ","United States",1679397462,1679397462,-78.8303,37.5314,10363.2,!1,204.33,219.38,-.65,null,10325.1,"3521",!1,0],["aa6ccb","AAL56   ","United States",1679397331,1679397332,-.4326,51.465,83.82,!1,69.97,269.58,-3.58,null,99.06,"7660",!1,0],["a37ec4","AAL419  ","United States",1679397462,1679397463,-76.8079,35.1742,11582.4,!1,206.13,198.93,0,null,11666.22,"7143",!1,0],["396402","FGZAC   ","France",1679397242,1679397242,6.0306,44.4966,1059.18,!1,70.24,174.96,-7.15,null,1120.14,null,!1,0],["a07579","DAL813  ","United States",1679397462,1679397462,-79.1755,40.0552,10363.2,!1,199.67,268.52,-.33,null,10256.52,"2612",!1,0],["ab7b02","AAL2090 ","United States",1679397462,1679397462,-90.2478,29.9887,167.64,!1,79.98,103.77,13.66,null,213.36,null,!1,0],["a790b3","JBU67   ","United States",1679397462,1679397462,-77.13,41.2275,10965.18,!1,199.53,244.82,.33,null,10797.54,"1462",!1,0],["a4d04c","RPA4502 ","United States",1679397462,1679397462,-71.0066,42.6509,6004.56,!1,159.38,303.28,10.4,null,5920.74,null,!1,0],["750485","AXM279  ","Malaysia",1679397323,1679397323,102.1646,2.817,4000.5,!1,166.02,350.19,-2.6,null,4213.86,"2001",!1,0],["ab2c0c","DAL233  ","United States",1679397462,1679397462,-5.546,54.5658,10363.2,!1,217.07,298.45,0,null,10264.14,"5612",!1,0],["3cc0c4","AHO316B ","Germany",1679397462,1679397462,-1.0474,48.6112,10706.1,!1,212.63,16.15,-6.18,null,10721.34,"3150",!1,0],["49c23b","OKYUA20 ","Czech Republic",1679397460,1679397460,-8.4302,40.2444,960.12,!1,44.86,40.82,2.28,null,1036.32,null,!1,0],["39644c","AFR962  ","France",1679397462,1679397462,31.2002,34.1599,12496.8,!1,263.72,122.57,0,null,12603.48,"0651",!1,0],["39644b","AFR958  ","France",1679397462,1679397462,2.953,43.4511,11277.6,!1,229,178.58,0,null,11475.72,"7617",!1,0],["75046a","MAS158  ","Malaysia",1679397462,1679397462,78.531,13.1851,11582.4,!1,229.25,287.5,0,null,12207.24,null,!1,0],["899000","CAL058  ","Taiwan",1679397462,1679397462,143.4059,-35.4034,9738.36,!1,246.3,341.87,2.93,null,10134.6,"1566",!1,0],["39644d","AFR204  ","France",1679397462,1679397462,12.6051,45.6172,11277.6,!1,256.97,123.82,0,null,11369.04,"0235",!1,0],["a2fe86","N292SP  ","United States",1679397461,1679397462,-75.4632,40.1217,1097.28,!1,48.4,272.44,-.33,null,1143,"4235",!1,0],["750475","AXM428  ","Malaysia",1679397180,1679397184,101.5966,2.859,830.58,!1,106.73,146,.33,null,830.58,null,!1,0],["acaf0b","EDV5154 ","United States",1679397462,1679397463,-74.4565,40.2323,2926.08,!1,171.35,44.15,-.98,null,2956.56,"3106",!1,0],["c01734","ACA57   ","Canada",1679397462,1679397462,-78.979,44.3251,3817.62,!1,158.9,215.65,-8.45,null,3756.66,"0733",!1,0],["750493","AXM1729 ","Malaysia",1679397462,1679397462,101.6265,3.033,10668,!1,226.73,138.68,-.33,null,11353.8,"5470",!1,0],["a2aeff","N272MB  ","United States",1679397462,1679397462,-88.6665,41.9681,853.44,!1,68.24,305.49,0,null,861.06,"4241",!1,0],["781555","CHH7985 ","China",1679397462,1679397462,104.8925,50.3538,10972.8,!1,233.54,314.82,-.33,null,10424.16,null,!1,0],["406de7","CG199   ","United Kingdom",1679397208,1679397208,-3.9047,55.0719,1501.14,!1,72.87,308.41,0,null,1432.56,"7401",!1,0],["781550","CSN6547 ","China",1679397323,1679397403,114.1933,23.4929,6027.42,!1,219.1,38.13,8.13,null,6347.46,null,!1,0],["aa8864","SWA1837 ","United States",1679397462,1679397462,-92.193,41.5223,10972.8,!1,208.29,262.05,0,null,10797.54,"6563",!1,0],["a43e5e","UAL1995 ","United States",1679397462,1679397462,-79.3464,34.9308,11277.6,!1,243.75,24.83,0,null,11353.8,"1454",!1,0],["a37eff","DAL2325 ","United States",1679397462,1679397462,-78.196,38.4466,9144,!1,215.24,232.97,0,null,9128.76,"1340",!1,0],["a3c2d5","UPS9862 ","United States",1679397462,1679397462,-84.1031,37.0255,7467.6,!1,218.65,314.14,-6.18,null,7490.46,null,!1,0],["78154e","CSN3452 ","China",1679397429,1679397430,113.4194,22.9122,3642.36,!1,171.64,117.1,-6.18,null,3802.38,null,!1,0],["a2b5da","FDX1422 ","United States",1679397462,1679397462,-104.8476,34.4327,10370.82,!1,193.68,267.11,0,null,10546.08,"1622",!1,0],["78021a","CPA3273 ","China",1679397462,1679397462,121.6629,25.2883,13106.4,!1,218.79,229,0,null,13624.56,null,!1,0],["899013","CAL064  ","Taiwan",1679397462,1679397462,26.7248,44.6295,11277.6,!1,265.39,121.04,-.33,null,11231.88,"7106",!1,0],["8940a4","GFA016  ","Bahrain",1679397462,1679397462,20.7754,47.2353,10668,!1,242.11,126.36,0,null,10599.42,"7666",!1,0],["a4453e","UAL1719 ","United States",1679397462,1679397462,-77.7922,42.8798,3688.08,!1,130.73,241.82,9.43,null,3627.12,"5767",!1,0],["a43e60","UAL461  ","United States",1679397462,1679397462,-86.5345,36.0614,2781.3,!1,149.2,90.79,19.83,null,2827.02,"1632",!1,0],["3ff94d","DMBFG   ","Germany",1679397461,1679397461,8.9868,48.0258,1684.02,!1,53.03,85.2,0,null,1770,"7000",!1,3],["a9d37b","SKQ78   ","United States",1679397462,1679397462,-82.717,39.8169,2560.32,!1,128.43,339.61,-7.15,null,2613.66,null,!1,0],["394a0b","AFR081  ","France",1679397462,1679397462,-6.4539,50.1065,11277.6,!1,256.82,105.09,0,null,11323.32,null,!1,0],["394a0a","AFR014  ","France",1679397462,1679397462,-8.9578,53.544,10668,!1,208.75,301.5,.33,null,10614.66,"5607",!1,0],["a4a897","N4GT    ","United States",1679397462,1679397462,-73.7468,42.715,9144,!1,130.32,241.21,0,null,8907.78,"7344",!1,0],["4ca56d","RYR817W ","Ireland",1679397272,1679397437,-3.6436,41.9589,11277.6,!1,205.79,257.14,-.33,null,11437.62,"4030",!1,0],["394a0f","AFR375S ","France",1679397462,1679397462,-1.2279,46.0656,11887.2,!1,240.06,215.05,0,null,11993.88,"2642",!1,0],["c0173f","ACA860  ","Canada",1679397462,1679397462,-3.1115,54.1581,10668,!1,257.64,156.71,0,null,10546.08,"7641",!1,0],["75044d","MAS3    ","Malaysia",1679397462,1679397462,5.4501,50.6761,11041.38,!1,264.32,102.82,1.63,null,11041.38,"4703",!1,0],["a768fd","LXJ577  ","United States",1679397462,1679397462,-82.8601,43.0952,13106.4,!1,208.87,283.97,0,null,12893.04,"1533",!1,0],["acc954","ENY3603 ","United States",1679397462,1679397462,-86.7212,42.8544,5227.32,!1,181.21,215.99,-10.4,null,5166.36,"2473",!1,0],["a37efc","UPS982  ","United States",1679397462,1679397462,-118.1313,47.6128,10980.42,!1,230.56,277.82,0,null,10607.04,null,!1,0],["a29b62","N2670M  ","United States",1679397461,1679397461,-72.5779,41.7951,2484.12,!1,66.69,228.44,-.33,null,2484.12,null,!1,0],["750459","AXM888  ","Malaysia",1679397271,1679397275,100.1438,7.5396,9159.24,!1,234.88,7.17,0,null,9715.5,"2113",!1,0],["ab5993","AAL628  ","United States",1679397462,1679397462,-80.5009,35.7451,4579.62,!1,149.46,210.63,-5.2,null,4648.2,"6525",!1,0],["abefba","SWA2960 ","United States",1679397462,1679397463,-95.4526,39.2106,10363.2,!1,210.4,261.99,0,null,10248.9,"1151",!1,0],["c01759","ACA007  ","Canada",1679397317,1679397317,-156.2574,59.3796,9144,!1,230,273.98,.33,null,8580.12,null,!1,0],["aa1ec8","N751LP  ","United States",1679397463,1679397463,-94.6903,35.7203,9144,!1,230.77,186.14,-.98,null,9189.72,"7132",!1,0],["396447","AFR498  ","France",1679397462,1679397462,-2.4794,46.6886,10668,!1,233.83,230.36,0,null,10759.44,"0640",!1,0],["a8a083","NKS420  ","United States",1679397463,1679397463,-77.0681,36.1152,10355.58,!1,219.35,193.84,0,null,10401.3,"0665",!1,0],["396449","","France",1679397452,1679397452,20.2667,42.5995,11277.6,!1,237.13,129.63,0,null,11308.08,null,!1,0],["394a31","FGSRR   ","France",1679397435,1679397435,1.8988,43.8886,274.32,!1,42.05,284.89,-4.23,null,358.14,"7000",!1,0],["a875a3","RPA3537 ","United States",1679397462,1679397462,-78.7851,41.1768,7620,!1,255.37,83.29,0,null,7559.04,"4134",!1,0],["395d67","BGA183H ","France",1679397462,1679397462,10.0162,53.6203,815.34,!1,86.45,231.77,-4.55,null,861.06,"2370",!1,0],["780e95","KNA8227 ","China",null,1679397383,null,null,null,!1,140.44,17.04,0,null,null,null,!1,0],["a69894","JBU91   ","United States",1679397462,1679397462,-78.8952,37.2279,10965.18,!1,206.19,216.78,-.33,null,10949.94,"3566",!1,0],["a2fe3c","EDV5486 ","United States",1679397215,1679397221,-73.8659,40.7726,null,!0,0,126.56,null,null,null,"7456",!1,0],["395d69","BGA132J ","France",1679397459,1679397462,-1.8632,47.3694,891.54,!1,77.52,254.21,0,null,975.36,"1344",!1,0],["750465","AXM5229 ","Malaysia",1679397462,1679397462,102.2411,2.7214,5181.6,!1,176.98,306.37,0,null,5463.54,"0420",!1,0],["750466","AXM1724 ","Malaysia",1679397462,1679397462,100.6328,4.413,5928.36,!1,220.31,325.75,-12.68,null,6286.5,"0157",!1,0],["750467","","Malaysia",1679397462,1679397462,99.5726,11.4244,10972.8,!1,234.28,342.36,0,null,null,null,!1,0],["a528d6","SWA3416 ","United States",1679397462,1679397462,-90.7388,30.0994,2217.42,!1,141.5,95.01,-7.15,null,2308.86,"4506",!1,0],["ab599b","DAL49   ","United States",1679397462,1679397462,4.5637,52.2325,1112.52,!1,128.64,283.65,11.38,null,1127.76,"2134",!1,0],["ac16da","SWA4306 ","United States",1679397462,1679397462,-83.4721,40.3224,10972.8,!1,210.29,297.07,0,null,10850.88,"0563",!1,0],["ad6c38","","United States",1679397207,1679397208,-72.6844,41.9324,-53.34,!0,.77,90,null,null,null,null,!1,0],["3460d4","ECMZV   ","Spain",1679397460,1679397462,2.1003,41.5231,null,!0,.06,19.69,null,null,null,null,!1,0],["851c64","JAL2019 ","Japan",1679397156,1679397172,141.8193,42.7796,2324.1,!1,126.46,355.33,-10.08,null,2362.2,"4773",!1,0],["78158a","DKH1038 ","China",1679397286,1679397286,113.9548,23.4872,4213.86,!1,190.33,64.89,13,null,4297.68,null,!1,0],["a4f5a7","ATN6771 ","United States",1679397462,1679397462,-96.0508,30.7735,4853.94,!1,191.63,150.75,-10.4,null,4968.24,"0556",!1,0],["300847","IOZZI   ","Italy",1679397462,1679397462,11.8593,44.6962,762,!1,35.73,96.61,-2.28,null,845.82,"7000",!1,0],["a06db4","AAL892  ","United States",1679397462,1679397462,-87.4309,38.1172,10972.8,!1,208.37,245.65,0,null,10919.46,"4144",!1,0],["400d8c","EZY87HY ","United Kingdom",1679397462,1679397462,20.17,50.2149,1348.74,!1,127.06,111.37,-2.93,null,1402.08,"4744",!1,0],["a920fc","SNC1612 ","United States",1679397453,1679397453,-87.5768,40.2714,457.2,!1,59.5,123,-.65,null,480.06,"4330",!1,0],["aca309","AAL660  ","United States",1679397452,1679397452,-73.8738,40.7763,null,!0,0,171.56,null,null,null,null,!1,0],["395145","MOL61   ","France",null,1679397462,null,null,null,!1,55.68,266.29,-.65,null,null,null,!1,0],["adbc1d","N984XR  ","United States",1679397462,1679397462,-91.2347,38.7724,12192,!1,203.64,255.37,0,null,12108.18,"6752",!1,0],["395142","MET85   ","France",1679397347,1679397462,.1173,45.5796,1470.66,!1,74.64,317.51,.98,null,1569.72,null,!1,0],["3c70c4","GEC8189 ","Germany",1679397462,1679397462,-3.8206,51.6663,11887.2,!1,261.53,95.53,0,null,11864.34,"2235",!1,0],["3c70c3","GEC8400 ","Germany",1679397438,1679397438,8.5455,50.0408,null,!0,2.06,275.62,null,null,null,null,!1,0],["300815","IDADN   ","Italy",1679397462,1679397462,12.0749,42.3347,990.6,!1,46.94,9.46,1.3,null,1059.18,null,!1,0],["394a62","BGA127C ","France",1679397377,1679397386,2.7333,49.9498,1546.86,!1,151.55,55.23,-13,null,1638.3,"1000",!1,0],["aac3f4","JBU841  ","United States",1679397462,1679397462,-73.8649,39.6619,7574.28,!1,215.16,205.34,11.05,null,7513.32,"1746",!1,0],["30080d","IACVD   ","Italy",1679397212,1679397214,11.2073,45.9171,1722.12,!1,55.03,76.48,-2.6,null,1805.94,"4611",!1,0],["abe3c8","SWA2935 ","United States",1679397462,1679397462,-81.4243,28.571,2484.12,!1,131,175.95,-4.55,null,2598.42,"3153",!1,0],["a2a2e3","UAL140  ","United States",1679397462,1679397462,11.4664,45.9839,11887.2,!1,270.01,130.52,-.33,null,11978.64,"1142",!1,0],["300824","IOZZG   ","Italy",1679397462,1679397462,11.9338,44.488,274.32,!1,51.14,143.59,0,null,358.14,"7000",!1,0],["c1e89a","SAF206  ","Canada",1679397157,1679397157,-79.6151,43.6814,null,!0,6.69,171.56,null,null,null,null,!1,0],["750425","MXD889  ","Malaysia",1679397461,1679397461,135.9948,37.5805,10363.2,!1,183.19,229.56,0,null,10431.78,"3741",!1,0],["3cd3c6","PTN815  ","Germany",1679397152,1679397164,-.7422,51.2872,243.84,!1,53.15,242.94,-3.58,null,259.08,"3576",!1,0],["c1e89b","SAF210  ","Canada",1679397152,1679397152,-79.6081,43.6786,null,!0,7.2,135,null,null,null,null,!1,0],["479227","NSZ2ZY  ","Norway",1679397463,1679397463,9.0428,46.1611,10363.2,!1,217.54,3.66,0,null,10485.12,"7533",!1,0],["478114","NOW335A ","Norway",1679397462,1679397462,18.547,53.5886,8229.6,!1,178.95,159.12,0,null,8168.64,"6315",!1,0],["400f21","GHDEW   ","United Kingdom",1679397462,1679397462,.1178,51.2826,739.14,!1,58.28,274.05,.33,null,716.28,"1730",!1,0],["a0c4a1","FDX142  ","United States",1679397462,1679397462,-102.3516,42.5527,10980.42,!1,219.81,302.09,0,null,10759.44,"5631",!1,0],["4ba9ec","THY9BT  ","Turkey",1679397462,1679397462,26.3003,40.8856,10980.42,!1,209.08,265.2,.33,null,11033.76,null,!1,0],["a5b59d","SWA2961 ","United States",1679397462,1679397462,-89.571,30.8743,11277.6,!1,263.05,66.24,0,null,11544.3,null,!1,0],["4ba9eb","THY4YT  ","Turkey",1679397462,1679397462,-2.4412,49.3574,11887.2,!1,255.05,101.4,0,null,11910.06,null,!1,0],["502d0b","BTI8PW  ","Latvia",1679397462,1679397462,16.4103,55.9686,10355.58,!1,210.62,246.69,0,null,10271.76,"4372",!1,0],["780f06","CDC8753 ","China",1679397462,1679397462,113.6411,22.7918,11003.28,!1,216.59,195.85,0,null,11567.16,null,!1,0],["4cafc0","RYR81ZN ","Ireland",1679397463,1679397463,3.538,50.5713,4693.92,!1,202.99,45.62,-7.48,null,4739.64,"5342",!1,0],["402939","GBNRG   ","United Kingdom",1679397462,1679397463,-1.5772,51.9509,1676.4,!1,38.19,207.26,-.65,null,1638.3,"3707",!1,0],["4cafc2","RYR6ET  ","Ireland",1679397462,1679397462,11.3315,45.3818,11285.22,!1,214.76,247.61,0,null,11384.28,"7104",!1,0],["48ada8","LOT3NE  ","Poland",1679397462,1679397462,14.5979,51.6642,10668,!1,227.96,75.49,0,null,10675.62,"1000",!1,0],["48ada9","LOT2EC  ","Poland",1679397462,1679397462,12.6144,51.0627,10668,!1,239.26,80.72,0,null,10683.24,"1000",!1,0],["48ada5","LOT4TP  ","Poland",1679397260,1679397264,20.9795,52.1516,121.92,!1,70.21,331.56,-3.9,null,182.88,"1000",!1,0],["48ada2","LOT3PK  ","Poland",1679397462,1679397462,13.2825,45.5493,5745.48,!1,185.15,77.97,14.63,null,5897.88,"0254",!1,0],["abc058","SWA4157 ","United States",1679397462,1679397463,-85.941,36.4954,3520.44,!1,180.6,239.34,-14.63,null,3581.4,"3427",!1,0],["4cafce","SAS526  ","Ireland",1679397462,1679397462,2.883,53.3096,11879.58,!1,243.5,29.49,-.33,null,11826.24,"1453",!1,0],["4ba9fa","THY6135 ","Turkey",1679397451,1679397452,20.4832,39.0586,10972.8,!1,214.11,245.59,.33,null,11026.14,"2316",!1,0],["4c0662","YUBTC   ","Serbia",1679397462,1679397462,20.4012,44.7773,487.68,!1,70.24,301.83,-4.23,null,548.64,null,!1,0],["acf34b","MRA697  ","United States",1679397283,1679397283,-75.718,41.3446,182.88,!1,44.39,212.22,-.65,null,251.46,null,!1,0],["040075","ETH602  ","Ethiopia",1679397457,1679397457,55.6098,24.9335,1996.44,!1,137.21,8.19,-2.93,null,1981.2,null,!1,0],["4cafd0","RYR96KY ","Ireland",1679397462,1679397462,-8.0994,39.6201,9441.18,!1,233.9,44.73,5.2,null,9677.4,"3336",!1,0],["4cafd1","RYR43XN ","Ireland",1679397462,1679397462,-4.8977,48.3002,11887.2,!1,226.43,202.72,.33,null,11940.54,"6312",!1,0],["502d35","MYX585  ","Latvia",1679397461,1679397462,24.6112,44.5562,10668,!1,228.24,154.07,.33,null,10645.14,"1175",!1,0],["a91b44","UAL53   ","United States",1679397462,1679397462,-.5822,52.5939,10363.2,!1,223.52,317.24,.33,null,10233.66,"3043",!1,0],["a80287","NKS2324 ","United States",1679397451,1679397461,-67.5796,29.9245,11269.98,!1,212.03,178.47,0,null,11734.8,null,!1,0],["71c012","JNA349  ","Republic of Korea",1679397456,1679397456,128.5165,35.5431,4907.28,!1,173.56,169.76,-5.53,null,5105.4,null,!1,0],["4b8349","00000000","Turkey",1679397462,1679397462,27.5459,36.746,5494.02,!1,45.39,215.31,0,null,5593.08,null,!1,0],["71c017","JNA204  ","Republic of Korea",1679397462,1679397462,133.8744,35.9596,10972.8,!1,174.52,267.8,0,null,11125.2,"3242",!1,0],["06a376","QTR76G  ","Qatar",1679397462,1679397462,1.7375,51.4818,10668,!1,226.25,280.08,0,null,10607.04,"3221",!1,0],["502d36","THY3FS  ","Latvia",1679397462,1679397462,12.3626,44.5072,9989.82,!1,214.57,278.97,-4.88,null,10126.98,"2332",!1,0],["502d38","THY5HL  ","Latvia",1679397462,1679397462,4.9059,50.9613,937.26,!1,102.84,282.72,-8.78,null,1005.84,"1000",!1,0],["4ba9e1","THY12   ","Turkey",1679397462,1679397462,-1.709,51.685,11277.6,!1,257.4,100.48,.33,null,11239.5,"2266",!1,0],["502d24","BTI65T  ","Latvia",1679397462,1679397462,16.4972,55.8642,11887.2,!1,224.53,69.2,-.33,null,11780.52,"3467",!1,0],["502d23","BTI8KY  ","Latvia",1679397462,1679397462,24.9353,54.7678,2171.7,!1,144.09,69.3,-7.48,null,2141.22,"3701",!1,0],["485da0","PHWIS   ","Kingdom of the Netherlands",1679397462,1679397462,6.1602,49.1372,12192,!1,214.86,346.43,0,null,12252.96,"5741",!1,0],["04004b","ETH508  ","Ethiopia",1679397462,1679397462,1.4687,6.39,1828.8,!1,132.92,299.44,1.3,null,1950.72,null,!1,0],["06a36b","A7GHZ   ","Qatar",1679397461,1679397462,51.477,25.3442,541.02,!1,57.52,333.43,1.63,null,472.44,null,!1,0],["a7e24a","EDV4641 ","United States",1679397462,1679397462,-78.7738,35.8974,175.26,!1,84.76,45.25,10.4,null,281.94,null,!1,0],["502d0c","BTI9UG  ","Latvia",1679397462,1679397462,23.9045,58.9849,5554.98,!1,198.33,62.84,-11.05,null,5417.82,"3133",!1,0],["502d0f","BTI629  ","Latvia",1679397462,1679397462,14.5555,47.8805,11582.4,!1,217.16,236.01,0,null,11605.26,"1000",!1,0],["502d0e","BTI683  ","Latvia",1679397462,1679397462,8.0774,44.4245,11887.2,!1,203.95,229.4,0,null,12039.6,"1146",!1,0],["71c004","AAR116  ","Republic of Korea",1679397462,1679397462,133.4988,35.2705,6949.44,!1,219.6,124.21,-11.05,null,7124.7,null,!1,0],["71c007","KAL093  ","Republic of Korea",1679397462,1679397462,-113.0927,53.8716,10668,!1,256.12,120.94,0,null,10248.9,null,!1,0],["4ba9f5","THY6587 ","Turkey",1679397462,1679397462,7.0583,50.5594,7863.84,!1,221.92,267.61,-10.4,null,7993.38,"1000",!1,0],["4cafb3","RYR16HQ ","Ireland",1679397462,1679397462,-4.2695,47.8706,11277.6,!1,228.07,210.5,0,null,11338.56,"0526",!1,0],["abc07b","SWA563  ","United States",1679397463,1679397463,-97.3136,38.9672,11582.4,!1,201.04,260.13,.33,null,11475.72,"1124",!1,0],["a4dbef","DAL81   ","United States",1679397462,1679397462,.4053,51.8416,10972.8,!1,238.2,327.61,0,null,10911.84,"5644",!1,0],["89914c","MDA770  ","Taiwan",1679397429,1679397429,119.6015,23.8643,3954.78,!1,151.85,63,-.33,null,4130.04,null,!1,0],["4076cd","BAW5RI  ","United Kingdom",1679397342,1679397342,23.9979,38.0045,525.78,!1,81.18,217.02,-3.58,null,609.6,"4721",!1,0],["a8aba8","NKS1022 ","United States",1679397462,1679397462,-93.332,31.7935,11277.6,!1,267.97,123.17,0,null,11498.58,null,!1,0],["406fdb","EZY71DG ","United Kingdom",1679397461,1679397462,-3.4183,39.7876,10355.58,!1,234.05,8.47,0,null,10614.66,null,!1,0],["406fda","EZY93VH ","United Kingdom",1679397462,1679397462,-8.6989,41.4539,10477.5,!1,237.88,202.24,6.18,null,10690.86,"5412",!1,0],["a5c899","ASA299  ","United States",1679397462,1679397462,-74.3669,41.1625,4282.44,!1,189.42,1.87,10.08,null,4259.58,"1122",!1,0],["040021","SKK035  ","Ethiopia",1679397462,1679397462,2.4041,6.3567,7452.36,!1,166.85,283.01,-8.78,null,7917.18,null,!1,0],["502d58","BTI7WP  ","Latvia",1679397462,1679397462,17.4564,60.1105,10363.2,!1,188.55,319.09,0,null,10142.22,"4323",!1,0],["78161c","CSN398  ","China",1679397462,1679397462,119.027,14.837,10363.2,!1,240.6,313.01,0,null,11041.38,null,!1,0],["502d44","BTI3BJ  ","Latvia",1679397462,1679397462,23.2625,55.4718,9364.98,!1,242.53,185.84,6.5,null,9220.2,"4334",!1,0],["780303","","China",null,1679397367,null,null,null,!1,170.9,301.58,-4.88,null,null,null,!1,0],["502d45","BTI69R  ","Latvia",1679397462,1679397462,15.0476,55.5132,11887.2,!1,222.04,67.24,0,null,11780.52,"7552",!1,0],["ace063","JBU923  ","United States",1679397462,1679397462,-84.9,40.3728,10363.2,!1,208.91,277.07,0,null,10241.28,"7126",!1,0],["0100df","MSR751  ","Egypt",1679397462,1679397462,24.5717,39.8933,11582.4,!1,222.04,332.54,-.33,null,11635.74,"6451",!1,0],["040030","ETH500  ","Ethiopia",1679397462,1679397463,-71.9215,43.8356,11582.4,!1,228.58,213.62,0,null,11323.32,"0734",!1,0],["a204e6","N22905  ","United States",1679397462,1679397462,139.303,35.5949,960.12,!1,54.62,330.05,-.98,null,1013.46,"5462",!1,0],["a6c248","UAL2484 ","United States",1679397462,1679397462,-89.6275,38.2645,10363.2,!1,220.7,202.62,0,null,10302.24,"6212",!1,0],["89912d","EVA667  ","Taiwan",1679397462,1679397462,138.0056,35.669,9753.6,!1,186.61,244.35,0,null,9936.48,"3145",!1,0],["502d71","THY6SL  ","Latvia",1679397462,1679397462,9.0713,47.4363,10355.58,!1,210.42,269.44,-.65,null,10462.26,"3206",!1,0],["0d075f","AMX429  ","Mexico",1679397462,1679397462,-80.7025,25.8037,6012.18,!1,186.48,231.83,12.35,null,6286.5,null,!1,0],["4076b0","TOM32K  ","United Kingdom",1679397462,1679397462,-15.7233,32.8008,11277.6,!1,217.42,207.17,0,null,11605.26,null,!1,0],["851ca8","JAL498  ","Japan",1679397461,1679397462,137.4975,33.3844,11887.2,!1,247.55,50.82,0,null,12169.14,"2122",!1,0],["502d6a","THY4PV  ","Latvia",1679397462,1679397462,8.6833,50.0632,495.3,!1,73.4,249.91,-4.23,null,579.12,"1000",!1,0],["846658","FDA315  ","Japan",1679397462,1679397462,135.6454,35.3116,7924.8,!1,169.04,252.28,-.33,null,8122.92,"4754",!1,0],["a6e89b","","United States",null,1679397462,null,null,null,!1,92.09,89.68,12.68,null,null,null,!1,0],["485299","OH39    ","Kingdom of the Netherlands",1679397455,1679397455,4.7439,52.3165,null,!0,11.32,0,null,null,null,null,!1,0],["4ab34d","SCQ04   ","Sweden",1679397462,1679397462,16.6752,59.5776,1089.66,!1,49.73,309.12,.33,null,1059.18,null,!1,0],["a7e20a","JBU2077 ","United States",1679397462,1679397462,-77.3825,34.5184,9753.6,!1,218.24,196.85,0,null,9860.28,"1532",!1,0],["502d5a","BTI9802 ","Latvia",1679397463,1679397463,9.5074,49.032,10363.2,!1,213.38,9.58,0,null,10454.64,"3040",!1,0],["ab485e","AAL1395 ","United States",1679397462,1679397462,-93.6898,44.3401,6614.16,!1,194.3,210.03,11.05,null,6469.38,null,!1,0],["407795","EZY12QC ","United Kingdom",1679397462,1679397462,-.2789,51.8901,502.92,!1,65.15,254.43,-3.25,null,502.92,"6760",!1,0],["780de5","CES6421 ","China",1679397317,1679397319,113.7259,22.7937,975.36,!1,79.84,152.77,.33,null,952.5,null,!1,0],["7503fd","AXM716  ","Malaysia",1679397462,1679397462,102.5072,2.4274,6606.54,!1,189.82,332.74,-4.88,null,7025.64,"0105",!1,0],["3964ef","TVF54JQ ","France",1679397462,1679397462,-.5396,45.4695,10058.4,!1,214.89,339.4,0,null,10134.6,"1036",!1,0],["3007ee","DLH3AE  ","Italy",1679397462,1679397462,17.9667,46.3624,10668,!1,250.03,122.48,.33,null,10645.14,"4373",!1,0],["3007ef","DLH4EE  ","Italy",1679397462,1679397462,9.9163,45.9941,8229.6,!1,209.55,250.94,.33,null,8389.62,"1000",!1,0],["3964ee","TVF85CD ","France",1679397462,1679397462,.0458,39.9738,6812.28,!1,212.14,16.19,9.75,null,7025.64,null,!1,0],["aaac21","SKW4683 ","United States",1679397462,1679397462,-80.7889,42.3022,6103.62,!1,160.59,301.91,5.2,null,6019.8,"5752",!1,0],["407794","EZY83TE ","United Kingdom",1679397462,1679397462,10.8086,51.9561,11582.4,!1,207.88,284.62,-.33,null,11582.4,"7546",!1,0],["a0b1ea","DAL2342 ","United States",1679397462,1679397462,-83.1549,42.435,1386.84,!1,101.51,251.38,-5.53,null,1409.7,"5106",!1,0],["3cc00c","AZE23B  ","Germany",1679397462,1679397462,13.4221,48.463,2689.86,!1,131.38,86.86,.33,null,2743.2,"7642",!1,0],["a0fa70","SKW3701 ","United States",1679397462,1679397462,-85.175,34.3638,4663.44,!1,204.89,142.04,-7.15,null,4739.64,"1321",!1,0],["71c073","ASV965  ","Republic of Korea",1679397328,1679397328,128.5696,35.307,3429,!1,159.53,181.48,-5.53,null,3939.54,null,!1,0],["71c076","KAL8255 ","Republic of Korea",1679397253,1679397253,-145.2371,61.2452,10058.4,!1,245.77,96.13,0,null,9578.34,"4731",!1,0],["a684b5","AAL538  ","United States",1679397462,1679397462,-83.7857,35.8733,10058.4,!1,252.36,85.44,0,null,10088.88,"5602",!1,0],["71c077","KAL9286 ","Republic of Korea",1679397462,1679397462,141.4272,38.6964,11582.4,!1,186.12,249.11,0,null,11582.4,null,!1,0],["aad981","AAL120  ","United States",1679397462,1679397462,5.9983,51.5987,10668,!1,241.7,123.89,0,null,10683.24,"5213",!1,0],["aa0e62","AAL2029 ","United States",1679397462,1679397462,-70.9757,42.4248,243.84,!1,83.82,200.1,-4.55,null,320.04,"0503",!1,0],["71c069","TWB214  ","Republic of Korea",1679397461,1679397462,134.8422,35.9521,10972.8,!1,166.19,269.11,0,null,11125.2,"3772",!1,0],["40643b","EZY928C ","United Kingdom",1679397462,1679397463,-2.6352,53.4943,10370.82,!1,192.03,308.04,0,null,10271.76,"1255",!1,0],["39b4e3","FHNHD   ","France",1679397461,1679397462,.6463,47.6761,1219.2,!1,73.95,101.23,-2.6,null,1280.16,null,!1,0],["868056","JAL2    ","Japan",1679397462,1679397462,139.9598,35.8125,4297.68,!1,193.99,358.78,14.63,null,4404.36,"3107",!1,0],["71c061","JJA2902 ","Republic of Korea",1679397147,1679397152,122.4386,26.0779,11277.6,!1,240.83,35.52,0,null,11772.9,null,!1,0],["ac53a0","ASH6013 ","United States",1679397462,1679397462,-77.5067,39.4783,2758.44,!1,151.47,160.77,-11.38,null,2811.78,"2272",!1,0],["009e9c","ZSLOT   ","South Africa",1679397462,1679397462,18.5664,-33.8317,2545.08,!1,150.61,13.23,16.26,null,2682.24,"4535",!1,0],["a98408","FFT681  ","United States",1679397462,1679397462,-86.8094,32.3848,10972.8,!1,180.47,291.23,0,null,11170.92,"1062",!1,0],["71c064","JJA3101 ","Republic of Korea",1679397173,1679397173,126.484,37.4347,198.12,!1,76.79,324.82,-3.9,null,213.36,null,!1,0],["4241a1","KNE737  ","United Kingdom",1679397459,1679397460,48.3142,26.1069,9105.9,!1,185.8,237.32,11.05,null,9189.72,null,!1,0],["881051","NOK136  ","Thailand",1679397462,1679397462,100.2414,14.6735,6934.2,!1,212.54,350.1,10.08,null,7315.2,"3331",!1,0],["406442","EZY27GL ","United Kingdom",1679397462,1679397462,-3.1832,47.609,11582.4,!1,225.74,34.41,-.33,null,11635.74,"7454",!1,0],["881050","NOK207  ","Thailand",1679397149,1679397225,100.6232,13.9457,3535.68,!1,70.66,208.24,-3.9,null,129.54,"3354",!1,0],["ac5feb","CXK591  ","United States",1679397462,1679397462,-75.1763,39.249,1409.7,!1,56.47,83.2,0,null,1463.04,null,!1,0],["406445","EZY83LH ","United Kingdom",1679397462,1679397462,-7.5339,38.9181,11346.18,!1,237.25,29.34,3.58,null,11597.64,"5207",!1,0],["406444","EZY29LZ ","United Kingdom",1679397462,1679397462,-7.8529,36.1505,11887.2,!1,220.02,187.52,0,null,12214.86,"2161",!1,0],["881054","NOK578  ","Thailand",1679397461,1679397461,99.8607,12.4595,10172.7,!1,238.83,184.2,7.8,null,10736.58,"3304",!1,0],["48525c","VF      ","Kingdom of the Netherlands",1679397235,1679397235,4.7419,52.3043,null,!0,5.14,182.81,null,null,null,null,!1,0],["a54ae1","DPJ440  ","United States",1679397461,1679397462,-78.7999,35.8453,10058.4,!1,249.32,24.5,0,null,10088.88,"0760",!1,0],["484b6e","TRA21Q  ","Kingdom of the Netherlands",1679397463,1679397463,3.0817,50.5877,8793.48,!1,226.35,28.95,-5.2,null,8793.48,"5527",!1,0],["3964e4","TVF93SH ","France",1679397462,1679397462,-5.5164,37.5424,10972.8,!1,242.4,18.82,0,null,11224.26,null,!1,0],["c0675c","CGNDR   ","Canada",1679397462,1679397462,-76.9779,46.1801,8534.4,!1,126.12,280.58,-.33,null,8161.02,"1065",!1,0],["3964e8","TVF32JZ ","France",1679397462,1679397462,1.6593,47.347,10492.74,!1,208.89,196.16,6.83,null,10538.46,"7631",!1,0],["a9d2fa","FDX1495 ","United States",1679397462,1679397462,-102.3357,41.1043,10972.8,!1,205.47,287.94,0,null,10805.16,"5676",!1,0],["a3b13f","EJA337  ","United States",1679397462,1679397462,-96.0326,29.8302,2705.1,!1,136.72,304.89,17.56,null,2766.06,null,!1,0],["3964e5","TVF52YW ","France",1679397462,1679397462,1.2887,42.1564,11590.02,!1,232.97,3.54,0,null,11788.14,"1017",!1,0],["ac4cc7","N892AE  ","United States",1679397462,1679397462,-83.9818,39.669,9906,!1,209.36,240.73,8.78,null,9829.8,"6652",!1,0],["881047","","Thailand",1679397461,1679397461,100.5957,13.8896,342.9,!1,88.76,210.28,11.7,null,281.94,"7202",!1,0],["71c093","KAL423  ","Republic of Korea",1679397462,1679397462,129.7508,33.7925,10058.4,!1,261.71,147.28,.33,null,10363.2,null,!1,0],["71c099","ABL165  ","Republic of Korea",1679397453,1679397453,131.4412,35.8546,10965.18,!1,184.4,267.12,0,null,11140.44,"3603",!1,0],["71c090","JJA1305 ","Republic of Korea",1679397352,1679397352,132.296,35.2415,10363.2,!1,181.38,294.82,0,null,10576.56,null,!1,0],["a324d9","UPS948  ","United States",1679397462,1679397462,-121.3945,37.6918,3268.98,!1,166.59,252.01,-5.53,null,3116.58,"1426",!1,0],["aaac4a","UAL914  ","United States",1679397462,1679397462,2.3159,49.0159,1699.26,!1,126.58,295,11.7,null,1744.98,"0653",!1,0],["3964f0","TVF60SJ ","France",1679397461,1679397462,1.106,46.8425,9364.98,!1,246.16,357.36,-8.13,null,9448.8,"1006",!1,0],["ade9c0","JBU1924 ","United States",1679397459,1679397461,-72.2958,37.9899,10355.58,!1,247.97,359.64,.33,null,10325.1,null,!1,0],["71c089","JJA2305 ","Republic of Korea",1679397462,1679397462,122.4942,25.5332,11574.78,!1,231.41,199.89,4.88,null,12077.7,null,!1,0],["40641d","VIR75L  ","United Kingdom",1679397462,1679397462,-11.6888,54.6416,11056.62,!1,213.71,282.23,1.63,null,10927.08,"4476",!1,0],["3964f9","TVF56LQ ","France",1679397462,1679397462,-3.5546,38.8738,10972.8,!1,236.82,4.36,0,null,11201.4,null,!1,0],["3964f8","TVF77BR ","France",1679397429,1679397459,34.981,32.0513,1112.52,!1,109.77,121.98,-.65,null,1135.38,"0241",!1,0],["3964f7","TVF19KA ","France",1679397462,1679397462,-1.1839,44.3428,11582.4,!1,238.82,26.07,0,null,11696.7,"2202",!1,0],["abf96c","SWA507  ","United States",1679397462,1679397463,-74.3513,40.1899,9837.42,!1,251.09,67.22,-11.05,null,9738.36,"5612",!1,0],["4a2836","YRJAV   ","Romania",1679397446,1679397461,25.8864,44.8447,335.28,!1,43.65,45,.65,null,388.62,"6726",!1,0],["a80dac","NKS985  ","United States",1679397462,1679397462,-89.1519,38.9525,10965.18,!1,207.9,237.02,0,null,10888.98,"4151",!1,0],["abd30f","FDX7    ","United States",1679397462,1679397462,47.9721,27.7263,10363.2,!1,192.68,298.55,0,null,10454.64,null,!1,0],["01020b","MSR733  ","Egypt",1679397461,1679397462,14.9642,48.0562,11574.78,!1,206.29,306.58,0,null,11582.4,"2663",!1,0],["01020a","MSR775  ","Egypt",1679397462,1679397462,4.4721,52.375,11590.02,!1,219.59,290.43,0,null,11551.92,"7541",!1,0],["7801ca","CPA743  ","China",1679397444,1679397445,105.9469,21.686,3429,!1,135.03,251.57,-6.83,null,3535.68,null,!1,0],["ab967b","DAL667  ","United States",1679397259,1679397261,-70.9978,42.3801,-45.72,!1,74.85,199.68,-4.23,null,38.1,"0714",!1,0],["a707a3","JBU119  ","United States",1679397462,1679397462,-76.8412,35.7886,10363.2,!1,202.48,222.32,0,null,10424.16,"3517",!1,0],["ac066b","AAL659  ","United States",1679397462,1679397462,-77.6133,36.7557,8100.06,!1,198.39,208.16,7.15,null,8130.54,null,!1,0],["7503ac","MAS783  ","Malaysia",1679397450,1679397461,100.4308,5.2138,11277.6,!1,222.45,150.95,0,null,11978.64,null,!1,0],["06a30d","QTR8239 ","Qatar",null,1679397428,null,null,null,!1,224.56,272.76,0,null,null,null,!1,0],["06a30b","QTR8148 ","Qatar",1679397462,1679397462,48.6678,29.5776,11887.2,!1,254.45,153.33,0,null,11963.4,null,!1,0],["06a30a","QTR8105 ","Qatar",1679397462,1679397462,2.9041,55.0116,9144,!1,272.49,341.39,0,null,9060.18,"2127",!1,0],["33fff3","IAM4653 ","Italy",1679397180,1679397181,10.222,43.2487,2346.96,!1,113.58,262.71,11.38,null,2446.02,null,!1,0],["a577d4","SWA113  ","United States",1679397462,1679397462,-77.4,39.0413,7642.86,!1,197.47,247.64,13.98,null,7620,"2166",!1,0],["010204","MSR915  ","Egypt",1679397449,1679397449,54.4967,24.6702,2415.54,!1,132.89,302.03,9.1,null,2407.92,null,!1,0],["a7e276","NKS3345 ","United States",1679397462,1679397462,-82.5669,28.4118,4305.3,!1,181.62,355.61,13.33,null,4465.32,"6666",!1,0],["010208","MSR738  ","Egypt",1679397461,1679397462,28.9135,40.8233,5684.52,!1,217.99,176.62,12.35,null,5791.2,null,!1,0],["86ef4a","ANA897  ","Japan",1679397462,1679397462,129.872,33.2929,12184.38,!1,189.18,244.9,0,null,12496.8,"3733",!1,0],["010207","MSR731  ","Egypt",1679397462,1679397462,24.6443,40.1067,11582.4,!1,226.08,330.11,0,null,11650.98,"6441",!1,0],["a3b101","N337NE  ","United States",1679397462,1679397462,-70.5162,41.9728,335.28,!1,72.97,65.42,-.33,null,388.62,null,!1,0],["01022d","MSC2970 ","Egypt",1679397462,1679397462,12.5192,50.5034,10965.18,!1,205.18,326.35,0,null,10988.04,"3550",!1,0],["a5174f","N427TF  ","United States",1679397459,1679397459,-89.3269,43.1398,null,!0,0,180,null,null,null,null,!1,0],["aca3d1","SWA3    ","United States",1679397462,1679397463,-96.6757,32.8082,1188.72,!1,119.05,317.28,0,null,1188.72,null,!1,0],["01022e","MSC2942 ","Egypt",1679397457,1679397459,19.3451,43.572,10972.8,!1,231.01,315.63,0,null,10995.66,null,!1,0],["aa0e18","N747RX  ","United States",1679397462,1679397462,-10.4258,43.6477,14325.6,!1,225.73,295.51,-.33,null,14523.72,null,!1,0],["ad60b7","JBU2986 ","United States",1679397462,1679397462,-83.132,26.4646,10363.2,!1,202.98,295.2,0,null,10774.68,null,!1,0],["868043","SKY147  ","Japan",1679397271,1679397285,132.5872,34.3909,10972.8,!1,181.13,253.16,0,null,11209.02,null,!1,0],["040087","ETH574  ","Ethiopia",1679397462,1679397462,-84.7516,43.9364,11765.28,!1,228.39,234.63,-11.7,null,11521.44,"0727",!1,0],["33fffb","IAM3126 ","Italy",1679397225,1679397462,35.1992,33.7806,6355.08,!1,148.96,275.95,8.45,null,null,"4437",!1,0],["4b1b17","HBKGT   ","Switzerland",1679397438,1679397438,9.0358,47.1606,525.78,!1,39.65,67.09,-5.2,null,632.46,"7000",!1,0],["71c055","ABL8827 ","Republic of Korea",1679397461,1679397462,126.7756,37.5727,358.14,!1,81.14,313.72,15.28,null,312.42,null,!1,0],["a3b111","DAL2136 ","United States",1679397462,1679397462,-84.6953,37.5461,4754.88,!1,207.52,202.75,.33,null,4808.22,null,!1,0],["3412d3","PVG785P ","Spain",1679397462,1679397462,14.6576,46.0741,1280.16,!1,101.04,36.93,-4.23,null,1371.6,"1000",!1,0],["04008d","ET3710  ","Ethiopia",1679397462,1679397462,24.1257,34.8616,10363.2,!1,217.17,315.1,0,null,10546.08,null,!1,0],["7503b1","AXM374  ","Malaysia",1679397462,1679397462,104.9676,.243,11277.6,!1,226.1,118.84,0,null,12016.74,null,!1,0],["a0d90c","AAL2272 ","United States",1679397460,1679397460,-97.5993,35.3949,null,!0,0,56.25,null,null,null,null,!1,0],["4b1b09","HBKGF   ","Switzerland",1679397462,1679397462,8.2158,46.4253,2712.72,!1,52.43,47.39,-.65,null,2827.02,null,!1,0],["48520a","TRA82V  ","Kingdom of the Netherlands",1679397461,1679397461,4.7657,52.3038,null,!0,4.63,317.81,null,null,null,"5340",!1,0],["484b32","KLM82K  ","Kingdom of the Netherlands",1679397462,1679397463,4.2822,51.0439,7520.94,!1,233.35,330.55,-6.5,null,7543.8,"1000",!1,0],["71c043","KAL541  ","Republic of Korea",1679397462,1679397462,14.0216,52.4276,10972.8,!1,212.15,351.63,0,null,10942.32,"7363",!1,0],["71c044","KAL274  ","Republic of Korea",1679397461,1679397462,139.7299,36.6985,11582.4,!1,176.24,264.47,0,null,11689.08,"3277",!1,0],["a42ace","JBU1008 ","United States",1679397462,1679397462,-70.9875,41.9139,3550.92,!1,194.75,60.05,0,null,3558.54,"7104",!1,0],["71c042","KAL011  ","Republic of Korea",1679397461,1679397462,126.9245,37.3192,6156.96,!1,219.18,90.94,11.05,null,6263.64,null,!1,0],["346353","VLG924G ","Spain",1679397462,1679397462,1.3083,45.5023,10668,!1,219.05,170.54,.33,null,10774.68,"0521",!1,0],["abd1e3","SWA1523 ","United States",1679397462,1679397462,-82.8392,28.9745,10363.2,!1,217.04,329.36,-.33,null,10698.48,"7132",!1,0],["a146ce","SWA518  ","United States",1679397462,1679397462,-77.5244,38.6593,7033.26,!1,201.33,195.56,4.23,null,7025.64,"6624",!1,0],["4b1a23","EZS34AT ","Switzerland",1679397462,1679397462,-1.8461,41.4742,10965.18,!1,249.09,42.32,0,null,11170.92,null,!1,0],["a0c62d","SWQ9149 ","United States",1679397462,1679397462,-94.8266,29.4159,11277.6,!1,262.42,98.11,0,null,11590.02,"2564",!1,0],["479ede","HKSRSQ9 ","Norway",1679397449,1679397449,4.102,60.6268,982.98,!1,58.58,120.62,.65,null,914.4,null,!1,0],["a2c9bb","UPS806  ","United States",1679397462,1679397462,-105.5511,39.3699,5775.96,!1,227.11,64.36,-4.55,null,5707.38,"7222",!1,0],["a1a9f4","SKW4692 ","United States",1679397462,1679397462,-90.3621,45.8297,8389.62,!1,243.06,129.42,4.88,null,8206.74,null,!1,0],["48ae24","LOT6297 ","Poland",1679397462,1679397462,26.5938,34.8375,11269.98,!1,257.46,145.01,.33,null,11422.38,"4152",!1,0],["48ae25","LOT4N   ","Poland",1679397462,1679397462,12.3209,56.2318,11887.2,!1,262.1,129.34,-.33,null,11788.14,"4560",!1,0],["48ae22","LOT6520 ","Poland",1679397462,1679397462,99.9891,13.9239,6012.18,!1,217.78,277.19,8.45,null,6324.6,"0723",!1,0],["750519","MYM7104 ","Malaysia",1679397462,1679397462,101.7976,3.3764,6057.9,!1,178.63,198.64,-4.55,null,6446.52,"0362",!1,0],["a3e9c5","DAL513  ","United States",1679397462,1679397462,-84.3972,33.7331,2385.06,!1,142.5,270,-12.68,null,2476.5,"2144",!1,0],["add777","N991MK  ","United States",1679397461,1679397462,-74.7936,40.3055,373.38,!1,57.21,52.31,5.53,null,457.2,null,!1,0],["06a2e8","QTR98X  ","Qatar",1679397296,1679397296,16.5689,48.1159,null,!0,4.37,309.38,null,null,null,"2362",!1,0],["06a2e9","QTR93N  ","Qatar",1679397462,1679397462,13.461,46.9704,12192,!1,232.4,300.31,.33,null,12245.34,"5343",!1,0],["06a2e7","QTR12K  ","Qatar",1679397450,1679397461,32.0895,32.6248,11887.2,!1,271.65,140.76,-.33,null,12016.74,"3341",!1,0],["407701","GOCAF   ","United Kingdom",1679397327,1679397327,-1.615,52.1895,152.4,!1,19.85,211.22,-1.3,null,137.16,"7000",!1,0],["06a2e4","QTR32M  ","Qatar",1679397462,1679397462,29.063,35.5657,11879.58,!1,266.34,136.25,0,null,11978.64,"0473",!1,0],["06a2e5","QTR70P  ","Qatar",1679397462,1679397462,18.3648,50.2904,12184.38,!1,242.73,309.32,0,null,12123.42,"3265",!1,0],["a0bf64","N1472W  ","United States",1679397462,1679397462,-88.2212,41.9918,670.56,!1,35.33,196.06,-1.63,null,685.8,"3027",!1,0],["a146f1","SWA296  ","United States",1679397462,1679397462,-80.4559,39.0972,11582.4,!1,203.72,274.05,0,null,11498.58,"3312",!1,0],["a69911","ERH52   ","United States",1679397461,1679397462,-90.3443,29.2127,2049.78,!1,71.67,140.83,0,null,2118.36,null,!1,0],["84b4b7","APJ584  ","Japan",1679397459,1679397459,140.3008,35.8677,662.94,!1,81.55,150.52,-3.9,null,899.16,"2127",!1,0],["3532c8","DUMBO40 ","Spain",1679397462,1679397462,-1.1062,36.9365,7612.38,!1,206.85,91.14,-.33,null,7901.94,"1530",!1,0],["a9cd47","RPA3627 ","United States",1679397462,1679397462,-76.4088,39.4464,10363.2,!1,197.21,226.27,-.33,null,10248.9,"1161",!1,0],["06a2f2","","Qatar",1679397361,1679397404,33.1336,31.3755,11879.58,!1,277.57,147.49,.33,null,12047.22,null,!1,0],["48ae07","LOT6305 ","Poland",1679397462,1679397462,9.8609,50.0979,10965.18,!1,224.12,263.67,0,null,11033.76,"3551",!1,0],["502cc6","BTI7EG  ","Latvia",1679397331,1679397331,23.9659,56.8918,114.3,!1,63.02,5.15,-3.9,null,152.4,"6505",!1,0],["48ae04","LOT4EH  ","Poland",1679397462,1679397462,18.6159,52.7701,9745.98,!1,243.31,137.91,-8.78,null,9677.4,"4266",!1,0],["49d404","ECC102  ","Czech Republic",1679397462,1679397463,11.1277,54.0545,10683.24,!1,154.86,202.05,3.9,null,10645.14,"0753",!1,0],["882da3","KMI201  ","Thailand",1679397162,1679397225,113.6977,22.8141,975.36,!1,89.96,153.14,-5.53,null,944.88,null,!1,0],["4b1a37","EZS41QB ","Switzerland",1679397462,1679397462,-.8035,39.0628,10972.8,!1,240.83,41.8,0,null,11254.74,null,!1,0],["06a2eb","QTR71B  ","Qatar",1679397461,1679397461,31.1442,33.6084,12489.18,!1,266.91,140.79,0,null,12595.86,"3052",!1,0],["06a2ea","QTR39P  ","Qatar",1679397462,1679397462,14.0672,56.4326,11574.78,!1,230.3,333.03,-.33,null,11468.1,"5377",!1,0],["a026e1","RPA4397 ","United States",1679397242,1679397242,-77.0428,38.8549,null,!0,2.06,255.94,null,null,null,"3444",!1,0],["3cc09c","PVD34C  ","Germany",1679397462,1679397462,-2.0091,42.2747,12496.8,!1,209.36,206.25,0,null,12672.06,"2120",!1,0],["add793","AAL1327 ","United States",1679397462,1679397462,-73.8908,40.4631,1973.58,!1,134.63,208.03,13.98,null,2004.06,"1127",!1,0],["a01fee","AAL76   ","United States",1679397462,1679397462,-77.3651,40.8302,10347.96,!1,190.4,280.43,0,null,10195.56,"6457",!1,0],["4b1a1d","EZS74DJ ","Switzerland",1679397462,1679397462,3.4858,48.4308,11582.4,!1,221.09,324.76,.33,null,11643.36,"5727",!1,0],["4b1a1f","EZS46EZ ","Switzerland",1679397462,1679397462,6.0164,46.036,3520.44,!1,185.52,45,-9.75,null,3672.84,"2205",!1,0],["780eb6","UEA1833 ","China",1679397441,1679397445,112.414,23.0626,5836.92,!1,214.86,83.54,-5.85,null,6126.48,null,!1,0],["49d418","TVS4104 ","Czech Republic",1679397458,1679397461,8.016,42.9858,10668,!1,228.96,221.17,0,null,10858.5,"7540",!1,0],["a8b44e","AAL440  ","United States",1679397462,1679397462,-76.7268,39.2024,7315.2,!1,221.54,225.28,0,null,7299.96,"4056",!1,0],["39a0f2","","France",1679397462,1679397462,4.9481,47.3882,457.2,!1,16.02,95.53,0,null,541.02,null,!1,0],["4b1a1b","EZS65UG ","Switzerland",1679397390,1679397390,7.5299,47.5969,null,!0,5.4,64.69,null,null,null,"1000",!1,0],["a5ea9a","SWA1051 ","United States",1679397462,1679397462,-87.7403,41.7454,838.2,!1,111.02,132.93,11.38,null,845.82,"1314",!1,0],["4b1a25","EZS25UT ","Switzerland",1679397462,1679397462,-1.1644,41.7461,10835.64,!1,192.63,213.01,-4.55,null,11064.24,"6746",!1,0],["3b75f7","MANG28  ","France",1679397462,1679397462,1.2036,46.1137,6858,!1,173.98,59.04,-2.6,null,7002.78,"6520",!1,0],["3b75f1","MANG26  ","France",1679397462,1679397462,1.6729,46.3299,7467.6,!1,173.07,56.03,-1.63,null,7612.38,"6526",!1,0],["346316","IBE32ZZ ","Spain",1679397462,1679397462,-3.0095,40.8913,6035.04,!1,212.14,73.81,10.08,null,6233.16,null,!1,0],["ad11eb","ENY3929 ","United States",1679397462,1679397462,-90.6245,43.7157,3977.64,!1,191.28,104.48,6.18,null,3924.3,"2436",!1,0],["780ec4","AMU127  ","China",1679397e3,1679397321,115.425,22.2696,8031.48,!1,168.54,288.32,-1.95,null,8412.48,null,!1,0],["502ccc","THY5QB  ","Latvia",1679397462,1679397462,18.3755,47.1283,9745.98,!1,210.26,299.14,0,null,9685.02,null,!1,0],["502ccf","BTI7FR  ","Latvia",1679397462,1679397462,17.9041,56.1366,10965.18,!1,205.49,246.39,0,null,10828.02,"4332",!1,0],["4b1a66","EZS92KC ","Switzerland",1679397462,1679397462,3.8151,45.2437,10660.38,!1,198.52,239.65,1.95,null,10805.16,"5721",!1,0],["a9841b","N712GK  ","United States",1679397461,1679397462,-81.5369,35.6472,4122.42,!1,176.38,331.04,.65,null,4183.38,null,!1,0],["a1701b","FDX1414 ","United States",1679397462,1679397462,-101.8097,33.0123,10980.42,!1,196.02,255.56,0,null,11193.78,"0367",!0,0],["c0054d","CJT1347 ","Canada",1679397393,1679397393,-84.6467,39.0578,190.5,!1,65.33,180,-2.93,null,281.94,"5561",!1,0],["a85119","JBU539  ","United States",1679397462,1679397462,-80.2861,33.2529,11887.2,!1,262.37,28.07,0,null,12047.22,null,!1,0],["502ce6","BTI12H  ","Latvia",1679397462,1679397462,18.8237,57.6587,9144,!1,203.93,267.4,0,null,9044.94,"4341",!1,0],["40773b","TOM9BN  ","United Kingdom",1679397462,1679397462,-6.5331,42.9882,11277.6,!1,237.17,203.12,0,null,11452.86,null,!1,0],["a0bf90","UAL1936 ","United States",1679397462,1679397462,-79.6206,34.8066,10668,!1,229.29,3.22,0,null,10721.34,"2640",!1,0],["a4462e","DAL2691 ","United States",1679397462,1679397462,-87.837,43.5954,7909.56,!1,229.4,173.43,8.13,null,7757.16,"2620",!1,0],["a8c74e","FDX1545 ","United States",1679397461,1679397461,-111.9927,38.5011,9144,!1,186.49,259.99,0,null,9105.9,null,!1,0],["a791c0","AAL1911 ","United States",1679397462,1679397462,-79.8291,36.5449,6705.6,!1,206.51,216.18,0,null,6751.32,"0512",!1,0],["502cbc","YLMFG   ","Latvia",1679397462,1679397462,8.573,47.1015,1470.66,!1,68.05,308.86,-.33,null,1539.24,"7000",!1,0],["400dae","EZY8201 ","United Kingdom",1679397462,1679397462,-.0912,50.5155,7086.6,!1,208.83,163.4,10.73,null,7078.98,"7303",!1,0],["ab3fc4","AAL49   ","United States",1679397462,1679397462,.9201,51.0058,9471.66,!1,239.17,325.25,7.8,null,9456.42,"5645",!1,0],["40772f","EZY93QD ","United Kingdom",1679397462,1679397462,.9926,50.5423,6156.96,!1,191.8,316.85,-12.35,null,6187.44,"6656",!1,0],["76cee2","SIA335  ","Singapore",1679397462,1679397462,17.6603,46.6188,10058.4,!1,258.89,101,0,null,10058.4,"5575",!1,0],["845daa","ANA540  ","Japan",1679397462,1679397462,138.2625,34.7484,8229.6,!1,270.41,92.84,0,null,8450.58,"2351",!1,0],["502cd7","SWR47GP ","Latvia",1679397459,1679397462,8.557,47.4521,null,!0,2.57,185.62,null,null,null,"3055",!1,0],["40772d","EZY62JH ","United Kingdom",1679397462,1679397462,-.6884,52.7662,11590.02,!1,227.45,329.26,0,null,11536.68,"5705",!1,0],["ab8f36","FDX2    ","United States",1679397462,1679397462,-82.3466,37.5282,11277.6,!1,276.56,71.23,0,null,11231.88,"5607",!1,0],["400db4","EZY29XQ ","United Kingdom",1679397462,1679397462,.0333,51.1785,868.68,!1,70.83,258.69,-4.23,null,883.92,"3530",!1,0],["502cd0","BTI792  ","Latvia",1679397462,1679397462,24.7459,46.3481,10972.8,!1,210.34,313.41,-.33,null,10904.22,"5311",!1,0],["40772e","EZY96RA ","United Kingdom",1679397462,1679397462,-4.2097,55.5378,7665.72,!1,179.23,220.23,6.5,null,7528.56,"2055",!1,0],["407739","TOM436  ","United Kingdom",1679397462,1679397462,3.5957,50.9572,10675.62,!1,241.75,110.56,5.85,null,10652.76,"1165",!1,0],["76cef0","SIA345  ","Singapore",1679397462,1679397462,25.6055,44.7143,10058.4,!1,267.8,114.15,0,null,10050.78,"3067",!1,0],["478090","WIF7V   ","Norway",1679397329,1679397329,11.3717,63.5252,2065.02,!1,117.44,191.11,-9.1,null,1988.82,null,!1,0],["76cef7","SIA305  ","Singapore",1679397462,1679397462,21.3821,47.1294,10058.4,!1,259.92,120.57,0,null,9982.2,"4745",!1,0],["a4ca6e","AWI3931 ","United States",1679397462,1679397462,-82.8691,36.7664,7924.8,!1,192.55,327.88,.33,null,7947.66,null,!1,0],["a24cc0","UAL1559 ","United States",1679397461,1679397462,-80.3923,35.2705,9144,!1,214.88,243.56,0,null,9174.48,"2430",!1,0],["405d11","EZY84YV ","United Kingdom",1679397462,1679397462,-7.109,40.3826,11574.78,!1,240.46,45.43,1.3,null,11780.52,"2220",!1,0],["a78aed","N58501  ","United States",1679397461,1679397462,-81.8197,27.6211,2049.78,!1,88.4,121.19,0,null,2125.98,"4512",!1,0],["7815cd","CDC8054 ","China",null,1679397269,null,null,null,!1,216.73,17.4,-4.88,null,null,null,!1,0],["3ff6f4","DMXPD   ","Germany",1679397422,1679397422,7.1726,51.6491,91.44,!1,26.36,252.98,-.33,null,167.64,null,!1,0],["abf949","SWA3345 ","United States",1679397412,1679397412,-87.7459,41.7885,null,!0,5.92,42.19,null,null,null,"3476",!1,0],["84c7d2","SFJ52   ","Japan",1679397462,1679397462,137.9179,34.3452,10469.88,!1,273.62,59.87,-4.88,null,10721.34,"3461",!1,0],["461e1e","FIN6PZ  ","Finland",1679397462,1679397462,13.4157,53.2697,11582.4,!1,231.42,37.69,-.33,null,11544.3,"4557",!1,0],["461e1f","FIN8PY  ","Finland",1679397462,1679397462,13.7076,53.8402,11887.2,!1,228.4,28.82,0,null,11811,"3010",!1,0],["a61173","EDV5296 ","United States",1679397462,1679397463,-76.0039,40.8638,4930.14,!1,204.99,107.98,-9.43,null,4899.66,"7454",!1,0],["780ef0","CES535  ","China",1679397453,1679397453,113.9303,22.3195,null,!0,6.43,70.31,null,null,null,null,!1,0],["3c4839","BVR101  ","Germany",1679397462,1679397462,11.4282,48.5771,3810,!1,163.98,341.34,10.4,null,3909.06,"6675",!1,0],["461e1a","FIN7NA  ","Finland",1679397462,1679397462,16.3749,56.1049,10972.8,!1,223.44,231.73,0,null,10843.26,"4557",!1,0],["461e1b","FIN8CA  ","Finland",1679397462,1679397462,7.2075,53.7864,10668,!1,250.36,46.5,.33,null,10637.52,"7164",!1,0],["aabf50","SCX3047 ","United States",1679397462,1679397462,-90.8657,29.2511,11582.4,!1,190.99,278.68,0,null,11887.2,"3633",!1,0],["a2064f","CTL10   ","United States",1679397463,1679397463,-85.4962,43.737,2674.62,!1,94.58,154.55,1.3,null,2621.28,null,!1,0],["a30c0c","TMB296  ","United States",1679397462,1679397462,-81.1555,29.5015,7200.9,!1,162.24,169.4,9.75,null,7444.74,null,!1,0],["a3e9b2","DAL1389 ","United States",1679397462,1679397462,-92.3789,34.4154,11285.22,!1,251.39,31.87,-.33,null,11369.04,"3526",!1,0],["ac1951","RPA5699 ","United States",1679397462,1679397462,-73.8724,40.7776,null,!0,5.14,115.31,null,null,null,"3564",!1,0],["49c129","OKUUR14 ","Czech Republic",1679397461,1679397462,14.3192,50.3972,548.64,!1,41.7,2.12,1.63,null,586.74,null,!1,0],["47808c","WIF1BI  ","Norway",1679397461,1679397462,9.2035,60.7237,6705.6,!1,110.44,303.02,0,null,6629.4,"7252",!1,0],["a399de","DAL832  ","United States",1679397462,1679397462,-89.2639,39.7755,9144,!1,214.98,276.73,0,null,9060.18,"4010",!1,0],["0101e7","MSR797  ","Egypt",1679397462,1679397462,23.1239,41.9119,9745.98,!1,234.9,333.6,-.33,null,9822.18,"6473",!1,0],["851186","JAL3118 ","Japan",1679397417,1679397418,139.5344,39.7457,9745.98,!1,214.18,200.09,.33,null,9677.4,null,!1,0],["a3c3e0","UAL1176 ","United States",1679397462,1679397462,-80.9382,41.2447,12192,!1,202.34,277.45,0,null,12031.98,"1761",!1,0],["a3c3e6","UAL2434 ","United States",1679397462,1679397462,-80.3044,41.0077,11559.54,!1,199.08,277.13,0,null,11407.14,"1760",!1,0],["4075f4","TOM4LN  ","United Kingdom",1679397462,1679397462,-.5219,46.161,11582.4,!1,232.16,350.43,.33,null,11658.6,"5557",!1,0],["a17063","JBU331  ","United States",1679397462,1679397462,-70.899,42.3159,1661.16,!1,145.48,75.67,21.13,null,1706.88,null,!1,0],["899121","EVA691  ","Taiwan",1679397460,1679397460,132.3776,32.7568,12192,!1,195.88,238.31,0,null,12512.04,null,!1,0],["a54c60","UAL1778 ","United States",1679397462,1679397462,-76.8408,36.9982,5638.8,!1,179.77,285.95,11.05,null,5692.14,"7045",!1,0],["0101e0","MSR785  ","Egypt",1679397462,1679397462,19.4987,45.9104,12192,!1,238.74,324.12,-.33,null,12184.38,"4563",!1,0],["4075f3","TOM1JR  ","United Kingdom",1679397462,1679397462,11.8415,47.7118,10668,!1,257.63,133.54,0,null,10759.44,"2220",!1,0],["a4200d","DAL1352 ","United States",1679397462,1679397462,-83.4142,34.4669,6416.04,!1,199.78,223.43,-5.2,null,6515.1,"0561",!1,0],["0101e1","RBG754  ","Egypt",1679397461,1679397461,53.7089,25.249,10363.2,!1,180.26,300.15,.33,null,10660.38,null,!1,0],["49d470","OKRSE   ","Czech Republic",1679397462,1679397462,16.934,48.4149,487.68,!1,55.6,177.88,.98,null,556.26,null,!1,0],["c078ba","TSC356  ","Canada",1679397462,1679397462,-74.1034,43.879,8801.1,!1,237.28,178.14,4.55,null,8549.64,"1062",!1,0],["aa763f","AAL2057 ","United States",1679397171,1679397172,-75.2187,39.8761,-91.44,!1,64.89,255.3,-3.25,null,7.62,null,!1,0],["89911c","CAL5225 ","Taiwan",1679397462,1679397462,142.593,39.2614,11269.98,!1,196.49,237.18,.33,null,11186.16,null,!1,0],["a43f7d","FFT207  ","United States",1679397462,1679397462,-81.8471,40.1811,7467.6,!1,204.42,2.45,-5.2,null,7437.12,"6135",!1,0],["780f90","CSH9116 ","China",null,1679397427,null,null,null,!1,194.39,227.14,-5.2,null,null,null,!1,0],["49c12f","OKQAR24 ","Czech Republic",1679397453,1679397453,17.4024,49.2697,320.04,!1,34.53,123.45,-.33,null,350.52,null,!1,0],["461e18","FIN7PR  ","Finland",1679397462,1679397462,15.15,53.9233,11887.2,!1,221.4,16.33,0,null,11795.76,"1744",!1,0],["3ff862","DMCGT   ","Germany",1679397462,1679397463,10.7488,50.9776,388.62,!1,25.72,163.74,-.33,null,502.92,null,!1,0],["a240dc","SWA668  ","United States",1679397461,1679397462,-93.5946,41.2903,4648.2,!1,159.38,146.05,24.71,null,4564.38,null,!1,0],["0101bb","MSR753  ","Egypt",1679397461,1679397461,6.3984,37.4753,11582.4,!1,212.95,288.3,0,null,11841.48,null,!1,0],["0101be","MSR845  ","Egypt",1679397152,1679397152,3.8603,36.9315,1607.82,!1,135.84,278.71,-6.83,null,1729.74,null,!1,0],["ad6d03","SWA3283 ","United States",1679397462,1679397462,-98.9698,34.6958,12199.62,!1,186.08,321.74,0,null,12291.06,"1302",!1,0],["461e14","FIN9DK  ","Finland",1679397402,1679397402,10.0017,53.6331,null,!0,1.54,22.5,null,null,null,null,!1,0],["461e15","FIN545  ","Finland",1679397462,1679397462,24.9398,61.3032,9646.92,!1,171.46,6.72,6.83,null,9296.4,null,!1,0],["502d7e","UAG35L  ","Latvia",1679397462,1679397462,74.6129,28.417,12192,!1,209.25,11.2,0,null,12435.84,null,!1,0],["a93631","DAL744  ","United States",1679397462,1679397462,-81.6471,29.6815,10058.4,!1,226.45,341.32,0,null,10355.58,"3675",!1,0],["4850e6","KLM573  ","Kingdom of the Netherlands",1679397462,1679397462,22.5444,37.1281,11277.6,!1,246.18,152.9,0,null,11384.28,"0171",!1,0],["3d556c","DFEPG   ","Germany",1679397461,1679397462,11.8975,49.8544,2545.08,!1,78.33,218.6,0,null,2621.28,"0033",!1,0],["c05ee5","ACA481  ","Canada",1679397461,1679397461,-79.6145,43.6672,null,!0,11.83,45,null,null,null,"6571",!1,0],["ad24a8","NKS395  ","United States",1679397462,1679397462,-90.9169,39.8274,10972.8,!1,208.4,268.73,0,null,10850.88,"0272",!1,0],["c05ee1","ACA480  ","Canada",1679397462,1679397462,-79.0695,43.7024,5128.26,!1,211.65,71.87,10.4,null,5021.58,"6327",!1,0],["3df2d7","GAM901A ","Germany",1679397462,1679397462,9.0873,52.2797,45.72,!1,0,0,.33,null,114.3,null,!1,0],["a80321","UPS64   ","United States",1679397463,1679397463,-111.7421,53.4094,12192,!1,235.57,304.14,0,null,11757.66,"4332",!1,0],["7c66cf","QFA7313 ","Australia",1679397462,1679397462,153.1908,-27.2359,762,!1,90.43,207.44,-4.88,null,906.78,null,!1,0],["400e5b","EZY878  ","United Kingdom",1679397462,1679397462,-1.2903,50.3984,5791.2,!1,196.36,39.15,0,null,5806.44,null,!1,0],["a1e67b","UAL1731 ","United States",1679397462,1679397462,-107.3367,38.7146,11277.6,!1,277.71,64.19,0,null,11216.64,"2620",!1,0],["4ca44b","IRL280  ","Ireland",1679397462,1679397462,1.1507,53.1732,7010.4,!1,142.86,101.63,0,null,6941.82,"2047",!1,0],["a31f93","N300CQ  ","United States",1679397463,1679397463,-71.7844,22.1177,11894.82,!1,237.07,127.42,0,null,12504.42,null,!1,0],["c05ecf","SYB579  ","Canada",1679397462,1679397462,-73.8435,45.2039,4328.16,!1,166.26,178.05,20.81,null,4221.48,"6542",!1,0],["c05edd","ACA661  ","Canada",1679397327,1679397327,-73.7485,45.4593,null,!0,0,177.19,null,null,null,"3144",!1,0],["899101","CAL5168 ","Taiwan",1679397462,1679397462,139.894,34.4285,10058.4,!1,287.36,59.44,0,null,10264.14,"2622",!1,0],["3df2d4","GAM955A ","Germany",1679397357,1679397357,9.0839,52.2821,60.96,!1,0,0,0,null,114.3,null,!1,0],["aac4bb","SWA862  ","United States",1679397462,1679397463,-85.2985,35.0206,8633.46,!1,183.51,327.25,-12.03,null,8740.14,"7563",!1,0],["3df2d3","GAM925A ","Germany",1679397462,1679397462,9.074,52.3311,228.6,!1,38.24,156.19,.65,null,274.32,null,!1,0],["7c66e4","QFA7351 ","Australia",1679397462,1679397462,153.1173,-27.4002,null,!0,3.6,247.5,null,null,null,"1452",!1,0],["a743be","N5673T  ","United States",1679397285,1679397377,-73.1019,44.6839,845.82,!1,60.7,0,-.98,null,853.44,null,!1,0],["4075bb","EXS4TC  ","United Kingdom",1679397462,1679397462,-3.7956,49.3247,10668,!1,241.71,194.92,0,null,10690.86,"0522",!1,0],["780368","","China",1679397460,1679397460,113.6725,23.3644,2987.04,!1,170.53,64.83,12.35,null,2887.98,null,!1,0],["400e59","EZY29EP ","United Kingdom",1679397462,1679397462,13.1219,51.3893,11590.02,!1,207.97,279.25,0,null,11582.4,"6613",!1,0],["e47fa6","TAM3166 ","Brazil",1679397462,1679397462,-48.5893,-22.0861,10972.8,!1,230.35,313.46,0,null,11597.64,null,!1,0],["781698","CSC3886 ","China",1679397461,1679397462,144.8313,-37.6319,647.7,!1,80.79,353.42,7.48,null,746.76,"1514",!1,0],["a5c99e","GTI8610 ","United States",1679397462,1679397462,-8.3164,50.6729,11277.6,!1,256.22,83.66,0,null,11285.22,null,!1,0],["400e4a","EXS15B  ","United Kingdom",1679397458,1679397460,-4.7287,38.1034,8366.76,!1,175.58,189.1,-8.13,null,8656.32,"7505",!1,0],["44a8a6","JAF4LG  ","Belgium",1679397462,1679397462,3.7676,50.7912,5897.88,!1,209.13,35.49,-16.26,null,5951.22,"1000",!1,0],["899108","CAL916  ","Taiwan",1679397462,1679397462,120.7226,24.6671,4686.3,!1,214.39,41.11,-9.43,null,4914.9,null,!1,0],["c065b7","VN09M   ","Canada",1679397382,1679397383,-97.2518,49.9127,220.98,!1,51.01,138.27,-3.25,null,259.08,null,!1,0],["c078e7","NRL950  ","Canada",1679397462,1679397462,-73.9107,45.789,1722.12,!1,133.74,342.54,12.03,null,1668.78,null,!1,0],["0101db","MSR777  ","Egypt",1679397462,1679397462,12.3361,48.507,11582.4,!1,226.22,301.23,0,null,11635.74,"7543",!1,0],["a18380","EDV5439 ","United States",1679397462,1679397462,-74.6232,40.1148,2926.08,!1,180.99,47.65,-.65,null,2948.94,"7051",!1,0],["0101de","MSR799  ","Egypt",1679397462,1679397462,10.9617,45.2255,11574.78,!1,225.08,293.58,0,null,11689.08,"6630",!1,0],["a0ac92","UCA4316 ","United States",1679397462,1679397462,-77.4102,38.4774,1699.26,!1,136.49,18.91,0,null,1767.84,"4653",!1,0],["899111","CAL5868 ","Taiwan",1679397272,1679397274,100.2174,7.1136,9265.92,!1,255.36,22.38,4.88,null,9829.8,null,!1,0],["899112","CAL5171 ","Taiwan",1679397246,1679397246,-156.2858,59.7243,10972.8,!1,235.64,280.06,-.33,null,10386.06,null,!1,0],["ac04d3","SWA3688 ","United States",1679397462,1679397462,-85.8931,37.9268,10271.76,!1,242.8,164.14,7.8,null,10210.8,"2167",!1,0],["c05ed8","ACA400  ","Canada",1679397462,1679397462,-79.6367,43.693,null,!0,20.58,225,null,null,null,"6304",!1,0],["863188","ANA529  ","Japan",1679397462,1679397462,134.7767,34.6621,7391.4,!1,160.48,257.03,10.4,null,7566.66,null,!1,0],["a4463e","DAL2390 ","United States",1679397462,1679397462,-86.2319,31.2949,7421.88,!1,227.54,20.24,9.1,null,7604.76,"2615",!1,0],["a13501","AAL2889 ","United States",1679397459,1679397459,-73.8744,40.7754,null,!0,0,75.94,null,null,null,null,!1,0],["3b75ee","MET52   ","France",1679397460,1679397460,-.692,46.2571,2682.24,!1,66.27,132.48,52.67,null,2529.84,null,!1,0],["0101a7","NIA191  ","Egypt",1679397462,1679397462,30.7972,36.8395,11582.4,!1,207.4,358.44,.33,null,11658.6,"6176",!1,0],["4ba9ab","THY8NU  ","Turkey",1679397461,1679397461,29.8726,40.8684,6126.48,!1,163.08,270.18,-4.23,null,6233.16,null,!1,0],["a480f2","N39FE   ","United States",1679397462,1679397462,-94.9181,32.9377,11148.06,!1,278.49,83.64,4.88,null,11315.7,null,!1,0],["851142","JAL95   ","Japan",1679397462,1679397462,139.606,35.757,6515.1,!1,179.29,281.92,14.31,null,6637.02,"3251",!1,0],["497cd5","SPRTN01 ","Portugal",1679397199,1679397199,-8.9593,39.1026,144.78,!1,29.25,129.29,0,null,266.7,null,!1,0],["a9c158","AVA4827 ","United States",1679397297,1679397297,-74.1529,4.7116,null,!0,4.89,306.56,null,null,null,null,!1,0],["aab1af","SWA336  ","United States",1679397460,1679397462,-97.6057,35.3954,396.24,!1,66.88,180,1.3,null,365.76,null,!1,0],["ab7ae4","DAL2    ","United States",1679397462,1679397462,-9.7081,54.1772,10363.2,!1,201.04,303.2,0,null,10279.38,"2044",!1,0],["39a277","FHITX   ","France",1679397462,1679397462,-.7174,43.3671,8724.9,!1,252.93,95.95,10.73,null,8884.92,"1000",!1,0],["a62fd1","SWA3677 ","United States",1679397462,1679397462,-77.6592,36.9551,12496.8,!1,258.56,37.08,0,null,12504.42,"2031",!1,0],["a85185","NKS1286 ","United States",1679397462,1679397462,-90.8721,41.2998,10363.2,!1,209.15,246.21,0,null,10226.04,"6260",!1,0],["3b75fe","MAF31   ","France",1679397415,1679397416,1.86,45.0667,2026.92,!1,159.72,193.41,-16.58,null,2156.46,"1201",!1,0],["3b75fb","MAF32   ","France",1679397417,1679397418,1.8619,45.0663,1988.82,!1,159.82,191.89,-16.26,null,2118.36,"1202",!1,0],["3b75fd","MANG27  ","France",1679397459,1679397460,1.3817,46.2032,7162.8,!1,170.26,62.66,.33,null,7299.96,"6527",!1,0],["405bfe","BAW104  ","United Kingdom",1679397452,1679397457,23.4492,45.5054,11582.4,!1,233.11,300.36,0,null,11536.68,"7231",!1,0],["3d5535","DFEND   ","Germany",1679397462,1679397462,.3693,51.4664,1211.58,!1,93.58,256.65,-4.88,null,1219.2,"2520",!1,0],["a55319","N442LV  ","United States",1679397462,1679397462,-96.0215,35.9597,1783.08,!1,90.79,211.8,11.05,null,1767.84,"1141",!1,0],["4ba9d3","THY82M  ","Turkey",1679397462,1679397462,24.7026,45.0203,11887.2,!1,243.13,126.48,0,null,11841.48,"2253",!1,0],["4ba9d4","THY7CG  ","Turkey",1679397462,1679397462,2.7146,49.1087,3863.34,!1,185.18,107.13,10.4,null,3924.3,"5640",!1,0],["3c4894","EWG50F  ","Germany",1679397462,1679397462,10.9596,46.0219,10668,!1,239.27,164.41,0,null,10767.06,"1000",!1,0],["405bfd","BAW17PA ","United Kingdom",1679397240,1679397240,-10.3068,49.2623,11582.4,!1,224.42,250.03,0,null,11628.12,"4623",!1,0],["405bfc","BAW65   ","United Kingdom",1679397462,1679397462,6.8088,49.7865,11277.6,!1,249.39,128.38,0,null,11315.7,"5207",!1,0],["06a2b8","QTR701  ","Qatar",1679397462,1679397462,15.7049,46.4144,9753.6,!1,224.1,315.74,0,null,9799.32,"2236",!1,0],["c05ea2","ACA295  ","Canada",1679397461,1679397462,-97.7008,50.0684,3901.44,!1,184.26,274.64,16.26,null,3741.42,null,!1,0],["06a2b5","QTR38A  ","Qatar",1679397462,1679397462,51.4228,25.8543,5013.96,!1,187.43,319.01,11.38,null,5059.68,null,!1,0],["06a2b3","QTR2U   ","Qatar",1679397462,1679397462,28.1297,43.5833,11277.6,!1,259.26,137.57,0,null,11269.98,"4516",!0,0],["06a2b1","QTR20F  ","Qatar",1679397442,1679397447,32.1747,41.6856,11277.6,!1,255.9,110.48,0,null,11285.22,"4724",!1,0],["06a2b0","QTR6Y   ","Qatar",1679397432,1679397445,22.8222,44.4728,9753.6,!1,243.7,346.7,0,null,9784.08,"1164",!1,0],["ac9ae4","WIG8464 ","United States",1679397461,1679397462,-79.0974,40.6917,2659.38,!1,99.71,80.2,0,null,2682.24,null,!1,0],["e486c3","TAM3352 ","Brazil",1679397461,1679397461,-46.6786,-23.6417,4930.14,!1,189.43,245.11,8.78,null,4998.72,null,!1,0],["46bc4a","AEE985  ","Greece",1679397462,1679397462,21.9387,41.4153,5181.6,!1,125.94,139.8,0,null,5250.18,null,!1,0],["c078c2","TSC326  ","Canada",1679397462,1679397462,-84.0606,40.5484,12192,!1,224.32,206.27,0,null,12077.7,"2226",!1,0],["46bc4b","AEE284  ","Greece",1679397462,1679397462,23.7669,37.6956,2834.64,!1,100.61,290.66,2.93,null,2918.46,null,!1,0],["a26801","SKW4606 ","United States",1679397462,1679397462,-86.8174,42.1236,7856.22,!1,219.5,86.78,7.48,null,7772.4,"3253",!1,0],["abe4db","SWA3176 ","United States",1679397462,1679397462,-88.488,41.394,1996.44,!1,143.28,59.11,-5.53,null,2011.68,"2611",!1,0],["c078ac","TSC111  ","Canada",1679397462,1679397462,-10.6155,51.2802,11582.4,!1,215.18,286.53,0,null,11559.54,"5602",!1,0],["ab2169","UAL1965 ","United States",1679397462,1679397462,-82.4181,34.5887,10965.18,!1,191.77,235.71,0,null,11049,"5603",!1,0],["06a2c8","QTR13V  ","Qatar",1679397461,1679397462,48.4261,29.2805,9753.6,!1,218.88,325.82,0,null,9738.36,null,!1,0],["ad6116","AAL648  ","United States",1679397462,1679397462,-92.5347,34.5846,10972.8,!1,180.43,252.24,0,null,11056.62,"7740",!1,0],["a7ef08","SKW3534 ","United States",1679397462,1679397462,-87.9302,42.0446,1615.44,!1,143.72,59.21,13,null,1630.68,"6270",!1,0],["0101b7","MSR757  ","Egypt",1679397462,1679397462,17.4253,46.7748,11582.4,!1,217.81,308.58,-.33,null,11559.54,"7241",!1,0],["4b8f44","TCCZD   ","Turkey",1679397462,1679397462,25.6257,42.7013,12595.86,!1,265.33,139.64,-3.9,null,12580.62,null,!1,0],["a2e045","UAL686  ","United States",1679397462,1679397462,-81.9785,41.3419,10972.8,!1,200.68,277.22,0,null,10812.78,"2746",!1,0],["acf1a3","ENY3674 ","United States",1679397462,1679397462,-89.36,41.2526,6225.54,!1,217.32,61.43,-7.48,null,6172.2,"1733",!1,0],["abd1c5","SWA3564 ","United States",1679397462,1679397462,-81.378,30.1933,12473.94,!1,231.29,357.07,2.28,null,12771.12,null,!1,0],["e47fe2","PRLCR   ","Brazil",1679397462,1679397462,-42.0042,-23.3626,441.96,!1,74.28,352.04,0,null,502.92,null,!1,0],["46bc50","OAL161  ","Greece",1679397462,1679397462,24.0121,38.1334,1935.48,!1,126.64,92.1,-10.4,null,2004.06,"6750",!1,0],["a55b7a","SWA3225 ","United States",1679397462,1679397462,-90.7732,31.7922,10972.8,!1,195.42,250.47,.33,null,11209.02,null,!1,0],["8511a8","JAL209  ","Japan",1679397462,1679397462,136.9666,34.7405,1158.24,!1,101.78,220.7,-3.9,null,1234.44,"2477",!1,0],["a67b75","JIA5570 ","United States",1679397455,1679397462,-80.8821,32.4277,3947.16,!1,186.95,37.06,13.33,null,4061.46,null,!1,0],["33fd37","","Italy",1679397430,1679397445,12.2418,44.103,419.1,!1,47.22,60.64,.33,null,510.54,null,!1,0],["4ba8ca","THY5YG  ","Turkey",1679397462,1679397462,28.6703,59.5599,7078.98,!1,200.3,250.49,8.13,null,6835.14,null,!1,0],["a68e8b","VOI953  ","United States",1679397462,1679397462,-115.919,32.7592,11277.6,!1,259.61,132.51,-.33,null,11475.72,"3234",!1,0],["4b8e46","PGT802  ","Turkey",1679397462,1679397462,6.4086,50.1906,9456.42,!1,235.68,111.24,1.3,null,9525,"0103",!1,0],["a097cc","UAL1529 ","United States",1679397456,1679397456,-74.1702,40.69,-121.92,!1,57.75,205.88,0,null,-22.86,"1537",!1,0],["7504b5","AXM6130 ","Malaysia",1679397462,1679397462,101.4364,2.7665,5151.12,!1,197.31,319.12,9.43,null,5448.3,null,!1,0],["a097ce","UAL273  ","United States",1679397461,1679397462,-86.797,41.6925,3604.26,!1,186.4,352.23,-.65,null,3589.02,"0556",!1,0],["4ba8f5","THY918  ","Turkey",1679397166,1679397436,30.9398,33.3754,10668,!1,241.41,178.05,-.33,null,10812.78,"1640",!1,0],["40615b","BAW7PI  ","United Kingdom",1679397462,1679397462,7.2771,57.1447,11590.02,!1,211.45,213.69,.33,null,11483.34,"1171",!1,0],["aa735a","SWA4210 ","United States",1679397462,1679397462,-94.9949,33.6258,12192,!1,190.03,309.51,0,null,12298.68,"4115",!1,0],["4ba8f3","THY2CR  ","Turkey",1679397461,1679397462,16.2384,47.3932,10972.8,!1,204.89,304.05,0,null,10957.56,"3237",!1,0],["acfc74","FDX826  ","United States",1679397462,1679397462,-85.1482,36.9874,10972.8,!1,214.88,235.93,0,null,10972.8,"6744",!1,0],["a44262","DAL1033 ","United States",1679397462,1679397462,-74.06,40.6865,3208.02,!1,161.54,207.71,3.9,null,3223.26,"2601",!1,0],["400aff","BAW88L  ","United Kingdom",1679397462,1679397462,5.719,50.3054,11269.98,!1,237,124.21,-.33,null,11269.98,"0527",!1,0],["400afe","BAW991  ","United Kingdom",1679397462,1679397462,4.1127,51.9346,11574.78,!1,219.72,262.06,0,null,11536.68,"0366",!1,0],["3b752c","MET51   ","France",1679397460,1679397460,-.6915,46.2592,2766.06,!1,82.83,90,29.26,null,2781.3,null,!1,0],["abdc78","SWA2374 ","United States",1679397462,1679397463,-96.3161,32.7989,4922.52,!1,213.7,82.67,15.93,null,4998.72,null,!1,0],["ab805a","FDX5434 ","United States",1679397462,1679397462,-93.403,39.7759,9753.6,!1,231.65,327.79,0,null,9639.3,"1567",!1,0],["4b820f","ESEN07  ","Turkey",1679397462,1679397462,27.0636,40.2838,3558.54,!1,165.65,269.64,-21.46,null,3794.76,"0774",!1,0],["aa7f8d","CKS232  ","United States",1679397462,1679397462,-90.6939,39.4872,9753.6,!1,221.92,267.61,0,null,9662.16,"4040",!1,0],["406d8e","EZY41GP ","United Kingdom",1679397206,1679397206,-4.7284,36.7919,1158.24,!1,98.21,148.06,-5.85,null,1295.4,"2705",!1,0],["a9eeb6","RPA3606 ","United States",1679397396,1679397396,-73.7376,45.4653,null,!0,5.4,120.94,null,null,null,null,!1,0],["84b794","ANA854  ","Japan",1679397462,1679397462,139.5885,34.4601,4229.1,!1,176.07,33.32,-5.85,null,4366.26,"6275",!1,0],["406d92","EZY54EA ","United Kingdom",1679397461,1679397462,-4.0249,45.2933,10972.8,!1,215.59,4.11,0,null,11087.1,null,!1,0],["4ba8d5","THY92L  ","Turkey",1679397461,1679397461,30.9929,35.6018,10972.8,!1,188.25,342.51,0,null,11079.48,"2357",!1,0],["406d90","EZY9326 ","United Kingdom",1679397463,1679397463,-4.4589,53.9145,4572,!1,172.34,115.65,.33,null,4518.66,"5470",!1,0],["406d95","EZY53YT ","United Kingdom",1679397462,1679397462,.3763,40.0123,9677.4,!1,238.07,13.5,3.58,null,9966.96,null,!1,0],["aa600a","JBU2197 ","United States",1679397462,1679397462,-75.218,37.592,9753.6,!1,212.51,212.34,0,null,9738.36,"1325",!1,0],["a25d36","SWA3196 ","United States",1679397344,1679397344,-82.5371,27.9858,null,!0,11.83,92.81,null,null,null,"7125",!1,0],["846748","IBX76   ","Japan",1679397461,1679397462,135.4628,34.7671,144.78,!1,73.85,315.28,-3.25,null,190.5,null,!1,0],["390d25","FGDJF   ","France",1679397331,1679397331,2.7008,50.6439,304.8,!1,46.37,310.05,-.33,null,304.8,null,!1,0],["48c58b","SPRMK   ","Poland",1679397462,1679397462,21.398,52.1582,274.32,!1,35.06,22.43,2.6,null,320.04,null,!1,0],["a645df","JBU562  ","United States",1679397461,1679397461,-67.5673,32.9464,10972.8,!1,252.6,.35,0,null,11315.7,null,!1,0],["78041c","AMU225  ","China",1679397390,1679397390,115.2944,22.2404,7673.34,!1,182.7,215.26,-4.23,null,8991.6,null,!1,0],["a214b3","SWA1226 ","United States",1679397462,1679397462,-81.2837,33.5288,12192,!1,214.07,203.36,0,null,12321.54,"1550",!1,0],["a071c8","DAL422  ","United States",1679397462,1679397462,-97.8547,30.438,3756.66,!1,166.87,321.26,11.7,null,3848.1,"2426",!1,0],["ad2384","DAL2082 ","United States",1679397311,1679397311,-83.3248,42.2324,205.74,!1,60.77,208.3,-2.93,null,297.18,"3672",!1,0],["a39723","EDV5074 ","United States",1679397462,1679397463,-77.3052,40.8219,9753.6,!1,196.16,280.43,0,null,9608.82,"2671",!1,0],["71ba13","JJA2261 ","Republic of Korea",1679397462,1679397462,121.475,23.2383,10965.18,!1,213.22,204.22,0,null,11521.44,null,!1,0],["71ba10","ABL143  ","Republic of Korea",1679397439,1679397439,129.9159,34.1462,4876.8,!1,204.88,328.35,0,null,5021.58,null,!1,0],["a097e9","UAL748  ","United States",1679397462,1679397463,-84.4169,38.9466,10972.8,!1,216.54,328.01,0,null,10896.6,"2410",!1,0],["008e2f","FJW8224 ","South Africa",1679397237,1679397237,28.1888,-25.5709,7528.56,!1,177.33,18.96,5.85,null,7924.8,null,!1,0],["a83876","JBU2157 ","United States",1679397462,1679397462,-79.5442,42.4246,11574.78,!1,200.9,272.94,0,null,11384.28,"3036",!1,0],["aa7f5e","AAL995  ","United States",1679397462,1679397462,-46.3026,-21.9113,10287,!1,215.04,145.63,-8.78,null,10881.36,null,!1,0],["7c68cc","QFA1915 ","Australia",1679397426,1679397426,149.1924,-35.3046,null,!0,10.29,180,null,null,null,"1156",!1,0],["48c586","SPSMG   ","Poland",1679397462,1679397462,16.8009,52.4256,213.36,!1,33.83,278.75,4.23,null,297.18,null,!1,0],["48c585","SPSMF   ","Poland",1679397462,1679397462,16.8589,52.4147,152.4,!1,36.13,289.98,-1.95,null,228.6,null,!1,0],["48c582","SPSMC   ","Poland",1679397461,1679397462,16.7528,52.6335,426.72,!1,48.36,359.39,.98,null,510.54,null,!1,0],["48c583","SPSMD   ","Poland",1679397461,1679397461,15.928,52.3051,365.76,!1,46.06,200.26,-.98,null,457.2,"7000",!1,0],["aa7315","SWA978  ","United States",1679397462,1679397462,-83.8981,40.2859,12496.8,!1,263.94,90.89,0,null,12359.64,"6066",!1,0],["71ba07","KAL071  ","Republic of Korea",1679397460,1679397461,142.3635,36.9017,11277.6,!1,307.22,85.1,-.33,null,11353.8,"7103",!1,0],["7c68c9","QFA1953 ","Australia",1679397462,1679397462,138.4628,-34.7975,2415.54,!1,152.8,89.23,-7.15,null,2575.56,"1140",!1,0],["a6cb0d","GJS4432 ","United States",1679397462,1679397462,-81.3523,43.842,11590.02,!1,204.55,244.21,.33,null,11330.94,"0610",!1,0],["a81205","SKW5478 ","United States",1679397462,1679397462,-79.7848,43.0254,10363.2,!1,189.05,272.96,.33,null,10134.6,"1426",!1,0],["aa2fe5","N75566  ","United States",1679397462,1679397462,-76.4127,40.4082,914.4,!1,70.22,135.89,.98,null,960.12,null,!1,0],["a68e7c","AAL1004 ","United States",1679397462,1679397462,-73.5588,41.3004,9144,!1,214.27,225.68,0,null,8968.74,"7320",!1,0],["84b750","ANA321  ","Japan",1679397403,1679397403,137.3169,36.7366,4213.86,!1,143.01,299.05,-5.53,null,4411.98,"0442",!1,0],["7c68d3","SH161   ","Australia",1679397461,1679397461,152.0055,-25.9489,6400.8,!1,136.77,139.12,0,null,6850.38,null,!1,0],["7815dc","CQN2066 ","China",1679397458,1679397458,114.4841,23.8405,7688.58,!1,232.84,37.1,7.8,null,7688.58,null,!1,0],["347287","IBE31WR ","Spain",1679397460,1679397461,-3.5384,40.4478,662.94,!1,74.4,322.02,-3.58,null,777.24,"0515",!1,0],["a214de","ENY3622 ","United States",1679397460,1679397460,-92.1123,30.9876,8061.96,!1,188.67,297.26,6.83,null,8275.32,null,!1,0],["7802af","CSN3878 ","China",null,1679397353,null,null,null,!1,141.54,199.09,6.83,null,null,null,!1,0],["abb9b2","SWA2747 ","United States",1679397462,1679397462,-80.9016,35.031,12496.8,!1,246.41,15.75,0,null,12588.24,"1464",!1,0],["8991be","CAL772  ","Taiwan",1679397462,1679397462,120.0904,13.7475,12496.8,!1,223.61,5.02,0,null,13258.8,null,!1,0],["46d2ef","SEH4ML  ","Greece",1679397462,1679397462,24.4449,37.7212,3680.46,!1,130.44,325.12,-7.15,null,3764.28,"1450",!1,0],["a51425","RPA4413 ","United States",1679397304,1679397304,-78.7949,35.8681,null,!0,8.75,225,null,null,null,null,!1,0],["86e488","ANA8516 ","Japan",1679397461,1679397461,137.9987,33.9414,10668,!1,275.95,73.76,0,null,10927.08,"4364",!1,0],["c07717","CRQ5156 ","Canada",1679397461,1679397462,-74.0342,46.6248,6423.66,!1,126.88,351.61,0,null,6141.72,"5220",!1,0],["8991d7","SJX742  ","Taiwan",1679397054,1679397462,121.2042,25.189,1478.28,!1,64.23,229.55,-3.58,null,1455.42,null,!1,0],["86dd90","JAL139  ","Japan",1679397462,1679397462,135.5353,34.7032,563.88,!1,84.76,315.25,-4.55,null,632.46,"2346",!1,0],["8466a0","JJP118  ","Japan",1679397450,1679397453,140.6813,36.6968,5082.54,!1,174.78,196.94,-10.4,null,5189.22,null,!1,0],["3c825b","","Germany",1679397319,1679397377,9.2032,48.6905,null,!0,9.26,73.12,null,null,null,null,!1,0],["383ada","FWWGY   ","France",1679397462,1679397462,104.8934,18.9991,13235.94,!1,248.64,109.71,-5.2,null,13860.78,null,!1,0],["aae960","AAL1169 ","United States",1679397461,1679397462,-81.2797,42.7932,9235.44,!1,208.41,240.9,7.48,null,9067.8,"0507",!1,0],["49d1c6","AIZ743  ","Czech Republic",1679397462,1679397462,22.5394,38.1672,11582.4,!1,212.04,304.42,0,null,11673.84,"4154",!1,0],["aae94c","MRA604  ","United States",1679397452,1679397452,-84.6392,43.0472,2194.56,!1,67.24,350.75,4.23,null,2179.32,null,!1,0],["4ca2c9","EIN34J  ","Ireland",1679397462,1679397462,-.3932,51.2081,10965.18,!1,212.31,298.99,-.33,null,10934.7,"3011",!1,0],["a93280","N692DS  ","United States",1679397462,1679397462,6.1023,46.1058,2110.74,!1,81.89,46.78,-.65,null,2179.32,null,!1,0],["adc17f","SWQ594  ","United States",1679397462,1679397462,-92.2676,40.1032,10972.8,!1,205.4,277.34,-.33,null,10858.5,"6612",!1,0],["4ca2c0","RYR3AA  ","Ireland",1679397462,1679397462,2.5307,48.5192,11193.78,!1,218.1,201.3,4.55,null,11216.64,"7136",!1,0],["4407c4","GAC757B ","Austria",1679397462,1679397462,.5846,51.6112,5295.9,!1,144.48,26.2,9.43,null,5288.28,"4625",!1,0],["4ca2ad","RYR8HJ  ","Ireland",1679397462,1679397462,-3.4971,50.0293,10058.4,!1,242.06,147.76,0,null,10066.02,"6324",!1,0],["43e7a0","MARTY   ","United Kingdom",1679397462,1679397462,7.9054,53.3679,6385.56,!1,152.94,66.19,-5.2,null,6438.9,"7153",!1,0],["8991b1","CAL105  ","Taiwan",1679397431,1679397438,133.8372,33.5515,10972.8,!1,199.37,241.32,0,null,11285.22,"3212",!1,0],["485b42","KLM757  ","Kingdom of the Netherlands",1679397462,1679397462,-2.6575,51.2109,10363.2,!1,231.99,252.05,.33,null,10347.96,"2131",!1,0],["ad8fa4","JBU162  ","United States",1679397462,1679397462,-78.3556,41.8359,10660.38,!1,264.3,99.3,-.33,null,10469.88,"3230",!1,0],["ad493b","SWA2223 ","United States",1679397462,1679397462,-94.0106,34.061,11529.06,!1,183.51,248.11,-6.5,null,11650.98,"4066",!1,0],["4ca2d5","RYR9AL  ","Ireland",1679397462,1679397462,4.4125,51.6576,11582.4,!1,212.52,285.01,.33,null,11544.3,"0612",!1,0],["a19dff","RPA5710 ","United States",1679397462,1679397462,-70.9169,42.2147,4701.54,!1,150.43,258.96,12.68,null,4655.82,null,!1,0],["c00da8","FLE821  ","Canada",1679397462,1679397462,-81.0966,44.5443,9974.58,!1,193.69,312.63,7.48,null,9700.26,"6325",!1,0],["406d10","GSNSE   ","United Kingdom",1679397462,1679397462,-.1545,53.3581,601.98,!1,68.49,124.29,-.65,null,579.12,"1771",!1,0],["4b8299","MARTI80 ","Turkey",1679397462,1679397462,29.8548,40.3457,4572,!1,127.4,184.17,.33,null,4617.72,null,!1,0],["8991aa","CAL704  ","Taiwan",1679397462,1679397462,121.0448,15.2743,5463.54,!1,201.02,354.57,7.8,null,5829.3,null,!1,0],["7c431c","JTE7484 ","Australia",1679397227,1679397227,151.1752,-33.939,null,!0,6.17,255.94,null,null,null,"4046",!1,0],["a50126","UPS952  ","United States",1679397462,1679397462,-121.1649,38.6302,815.34,!1,95.39,234,-5.2,null,693.42,null,!1,0],["ad1c16","DAL2314 ","United States",1679397462,1679397462,-88.1276,42.3017,8442.96,!1,226.78,172.44,7.48,null,8351.52,"1326",!1,0],["aa1e08","ATN305  ","United States",1679397421,1679397457,-77.2158,34.2237,11003.28,!1,216.06,186.84,0,null,11087.1,"3652",!1,0],["7504e3","9MDON   ","Malaysia",1679397462,1679397462,116.0465,5.9756,358.14,!1,46.71,36.49,.33,null,388.62,null,!1,0],["aad63e","FDX1779 ","United States",1679397462,1679397462,-112.8871,45.5043,10370.82,!1,227.9,270.13,0,null,10035.54,null,!1,0],["ac297c","IRO8970 ","United States",1679397458,1679397458,-88.1226,44.9847,2362.2,!1,86.98,353.55,0,null,2308.86,null,!1,0],["3b7568","CLIM111 ","France",1679397462,1679397462,3.2212,45.5409,6751.32,!1,204.76,325.75,-9.1,null,6926.58,"6541",!1,0],["405a47","BAW791G ","United Kingdom",1679397462,1679397462,8.8278,54.9497,11582.4,!1,206.67,226.21,0,null,11506.2,"7674",!1,0],["405a49","BAW12P  ","United Kingdom",1679397462,1679397462,4.6418,52.1296,11285.22,!1,244.4,88.91,.33,null,11239.5,"2034",!1,0],["405a48","BAW75M  ","United Kingdom",1679397462,1679397462,8.7029,45.6624,769.62,!1,95.94,332.89,9.43,null,853.44,"0473",!1,0],["406d79","BAW26E  ","United Kingdom",1679397461,1679397461,-9.946,56.9764,10972.8,!1,239.84,307.07,-.33,null,10789.92,"7727",!1,0],["aabc3d","FDX1757 ","United States",1679397449,1679397453,-90.2639,29.9895,null,!0,0,286.88,null,null,null,"6630",!1,0],["47a531","NOZ2JC  ","Norway",1679397461,1679397461,10.6552,62.128,8458.2,!1,239.84,181.72,6.5,null,8267.7,"0736",!1,0],["aac337","AAL199  ","United States",1679397462,1679397462,-5.3614,50.4027,10363.2,!1,218.95,311.86,0,null,10401.3,"5754",!1,0],["aa739e","UAL1920 ","United States",1679397459,1679397459,-74.178,40.682,-114.3,!0,5.14,25.31,null,null,null,"3422",!1,0],["adcca3","N989AR  ","United States",1679397462,1679397462,21.9221,37.4989,12496.8,!1,254.36,148.82,0,null,12580.62,"2702",!1,0],["0acaaa","AVA9218 ","Colombia",1679397459,1679397459,-74.4655,4.8743,3924.3,!1,149.34,92.57,-4.88,null,4168.14,null,!1,0],["47a50d","NSZ1RP  ","Norway",1679397462,1679397462,8.1801,53.8951,11582.4,!1,219.29,220.53,0,null,11529.06,"0733",!1,0],["4b1a00","SAZ52   ","Switzerland",1679397462,1679397462,12.6555,45.6081,12192,!1,213.4,323.63,0,null,12268.2,"1000",!1,0],["adcca0","AAL1689 ","United States",1679397462,1679397462,-86.8812,32.8135,11277.6,!1,257.02,139.87,0,null,11445.24,"5624",!1,0],["acfc26","NCR575  ","United States",1679397462,1679397462,-149.9884,61.1731,null,!0,3.09,160.31,null,null,null,"7256",!1,0],["a01186","N103TD  ","United States",1679397462,1679397462,-81.745,34.4103,9448.8,!1,261.93,65.15,-.33,null,9547.86,"3116",!1,0],["ac0f6c","SWA3305 ","United States",1679397462,1679397462,-88.0039,41.9856,944.88,!1,109.14,267.84,10.4,null,952.5,"6276",!1,0],["347216","ARK401B ","Spain",1679397462,1679397462,2.2048,41.832,2438.4,!1,66.59,69.18,-.33,null,2583.18,null,!1,0],["406d4d","VIR156T ","United Kingdom",1679397461,1679397462,-58.8586,51.1617,11887.2,!1,280.65,75.02,0,null,11536.68,"7256",!1,0],["a992cf","SKW4979 ","United States",1679397460,1679397462,-93.887,32.3746,8366.76,!1,194.78,264.7,-7.8,null,8564.88,null,!1,0],["47a518","NOZ15U  ","Norway",1679397462,1679397462,.2667,51.4598,4114.8,!1,185.9,23.66,18.86,null,4084.32,"4702",!1,0],["ab8031","DAL1289 ","United States",1679397420,1679397420,-84.4535,33.6318,228.6,!1,73.05,90,-3.58,null,350.52,"5545",!1,0],["abef79","SWA1496 ","United States",1679397462,1679397462,-85.7188,36.6012,4968.24,!1,189.08,239.6,-13.98,null,5013.96,"6772",!1,0],["aa737d","SWA3118 ","United States",1679397462,1679397463,-85.6169,38.5529,10668,!1,226.49,350.32,0,null,10568.94,"7147",!1,0],["a9942e","AAL382P ","United States",1679397461,1679397462,-98.1047,32.8645,7688.58,!1,206.42,285.32,4.88,null,7825.74,null,!1,0],["717cfa","KNE638  ","Saudi Arabia",1679397373,1679397384,49.4869,22.5621,10972.8,!1,179.98,275.91,0,null,11407.14,null,!1,0],["a8c439","PDT6069 ","United States",1679397395,1679397395,-75.2283,39.8721,-121.92,!1,67.08,339.34,-4.23,null,0,"6225",!1,0],["4ba954","THY9    ","Turkey",1679397460,1679397461,28.8221,41.3833,998.22,!1,130.51,14.15,12.03,null,1051.56,null,!1,0],["4ba953","THY6    ","Turkey",1679397462,1679397462,10.0742,49.7264,11277.6,!1,263.73,113.81,0,null,11330.94,"2222",!1,0],["424b6b","MLWCW   ","United Kingdom",1679397462,1679397462,-7.1099,39.9528,12489.18,!1,252.55,192.11,0,null,12717.78,null,!1,0],["4ba952","THY801  ","Turkey",1679397462,1679397462,14.347,43.9985,11277.6,!1,248.67,96.77,0,null,11338.56,"0472",!1,0],["c1e5bc","WLD 62  ","Canada",1679397400,1679397404,-123.1601,49.1873,null,!0,3.6,185.62,null,null,null,null,!1,0],["a6cad3","JIA5228 ","United States",1679397462,1679397462,-81.063,38.854,10980.42,!1,211.99,227.95,-1.3,null,10904.22,"3527",!1,0],["4c4c20","YUTBA   ","Serbia",1679397462,1679397462,33.1954,33.1149,7559.04,!1,242.62,127.33,-9.1,null,7665.72,"2210",!1,0],["a98115","N711PM  ","United States",1679397462,1679397462,-94.1547,40.9205,8534.4,!1,131.91,211.77,0,null,8465.82,null,!1,0],["4ba94e","THY8    ","Turkey",1679397462,1679397462,20.1174,45.1981,11277.6,!1,259.41,131.78,0,null,11262.36,"2205",!1,0],["3a4dc0","THT7    ","France",1679397462,1679397462,-147.4414,-14.261,12192,!1,245.73,210.16,-.33,null,12885.42,null,!1,0],["347311","AEA86QM ","Spain",1679397462,1679397462,1.2093,43.9507,11887.2,!1,208.55,226.9,0,null,12024.36,"6676",!1,0],["347312","AEA23TK ","Spain",1679397462,1679397462,2.5924,44.6413,11277.6,!1,196.44,231.06,0,null,11414.76,"3023",!1,0],["a88774","JBU80   ","United States",1679397462,1679397462,-73.8334,40.3884,1866.9,!1,143.1,163.72,-11.7,null,1943.1,"1716",!1,0],["c05bd5","ACA101  ","Canada",1679397462,1679397462,-80.8812,44.0005,6972.3,!1,202.52,293.5,6.18,null,6812.28,"0535",!1,0],["a48a83","DAL2707 ","United States",1679397462,1679397462,-87.6213,31.2744,6614.16,!1,233.32,47.05,9.75,null,6797.04,"2441",!1,0],["a704f9","AAL2943 ","United States",1679397462,1679397462,-85.5955,33.6544,10675.62,!1,281.97,91.15,.33,null,10812.78,"2315",!1,0],["c1e5cd","SQB02ERA","Canada",1679397236,1679397236,-73.7489,45.4611,null,!0,2.57,264.38,null,null,null,null,!1,0],["c05bcf","ACA131  ","Canada",1679397461,1679397462,-82.3575,44.5183,10972.8,!1,192.4,291.49,0,null,10683.24,"2260",!1,0],["ade72c","N995WB  ","United States",1679397462,1679397462,-95.9418,42.0531,2141.22,!1,78.28,160.02,0,null,2080.26,null,!1,0],["c1e5bf","WLD 67  ","Canada",1679397462,1679397462,-123.1914,49.194,null,!0,5.14,140.62,null,null,null,null,!1,0],["aa6ade","AAL1219 ","United States",1679397462,1679397462,-81.7539,36.3559,7604.76,!1,209.27,151.36,-5.2,null,7665.72,"4156",!1,0],["347309","AEA92TZ ","Spain",1679397461,1679397462,5.5495,46.4148,11277.6,!1,202.89,227.98,0,null,11384.28,"4037",!1,0],["a0996b","FDX1581 ","United States",1679397462,1679397462,-117.3563,33.9956,6210.3,!1,155.47,264.87,-11.05,null,6202.68,"7204",!1,0],["a5c4fb","SWQ518  ","United States",1679397462,1679397462,-87.3827,42.6676,3459.48,!1,170.92,305.94,-4.23,null,3459.48,"6716",!1,0],["008de1","SFR130  ","South Africa",1679397460,1679397460,22.7099,-34.2191,10668,!1,244.88,90.36,.33,null,11079.48,null,!1,0],["c1e5a6","OPS22   ","Canada",1679397462,1679397462,-123.1917,49.1883,null,!0,14.92,281.25,null,null,null,null,!1,0],["c1e5a5","OPS 21  ","Canada",1679397297,1679397298,-123.1684,49.2007,null,!0,4.12,129.38,null,null,null,null,!1,0],["a50192","RPA4509 ","United States",1679397459,1679397459,-73.8589,40.7718,null,!0,1.29,123.75,null,null,null,null,!1,0],["4c16a9","PNC1A   ","Serbia",1679397462,1679397462,16.383,43.4957,11887.2,!1,247.6,129.94,.33,null,11932.92,"3001",!1,0],["4ba933","THY1ZH  ","Turkey",1679397461,1679397462,16.3842,46.9257,12496.8,!1,251.84,118.55,0,null,12512.04,"7715",!1,0],["4ba930","THY1WU  ","Turkey",1679397462,1679397462,9.5513,49.3988,7322.82,!1,219.44,133.39,9.1,null,7437.12,"7667",!1,0],["acb468","PDT5977 ","United States",1679397462,1679397462,-81.0505,35.0218,1470.66,!1,121.42,174.65,-6.5,null,1562.1,"5206",!1,0],["adba21","N984BH  ","United States",1679397462,1679397462,-90.69,40.5424,13106.4,!1,208.14,273.12,-.33,null,12976.86,"4052",!1,0],["a09947","DAL2099 ","United States",1679397462,1679397462,-73.5198,42.2409,12077.7,!1,199.59,262.89,2.93,null,11917.68,"7332",!1,0],["a10931","AAL1226 ","United States",1679397462,1679397462,-90.1734,29.9386,9151.62,!1,212.45,300.73,0,null,9433.56,"3727",!1,0],["e485cd","GLO1465 ","Brazil",1679397461,1679397462,-47.0914,-23.132,4610.1,!1,161,150.73,-5.53,null,4884.42,null,!1,0],["4ba949","THY182  ","Turkey",1679397462,1679397462,-93.423,33.8882,10363.2,!1,210.28,206.75,0,null,10492.74,"0711",!1,0],["ab316e","MTN8820 ","United States",1679397462,1679397462,-86.2819,39.2083,5509.26,!1,118.4,121.13,4.55,null,5478.78,null,!1,0],["3c94b2","AHO541U ","Germany",1679397462,1679397462,12.1504,45.5535,4831.08,!1,194.72,324.46,17.23,null,4953,"0274",!1,0],["780fe3","CCA8545 ","China",null,1679397376,null,null,null,!1,216.19,216,0,null,null,null,!1,0],["780fe1","CCA2812 ","China",1679397459,1679397459,113.7444,22.9267,3840.48,!1,183.59,333.36,12.03,null,3970.02,null,!1,0],["a68ddb","NKS1830 ","United States",1679397462,1679397462,-77.9823,33.8724,11262.36,!1,239.07,8.16,0,null,11376.66,"1403",!1,0],["845ebc","ADO68   ","Japan",1679397462,1679397462,140.8726,37.9265,10287,!1,164.83,226.39,-6.18,null,10294.62,null,!1,0],["aa84cb","UAL1394 ","United States",1679397462,1679397462,-77.5744,39.066,1173.48,!1,125.02,.71,-.33,null,1249.68,"7221",!1,0],["aa7df3","SWA1067 ","United States",1679397462,1679397462,-85.5521,37.6185,8366.76,!1,204.38,194.28,-5.2,null,8343.9,"5427",!1,0],["38550f","FBVIP   ","France",1679397462,1679397462,11.4875,51.9637,609.6,!1,62.32,92.84,0,null,640.08,"7743",!1,0],["7816bd","CSC3721 ","China",1679397462,1679397462,7.3547,53.5395,7315.2,!1,206.53,227.93,0,null,7360.92,"3526",!1,0],["4ba996","THY5QV  ","Turkey",1679397462,1679397462,30.3364,40.8432,6606.54,!1,187.3,274.41,-5.2,null,6705.6,null,!1,0],["88105a","NOK505  ","Thailand",1679397462,1679397462,100.3373,12.8672,8534.4,!1,213.14,357.79,-9.75,null,9029.7,"7262",!1,0],["4d23b6","ANE74TE ","Malta",1679397331,1679397332,-3.5508,39.2663,5791.2,!1,135.35,178.48,0,null,6012.18,"5161",!1,0],["a4e115","UPS712  ","United States",1679397263,1679397373,-92.4163,32.7914,7749.54,!1,177.03,248.88,-11.38,null,7894.32,"1650",!1,0],["8990de","EVA238  ","Taiwan",1679397462,1679397462,119.7496,11.8582,11277.6,!1,244.19,25.05,0,null,12024.36,null,!1,0],["7816d1","","China",1679397021,1679397165,105.8556,17.2286,10050.78,!1,264.36,73.61,0,null,10629.9,null,!1,0],["a010b3","JIT82   ","United States",1679397462,1679397462,-82.2644,28.9928,708.66,!1,106.78,39.13,-9.75,null,777.24,"5571",!1,0],["300681","IDADF   ","Italy",1679397462,1679397462,12.6525,42.1554,441.96,!1,53.85,18.95,-.33,null,487.68,null,!1,0],["780ff5","CDG4681 ","China",1679397444,1679397444,113.9819,22.7761,1554.48,!1,108.71,291.95,0,null,1554.48,null,!1,0],["8990f4","CAL762  ","Taiwan",1679397462,1679397462,120.1177,13.1257,11887.2,!1,235.57,3.63,0,null,12633.96,null,!1,0],["8465c0","ANA410  ","Japan",1679397462,1679397462,140.8351,38.0907,7315.2,!1,214.88,153.56,0,null,7376.16,null,!1,0],["ad846f","JBU266  ","United States",1679397462,1679397462,-79.1721,34.1296,8831.58,!1,246.86,41.03,0,null,8915.4,"2033",!1,0],["4ca31e","AC112   ","Ireland",1679397462,1679397462,-8.9384,53.3485,373.38,!1,57.85,231.5,0,null,320.04,null,!1,0],["8990f0","CAL177  ","Taiwan",1679397384,1679397384,135.2468,34.4343,null,!0,.9,323.44,null,null,null,null,!1,0],["4d23c8","VJT678  ","Malta",1679397461,1679397462,21.6546,50.3872,5654.04,!1,94.68,1.25,7.8,null,5631.18,"1000",!1,0],["abe1eb","FDX15   ","United States",1679397462,1679397462,-97.9478,44.452,9753.6,!1,228.44,322.23,.33,null,9502.14,"1645",!1,0],["868094","ANA449  ","Japan",1679397462,1679397463,135.4572,35.1086,10233.66,!1,178.96,260.4,10.08,null,10439.4,"2120",!1,0],["881058","NOK369  ","Thailand",1679397462,1679397462,100.7025,14.3163,2346.96,!1,121.44,181.21,-2.6,null,2430.78,"3354",!1,0],["8990ea","CAL732  ","Taiwan",1679397462,1679397462,120.6272,21.5137,11285.22,!1,206.88,346.48,0,null,11917.68,null,!1,0],["8990ed","CAL054  ","Taiwan",1679397233,1679397242,153.1101,-27.4051,null,!0,0,306.56,null,null,null,"0223",!1,0],["7803b6","CSZ9897 ","China",1679397440,1679397449,114.1291,23.4176,6088.38,!1,226.41,38.17,14.31,null,6355.08,null,!1,0],["8990c7","EVA278  ","Taiwan",1679397462,1679397462,121.0588,15.6158,7901.94,!1,231.83,356.95,8.13,null,8442.96,null,!1,0],["c05bc8","ROU1516 ","Canada",1679397462,1679397462,-77.6408,44.0312,8679.18,!1,268.32,72.71,6.83,null,8427.72,"0561",!1,0],["a023b9","WDY108  ","United States",1679397462,1679397462,-76.7927,39.7749,3840.48,!1,206.65,255,0,null,3878.58,"2762",!1,0],["a5b1b5","UPS672  ","United States",1679397461,1679397462,-92.4131,38.3837,10972.8,!1,207.14,266.73,0,null,10896.6,"4014",!1,0],["4ba975","THY2PZ  ","Turkey",1679397461,1679397462,29.5574,41.1854,3992.88,!1,163.8,343.96,12.03,null,4076.7,null,!1,0],["ac0f03","SWA3487 ","United States",1679397462,1679397462,-96.1426,29.7803,8252.46,!1,185.29,268.25,-5.2,null,8526.78,"4551",!1,0],["7816f4","CCA1324 ","China",1679397345,1679397345,113.3883,23.5948,6888.48,!1,233.78,2.52,0,null,7208.52,null,!1,0],["780ffd","CHH7773 ","China",1679397290,1679397320,113.2758,23.6365,7193.28,!1,192.07,315.43,0,null,7520.94,null,!1,0],["a32f1b","ENY3391 ","United States",1679397461,1679397462,-92.716,30.9879,8183.88,!1,193.53,311.44,5.85,null,8397.24,null,!1,0],["a10970","RAX317  ","United States",1679397301,1679397453,-101.902,38.0801,10683.24,!1,272.89,75.26,-.33,null,10599.42,null,!1,0],["aacf19","JBU1505 ","United States",1679397462,1679397462,-77.66,33.8425,9753.6,!1,218.5,196.13,0,null,9875.52,"2732",!1,0],["7816ea","CES206  ","China",1679397462,1679397462,106.7465,22.1522,10066.02,!1,275.62,61.09,0,null,10568.94,null,!1,0],["d01073","","",1679397461,1679397461,6.4364,51.4735,null,!1,0,0,0,null,236,null,!1,3],["8990d0","EVA256  ","Taiwan",1679397462,1679397462,120.867,7.1843,11887.2,!1,242.52,2.43,0,null,12694.92,null,!1,0],["a21633","UAL961  ","United States",1679397462,1679397462,7.2936,50.5021,5372.1,!1,207.12,306.41,11.7,null,5448.3,"2531",!1,0],["717ccf","KNE324  ","Saudi Arabia",1679397462,1679397462,48.1163,29.3197,11117.58,!1,222.46,191.34,-4.55,null,11170.92,null,!1,0],["4d23a0","MLH9948 ","Malta",1679397462,1679397462,.2224,40.2693,1760.22,!1,143.81,64.35,3.9,null,1897.38,null,!1,0],["a26fc9","SWA3295 ","United States",1679397462,1679397462,-76.9074,38.6971,3055.62,!1,170.21,85.84,-2.28,null,3101.34,"1515",!1,0],["8990ce","EVA190  ","Taiwan",1679397462,1679397462,139.943,35.6048,861.06,!1,87.98,269.33,-4.88,null,937.26,"6245",!1,0],["4ca303","RYR6QF  ","Ireland",1679397462,1679397462,11.1162,46.7824,11178.54,!1,203.56,335.83,6.83,null,11254.74,"0246",!1,0],["4caf9a","ABR898  ","Ireland",1679397462,1679397462,12.2654,51.2411,2827.02,!1,149.93,40.69,-7.15,null,2903.22,"1000",!1,0],["300633","IBGBG   ","Italy",1679397454,1679397454,10.3634,45.4133,236.22,!1,29.65,231.34,-.65,null,335.28,null,!1,0],["4ca364","KZR904  ","Ireland",1679397462,1679397462,11.9554,49.7879,10668,!1,252.13,136.07,0,null,10721.34,"3161",!1,0],["341186","SEI23   ","Spain",1679397461,1679397461,2.7175,39.5462,null,!0,9.77,56.25,null,null,null,null,!1,0],["0d08d1","AMX002  ","Mexico",1679397374,1679397374,-12.0638,38.6324,9738.36,!1,261.65,255.77,-.33,null,10050.78,"2672",!1,0],["a263dc","ENY3353 ","United States",1679397462,1679397462,-98.2107,28.8509,7620,!1,217.16,344.61,.33,null,7886.7,null,!1,0],["a4eca6","RPA4459 ","United States",1679397462,1679397462,-78.9469,43.3851,5928.36,!1,208.59,113.09,9.75,null,5814.06,"6335",!1,0],["4d23f8","RYR1VC  ","Malta",1679397462,1679397462,19.9002,51.9279,11277.6,!1,222.76,37.4,0,null,11163.3,"0420",!1,0],["781790","CCA2659 ","China",1679397460,1679397461,113.9975,23.1101,2171.7,!1,140.64,82.43,.65,null,2209.8,null,!1,0],["440800","OEXMO   ","Austria",1679397462,1679397462,15.4346,46.9935,304.8,!1,13.9,357.88,0,null,396.24,null,!1,0],["4d23fa","RYR70XK ","Malta",1679397462,1679397462,2.8376,44.4565,10972.8,!1,249.27,56.7,0,null,11125.2,"1175",!1,0],["342496","GES221R ","Spain",1679397360,1679397360,-1.0141,41.6615,null,!0,9.77,73.12,null,null,null,null,!1,0],["39ab12","CRL926  ","France",1679397462,1679397462,-.0833,48.2028,7955.28,!1,211.45,236.31,2.6,null,8016.24,"0645",!1,0],["4d23cf","FJO52R  ","Malta",1679397462,1679397462,5.8709,45.7407,2369.82,!1,103.24,344.09,22.43,null,2484.12,null,!1,0],["424b18","MICRO   ","United Kingdom",1679397462,1679397462,2.7203,40.3881,6126.48,!1,211.91,157.29,-13,null,6301.74,"5041",!1,0],["440833","EJU32DM ","Austria",1679397462,1679397462,.1,47.7603,7620,!1,204.47,48.57,-5.53,null,7719.06,"1157",!1,0],["0d08f3","VIV147  ","Mexico",1679397399,1679397445,-99.2225,19.3765,2987.04,!1,112.33,147.91,-5.85,null,3177.54,null,!1,0],["a20f6b","N2316K  ","United States",1679397456,1679397456,-79.5761,36.4683,952.5,!1,62.09,291.89,-1.63,null,1013.46,null,!1,0],["4d23d8","9HELO   ","Malta",1679397462,1679397462,-1.58,51.8459,662.94,!1,91.81,64.44,-1.95,null,655.32,null,!1,0],["4caf82","SAS502  ","Ireland",1679397462,1679397462,5.9959,53.5947,11277.6,!1,251.55,56.34,0,null,11216.64,"4615",!1,0],["a406c9","FFT32   ","United States",1679397462,1679397462,-81.9963,39.4788,9898.38,!1,202.8,358.11,-4.88,null,9829.8,"7404",!1,0],["44082b","AUA2652 ","Austria",1679397462,1679397462,13.5142,46.7087,10668,!1,211.22,68.12,0,null,10728.96,"1000",!1,0],["a2d9ea","JBU2802 ","United States",1679397462,1679397462,-76.3058,41.8989,7315.2,!1,162.27,290.22,-.33,null,7208.52,"2156",!1,0],["4d23d6","SVA3637 ","Malta",1679397462,1679397462,72.1569,18.9523,10363.2,!1,221.35,258.74,0,null,10805.16,null,!1,0],["a19343","AAL2227 ","United States",1679397461,1679397462,-74.4592,23.1951,10972.8,!1,213.96,296.26,0,null,11536.68,null,!1,0],["ab3d39","AAL1090 ","United States",1679397462,1679397462,-96.0428,35.8098,4434.84,!1,182.69,198.38,10.73,null,4434.84,"2173",!1,0],["49d365","ISR886  ","Czech Republic",1679397454,1679397462,34.0702,32.4644,3870.96,!1,185.56,133.88,-8.13,null,4008.12,"5337",!1,0],["a8aa87","AAL1839 ","United States",1679397462,1679397462,-77.208,38.7401,2476.5,!1,139.87,265.36,17.56,null,2537.46,null,!1,0],["a526ed","ATN3461 ","United States",1679397462,1679397462,-110.0983,33.8402,9357.36,!1,277.07,72.27,5.53,null,9479.28,null,!1,0],["3471cf","ECXTV   ","Spain",1679397388,1679397388,17.4009,48.9725,556.26,!1,54.58,23.91,-3.58,null,647.7,null,!1,0],["a21679","UAL2416 ","United States",1679397462,1679397462,-79.7677,41.8109,10363.2,!1,278.97,101.7,0,null,10195.56,"3223",!1,0],["47a3b0","NOZ76Z  ","Norway",1679397462,1679397462,8.6382,45.8897,4892.04,!1,183.13,153.65,-10.4,null,5021.58,"0742",!1,0],["4d23f0","AEZ2552 ","Malta",1679397462,1679397462,12.021,42.1155,1333.5,!1,111.81,69.81,-1.63,null,1417.32,null,!1,0],["4d23e8","TSC2654 ","Malta",1679397462,1679397462,-73.0731,39.7427,10972.8,!1,201.38,220.65,0,null,10881.36,"3622",!1,0],["a33644","ASH585  ","United States",1679397462,1679397462,-84.8845,39.0653,2346.96,!1,137.1,290.88,18.21,null,2354.58,null,!1,0],["a55017","UAL2225 ","United States",1679397462,1679397462,-80.8425,43.0411,10957.56,!1,182.73,268.06,0,null,10751.82,"7407",!1,0],["040452","EJU357J ","Ethiopia",1679397462,1679397462,2.424,48.7315,198.12,!1,71.65,254.17,-3.58,null,274.32,"1000",!1,0],["a1806a","WIG1046 ","United States",1679397462,1679397462,-71.3761,43.0141,731.52,!1,89.89,33.33,3.9,null,777.24,null,!1,0],["3d673d","DFLIR   ","Germany",1679397462,1679397462,12.2687,48.1825,6286.5,!1,88.49,293.29,4.88,null,6400.8,"4166",!1,0],["45ac4b","SAS88R  ","Denmark",1679397462,1679397462,17.9528,59.6434,null,!0,18.52,11.25,null,null,null,"0440",!1,0],["480c45","MMF84   ","Kingdom of the Netherlands",1679397462,1679397462,5.3118,51.4711,441.96,!1,95.47,30.43,.98,null,495.3,"3601",!1,0],["0081db","ZSOFI   ","South Africa",1679397462,1679397462,25.5277,-33.5691,617.22,!1,68.81,198.3,-.65,null,640.08,null,!1,0],["a44f9c","UPS910  ","United States",1679397462,1679397462,-118.4165,33.8522,1859.28,!1,117.28,262.44,-10.4,null,1775.46,"6250",!1,0],["ac27cf","SWA1545 ","United States",1679397461,1679397462,-102.092,31.8413,2423.16,!1,157.34,107.31,13.66,null,2430.78,null,!1,0],["4b8e04","PGT6XA  ","Turkey",1679397462,1679397462,20.4338,48.9928,11887.2,!1,244.59,150.79,.33,null,11803.38,"4556",!1,0],["401240","BAW777C ","United Kingdom",1679397462,1679397463,13.9323,57.4408,11574.78,!1,212.34,222.15,0,null,11430,"0731",!1,0],["49d38c","TVL522P ","Czech Republic",1679397462,1679397462,17.4236,48.6969,7620,!1,231.87,132.93,0,null,7627.62,"1000",!1,0],["4072c8","EZY2395 ","United Kingdom",1679397462,1679397462,-.4253,51.8509,952.5,!1,90.75,212.97,11.7,null,944.88,"5264",!1,0],["ac0dd9","AAL2849 ","United States",1679397462,1679397462,-86.1914,41.0856,6705.6,!1,209.86,321.67,.33,null,6659.88,"2177",!1,0],["ad34b9","DAL1479 ","United States",1679397462,1679397462,-83.6138,42.6216,2461.26,!1,156.98,104.81,-4.88,null,2468.88,"6236",!1,0],["406bbb","BAW5XM  ","United Kingdom",1679397462,1679397462,8.8278,45.3518,1485.9,!1,117.52,324.08,-1.95,null,1592.58,"7301",!1,0],["45ac30","SAS38T  ","Denmark",1679397461,1679397461,12.9545,64.7544,10668,!1,225.43,20.3,.33,null,10279.38,"0462",!1,0],["45ac32","SAS97F  ","Denmark",1679397461,1679397462,6.6019,54.4598,10980.42,!1,205.56,204.71,0,null,10927.08,"0740",!1,0],["a32367","DAL1578 ","United States",1679397462,1679397462,-88.1334,41.986,2049.78,!1,138.02,285.12,13.66,null,2042.16,"6223",!1,0],["ab3133","DAL1561 ","United States",1679397462,1679397462,-82.0848,28.0854,8945.88,!1,225.38,327.87,10.73,null,9273.54,"1415",!1,0],["ab3131","N820DL  ","United States",1679397462,1679397462,-80.426,36.2346,5242.56,!1,89.35,290.21,9.1,null,5295.9,null,!1,0],["a8c44b","NKS1201 ","United States",1679397462,1679397462,-95.395,38.2923,10972.8,!1,204.29,271.3,0,null,10888.98,"3770",!1,0],["c000eb","WJA20   ","Canada",1679397462,1679397462,-.5466,53.7303,11887.2,!1,252.49,150.46,.33,null,11811,"6306",!1,0],["39b221","CMA611  ","France",1679397462,1679397462,16.2247,47.8099,10972.8,!1,223.87,293.86,.33,null,10957.56,"1000",!1,0],["e485b2","TAM3812 ","Brazil",1679397209,1679397230,-46.9124,-18.7525,11574.78,!1,224.87,303.62,.33,null,12214.86,null,!1,0],["39b227","","France",1679397462,1679397462,32.8128,42.0278,11582.4,!1,226.94,282.3,0,null,null,null,!1,0],["a8bd6a","UAL15   ","United States",1679397462,1679397462,-11.6145,54.8422,10957.56,!1,213.17,303.38,-.33,null,10797.54,"7720",!1,0],["39b225","QTR14V  ","France",1679397353,1679397460,31.0218,33.5483,9753.6,!1,224.93,306.16,.33,null,9906,"2261",!1,0],["45ac42","SAS78L  ","Denmark",1679397463,1679397463,11.4439,59.048,9334.5,!1,212.03,1.53,-13.33,null,9258.3,"0254",!1,0],["4b8e0b","PGT1179 ","Turkey",1679397462,1679397462,-.4594,53.4079,6446.52,!1,181.63,286.79,-12.03,null,6355.08,"6616",!1,0],["a03816","","United States",1679397462,1679397462,-91.5663,34.7783,5311.14,!1,206.84,79.25,10.73,null,5372.1,null,!1,0],["ac5d61","UAL1210 ","United States",1679397462,1679397462,-77.7035,38.7441,11582.4,!1,195.97,230.75,-.33,null,11475.72,"7043",!1,0],["3fee99","DMBTA   ","Germany",1679397462,1679397462,11.199,48.6023,1211.58,!1,55.91,64.38,-.98,null,1287.78,"7000",!1,0],["a8d6de","NKS1305 ","United States",1679397462,1679397462,-82.1402,35.5519,8534.4,!1,213.93,224.03,0,null,8580.12,"1042",!1,0],["a348a1","UPS914  ","United States",1679397461,1679397461,-95.747,39.2999,10980.42,!1,213.52,270.83,0,null,10858.5,"4050",!1,0],["e4999d","TAM3997 ","Brazil",1679397462,1679397462,-41.3313,-21.8341,10972.8,!1,207.58,215.62,0,null,11590.02,null,!1,0],["ab2afe","CMB524  ","United States",1679397462,1679397462,13.3836,50.9858,11277.6,!1,260.47,110.58,0,null,11292.84,"4626",!1,0],["acb4e9","ASH5802 ","United States",1679397462,1679397462,-90.2932,32.2272,3246.12,!1,140.35,281.85,15.93,null,3322.32,null,!1,0],["abdd6d","SWA121  ","United States",1679397462,1679397462,-86.011,35.2489,8938.26,!1,258.23,141.71,-5.2,null,9006.84,"6522",!1,0],["342545","SWT7274 ","Spain",1679397450,1679397450,14.5065,35.834,91.44,!1,59.66,314.3,-3.9,null,137.16,null,!1,0],["86e518","ANA1719 ","Japan",1679397456,1679397456,139.4926,39.0591,11887.2,!1,239,28.83,0,null,11864.34,"2040",!1,0],["abdd91","SWA2558 ","United States",1679397462,1679397462,-96.7555,33.2046,12496.8,!1,243.36,38.74,.65,null,12649.2,"2547",!1,0],["a81f7b","UPS71   ","United States",1679397462,1679397462,-107.6523,51.8354,10668,!1,265.27,122.89,0,null,10195.56,null,!1,0],["a6c013","JBU467  ","United States",1679397462,1679397462,-83.8335,32.1445,9738.36,!1,242.98,163.14,7.48,null,9959.34,null,!1,0],["4aaa14","POL5470 ","Sweden",1679397462,1679397462,18.2853,59.5567,312.42,!1,58.97,173.99,.98,null,327.66,null,!1,0],["a8bcdd","NKS316  ","United States",1679397368,1679397368,-73.8835,40.7735,null,!0,0,331.88,null,null,null,"1032",!1,0],["71c221","KAL2132 ","Republic of Korea",1679397462,1679397462,137.3803,35.9147,10363.2,!1,175.59,264.96,0,null,10485.12,"3624",!1,0],["c04b69","CGCOM   ","Canada",1679397462,1679397462,-75.4866,42.6408,10363.2,!1,176.09,204.69,0,null,10104.12,"6560",!1,0],["49d18d","OKDST   ","Czech Republic",1679397314,1679397314,16.1285,49.928,731.52,!1,80.18,141.51,-1.3,null,792.48,null,!1,0],["45c86b","FLI7198 ","Denmark",1679397462,1679397462,-6.0019,37.7183,2446.02,!1,147.96,232.77,-6.18,null,2606.04,"0751",!1,0],["45c86c","FLI496  ","Denmark",1679397343,1679397462,-10.6291,35.7666,11277.6,!1,217.88,214.03,0,null,11620.5,"5236",!1,0],["abe475","SWA3556 ","United States",1679397461,1679397462,-89.6722,28.7567,10972.8,!1,196.14,281.96,0,null,11308.08,"6157",!1,0],["abf78f","AAL1512 ","United States",1679397462,1679397462,-92.9503,35.845,9753.6,!1,185.44,247.49,0,null,9791.7,"2762",!1,0],["a8d6bd","PDT5942 ","United States",1679397462,1679397462,-78.6568,43.1435,9753.6,!1,182.65,269.03,0,null,9494.52,"3530",!1,0],["86d215","SNJ114  ","Japan",1679397462,1679397462,139.9324,34.6825,4526.28,!1,162.68,36.25,-2.6,null,4655.82,"1772",!1,0],["479e29","","Norway",1679397434,1679397434,5.3112,58.9269,381,!1,59.7,108.59,0,null,342.9,null,!1,0],["71c256","AAR8995 ","Republic of Korea",1679397453,1679397458,126.8011,37.5578,null,!0,0,326.25,null,null,null,null,!1,0],["71c258","AAR714  ","Republic of Korea",1679397462,1679397462,126.7576,37.0326,2651.76,!1,145.22,331.89,-7.15,null,2712.72,null,!1,0],["a085a4","UAL563  ","United States",1679397462,1679397462,-83.1784,34.1539,9753.6,!1,201.5,235.3,0,null,9845.04,"3635",!1,0],["71c252","KAL252  ","Republic of Korea",1679397456,1679397457,-149.997,61.1712,129.54,!0,3.6,270,null,null,null,"4117",!1,0],["3d1725","DEHAB   ","Germany",1679397461,1679397462,11.9749,48.5064,762,!1,53.03,337.17,-.33,null,838.2,"7000",!1,3],["780529","CCA4345 ","China",1679397318,1679397443,113.6637,22.8598,1196.34,!1,75,153.08,-3.9,null,1158.24,null,!1,0],["a9f6c2","FDX1707 ","United States",1679397198,1679397222,-81.3431,26.0456,4419.6,!1,194.44,115.55,-8.78,null,4602.48,"6621",!1,0],["a55090","RPA4732 ","United States",1679397149,1679397149,-77.0405,38.8567,null,!0,9.77,323.44,null,null,null,"3410",!1,0],["781856","CQH8512 ","China",1679397463,1679397463,105.1954,21.1989,10058.4,!1,273,57.39,0,null,10561.32,null,!1,0],["71c245","JNA061  ","Republic of Korea",1679397459,1679397459,122.3174,25.1355,10363.2,!1,222.23,198.77,0,null,10866.12,null,!1,0],["a860b7","RPA3635 ","United States",1679397462,1679397462,-77.4619,38.3009,2705.1,!1,144.3,15.72,-4.55,null,2773.68,"5357",!1,0],["abe496","SWA2197 ","United States",1679397462,1679397462,-92.1118,37.9579,10363.2,!1,201.22,280.16,-.33,null,10294.62,"1627",!1,0],["71c249","KAL1421 ","Republic of Korea",1679397461,1679397461,126.2893,37.3012,3657.6,!1,192.13,131.2,13.66,null,3657.6,null,!1,0],["a38522","ASH597  ","United States",1679397462,1679397462,-97.5135,40.6944,10972.8,!1,203.57,279.75,0,null,10835.64,"3450",!1,0],["acf164","N933G   ","United States",1679397360,1679397360,-80.7118,35.3759,91.44,!1,34.1,11.31,-1.95,null,205.74,null,!1,0],["a4f3d9","SWA1574 ","United States",1679397461,1679397461,-82.4453,31.8704,11277.6,!1,223.01,7.29,0,null,11483.34,"3647",!1,0],["780539","CGH1067 ","China",1679397430,1679397430,108.003,22.7838,7787.64,!1,213.62,313.34,0,null,8138.16,null,!1,0],["a5ac43","AWI6144 ","United States",1679397462,1679397462,-86.1704,41.4268,6278.88,!1,199.47,296.5,-10.4,null,6225.54,null,!1,0],["c1e841","SAF205  ","Canada",1679397418,1679397418,-79.6369,43.6788,null,!0,6.69,137.81,null,null,null,null,!1,0],["a67c3a","JBU92   ","United States",1679397462,1679397462,-77.956,36.8733,11277.6,!1,262.08,38.62,0,null,11269.98,"3756",!1,0],["a9a91a","AAL690  ","United States",1679397462,1679397462,-74.8653,39.7539,1196.34,!1,132.43,6.02,-9.1,null,1280.16,"5007",!1,0],["4cadc3","RYR9UZ  ","Ireland",1679397462,1679397462,-9.2326,52.3344,5433.06,!1,187.02,69.72,9.1,null,5394.96,null,!1,0],["4cadc4","RYR2XB  ","Ireland",1679397462,1679397462,4.5517,50.8001,11582.4,!1,221.02,304.28,0,null,11574.78,"3555",!1,0],["48506b","TFL365  ","Kingdom of the Netherlands",1679397462,1679397462,4.7165,52.4123,327.66,!1,70.55,182.51,-3.58,null,358.14,"6257",!1,0],["a6833b","DAL859  ","United States",1679397462,1679397462,-75.0391,43.0001,10378.44,!1,205.27,269.71,0,null,10126.98,"1405",!1,0],["a5767d","N451GV  ","United States",1679397462,1679397462,-77.065,40.7876,12192,!1,222.89,280.51,.33,null,12092.94,"2606",!1,0],["781878","AMU135  ","China",1679397363,1679397363,113.6235,22.0258,2758.44,!1,140.63,286.58,0,null,2849.88,null,!1,0],["a5502b","AAL1979 ","United States",1679397462,1679397462,-75.3616,39.625,3322.32,!1,157.52,182.06,8.13,null,3360.42,null,!1,0],["34608b","VLG7KN  ","Spain",1679397462,1679397462,2.207,41.7277,3741.42,!1,170.11,169.37,-18.21,null,3909.06,"2710",!1,0],["34608d","VLG9WU  ","Spain",1679397462,1679397462,3.8046,51.4861,5318.76,!1,205.72,25.48,-9.43,null,5356.86,"1057",!1,0],["a513ea","SWA3355 ","United States",1679397462,1679397462,-82.119,31.3208,11833.86,!1,239.97,2.58,-6.18,null,12085.32,"6231",!1,0],["34608c","VLG1885 ","Spain",1679397462,1679397462,8.0879,47.8494,11285.22,!1,215.96,217.06,.33,null,11391.9,"1125",!1,0],["4aaa0e","SEJPN   ","Sweden",1679397449,1679397449,17.9729,59.6598,null,!0,0,168.75,null,null,null,null,!1,0],["503e68","PGT097  ","Lithuania",1679397459,1679397459,29.1602,36.6889,6728.46,!1,188.78,68.75,15.28,null,6873.24,null,!1,0],["c1e80a","MTC78   ","Canada",null,1679397452,null,null,null,!1,7.46,163.12,null,null,null,null,!1,0],["aa0aab","AAL2146 ","United States",1679397462,1679397462,-76.6124,39.047,5669.28,!1,208.07,45,16.26,null,5623.56,"5646",!1,0],["adc1ef","FDX1408 ","United States",1679397462,1679397462,-99.5901,37.4118,12192,!1,196.52,284.4,0,null,12161.52,"2613",!1,0],["0c605d","BWA527  ","Trinidad and Tobago",1679397401,1679397403,-59.4599,8.1228,11201.4,!1,240.33,149.37,-11.38,null,11849.1,"2730",!1,0],["346090","VLG9AM  ","Spain",1679397461,1679397462,.7489,46.752,10980.42,!1,230.23,355.26,0,null,11033.76,"5567",!1,0],["44a831","TFL1617 ","Belgium",1679397460,1679397460,-6.8839,42.3736,10058.4,!1,239.06,202.92,0,null,10241.28,null,!1,0],["4cada7","ITY159  ","Ireland",1679397462,1679397462,6.4459,49.9601,10081.26,!1,233.78,125.05,7.48,null,10165.08,"1000",!1,0],["a74cf3","N57KB   ","United States",1679397268,1679397269,-84.3311,40.523,594.36,!1,75.64,1.17,-1.3,null,662.94,null,!1,0],["aa8769","N778GV  ","United States",1679397454,1679397454,-98.6938,29.7219,null,!0,0,261.56,null,null,null,null,!1,0],["a4080c","UPS922  ","United States",1679397462,1679397462,-112.3758,33.1594,9753.6,!1,204.15,231.14,0,null,9898.38,null,!1,0],["4cada3","RYR4097 ","Ireland",1679397461,1679397461,3.9406,55.9747,11582.4,!1,219.87,256.74,0,null,11475.72,"1127",!1,0],["a07eee","CNS61   ","United States",1679397462,1679397462,-73.4685,41.2567,3040.38,!1,105.51,46.19,9.75,null,3055.62,"2766",!1,0],["4cada6","ITY1168 ","Ireland",1679397231,1679397233,12.2574,41.8556,60.96,!1,71.11,162.74,-3.58,null,137.16,null,!1,0],["346089","VLG6CT  ","Spain",1679397462,1679397462,11.9002,42.0629,1950.72,!1,106.99,350.31,-8.45,null,2042.16,null,!1,0],["a2f092","ENY3654 ","United States",1679397462,1679397462,-95.5186,45.8335,9159.24,!1,222.86,132.38,9.43,null,8923.02,null,!1,0],["abd19e","SWA1961 ","United States",1679397462,1679397462,-92.7416,31.3387,11582.4,!1,191.44,291.6,0,null,11833.86,"3761",!1,0],["a1a832","JBU2536 ","United States",1679397366,1679397368,-73.76,40.6388,-121.92,!1,55.51,209.42,-.33,null,-22.86,"4043",!1,0],["781896","CDC8974 ","China",1679397254,1679397285,101.3131,16.781,11269.98,!1,235.68,11.46,0,null,11910.06,"7006",!0,0],["4cadc0","RYR92QE ","Ireland",1679397461,1679397462,24.1731,45.7218,10546.08,!1,211.17,305.78,3.58,null,10507.98,"7237",!1,0],["7c56b7","RXA390  ","Australia",1679397407,1679397407,151.1812,-33.951,null,!0,6.17,81.56,null,null,null,null,!1,0],["a6d326","N539PE  ","United States",1679397451,1679397462,-83.6469,32.6915,5059.68,!1,149.91,126.91,0,null,5189.22,null,!1,0],["a55055","SWA3430 ","United States",1679397462,1679397462,-94.2746,37.0128,11887.2,!1,263.67,54.45,0,null,11887.2,"2213",!1,0],["346088","","Spain",1679397459,1679397459,2.087,41.2932,null,!0,9.77,154.69,null,null,null,null,!1,0],["44a82f","JAF35H  ","Belgium",1679397462,1679397462,-1.7212,42.6205,11887.2,!1,217.43,201.95,0,null,12039.6,"7614",!1,0],["392848","FAF6240 ","France",1679397462,1679397462,2.6607,44.2222,1363.98,!1,76.39,44.45,.65,null,1463.04,null,!1,0],["485061","TRA1B   ","Kingdom of the Netherlands",1679397462,1679397462,-2.369,42.4093,11582.4,!1,241.37,23.89,0,null,11750.04,"4623",!1,0],["71c200","HL8200  ","Republic of Korea",1679397461,1679397462,139.1814,37.9643,11887.2,!1,295.6,80.08,.33,null,11917.68,"4143",!1,0],["4cadb8","RYR2AV  ","Ireland",1679397462,1679397462,3.9112,53.2002,10972.8,!1,216.48,273.54,0,null,10911.84,"7542",!1,0],["485064","KLM45J  ","Kingdom of the Netherlands",1679397462,1679397462,4.7617,52.3006,null,!0,8.75,56.25,null,null,null,null,!1,0],["485065","KLM1085 ","Kingdom of the Netherlands",1679397462,1679397462,1.2462,51.769,11582.4,!1,215.67,260.11,-.33,null,11574.78,"6267",!1,0],["ab3f49","ASH6124 ","United States",1679397462,1679397463,-74.282,40.869,4038.6,!1,152.16,241.53,11.38,null,4038.6,"1507",!1,0],["4cadb7","RYR80YL ","Ireland",1679397462,1679397462,-2.5906,54.5521,9730.74,!1,187.51,325.39,-8.13,null,9608.82,"6763",!1,0],["4bca66","RHH045  ","Turkey",1679397462,1679397462,4.9303,52.4958,1066.8,!1,118.37,119.13,-8.45,null,1074.42,"6304",!1,0],["e49928","CO51    ","Brazil",1679397314,1679397314,-47.4038,-22.0168,1082.04,!1,88.04,9.08,-13.33,null,1203.96,null,!1,0],["a44ef8","JTZ377  ","United States",1679397462,1679397462,-86.41,36.9725,13716,!1,224.04,30.04,0,null,13731.24,"1536",!1,0],["4408c9","EJU13YH ","Austria",1679397462,1679397462,8.7658,45.5131,792.48,!1,96.86,349.29,-5.53,null,899.16,"1000",!1,0],["406e66","EZY64BU ","United Kingdom",1679397462,1679397462,.798,43.0216,10980.42,!1,223.81,343.44,.33,null,11155.68,"1043",!1,0],["4bd155","CAI936B ","Turkey",1679397461,1679397462,22.5175,47.1631,11582.4,!1,242.6,150.39,0,null,11498.58,"6740",!1,0],["ab44a7","AAL2729 ","United States",1679397462,1679397462,-79.1586,39.1333,9753.6,!1,204.42,249.83,0,null,9692.64,"1331",!1,0],["406e69","EZY45MT ","United Kingdom",1679397462,1679397462,3.1872,47.8624,11117.58,!1,217.65,157.19,-5.2,null,11193.78,"2277",!1,0],["a4f526","N4187A  ","United States",1679397462,1679397462,-82.0821,35.0681,2606.04,!1,85.1,142.37,0,null,2674.62,null,!1,0],["aa73a0","SWA222  ","United States",1679397462,1679397462,-82.5872,31.9977,10668,!1,196.19,319.04,0,null,10850.88,"4454",!1,0],["a2c86d","FDX401  ","United States",1679397448,1679397454,-77.4539,38.9598,null,!0,0,92.81,null,null,null,"7317",!1,0],["ab3dc3","UAL2082 ","United States",1679397462,1679397462,-80.0477,40.9507,10972.8,!1,194.35,279.14,.33,null,10835.64,"7155",!1,0],["e4992b","CO36    ","Brazil",1679397462,1679397462,-47.073,-22.1263,3398.52,!1,78.42,160.85,-.65,null,3611.88,null,!1,0],["a49206","DAL2757 ","United States",1679397462,1679397462,-87.0771,41.0913,9608.82,!1,228.32,336.5,8.78,null,9502.14,"1554",!1,0],["34604e","IBE6844 ","Spain",1679397218,1679397218,-13.1935,30.9844,12192,!1,270.7,34.63,0,null,12557.76,null,!1,0],["34604b","","Spain",1679397355,1679397355,-3.5864,40.4945,null,!0,9.26,180,null,null,null,null,!1,0],["a455c7","FFT2595 ","United States",1679397455,1679397456,-87.7467,41.7892,137.16,!1,45.84,224.09,.33,null,160.02,null,!1,0],["aca29a","JBU1603 ","United States",1679397462,1679397462,-73.3026,40.354,3558.54,!1,207.78,120.5,10.08,null,3566.16,"6254",!1,0],["44a826","JAF7DA  ","Belgium",1679397462,1679397462,6.1563,49.3204,11003.28,!1,231.87,351.71,-7.8,null,11049,"1000",!1,0],["347388","IBE6841 ","Spain",1679397462,1679397462,-57.8602,-34.3076,7147.56,!1,189.27,226.98,-13.33,null,7513.32,"2344",!1,0],["ad7da2","AAL2121 ","United States",1679397462,1679397462,-91.7961,40.4734,9448.8,!1,261.43,75.06,0,null,9342.12,"1760",!1,0],["407534","BAW661  ","United Kingdom",1679397462,1679397462,4.3021,48.6443,11590.02,!1,219.35,314.71,-.33,null,11628.12,"2767",!1,0],["ab44af","DAL135  ","United States",1679397462,1679397462,-10.836,56.0672,10363.2,!1,218.81,293.85,-.33,null,10187.94,"2115",!1,0],["a3d568","UPS844  ","United States",1679397345,1679397345,-111.9818,40.8027,null,!0,0,354.38,null,null,null,null,!1,0],["407535","BAW3DP  ","United Kingdom",1679397462,1679397462,-.0294,45.63,11582.4,!1,232.01,344.7,0,null,11681.46,"2302",!1,0],["e49908","TAM3111 ","Brazil",1679397462,1679397462,-40.5603,-20.8945,8770.62,!1,219.81,221.3,10.08,null,9258.3,null,!1,0],["50801f","ADB500F ","Ukraine",1679397462,1679397462,11.2378,50.8791,7071.36,!1,173.98,220.8,8.45,null,7170.42,"1000",!1,0],["407536","BAW479  ","United Kingdom",1679397462,1679397462,1.3399,42.7368,9517.38,!1,243.45,348.67,8.45,null,9730.74,"5376",!1,0],["44d068","BEL6JM  ","Belgium",1679397462,1679397462,25.6359,40.6989,11285.22,!1,235.44,136.51,0,null,11353.8,"0116",!1,0],["a01262","MRA703  ","United States",1679397462,1679397462,-77.5994,35.9613,1981.2,!1,85.28,84.46,-.98,null,2072.64,"0665",!1,0],["a575e7","TAI529  ","United States",1679397336,1679397447,-95.3684,18.6152,11277.6,!1,245.43,124.32,0,null,11841.48,null,!1,0],["40751c","EXS96BL ","United Kingdom",1679397462,1679397462,-6.0088,50.8563,10668,!1,240.49,174.11,0,null,10675.62,"2215",!1,0],["a24b39","ENY4140 ","United States",1679397462,1679397462,-86.43,41.3741,5433.06,!1,191.38,316.09,-9.1,null,5387.34,"4055",!1,0],["711105","FAD443  ","Saudi Arabia",1679397462,1679397462,46.4738,24.7622,9761.22,!1,171.43,244.59,0,null,10035.54,null,!1,0],["401ed9","GBIDH   ","United Kingdom",1679397462,1679397462,-.3461,53.8955,175.26,!1,37.64,100.23,5.2,null,129.54,"7000",!1,0],["a3c246","DAL2700 ","United States",1679397462,1679397462,-81.3833,38.2954,10363.2,!1,204.17,211.61,0,null,10309.86,"5730",!1,0],["406e2e","EXS613  ","United Kingdom",1679397454,1679397454,-6.1013,43.7108,10668,!1,239.87,203.38,0,null,10805.16,null,!1,0],["abca00","AAL1563 ","United States",1679397462,1679397462,-84.3277,33.165,10972.8,!1,212.78,348.99,0,null,11125.2,"7201",!1,0],["4aaa72","DFL5980 ","Sweden",1679397462,1679397462,18.0513,59.3613,259.08,!1,55.36,217.83,-.98,null,266.7,null,!1,0],["a50e81","N425DD  ","United States",1679397462,1679397462,-94.8493,43.0898,4572,!1,137.31,85.27,-.33,null,4457.7,null,!1,0],["424bd6","MARKS   ","United Kingdom",1679397462,1679397462,-4.3832,53.7281,1722.12,!1,94.89,350.64,-2.93,null,1645.92,"4557",!1,0],["a25238","JBU716  ","United States",1679397462,1679397462,-75.5456,42.8019,8839.2,!1,275.37,91.82,-.33,null,8618.22,"7437",!1,0],["a67bc8","DAL993  ","United States",1679397462,1679397462,-81.703,28.5133,3825.24,!1,181.16,245.33,4.55,null,3970.02,"0711",!1,0],["ab7a21","DAL426  ","United States",1679397462,1679397462,-73.5704,40.8137,480.06,!1,112.54,244.84,-.33,null,548.64,"3542",!1,0],["4ca1b2","ABR361  ","Ireland",1679397462,1679397462,.8679,47.6679,7566.66,!1,236.82,25.06,-4.88,null,7673.34,"1000",!1,0],["c015b0","SWG684  ","Canada",1679397462,1679397462,-80.0677,40.5315,10972.8,!1,223.79,180.4,-.33,null,10828.02,"2204",!1,0],["86d288","ANA1434 ","Japan",1679397458,1679397462,138.1383,33.7366,9852.66,!1,264.96,56,-11.05,null,10195.56,"2051",!1,0],["ab8112","AAL955  ","United States",1679397462,1679397462,-89.0216,41.0319,5951.22,!1,216.66,42.4,-11.38,null,5897.88,"2123",!1,0],["407598","BZE03C  ","United Kingdom",1679397462,1679397462,.8134,51.4764,1859.28,!1,123.28,263.29,-1.63,null,1859.28,"6205",!1,0],["0a80c7","C6AAL   ","Bahamas",1679397344,1679397387,-80.2814,26.0702,548.64,!1,60.92,94.84,.65,null,624.84,null,!1,0],["a442f3","DAL2661 ","United States",1679397441,1679397443,-84.4461,33.6496,236.22,!1,74.6,89.6,-3.58,null,335.28,"7370",!1,0],["4ba912","THY2BA  ","Turkey",1679397462,1679397462,29.8184,40.4149,5737.86,!1,195.03,189.41,8.78,null,5798.82,null,!1,0],["44d042","OOTBB   ","Belgium",1679397386,1679397413,7.1654,43.4211,571.5,!1,111.83,93.43,0,null,655.32,null,!1,0],["405b6a","EZY18VH ","United Kingdom",1679397462,1679397462,17.8965,45.2059,11590.02,!1,210.71,289.54,-.33,null,11582.4,null,!1,0],["40624e","BAW78G  ","United Kingdom",1679397462,1679397463,6.9123,46.9114,4945.38,!1,185.67,218.36,-5.85,null,5097.78,"2027",!1,0],["34734d","ARK8ZPS ","Spain",1679397461,1679397462,2.8874,41.6983,701.04,!1,47.1,40.13,.65,null,861.06,null,!1,0],["a980cf","N711LS  ","United States",1679397462,1679397462,7.9836,47.1238,12192,!1,235.36,296.9,-.65,null,12306.3,"7527",!1,0],["a08714","RPA4574 ","United States",1679397462,1679397462,-74.9783,39.9238,784.86,!1,82.22,255.88,-.33,null,853.44,"5774",!1,0],["71c275","KAL422  ","Republic of Korea",1679397462,1679397462,127.0352,37.1795,3070.86,!1,138.89,265.11,-2.6,null,3124.2,null,!1,0],["abca08","DAL15   ","United States",1679397462,1679397462,-1.7045,54.5577,10972.8,!1,226.27,315.55,0,null,10866.12,"0123",!1,0],["a7906b","FDX1430 ","United States",1679397459,1679397462,-112.0284,41.3004,3840.48,!1,152.56,176.52,-4.23,null,3741.42,null,!1,0],["aab117","N7883Z  ","United States",1679397462,1679397462,-104.9041,39.7469,2095.5,!1,36.45,351.07,0,null,2011.68,null,!1,0],["a037b9","DAL2453 ","United States",1679397461,1679397462,-86.5222,36.7993,10675.62,!1,222.36,191.21,0,null,10675.62,"6551",!1,0],["406250","BAW42Y  ","United Kingdom",1679397462,1679397462,4.8124,46.1979,6911.34,!1,201.05,335.99,10.4,null,7071.36,null,!1,0],["48d961","PLF106  ","Poland",1679397462,1679397462,31.9805,42.5917,11887.2,!1,252.39,98.68,0,null,11856.72,"5550",!1,0],["405b65","EZY876Q ","United Kingdom",1679397462,1679397462,-3.0403,55.9601,1440.18,!1,122.5,354.46,-1.95,null,1371.6,"6213",!1,0],["40756e","EZY18XF ","United Kingdom",1679397462,1679397462,-4.3918,47.9579,10058.4,!1,234.62,197.48,-.65,null,10142.22,"2217",!1,0],["485000","KLM713  ","Kingdom of the Netherlands",1679397462,1679397462,-26.497,37.1479,10363.2,!1,255.61,234.01,.33,null,10774.68,null,!1,0],["a3725a","DAL1494 ","United States",1679397462,1679397462,-80.4345,27.0177,3855.72,!1,185.64,329.53,4.88,null,4000.5,null,!1,0],["347347","AEA49RE ","Spain",1679397462,1679397462,2.7843,39.7039,12496.8,!1,227.72,259.32,-.33,null,12771.12,null,!1,0],["40756a","EZY96AQ ","United Kingdom",1679397462,1679397462,31.2494,35.6204,8389.62,!1,247.41,133.82,-16.58,null,8542.02,null,!1,0],["ab2ae1","OAE512  ","United States",1679397462,1679397462,-127.7777,50.6551,12496.8,!1,239.05,154.1,0,null,12100.56,null,!1,0],["347344","IBE32MY ","Spain",1679397462,1679397462,-1.6363,43.5536,10363.2,!1,253.5,24.33,0,null,10507.98,"3372",!1,0],["e49948","CO111   ","Brazil",1679397462,1679397462,-47.695,-21.7559,2026.92,!1,67.72,132.54,-4.23,null,2156.46,null,!1,0],["44f687","GRZLY01 ","Belgium",1679397462,1679397462,-.7885,43.4128,3657.6,!1,104.6,237.25,.33,null,3787.14,null,!1,0],["40622b","EZY49DR ","United Kingdom",1679397462,1679397462,22.6722,43.0783,10668,!1,224.18,136.67,.33,null,10698.48,"5032",!1,0],["a455ea","HAL446  ","United States",1679397307,1679397356,176.0716,-34.9278,11277.6,!1,245.28,33.19,-.33,null,11567.16,null,!1,0],["abdd4a","SWA3431 ","United States",1679397462,1679397462,-95.8132,32.6615,8275.32,!1,258.6,94.68,11.38,null,8450.58,null,!1,0],["4408a2","EJU95PM ","Austria",1679397462,1679397463,9.3669,48.9993,11277.6,!1,207.73,216.64,0,null,11346.18,"1127",!1,0],["71c293","AAR739  ","Republic of Korea",1679397460,1679397461,126.757,35.6431,10424.16,!1,225.62,184.84,6.5,null,10599.42,null,!1,0],["a993f1","SKW4926 ","United States",1679397461,1679397462,-97.1814,35.7361,4930.14,!1,174.16,190.38,17.23,null,4953,null,!1,0],["ad1d3a","NKS268  ","United States",1679397462,1679397462,-101.0041,33.8887,11574.78,!1,181.07,282.97,.33,null,11757.66,null,!1,0],["e49958","GLO1395 ","Brazil",1679397386,1679397388,-46.7048,-23.2901,2491.74,!1,123.32,192.53,-5.85,null,2651.76,null,!1,0],["a9335a","NKS1234 ","United States",1679397462,1679397462,-83.9788,33.3382,11574.78,!1,218.12,7.86,0,null,11734.8,"3626",!1,0],["407569","EZY96VP ","United Kingdom",1679397462,1679397462,3.0673,48.9176,11582.4,!1,223.85,328.25,-.33,null,11620.5,"5776",!1,0],["3423c4","IBE32VR ","Spain",1679397462,1679397462,12.0404,41.732,1516.38,!1,141.72,240.18,13.66,null,1584.96,null,!1,0],["400be5","BAW457  ","United Kingdom",1679397462,1679397462,-2.0166,48.5498,10965.18,!1,215.94,10.29,.33,null,10995.66,"5327",!1,0],["3423c3","IBE34PW ","Spain",1679397461,1679397462,-3.1211,41.5218,6728.46,!1,224.69,10.82,8.13,null,6903.72,null,!1,0],["40621d","BAW139  ","United Kingdom",1679397462,1679397462,14.2006,48.6311,10668,!1,268.02,114.25,0,null,10698.48,"3463",!1,0],["a50e3f","AAL1259 ","United States",1679397462,1679397462,-71.161,41.4253,7924.8,!1,218.16,230.45,0,null,7802.88,"1456",!1,0],["4a0c21","YRCAA   ","Romania",1679397461,1679397461,25.2134,44.437,3291.84,!1,132.92,119.44,-6.18,null,3345.18,null,!1,0],["71c282","AAR745  ","Republic of Korea",1679397461,1679397462,126.1506,37.404,3246.12,!1,155.53,161.09,4.23,null,3284.22,null,!1,0],["a322cb","JBU984  ","United States",1679397462,1679397462,-78.6482,36.0501,3101.34,!1,151.61,38.39,8.45,null,3162.3,"0551",!1,0],["71c286","AAR735  ","Republic of Korea",1679397462,1679397462,126.4808,37.111,5021.58,!1,205.99,159.08,10.73,null,5097.78,null,!1,0],["e48624","PRALU   ","Brazil",1679397461,1679397461,-43.3015,-22.8874,914.4,!1,88.74,94.32,-6.5,null,1150.62,null,!1,0],["3424d2","VLG76WL ","Spain",1679397462,1679397462,-5.6856,35.2404,10439.4,!1,211.03,216.67,5.53,null,10789.92,null,!1,0],["3424d5","VLG7WJ  ","Spain",1679397462,1679397462,4.9333,41.9443,10972.8,!1,236.15,43.68,0,null,11201.4,"1041",!1,0],["c0168e","CFIOB   ","Canada",1679397462,1679397462,-80.8153,43.8688,5692.14,!1,91.8,324.35,5.2,null,5593.08,"4717",!1,0],["a33716","AAL2402 ","United States",1679397462,1679397462,-80.226,25.691,2324.1,!1,124.26,295.5,-5.2,null,2438.4,null,!1,0],["c050c0","ACA401  ","Canada",1679397462,1679397462,-73.7302,45.4693,null,!0,7.72,42.19,null,null,null,null,!1,0],["ad35dd","NKS333  ","United States",1679397462,1679397462,-85.7806,41.1976,10363.2,!1,213.67,276.08,0,null,10241.28,"7465",!1,0],["ab92ed","FDX9171 ","United States",1679397462,1679397463,118.8172,23.1174,9753.6,!1,218.78,237.58,0,null,10256.52,null,!1,0],["346105","REECNAA ","Spain",1679397462,1679397462,-8.6433,43.5207,175.26,!1,61.14,329.12,-2.6,null,297.18,null,!1,0],["ab92ee","BVN8515 ","United States",1679397456,1679397458,-86.1843,33.1452,2644.14,!1,84.43,120.78,0,null,2712.72,null,!1,0],["ade862","MRA636  ","United States",1679397462,1679397462,-77.7476,35.9111,2011.68,!1,85.4,89.65,0,null,2072.64,"5341",!1,0],["e484f8","GLO1529 ","Brazil",1679397153,1679397153,-46.6028,-23.47,1325.88,!1,93.83,93.77,-4.23,null,1501.14,null,!1,0],["a8754d","NKS1199 ","United States",1679397462,1679397462,-96.1688,30.0914,6057.9,!1,196.26,284.11,8.13,null,6263.64,"2477",!1,0],["070181","SZN427  ","Senegal",1679397462,1679397462,-4.1267,37.2555,10660.38,!1,212.59,203.84,-.33,null,10927.08,"6762",!1,0],["34740f","AEA54CM ","Spain",1679397462,1679397462,-1.2993,40.7302,8237.22,!1,184.25,249.74,-5.2,null,8488.68,"4017",!1,0],["a0d706","N153TJ  ","United States",1679397462,1679397462,-86.3775,28.2184,11277.6,!1,242.4,108.43,.33,null,11635.74,"2526",!1,0],["40137c","GRBRI   ","United Kingdom",1679397462,1679397462,-2.39,53.4849,274.32,!1,43.24,2.05,5.85,null,236.22,null,!1,0],["a8ab1a","AJT588  ","United States",1679397462,1679397462,-76.5552,42.4905,11887.2,!1,267.15,81.81,.65,null,11673.84,"6706",!1,0],["3d0fc9","DEEFP   ","Germany",1679397460,1679397461,10.2326,48.8176,899.16,!1,46.52,240.88,.33,null,967.74,"7000",!1,0],["a73b7e","SWA2809 ","United States",1679397462,1679397462,-98.1471,32.6455,10370.82,!1,187.61,264.49,0,null,10576.56,null,!1,0],["a05a01","UAL887  ","United States",1679397461,1679397461,-80.0043,33.4635,10058.4,!1,248.91,20.57,0,null,10165.08,"7423",!1,0],["c00378","CFBID   ","Canada",1679397462,1679397462,-86.1183,30.3973,1562.1,!1,125.14,97.8,-6.5,null,1630.68,"2474",!1,0],["407512","TOM636  ","United Kingdom",1679397462,1679397462,-1.2155,51.8685,5760.72,!1,187.59,156.74,9.1,null,5707.38,"1452",!1,0],["a18d60","N2AQ    ","United States",1679397461,1679397461,-84.5582,33.81,426.72,!1,35.08,85.79,-.33,null,502.92,"1200",!1,0],["a1dd2d","RPA5717 ","United States",1679397462,1679397462,-77.8668,41.1807,10058.4,!1,266.49,99.44,-.33,null,9936.48,"6607",!1,0],["a3c259","EDV5004 ","United States",1679397462,1679397462,-74.9456,39.8698,4808.22,!1,197.34,34.27,-12.68,null,4792.98,"2652",!1,0],["a20433","UAL41   ","United States",1679397461,1679397462,1.9874,50.3998,9753.6,!1,242.34,322.16,0,null,9730.74,"4015",!1,0],["a4db51","FDY470  ","United States",1679397462,1679397462,-86.6169,42.0235,2377.44,!1,77.29,221.22,-1.63,null,2369.82,"2443",!1,0],["7804c6","CSG2532 ","China",1679397462,1679397462,18.2613,59.6509,10058.4,!1,259.33,64.5,0,null,9837.42,"1415",!1,0],["a144e5","FDX1754 ","United States",1679397458,1679397459,-105.0885,36.822,10972.8,!1,202.03,253.73,0,null,10995.66,"0166",!0,0],["406e11","VIR187Q ","United Kingdom",1679397462,1679397462,-1.1409,51.1944,4381.5,!1,190.18,218.08,8.45,null,4381.5,"1471",!1,0],["a695ea","AAL2020 ","United States",1679397270,1679397379,-81.5138,34.4951,4206.24,!1,142.41,63.16,-2.93,null,4267.2,"7445",!1,0],["a9a8c7","N721RN  ","United States",1679397462,1679397462,-85.5574,41.8459,11109.96,!1,192.54,182.14,10.08,null,10919.46,"3175",!1,0],["a86e35","RPA3486 ","United States",1679397455,1679397460,-87.9208,41.9679,null,!0,0,354.38,null,null,null,"4265",!1,0],["a264a4","SWA365  ","United States",1679397462,1679397462,-78.7662,39.3765,11582.4,!1,199.01,247.35,0,null,11468.1,"3020",!1,0],["a682e3","JIA5158 ","United States",1679397461,1679397461,-93.2912,41.4167,4831.08,!1,173.77,93.9,12.68,null,4762.5,null,!1,0],["8991e4","SJX205  ","Taiwan",1679397462,1679397462,114.2488,22.2389,5844.54,!1,188.58,248.05,-5.2,null,6134.1,null,!1,0],["a9d0fe","RPA3679 ","United States",1679397462,1679397462,-77.6395,37.7371,10058.4,!1,217.44,35.76,.33,null,10035.54,"3110",!1,0],["8991de","SJX732  ","Taiwan",1679397462,1679397462,120.597,24.4611,6004.56,!1,207.69,38.26,-7.8,null,6301.74,null,!1,0],["a74e7a","ASA110  ","United States",1679397462,1679397463,-124.6339,49.6376,11277.6,!1,216.9,140,0,null,10896.6,null,!1,0],["c050a0","WEN3513 ","Canada",1679397462,1679397462,-79.0095,43.9046,2377.44,!1,111.02,227.07,-7.8,null,2354.58,"6514",!1,0],["4ba869","THY6532 ","Turkey",1679397462,1679397462,29.749,40.7329,6454.14,!1,224.31,90.53,4.55,null,6568.44,null,!1,0],["3c8190","FM4     ","Germany",1679397152,1679397152,12.2093,51.4236,null,!0,14.4,14.06,null,null,null,null,!1,0],["c063c3","CGLUG   ","Canada",1679397462,1679397462,-76.3569,45.0785,2827.02,!1,54.01,220.36,3.58,null,2758.44,null,!1,0],["7c42ce","NWK2997 ","Australia",1679397462,1679397462,116.3882,-31.1773,4953,!1,193.43,198.77,-14.63,null,5227.32,"3701",!1,0],["a68414","NKS3066 ","United States",1679397426,1679397434,-81.3265,28.3998,45.72,!1,57.62,0,-3.58,null,114.3,"0323",!1,0],["406cd2","EZY19FY ","United Kingdom",1679397462,1679397462,-8.336,42.3376,10972.8,!1,205.68,21.88,.33,null,11186.16,"5470",!1,0],["a527f2","N431MK  ","United States",1679397461,1679397462,-74.3055,40.6866,182.88,!1,69.49,70.09,0,null,266.7,"0322",!1,0],["4d22d5","THY20H  ","Malta",1679397462,1679397463,11.3263,48.3547,6598.92,!1,183.52,289.15,-4.55,null,6713.22,"3243",!1,0],["a2adf4","ASA172  ","United States",1679397461,1679397462,-122.8079,46.6346,10668,!1,225.98,154.66,.33,null,10317.48,"6463",!1,0],["3fef1b","DMSMG   ","Germany",1679397462,1679397462,10.0291,47.8539,845.82,!1,39.93,51.8,-2.93,null,914.4,"7000",!1,0],["3fef1e","","Germany",1679397462,1679397462,9.3768,48.0564,null,!1,0,0,0,null,585,null,!1,3],["a8b29f","N66HR   ","United States",1679397461,1679397462,2.7065,39.6026,null,!0,null,171.56,null,null,null,null,!1,0],["7c42e4","NWK1625 ","Australia",1679397447,1679397447,115.9622,-31.9419,null,!0,10.8,14.06,null,null,null,"4303",!1,0],["a2a1a5","ENY3604 ","United States",1679397462,1679397462,-94.4299,35.8408,4579.62,!1,179.19,200.15,9.1,null,4602.48,"1637",!1,0],["a3376c","UPS892  ","United States",1679397461,1679397462,-112.2013,37.0728,10972.8,!1,172.45,251.02,0,null,10919.46,null,!1,0],["aa7409","SWA3507 ","United States",1679397462,1679397462,-81.819,42.2998,12496.8,!1,259.19,82.93,0,null,12291.06,"3115",!1,0],["406cab","EXS57DY ","United Kingdom",1679397427,1679397446,-14.9677,29.3823,10149.84,!1,199.63,197.55,-7.8,null,10469.88,null,!1,0],["4073a1","EZY402K ","United Kingdom",1679397462,1679397462,-5.8148,54.7647,1516.38,!1,95.51,244.82,-2.93,null,1440.18,"1141",!1,0],["406caa","EXS48NA ","United Kingdom",1679397463,1679397463,25.416,40.8733,11277.6,!1,233.59,136.25,0,null,11323.32,"4640",!1,0],["ac7836","N902SM  ","United States",1679397462,1679397462,-81.6111,27.7795,8534.4,!1,109.51,321.68,0,null,8877.3,"7441",!1,0],["4d22e7","HYP032  ","Malta",1679397462,1679397462,8.9045,56.9426,12496.8,!1,207.94,10.84,0,null,12367.26,"7135",!1,0],["4ca246","RYR9794 ","Ireland",1679397448,1679397451,20.7686,65.4814,11574.78,!1,214.15,239.86,.65,null,11064.24,null,!1,0],["a18d9e","N2DB    ","United States",1679397462,1679397462,-104.779,40.374,2209.8,!1,88.98,15.08,0,null,2103.12,null,!1,0],["4073a0","EZY61ML ","United Kingdom",1679397462,1679397462,2.1461,51.0635,10980.42,!1,249.11,101.8,4.55,null,10942.32,"5236",!1,0],["8418cc","JAL335  ","Japan",1679397462,1679397462,138.0937,35.5596,11269.98,!1,193.53,274.57,.98,null,11437.62,"1706",!1,0],["43e949","MOLLY   ","United Kingdom",1679397458,1679397458,18.8622,45.3418,6918.96,!1,198,121.83,-7.15,null,6995.16,"6410",!1,0],["c06fd3","JZA666  ","Canada",1679397462,1679397462,-76.0245,44.3222,7315.2,!1,182.76,186.46,0,null,7078.98,"6241",!1,0],["4d22ab","AMC515  ","Malta",1679397462,1679397462,14.7499,35.9469,2971.8,!1,149.21,162.75,-8.45,null,3086.1,"7122",!1,0],["390cc9","FGDGJ   ","France",1679397462,1679397462,2.1134,48.7521,121.92,!1,0,0,0,null,205.74,null,!1,0],["4d22b7","RYR9EE  ","Malta",1679397462,1679397462,14.6721,47.0646,9540.24,!1,208.48,59.45,-4.88,null,9616.44,"1000",!1,0],["ab2b23","DAL1267 ","United States",1679397461,1679397462,-80.1582,25.8642,1402.08,!1,140.97,359.16,9.43,null,1478.28,null,!1,0],["4d22b2","RYR3GH  ","Malta",1679397462,1679397462,14.4365,48.4896,9715.5,!1,215.18,286.53,7.8,null,9761.22,"2652",!1,0],["4ca214","EIN2LA  ","Ireland",1679397462,1679397462,-4.3294,53.4096,8336.28,!1,260.8,93.51,7.15,null,8298.18,"6313",!1,0],["39ac06","BLT953R ","France",1679397456,1679397456,1.3146,47.3778,2133.6,!1,58.28,4.05,0,null,2202.18,null,!1,0],["a66a13","NKS346  ","United States",1679397459,1679397461,-79.3189,34.2295,11574.78,!1,201.56,216.49,.33,null,11689.08,"7076",!1,0],["4ca216","EIN60T  ","Ireland",1679397462,1679397462,4.6383,52.5627,723.9,!1,111.02,53.29,-6.18,null,754.38,"2032",!1,0],["c00305","CFBDS   ","Canada",1679397423,1679397423,.0429,60.981,11582.4,!1,228.71,312.27,0,null,11391.9,"1340",!1,0],["ab3214","AAL1784 ","United States",1679397462,1679397462,-81.4092,35.8417,4930.14,!1,172.19,151.44,-6.18,null,5006.34,"3762",!1,0],["406ca3","AWC791  ","United Kingdom",1679397462,1679397462,-8.3729,35.7894,10668,!1,220.97,194.42,0,null,11018.52,"5411",!1,0],["ae0812","RCH4132 ","United States",1679397462,1679397462,5.5231,46.4636,8229.6,!1,221.69,227.16,.98,null,8404.86,"4014",!1,0],["a24aca","JBU233  ","United States",1679397462,1679397462,-73.7158,40.6952,259.08,!1,74.29,210.83,-4.23,null,335.28,"3455",!1,0],["a1d105","ENY3976 ","United States",1679397459,1679397462,-93.399,37.2538,350.52,!1,33.34,141.89,0,null,358.14,null,!1,0],["4d22bc","RYR50ZR ","Malta",1679397462,1679397463,6.2997,50.6909,11574.78,!1,213.63,290.88,-.33,null,11582.4,"3540",!1,0],["ab8bb7","VTE3711 ","United States",1679397462,1679397462,-81.0624,35.1463,2225.04,!1,118.57,176.27,-7.48,null,2301.24,"4104",!1,0],["ab586f","AAL1333 ","United States",1679397462,1679397462,-84.4089,35.7479,9448.8,!1,242.7,176.72,0,null,9479.28,"6630",!1,0],["4d22c3","RYR3CW  ","Malta",1679397462,1679397462,7.4692,43.6393,11582.4,!1,234.55,47.84,.33,null,11750.04,"1000",!1,0],["a32437","DAL1740 ","United States",1679397457,1679397457,-73.8583,40.7715,null,!0,1.8,120.94,null,null,null,null,!1,0],["401f41","GODAC   ","United Kingdom",1679397462,1679397462,-1.2528,52.9288,624.84,!1,37.68,274.7,-1.95,null,594.36,"4550",!1,0],["a0c45d","N149CM  ","United States",1679397462,1679397462,-100.1809,33.9494,4274.82,!1,99.77,312.49,0,null,4297.68,"2457",!1,0],["4ca225","RYR530X ","Ireland",1679397462,1679397462,5.2718,49.6268,6705.6,!1,202.73,265.78,0,null,6804.66,"4124",!1,0],["4ca226","RYR6417 ","Ireland",1679397462,1679397462,6.9193,56.1488,10972.8,!1,206.24,264.42,0,null,10888.98,"2202",!1,0],["4ca281","EIN40X  ","Ireland",1679397462,1679397462,11.3057,43.436,10050.78,!1,207.35,314.6,5.53,null,10203.18,"1236",!1,0],["4ca280","EIN42N  ","Ireland",1679397462,1679397462,7.723,47.3437,10972.8,!1,207.94,289.51,0,null,11102.34,"2774",!1,0],["342591","VLG8DU  ","Spain",1679397390,1679397390,-8.3028,34.7633,10668,!1,210.67,231.84,0,null,11033.76,null,!1,0],["a42a5c","DAL393  ","United States",1679397462,1679397462,-84.7326,39.0463,739.14,!1,92.1,269.04,5.53,null,807.72,null,!1,0],["a7a59f","JBU2701 ","United States",1679397462,1679397462,-75.9303,36.8521,10363.2,!1,214.78,209.88,.33,null,10393.68,"3361",!1,0],["ad6b14","DAL2033 ","United States",1679397462,1679397462,-84.649,33.6493,1089.66,!1,85.4,89.65,0,null,1165.86,"2115",!1,0],["acae2e","AAL604  ","United States",1679397463,1679397463,-98.5864,26.5616,5836.92,!1,198.21,320.9,11.38,null,6050.28,null,!1,0],["341258","M3      ","Spain",1679397462,1679397462,-3.5736,40.4517,null,!0,7.72,255.94,null,null,null,null,!1,0],["4ca294","EIN681  ","Ireland",1679397462,1679397462,-1.3628,51.5089,10972.8,!1,210.16,281.01,-.33,null,10957.56,"5767",!1,0],["4ca293","EIN5KE  ","Ireland",1679397462,1679397462,-3.6132,40.5772,1562.1,!1,98.54,310.34,4.55,null,1691.64,null,!1,0],["aabbd2","ATN3230 ","United States",1679397461,1679397462,-78.4724,41.2491,10363.2,!1,198.71,248.75,0,null,10165.08,"1451",!1,0],["342581","VLG1641 ","Spain",1679397462,1679397462,-8.7717,42.3928,5082.54,!1,169.74,12.6,-9.43,null,5288.28,"6254",!1,0],["4ca295","EIN4XH  ","Ireland",1679397462,1679397462,-9.1301,38.7915,205.74,!1,80.86,23.63,13,null,312.42,null,!1,0],["a44477","UPS858  ","United States",1679397462,1679397462,-111.9641,33.5837,2659.38,!1,133.28,237.29,-9.1,null,2636.52,null,!1,0],["c05d9d","WJA329  ","Canada",1679397462,1679397462,-79.4094,43.8533,1363.98,!1,116.24,196.19,-2.28,null,1363.98,"7234",!1,0],["a85b94","N638BG  ","United States",1679397462,1679397462,-96.4591,32.6556,3878.58,!1,167.28,64.3,17.88,null,3977.64,null,!1,0],["e497e7","GLO1962 ","Brazil",1679397280,1679397281,-47.9447,-24.7829,10972.8,!1,227.93,263.26,0,null,11597.64,null,!1,0],["4ca27f","EIN6AP  ","Ireland",1679397151,1679397151,-6.2471,53.4218,null,!0,7.72,95.62,null,null,null,"4421",!1,0],["4ca27d","RYR8324 ","Ireland",1679397462,1679397462,.5895,41.263,11262.36,!1,235.48,11.21,3.9,null,11483.34,null,!1,0],["49d283","SWG535  ","Czech Republic",1679397462,1679397462,-80.0647,39.3001,10972.8,!1,225,182.36,0,null,10873.74,"2261",!1,0],["abeeea","SWA1228 ","United States",1679397461,1679397461,-84.0658,37.7127,9745.98,!1,211.14,231.23,0,null,9707.88,null,!1,0],["a31d98","N30GJ   ","United States",1679397462,1679397462,-83.1638,29.611,12192,!1,203.04,326.47,-.33,null,12519.66,"3620",!1,0],["a491af","EJM159  ","United States",1679397462,1679397462,-75.4377,39.9774,13106.4,!1,201.56,251.7,0,null,13014.96,"7103",!1,0],["a9cb47","KII833  ","United States",1679397462,1679397462,-85.76,39.3616,7254.24,!1,216.07,297.66,9.43,null,7200.9,null,!1,0],["479d40","NOZ8430 ","Norway",1679397461,1679397462,3.5259,50.3,11277.6,!1,217.9,207.41,-.33,null,11269.98,"0756",!1,0],["4ca258","RYR91PP ","Ireland",1679397462,1679397462,3.5342,41.5523,11582.4,!1,248.64,77.57,0,null,11803.38,"5506",!1,0],["49d294","OKWYZ   ","Czech Republic",1679397457,1679397457,14.303,50.1195,null,!0,0,284.06,null,null,null,"2000",!1,0],["e497c1","P74     ","Brazil",1679397449,1679397453,-42.1192,-23.0525,251.46,!1,59.7,18.59,-.65,null,274.32,null,!1,0],["e497c0","","Brazil",1679397461,1679397461,-42.2256,-23.3435,1059.18,!1,74.51,18.94,0,null,1120.14,null,!1,0],["a07fa6","RPA4375 ","United States",1679397462,1679397462,-85.8198,39.2864,7924.8,!1,215.88,5.06,-.33,null,7886.7,null,!1,0],["a01f0d","DAL1061 ","United States",1679397462,1679397462,-83.0696,35.9747,10675.62,!1,236.96,171.89,-.33,null,10706.1,"0661",!1,0],["3d2905","DENUB   ","Germany",1679397461,1679397462,11.6097,49.9967,1143,!1,45.6,191.06,-.65,null,1203.96,"7744",!1,0],["781940","CSN5233 ","China",1679397462,1679397462,-79.7899,43.8363,2179.32,!1,132.28,82.63,-8.45,null,2164.08,"3661",!1,0],["3fed6a","DMKIW   ","Germany",1679397462,1679397462,12.7829,47.2901,739.14,!1,35.06,75.56,-.33,null,845.82,null,!1,0],["3ff461","DMBLO   ","Germany",1679397462,1679397462,10.2677,48.561,861.06,!1,52.02,177.17,-.33,null,929.64,"7000",!1,0],["71c354","TWB302  ","Republic of Korea",1679397462,1679397462,127.2387,37.2016,3939.54,!1,146.99,260.74,-5.2,null,4015.74,null,!1,0],["44b865","OONCE   ","Belgium",1679397429,1679397429,4.7782,50.4927,198.12,!1,32.23,241.39,-3.58,null,297.18,"2000",!1,0],["a2edb4","SWA3508 ","United States",1679397462,1679397462,-84.472,27.8292,11277.6,!1,268.93,86.93,0,null,11650.98,"2423",!1,0],["a0fd55","FDX1429 ","United States",1679397377,1679397377,-113.8224,38.4635,12192,!1,206.18,273.58,0,null,12131.04,"1640",!1,0],["406b82","BAW2668 ","United Kingdom",1679397462,1679397462,-7.8373,36.3385,10668,!1,221.29,185.74,0,null,11026.14,"2706",!1,0],["406b83","BAW27WA ","United Kingdom",1679397461,1679397462,-16.1424,32.105,10668,!1,224.55,206.98,0,null,11003.28,null,!1,0],["406b80","BAW2738 ","United Kingdom",1679397462,1679397462,6.033,46.5703,3352.8,!1,157.48,96.75,-9.43,null,3497.58,"0524",!1,0],["86d310","ANA649  ","Japan",1679397462,1679397462,134.199,34.5973,12192,!1,196.7,248.2,.33,null,12428.22,"1730",!1,0],["406b84","BAW2655 ","United Kingdom",1679397462,1679397462,11.016,49.3117,9753.6,!1,219.52,295.54,0,null,9867.9,"6664",!1,0],["a30daf","LAK296  ","United States",1679397230,1679397234,-71.197,38.5052,12496.8,!1,223.77,136.21,0,null,12527.28,"2716",!1,0],["abb089","UAL2013 ","United States",1679397462,1679397462,-80.9052,42.5124,11574.78,!1,199.77,272.36,0,null,11369.04,"1650",!1,0],["3ff473","DMYLF   ","Germany",1679397352,1679397352,12.1533,48.9417,502.92,!1,33.82,56.79,-.33,null,null,null,!1,0],["406b6c","CFE53NR ","United Kingdom",1679397462,1679397462,-4.1175,53.7537,8938.26,!1,253.59,124.75,2.28,null,8869.68,"5214",!1,0],["a47d05","DAL1290 ","United States",1679397462,1679397462,-78.7316,38.8495,7391.4,!1,212.62,255.43,7.15,null,7399.02,"0566",!1,0],["471841","VTB600  ","Hungary",1679397462,1679397462,-3.9592,51.9687,12192,!1,212.72,280.17,0,null,12176.76,"3556",!1,0],["398699","DJT100  ","France",1679397462,1679397462,-5.3177,50.2604,10972.8,!1,214.83,312.48,0,null,11010.9,"5625",!1,0],["3002ae","DFL5720 ","Italy",1679397319,1679397322,18.0319,59.3494,null,!0,0,239.06,null,null,null,null,!1,0],["880c49","AIQ3018 ","Thailand",1679397462,1679397462,100.2899,13.1531,7033.26,!1,209.05,2.4,-10.73,null,7444.74,"4561",!1,0],["880c44","AIQ3373 ","Thailand",1679397462,1679397462,100.6583,14.2143,1554.48,!1,111.94,164.81,-5.2,null,1584.96,"3366",!1,0],["406b5c","BAW7TL  ","United Kingdom",1679397462,1679397462,-8.9485,37.1754,10675.62,!1,216.59,195.85,.33,null,10995.66,"5401",!1,0],["78195b","CSZ9622 ","China",1679397462,1679397462,113.2375,23.0089,3627.12,!1,162.36,142.98,-5.85,null,3771.9,null,!1,0],["a2a720","N270GP  ","United States",1679397462,1679397462,-89.649,40.8423,7566.66,!1,229.54,45.09,-10.4,null,7482.84,"2376",!1,0],["aa4089","N76PW   ","United States",1679397462,1679397462,-106.46,38.2179,12504.42,!1,301.11,68.34,-9.75,null,12451.08,"2623",!1,0],["a90b86","N682K   ","United States",1679397462,1679397462,-83.8778,35.7964,10972.8,!1,230.7,14.07,0,null,10995.66,"2021",!1,0],["48b048","BNI6L   ","Poland",1679397461,1679397462,19.2651,51.8361,1501.14,!1,57.31,106.16,.33,null,1516.38,null,!1,0],["407e7a","GXITE   ","United Kingdom",1679397462,1679397462,-1.3149,51.7334,601.98,!1,55.22,111.31,0,null,586.74,null,!1,0],["407e7b","TOM49B  ","United Kingdom",1679397461,1679397462,-10.7203,39.7828,10058.4,!1,249.6,211.43,0,null,10317.48,"1070",!1,0],["486071","KLM602  ","Kingdom of the Netherlands",1679397462,1679397462,4.7398,52.3002,null,!0,11.83,47.81,null,null,null,"6334",!1,0],["ac08d4","SWA3272 ","United States",1679397253,1679397253,-98.7753,39.0776,11582.4,!1,201.91,263.56,0,null,11475.72,"2145",!1,0],["406b59","BAW2737 ","United Kingdom",1679397462,1679397462,5.3438,50.3502,11574.78,!1,226.15,317.67,-.33,null,11605.26,"5704",!1,0],["a22a07","ATN3304 ","United States",1679397462,1679397462,-84.6686,39.0776,259.08,!1,61.23,180.96,-3.58,null,335.28,"3535",!1,0],["407e82","RUK9QZ  ","United Kingdom",1679397462,1679397462,1.7276,44.1703,4053.84,!1,147.72,187,-5.2,null,4191,"6316",!1,0],["71c360","AAR733  ","Republic of Korea",1679397462,1679397462,126.642,36.6573,7254.24,!1,239.86,164.83,7.15,null,7383.78,null,!1,0],["a89b9b","PDT5967 ","United States",1679397462,1679397462,-79.6359,37.2383,4282.44,!1,176.16,87.15,5.2,null,4328.16,null,!1,0],["800b11","IGO469  ","India",1679397462,1679397462,76.6972,23.0399,10980.42,!1,192.81,332.68,0,null,11369.04,null,!1,0],["4d2311","THY94D  ","Malta",1679397462,1679397462,14.3692,46.7741,10980.42,!1,207.06,296.25,0,null,11033.76,"5310",!1,0],["a7824e","DAL1066 ","United States",1679397463,1679397463,-82.2836,35.8262,10668,!1,234.13,1.26,0,null,10668,"3105",!1,0],["800b14","IGO6038 ","India",1679397292,1679397462,88.4484,22.6602,null,!0,2.83,275.62,null,null,null,"2653",!1,0],["48b036","SPMBX   ","Poland",1679397461,1679397462,20.2211,50.102,365.76,!1,54.43,172.94,-1.3,null,419.1,"7000",!1,0],["155c62","AZO848  ","Russian Federation",1679397457,1679397460,49.5549,50.8549,10363.2,!1,230.09,358.08,1.63,null,10309.86,null,!1,0],["800b0a","IAD745  ","India",1679397425,1679397425,77.695,23.1012,10972.8,!1,205.84,221.86,0,null,11369.04,null,!1,0],["a3778e","UPS974  ","United States",1679397462,1679397462,-115.4077,45.8338,11590.02,!1,228.54,268.07,0,null,11224.26,null,!1,0],["a1115b","WAE7    ","United States",1679397461,1679397461,-116.8493,47.746,3406.14,!1,75.49,75.4,1.3,null,3284.22,null,!1,0],["a972be","SKW3232 ","United States",1679397462,1679397462,-89.2135,42.878,3009.9,!1,164.13,173.52,0,null,2964.18,null,!1,0],["a77b6f","UPS108  ","United States",1679397266,1679397270,-101.6769,48.538,9753.6,!1,240.92,316.73,0,null,9395.46,"4041",!1,0],["47a389","WIF1    ","Norway",1679397462,1679397462,14.2616,67.1027,2080.26,!1,81.86,13.08,-6.83,null,1950.72,null,!1,0],["155c5b","AZO7025 ","Russian Federation",1679397462,1679397462,32.8336,33.428,10111.74,!1,237.63,172.54,-4.88,null,10279.38,"2356",!1,0],["ab1211","N812PB  ","United States",1679397462,1679397462,-96.9688,32.4826,6705.6,!1,139.58,201.17,0,null,6842.76,null,!1,0],["ad7828","SWA110  ","United States",1679397462,1679397462,-82.3811,29.6602,11582.4,!1,225.43,343.43,0,null,11910.06,"1646",!1,0],["86960c","ANA299  ","Japan",1679397461,1679397462,135.4298,35.6849,5059.68,!1,183.14,270.32,-12.68,null,5189.22,"3470",!1,0],["adf06d","DAL2107 ","United States",1679397462,1679397462,-88.6604,34.82,6682.74,!1,237.61,101.87,5.53,null,6766.56,null,!1,0],["a8f235","EDV5266 ","United States",1679397462,1679397462,-85.5245,38.0798,7124.7,!1,184.73,274.47,11.7,null,7132.32,null,!1,0],["a1c1c7","RPA5855 ","United States",1679397461,1679397462,-79.4221,37.0345,9753.6,!1,213.45,214,-.33,null,9753.6,"1503",!1,0],["71c304","JJA191  ","Republic of Korea",1679397350,1679397352,126.7567,35.6385,7315.2,!1,221.05,185.07,.33,null,7482.84,null,!1,0],["ab120b","DAL57   ","United States",1679397462,1679397462,1.1921,57.51,10363.2,!1,256.84,336.26,0,null,10203.18,"2123",!1,0],["71c302","JJA1107 ","Republic of Korea",1679397462,1679397462,140.0447,35.7961,7513.32,!1,191.02,309.86,10.4,null,7650.48,"3612",!1,0],["4d2320","LWG1954 ","Malta",1679397462,1679397462,9.8103,51.8645,7315.2,!1,180.71,357.72,0,null,7406.64,"5055",!1,0],["4cacb4","SAS4609 ","Ireland",1679397462,1679397462,1.5066,55.8831,11590.02,!1,216.31,254.41,0,null,11460.48,"5221",!1,0],["4405ab","GAC666L ","Austria",1679397462,1679397462,4.6368,50.9506,609.6,!1,88.76,239.72,.33,null,655.32,"2371",!1,0],["a35d59","AJT8114 ","United States",1679397461,1679397461,-72.2904,22.1833,10972.8,!1,223.4,296.98,0,null,11559.54,null,!1,0],["df0a98","","",1679397460,1679397460,11.944,48.4587,null,!1,2.24,45.22,0,null,467,null,!1,3],["71c334","","Republic of Korea",1679397386,1679397386,130.9982,35.3306,7078.98,!1,175.86,262.6,-5.53,null,null,null,!1,0],["ac5868","FDX77   ","United States",1679397462,1679397462,-122.221,37.714,null,!0,5.14,227.81,null,null,null,null,!1,0],["71c336","JJA1103 ","Republic of Korea",1679397309,1679397311,130.3732,35.8685,10363.2,!1,178.9,278.43,.33,null,10523.22,null,!1,0],["a6ab93","NKS1107 ","United States",1679397462,1679397462,-80.9094,29.9327,10347.96,!1,211.97,173.03,0,null,10637.52,null,!1,0],["a8aef3","JBU299  ","United States",1679397462,1679397462,-75.2994,38.961,9753.6,!1,213.3,207.43,.33,null,9700.26,"2757",!1,0],["4d2303","RYR2KC  ","Malta",1679397462,1679397462,15.1309,39.5099,11582.4,!1,214.62,8.13,0,null,11658.6,null,!1,0],["155c5c","AZO509  ","Russian Federation",1679397274,1679397461,52.208,47.3458,10675.62,!1,646.26,118.12,0,null,10515.6,null,!1,0],["4d2300","RYR83UX ","Malta",1679397462,1679397462,-9.2768,35.6086,10972.8,!1,246.42,36.51,0,null,11315.7,null,!1,0],["780684","","China",1679397337,1679397337,115.9941,21.6112,8481.06,!1,236.6,8.38,-5.53,null,8953.5,null,!1,0],["4d2302","RYR7545 ","Malta",1679397462,1679397462,-.5814,46.7209,11582.4,!1,227.82,349.2,0,null,11658.6,"5357",!1,0],["a1d4bc","ENY3865 ","United States",1679397463,1679397463,-101.2354,32.0256,6385.56,!1,240.5,77.27,10.4,null,6545.58,null,!1,0],["aab5e5","EJM79   ","United States",1679397462,1679397462,-82.7898,29.149,10668,!1,246.28,168.43,.33,null,11003.28,"5231",!1,0],["a9cecf","AAL900  ","United States",1679397462,1679397462,-73.9952,22.8841,9753.6,!1,239.72,301.58,0,null,10287,null,!1,0],["abd5bb","SWA3084 ","United States",1679397462,1679397462,-87.7635,41.8363,9105.9,!1,230.63,170.37,7.8,null,8991.6,"3150",!1,0],["a7cb67","JIA5287 ","United States",1679397462,1679397462,-81.7285,36.0526,5791.2,!1,206.8,132.58,0,null,5836.92,null,!1,0],["06a069","QTR66B  ","Qatar",1679397462,1679397462,16.8237,53.0794,9753.6,!1,222.86,323.45,0,null,9715.5,"3241",!1,0],["ad4b05","AVA8506 ","United States",1679397461,1679397461,-74.1483,4.7081,null,!0,4.12,306.56,null,null,null,null,!1,0],["3f4ddf","GAF071  ","Germany",1679397461,1679397462,21.0068,37.237,10058.4,!1,206.71,149.16,0,null,10157.46,"3560",!1,0],["800b09","IAD1531 ","India",1679397461,1679397462,81.5315,17.9377,10965.18,!1,210.41,222.82,.33,null,null,"2645",!1,0],["406b91","EZY17KM ","United Kingdom",1679397462,1679397462,-1.2576,49.9608,11574.78,!1,227.35,13.34,.33,null,11582.4,"5332",!1,0],["3420ce","IBE05LW ","Spain",1679397461,1679397462,-3.2351,41.2013,7322.82,!1,206.39,14.73,-.33,null,7520.94,null,!1,0],["06a063","QTR51W  ","Qatar",1679397462,1679397462,10.7789,45.7032,10363.2,!1,227.22,282.02,0,null,10485.12,"3215",!1,0],["a2577f","N250AA  ","United States",1679397462,1679397462,-77.8782,40.779,8229.6,!1,156.48,25.3,0,null,8138.16,"3415",!1,0],["a37765","SKW3554 ","United States",1679397462,1679397463,-81.1769,40.8818,10058.4,!1,194.46,295.21,0,null,9921.24,"3651",!1,0],["4d2359","AXY926H ","Malta",1679397461,1679397462,5.289,39.6378,12192,!1,214.6,355.74,0,null,12443.46,null,!1,0],["3c56ee","EWG64UR ","Germany",1679397462,1679397463,7.1546,47.0479,11277.6,!1,205.36,231.41,5.85,null,11399.52,"2523",!1,0],["39ceb4","TVF7758 ","France",1679397462,1679397462,1.8962,47.7672,8458.2,!1,210.22,197.37,8.45,null,8526.78,"7642",!1,0],["a3a155","DAL2664 ","United States",1679397462,1679397462,-81.5097,38.698,10370.82,!1,216.09,201.8,0,null,10302.24,"1101",!1,0],["3c56ed","EWG3JA  ","Germany",1679397462,1679397462,10.6394,51.7781,9936.48,!1,220.79,250.68,6.5,null,9997.44,"1123",!1,0],["3420cc","IBE04TL ","Spain",1679397462,1679397462,-2.7903,42.0092,8983.98,!1,194.9,22.5,-15.61,null,9197.34,null,!1,0],["39ceb7","TVF81CH ","France",1679397462,1679397462,4.6391,42.4111,11582.4,!1,222.5,2.78,0,null,11788.14,"1013",!1,0],["a46a72","DAL2037 ","United States",1679397462,1679397462,-86.7448,36.091,876.3,!1,116.2,277.38,13.66,null,937.26,null,!1,0],["39ceb8","TVF41PL ","France",1679397456,1679397462,-3.055,41.703,11582.4,!1,235.46,9.81,0,null,11765.28,"6454",!1,0],["3420ca","IBE32KK ","Spain",1679397461,1679397462,.9035,41.1783,10370.82,!1,261.38,95.19,-.33,null,10614.66,null,!1,0],["39ceb9","TVF54YD ","France",1679397462,1679397462,-8.6715,41.3337,944.88,!1,120.58,32.81,10.08,null,1066.8,null,!1,0],["4d234a","RYR7GM  ","Malta",1679397461,1679397462,5.6038,50.3646,7749.54,!1,225.19,135.65,5.85,null,7833.36,"1000",!1,0],["39ceb1","TVF78GA ","France",1679397462,1679397462,11.2211,46.2423,11277.6,!1,249.88,122.64,0,null,11361.42,"0244",!1,0],["4cacdf","RYR7LJ  ","Ireland",1679397462,1679397462,-6.162,51.904,11277.6,!1,228.23,169.35,0,null,11247.12,"2265",!1,0],["407e33","EAG42BF ","United Kingdom",1679397462,1679397462,-3.7368,53.4706,4572,!1,161.13,127.35,-.33,null,4480.56,"6027",!1,0],["3c56f7","EWG5HK  ","Germany",1679397461,1679397462,11.6787,45.2092,11879.58,!1,245.04,157.8,0,null,11963.4,"1000",!1,0],["46d0ad","SEH500  ","Greece",1679397463,1679397463,24.5146,40.3084,4572,!1,138.57,124.87,.33,null,4640.58,null,!1,0],["3c56f5","EWG57K  ","Germany",1679397462,1679397462,5.9052,50.9625,6583.68,!1,188.11,254.29,9.1,null,6667.5,"4133",!1,0],["3985c3","MIM123  ","France",1679397462,1679397462,10.3073,49.181,6301.74,!1,143.46,229.8,10.08,null,6416.04,"0616",!1,0],["a794e1","DAL1662 ","United States",1679397423,1679397435,-82.5411,27.9644,null,!0,3.34,182.81,null,null,null,null,!1,0],["8468cc","ANA287  ","Japan",1679397462,1679397462,135.7818,34.2008,3992.88,!1,165.21,242.56,-4.55,null,4130.04,"2325",!1,0],["3c56eb","EWG7528 ","Germany",1679397462,1679397462,3.5314,49.525,11894.82,!1,217.93,258.42,.33,null,11932.92,"1115",!1,0],["3c56ea","EWG5CL  ","Germany",1679397462,1679397462,2.7744,44.0117,11277.6,!1,216.67,178.37,0,null,11452.86,"4102",!1,0],["a05f37","DAL2038 ","United States",1679397462,1679397462,-87.8715,42.9882,708.66,!1,104.48,47.19,4.88,null,716.28,null,!1,0],["abbc52","SWA995  ","United States",1679397462,1679397462,-88.277,40.6857,9791.7,!1,221.26,188.83,-4.55,null,9677.4,"6511",!1,0],["4d2368","RYR4SP  ","Malta",1679397462,1679397462,-5.9148,37.5816,2186.94,!1,155.72,250.31,-2.93,null,2339.34,"4021",!1,0],["47a31a","NOZ4GF  ","Norway",1679397462,1679397462,3.1906,53.2199,10972.8,!1,216.5,206.99,0,null,10904.22,"2226",!1,0],["a301f3","EDV5283 ","United States",1679397462,1679397462,-86.5375,39.9066,9753.6,!1,224.18,304.53,-.33,null,9669.78,"4034",!1,0],["800b63","AIC890  ","India",1679397462,1679397462,88.7876,26.6493,10972.8,!1,195.85,275.43,.33,null,11239.5,"2616",!1,0],["800b62","AIC216  ","India",1679397462,1679397462,76.8535,28.7288,3093.72,!1,120.47,267.8,-5.2,null,3131.82,null,!1,0],["48c310","BNI6V   ","Poland",1679397430,1679397430,19.2212,51.8455,1219.2,!1,62.86,190.85,-.98,null,1196.34,null,!1,0],["800b60","VTSDK   ","India",1679397308,1679397308,74.2847,23.0148,12192,!1,221.34,200.12,0,null,12664.44,null,!1,0],["39ceab","TVF931  ","France",1679397462,1679397462,2.4757,39.5592,3840.48,!1,152.74,324.6,10.4,null,3985.26,null,!1,0],["39ceac","TVF8223 ","France",1679397462,1679397462,2.3656,48.722,null,!0,7.46,278.44,null,null,null,"1000",!1,0],["4d234c","RYR99DM ","Malta",1679396965,1679397285,16.5617,43.4885,11277.6,!1,247.17,200.85,0,null,11308.08,"5544",!1,0],["4d234e","RYR16KU ","Malta",1679397462,1679397462,12.7956,40.8089,10972.8,!1,201.31,337.3,0,null,11094.72,null,!1,0],["ad63a8","AVA260  ","United States",1679397462,1679397462,-46.0482,-18.5021,10363.2,!1,237.09,319.22,.33,null,10972.8,null,!1,0],["a8540b","PDT5976 ","United States",1679397462,1679397462,-78.01,34.3415,6705.6,!1,194.28,266.66,-.33,null,6804.66,"5631",!1,0],["800b2b","IGO917  ","India",1679397462,1679397462,82.7086,16.8613,5913.12,!1,212.04,32.92,-9.75,null,null,"0232",!1,0],["4d2330","FJO54A  ","Malta",1679397462,1679397462,-.2464,50.6587,7620,!1,237.92,129.47,12.68,null,7620,"0535",!1,0],["8468ee","ANA578  ","Japan",1679397462,1679397462,134.8958,34.8208,2103.12,!1,138.02,191.39,-10.73,null,2194.56,"2337",!1,0],["3985a7","AFR7395 ","France",1679397462,1679397463,4.669,42.8991,10347.96,!1,216.85,2.86,0,null,10561.32,"1025",!1,0],["a434f9","DAL2548 ","United States",1679397462,1679397462,-87.7985,41.6289,2872.74,!1,129.32,195.69,21.46,null,2842.26,"6567",!1,0],["4cace0","RYR1244 ","Ireland",1679397462,1679397462,-1.6131,47.0061,11277.6,!1,225.61,218.33,0,null,11338.56,"7635",!1,0],["4d2349","RYR6HE  ","Malta",1679397462,1679397462,7.0407,50.9412,556.26,!1,87.41,137.86,-4.88,null,624.84,"2750",!1,0],["39cea5","TVF62DR ","France",1679397462,1679397462,-.2756,45.445,10972.8,!1,234.12,24.54,0,null,11056.62,"1000",!1,0],["ac43f9","N89LD   ","United States",1679397462,1679397462,-88.2565,35.4825,10972.8,!1,183.73,280.65,.33,null,11010.9,"2521",!1,0],["a6aac2","JIA5330 ","United States",1679397462,1679397462,-77.2003,39.1143,1386.84,!1,88.46,291.49,0,null,1455.42,"3544",!1,0],["a4c170","RPA4518 ","United States",1679397462,1679397462,-82.2235,35.482,9753.6,!1,209.55,224.2,0,null,9799.32,"2165",!1,0],["a301d8","ENY3533 ","United States",1679397462,1679397462,-81.459,35.3082,9753.6,!1,195.59,250.33,0,null,9806.94,"2465",!1,0],["4cacca","SAS1624 ","Ireland",1679397462,1679397462,12.4872,56.6456,10058.4,!1,233.86,33.97,-.33,null,9989.82,"0741",!1,0],["aaf0ce","AAL2125 ","United States",1679397462,1679397462,-75.1625,40.2845,6705.6,!1,201.63,226.86,.33,null,6614.16,"1737",!1,0],["00aeb9","KEM446  ","South Africa",1679397462,1679397462,23.8782,-32.6812,8534.4,!1,234.59,214.46,0,null,8953.5,null,!1,0],["4d238b","FJO66L  ","Malta",1679397462,1679397462,9.6777,45.7227,11887.2,!1,228.52,223.54,0,null,12009.12,"1112",!1,0],["40721b","GTOOO   ","United Kingdom",1679397462,1679397462,-1.1119,52.5341,495.3,!1,31.82,230.91,-.33,null,464.82,"7000",!1,0],["1e3d0a","RJAF344 ","Russian Federation",1679397462,1679397462,13.7576,35.13,7620,!1,157.63,92.99,.33,null,7856.22,null,!1,0],["406b48","VIR105  ","United Kingdom",1679397462,1679397462,-3.1466,54.9742,11582.4,!1,247.3,321.08,-.33,null,11490.96,"1420",!1,0],["abbc75","SWA710  ","United States",1679397462,1679397462,-85.8499,33.8094,10332.72,!1,184.03,281.12,5.2,null,10462.26,"2575",!1,0],["880c4a","AIQ3351 ","Thailand",1679397462,1679397462,100.8451,14.4392,2941.32,!1,132.36,260.83,-9.1,null,3063.24,"3331",!1,0],["71c396","ABL8012 ","Republic of Korea",1679397462,1679397462,127.196,37.2056,2461.26,!1,125.52,336.06,-.33,null,2499.36,null,!1,0],["a3ad5a","DAL1707 ","United States",1679397463,1679397463,-93.4494,45.1629,1409.7,!1,128.89,170.35,-13.33,null,1386.84,null,!1,0],["a44917","UAL1989 ","United States",1679397455,1679397462,-74.1822,40.6848,null,!0,.06,92.81,null,null,null,"3643",!1,0],["a12ff9","FDX1440 ","United States",1679397462,1679397462,-104.0762,35.2184,9761.22,!1,196.27,275.11,0,null,9883.14,"5665",!1,0],["04c0e3","KQA782  ","Kenya",1679397322,1679397322,18.6011,-33.9708,null,!0,.9,286.88,null,null,null,"6332",!1,0],["aa0531","AVA124  ","United States",1679397462,1679397462,-74.1966,4.7471,2750.82,!1,88.59,126.74,-4.55,null,2948.94,null,!1,0],["3d6fb7","DFOOD   ","Germany",1679397462,1679397462,7.4042,50.9447,1021.08,!1,113.91,244.59,-4.88,null,1082.04,"1367",!1,0],["aaf0f0","N804CE  ","United States",1679397462,1679397462,-87.0326,40.6148,9692.64,!1,219.06,339.95,5.2,null,9593.58,"0244",!1,0],["800b9a","AXB684  ","India",1679397461,1679397461,99.0057,3.0057,10668,!1,230.42,107.14,0,null,11330.94,null,!1,0],["800b9e","AXB142  ","India",1679397461,1679397462,73.5482,28.2796,11277.6,!1,262.05,100.41,.33,null,11475.72,null,!1,0],["71c382","AAR222  ","Republic of Korea",1679397462,1679397462,-106.6292,52.1631,11887.2,!1,266.58,106.83,0,null,11407.14,null,!1,0],["800b78","IGO356  ","India",1679397371,1679397371,77.7267,13.2068,944.88,!1,69.45,270.42,-2.6,null,868.68,null,!1,0],["a65ab9","N5085K  ","United States",1679397460,1679397461,-81.1753,35.4724,251.46,!1,42.95,226.94,4.55,null,381,null,!1,0],["a3ad6d","EDV5529 ","United States",1679397462,1679397462,-77.3268,37.0317,6705.6,!1,197.45,210.71,.33,null,6736.08,"1114",!1,0],["800b77","IGO6893 ","India",1679397294,1679397294,80.9987,14.3454,10706.1,!1,216.98,222.69,-5.85,null,null,"2634",!1,0],["46dca2","SEH7AL  ","Greece",1679397462,1679397462,10.4729,46.0937,11582.4,!1,204.55,306.41,0,null,11696.7,"2754",!1,0],["406b22","BAW268  ","United Kingdom",1679397458,1679397458,-63.0011,47.7926,11887.2,!1,286.74,76.51,0,null,11590.02,"7212",!1,0],["aaa39a","FDX1502 ","United States",1679397461,1679397462,-86.1925,41.7064,670.56,!1,56.6,268.96,-2.93,null,693.42,null,!1,0],["4d235d","VJT691  ","Malta",1679397462,1679397462,4.385,42.6289,11887.2,!1,198.33,203.71,0,null,12070.08,"5724",!1,0],["ad0375","AVA110  ","United States",1679397293,1679397293,-58.6055,-30.84,10668,!1,242.8,7.43,0,null,11277.6,"6147",!1,0],["402ee9","GBRDM   ","United Kingdom",1679397462,1679397462,-1.2241,51.5243,693.42,!1,56.18,15.95,0,null,685.8,null,!1,0],["a05f59","FDX1499 ","United States",1679397462,1679397462,-99.5512,32.8387,10370.82,!1,200.29,254.96,0,null,10561.32,"1633",!1,0],["00aec9","Y01G    ","South Africa",1679397364,1679397364,28.0344,-25.9035,3154.68,!1,143.02,67.59,-9.43,null,3368.04,null,!1,0],["4d2387","RYR69EW ","Malta",1679397462,1679397462,16.1346,58.0505,10668,!1,222.63,38.43,0,null,10523.22,"0727",!1,0],["a5a4d5","AWI6142 ","United States",1679397462,1679397462,-85.9946,42.6969,6096,!1,195.52,256.15,.33,null,6027.42,"4113",!1,0],["e49ada","PPLPS   ","Brazil",1679397462,1679397462,-48.0998,-22.3293,4572,!1,117.91,127.02,0,null,4792.98,null,!1,0],["3c56f0","EWG6VG  ","Germany",1679397462,1679397462,4.4764,42.7087,11277.6,!1,218.79,206.69,0,null,11490.96,"1102",!1,0],["3c56f4","EWG3CH  ","Germany",1679397462,1679397462,2.6987,49.51,10668,!1,218.69,226.43,0,null,10668,"4125",!1,0],["3c56f2","EWG581  ","Germany",1679397462,1679397462,5.7113,42.9938,10980.42,!1,234.15,30.79,0,null,11186.16,"5510",!1,0],["4d237a","RAM2004 ","Malta",1679397462,1679397462,12.9085,39.7546,11887.2,!1,247.25,102.62,0,null,12016.74,"1056",!1,0],["406b12","TOM724  ","United Kingdom",1679397462,1679397462,-2.2806,53.3619,null,!0,5.4,149.06,null,null,null,null,!1,0],["3c56e9","EWG64GN ","Germany",1679397462,1679397462,7.5394,47.3663,9189.72,!1,224.23,209.86,4.55,null,9342.12,"2533",!1,0],["4d2384","RYR1AB  ","Malta",1679397462,1679397462,-2.6253,36.4624,11582.4,!1,242.08,38.36,0,null,11925.3,"5317",!1,0],["300394","DLH4KV  ","Italy",1679397462,1679397462,12.1934,48.0165,4526.28,!1,195.98,125.28,14.63,null,4632.96,"1000",!1,0],["4d2386","RYR3795 ","Malta",1679397185,1679397332,30.4746,33.9193,13388.34,!1,195,301.85,-.65,null,11125.2,"4561",!0,0],["a8a497","N656SC  ","United States",null,1679397450,null,null,null,!1,73.05,39.86,5.53,null,null,null,!1,0],["7c4512","QJE1799 ","Australia",1679397462,1679397462,153.1477,-27.3114,236.22,!1,66.26,206.76,-2.93,null,320.04,null,!1,0],["a8a490","RPA3475 ","United States",1679397404,1679397461,-74.177,40.6998,null,!0,0,47.81,null,null,null,"1666",!1,0],["a123e0","UAL492  ","United States",1679397462,1679397462,-84.298,35.3264,10972.8,!1,196.19,236.23,0,null,11026.14,"2611",!1,0],["4b07bf","","Switzerland",1679397423,1679397454,8.9466,47.2059,1097.28,!1,52.88,-129.7,-1,null,1262,"7000",!1,3],["4b07c1","HBCYJ   ","Switzerland",1679397462,1679397462,6.2704,47.0857,2529.84,!1,79.86,283.41,0,null,2621.28,"3430",!1,0],["a0a332","FDX1705 ","United States",null,1679397458,null,null,null,!1,203.2,252.16,-.33,null,null,null,!1,0],["7805a9","CSG2571 ","China",1679397461,1679397462,29.1559,61.6463,10363.2,!1,222.93,250.31,0,null,9944.1,"2325",!1,0],["44064a","EJU83WK ","Austria",1679397298,1679397298,-4.4788,44.9369,11277.6,!1,221.36,218.02,0,null,11369.04,"2374",!1,0],["3c5829","IFA4839 ","Germany",1679397462,1679397462,-79.1931,49.6185,10668,!1,255.48,41.49,0,null,10142.22,"6520",!1,0],["862d50","JAL655  ","Japan",1679397462,1679397462,138.0908,35.0077,9144,!1,203.81,254.63,0,null,9326.88,"2332",!1,0],["a4493d","UAL669  ","United States",1679397462,1679397463,-77.8779,39.6719,10972.8,!1,199.09,247.68,0,null,10850.88,"3010",!1,0],["a0669d","DAL1132 ","United States",1679397462,1679397462,-83.8805,33.2352,4480.56,!1,178.77,312.55,-11.38,null,4610.1,"3677",!1,0],["7805b5","CSZ9444 ","China",1679397459,1679397459,113.1425,23.1263,2781.3,!1,159.26,356.48,0,null,2872.74,null,!1,0],["4d228a","RYR3A   ","Malta",1679397462,1679397462,18.2973,45.9553,9700.26,!1,217.34,92.71,-9.43,null,9692.64,"0430",!1,0],["a05f95","RPA4533 ","United States",1679397462,1679397462,-74.1498,40.5469,2004.06,!1,144.17,42.69,-10.08,null,2049.78,"7412",!1,0],["8681be","SKY178  ","Japan",1679397462,1679397462,140.6552,41.6585,10393.68,!1,215.38,205.46,7.15,null,10187.94,null,!1,0],["8681bd","SKY022  ","Japan",1679397462,1679397462,140.1197,35.6058,1645.92,!1,93.64,270.94,-3.58,null,1684.02,"7376",!1,0],["a04c67","GTI6305 ","United States",1679397462,1679397462,-72.7802,43.0099,10767.06,!1,208.96,268.31,13.66,null,10477.5,"1375",!1,0],["a54312","RPA4799 ","United States",1679397462,1679397462,-74.8854,40.5315,2926.08,!1,161.26,111.33,0,null,2964.18,"1404",!1,0],["a1bc29","JBU1059 ","United States",1679397398,1679397398,-77.6499,28.5079,9144,!1,230.68,177.57,0,null,9486.9,null,!1,0],["a8eaea","DAL2192 ","United States",1679397462,1679397462,-77.2319,39.1108,5440.68,!1,195.78,211.35,14.31,null,5417.82,"2170",!1,0],["8681b0","SKY157  ","Japan",1679397462,1679397462,138.8649,36.4535,11582.4,!1,178.25,225.47,0,null,11689.08,"1743",!1,0],["440667","AUA853  ","Austria",1679397462,1679397462,24.452,41.665,11262.36,!1,240.55,136.65,3.58,null,11292.84,"7125",!1,0],["8681b3","SKY187  ","Japan",1679397461,1679397462,138.2572,35.835,9753.6,!1,187.81,237.53,0,null,9890.76,"2105",!1,0],["8681b4","SKY726  ","Japan",1679397462,1679397462,140.4106,36.9599,5836.92,!1,205.68,192.72,-10.73,null,6202.68,null,!1,0],["8681b7","SKY309  ","Japan",1679397462,1679397462,139.0888,35.0055,5928.36,!1,198.56,258.34,7.8,null,6012.18,"2252",!1,0],["a4491c","UAL2123 ","United States",1679397462,1679397462,-100.2705,30.6749,10957.56,!1,192.52,284.07,-4.55,null,11262.36,null,!1,0],["8681ad","SKY186  ","Japan",1679397460,1679397461,139.701,36.3928,5196.84,!1,196.34,54.06,-10.08,null,5273.04,"2224",!1,0],["a16c3a","DAL332  ","United States",1679397462,1679397462,-76.228,41.425,11277.6,!1,258.67,110.49,0,null,11079.48,"2016",!1,0],["47a1ef","NOZ72R  ","Norway",1679397462,1679397462,23.9623,56.8695,259.08,!1,67.67,5.23,-4.55,null,266.7,"0427",!1,0],["aac954","UAL1112 ","United States",1679397462,1679397462,-84.9961,38.6354,5875.02,!1,188.5,221.13,12.68,null,5867.4,null,!1,0],["a71a72","N557LM  ","United States",1679397462,1679397462,-122.3387,47.573,327.66,!1,66.62,149.87,-7.8,null,281.94,"5765",!1,0],["4cad29","RYR9C   ","Ireland",1679397462,1679397462,1.2378,43.1538,11041.38,!1,232.84,350.2,4.23,null,11209.02,"5566",!1,0],["440614","EJU9798 ","Austria",1679397463,1679397463,24.7153,35.8233,10363.2,!1,203.76,316.23,0,null,10546.08,null,!1,0],["440610","EJU65QF ","Austria",1679397462,1679397462,7.0912,44.0013,10660.38,!1,203.37,239.61,.33,null,10843.26,"4051",!1,0],["4b4443","HBZWD   ","Switzerland",1679397462,1679397462,7.2147,46.8166,1356.36,!1,58.59,20.03,.65,null,1447.8,"7000",!1,0],["85d7c0","ANA617  ","Japan",1679397306,1679397451,135.2418,33.5447,7924.8,!1,195.93,245.66,0,null,8168.64,"4721",!1,0],["aafca8","JBU172  ","United States",1679397462,1679397462,-78.0417,33.4745,11277.6,!1,242.09,7.08,0,null,11437.62,"3624",!1,0],["440609","AUA39H  ","Austria",1679397430,1679397430,16.5691,48.1198,null,!0,4.37,298.12,null,null,null,"1000",!1,0],["7805dd","CKK205  ","China",1679397462,1679397462,49.6759,62.1451,9753.6,!1,211.49,261.89,0,null,9349.74,null,!1,0],["abd627","SWA1714 ","United States",1679397462,1679397462,-92.1694,37.3691,12192,!1,210.71,221.24,0,null,12169.14,"2263",!1,0],["7805dc","CKK217  ","China",1679397461,1679397462,.8402,43.6677,10058.4,!1,223.49,191.96,0,null,10203.18,"2124",!1,0],["440606","AUA1LH  ","Austria",1679397445,1679397445,16.569,48.1181,null,!0,0,205.31,null,null,null,null,!1,0],["440605","AUA556  ","Austria",1679397453,1679397461,8.5557,47.4544,null,!0,0,185.62,null,null,null,"2000",!1,0],["c03bf4","SYB183  ","Canada",1679397456,1679397461,-79.6021,43.6693,null,!0,.06,326.25,null,null,null,"4340",!1,0],["ada17b","N978BE  ","United States",1679397462,1679397462,-84.5448,33.57,12496.8,!1,273.24,61.55,-.65,null,12603.48,"2003",!1,0],["a28036","ENY336G ","United States",1679397461,1679397462,-80.4812,38.7645,10363.2,!1,205.21,313.78,.33,null,10332.72,"2162",!1,0],["a7f7fc","UPS32   ","United States",1679397462,1679397462,-106.5836,42.5087,9144,!1,225.87,270.91,0,null,8938.26,"6743",!1,0],["a4497f","UAL2424 ","United States",1679397462,1679397462,-71.2456,42.5084,2407.92,!1,151.59,66.39,-5.85,null,2415.54,"1056",!1,0],["abd60b","SWA132  ","United States",1679397462,1679397462,-95.1366,40.5263,10972.8,!1,206.54,248.68,-.33,null,10820.4,"1301",!1,0],["a9742c","VXP601  ","United States",1679397462,1679397462,-79.0461,34.8241,9974.58,!1,208.92,214.67,13.98,null,10043.16,"5660",!1,0],["a05380","N12YA   ","United States",1679397461,1679397462,-95.4557,29.7561,213.36,!1,39.62,179.26,.98,null,228.6,null,!1,0],["ad5ca7","FDX1190 ","United States",1679397462,1679397462,-95.2883,32.3403,6096,!1,196.71,267.45,0,null,6240.78,null,!1,0],["4070eb","EXS66KE ","United Kingdom",1679397461,1679397461,-2.9214,43.8486,11277.6,!1,237.09,141.17,-.33,null,11391.9,"5205",!1,0],["4070ec","EXS6UQ  ","United Kingdom",1679397462,1679397462,-9.0562,37.444,11277.6,!1,219.73,189.7,0,null,11582.4,"4542",!1,0],["4070ea","EXS4BX  ","United Kingdom",1679397463,1679397463,-4.7668,48.6607,10058.4,!1,250.67,201.93,0,null,10119.36,"5257",!1,0],["4070ef","EXS7DB  ","United Kingdom",1679397461,1679397462,-9.3497,39.4902,11277.6,!1,232.53,180.25,0,null,11536.68,"4657",!1,0],["4070ed","EXS3ZW  ","United Kingdom",1679397462,1679397462,-8.3381,38.8691,11277.6,!1,219.63,196.19,0,null,11544.3,"2033",!1,0],["a8b760","UAL121  ","United States",1679397455,1679397460,-2.8229,42.4416,8839.2,!1,230.71,284.59,0,null,8999.22,null,!1,0],["a8b75f","UAL65   ","United States",1679397462,1679397462,-9.7516,39.4698,6042.66,!1,211.72,314.41,9.75,null,6278.88,"3364",!1,0],["acef2d","EDV5014 ","United States",1679397462,1679397462,-77.6523,35.3985,10058.4,!1,258.56,32.9,0,null,10096.5,"1676",!1,0],["a16037","AAL2605 ","United States",1679397462,1679397462,-90.5797,34.8621,9136.38,!1,193.57,257.26,0,null,9227.82,"2461",!1,0],["7c450e","NXC     ","Australia",1679397462,1679397462,138.7675,-34.8204,579.12,!1,46.92,322.13,.65,null,632.46,"1200",!1,0],["3cf68e","ADN12E  ","Germany",1679397462,1679397462,1.2346,39.4511,6705.6,!1,183.26,2.09,0,null,6941.82,null,!1,0],["4070f0","","United Kingdom",null,1679397447,null,null,null,!1,233.87,216.59,-.33,null,null,null,!1,0],["4cad13","EAI81DP ","Ireland",1679397462,1679397462,-2.9106,51.3972,1699.26,!1,86.32,304.07,9.43,null,1684.02,null,!1,0],["7c5852","RXA273  ","Australia",1679397462,1679397462,144.881,-37.6642,213.36,!1,73.87,275.19,-3.58,null,304.8,"1036",!1,0],["45aa90","SAS64K  ","Denmark",1679397462,1679397462,2.5339,49.4847,4610.1,!1,190.28,27.19,13.98,null,4648.2,"0650",!1,0],["4cad10","RYR81AA ","Ireland",1679397462,1679397462,12.3805,44.8049,11582.4,!1,208.67,336.15,0,null,11681.46,"1260",!1,0],["a8a43a","NKS1155 ","United States",1679397410,1679397426,-79.8354,33.9581,10660.38,!1,247.66,28.27,0,null,10774.68,"7455",!1,0],["4070e9","EXS781M ","United Kingdom",1679397461,1679397462,26.5666,40.0265,11277.6,!1,235.36,135.44,0,null,11338.56,"3453",!1,0],["ac9f4f","NKS609  ","United States",1679397462,1679397463,-86.5394,35.7177,4686.3,!1,194.97,159.94,11.05,null,4739.64,"5632",!1,0],["4070e2","EXS763  ","United Kingdom",1679397462,1679397462,-9.2269,36.6473,11277.6,!1,214.57,189.8,-.33,null,11590.02,"5256",!1,0],["44061b","EJU37HU ","Austria",1679397462,1679397462,6.6249,51.4211,10050.78,!1,222.26,142.33,7.15,null,10066.02,"3174",!1,0],["4070e3","EXS16T  ","United Kingdom",1679397221,1679397221,-1.6735,55.0424,null,!0,2.83,160.31,null,null,null,"2267",!1,0],["4070e4","EXS25Y  ","United Kingdom",1679397157,1679397429,-5.5198,44.7158,11277.6,!1,230.41,203.42,0,null,11414.76,null,!1,0],["4070e5","EXS16BJ ","United Kingdom",1679397462,1679397462,-8.2125,38.3309,8252.46,!1,241.51,355.48,10.08,null,8503.92,"3341",!1,0],["06a070","QTR75N  ","Qatar",1679397462,1679397462,139.2638,-35.2831,9144,!1,235.3,298.75,0,null,9547.86,"1342",!1,0],["3949ed","AFR475  ","France",1679397462,1679397462,-4.6835,47.8326,11887.2,!1,256.68,95.06,0,null,11955.78,null,!1,0],["3949ec","AFR825  ","France",1679397462,1679397462,.4279,49.3587,8534.4,!1,248.61,94.15,0,null,8564.88,null,!1,0],["151fe8","AFL1153 ","Russian Federation",1679397462,1679397462,37.35,56.0177,2712.72,!1,133.06,35.72,-5.2,null,2628.9,null,!1,0],["e49b37","PSCDV   ","Brazil",1679397381,1679397381,-40.2367,-22.5385,1371.6,!1,53.67,330.73,4.23,null,1463.04,null,!1,0],["4b4482","HBZYO   ","Switzerland",1679397462,1679397462,8.5332,47.4339,556.26,!1,47.59,88.23,-1,null,638,"7000",!1,3],["abe7e3","SWA3285 ","United States",1679397462,1679397462,-82.867,32.2057,10363.2,!1,200.78,320.93,0,null,10546.08,"7467",!1,0],["4c01e1","ASL66H  ","Serbia",1679397462,1679397462,16.8622,45.9001,11269.98,!1,239.07,104.45,0,null,11277.6,"3016",!1,0],["06a079","QTR755  ","Qatar",1679397462,1679397462,16.4724,52.4175,9753.6,!1,223.04,316.21,0,null,9723.12,"3244",!1,0],["846954","ANA684  ","Japan",1679397293,1679397303,139.7844,35.5758,68.58,!1,65.37,215.07,-3.25,null,121.92,"4643",!1,0],["45aa4b","DTR801  ","Denmark",1679397313,1679397366,8.8797,56.2819,11704.32,!1,87.43,69.33,.33,null,null,"0272",!1,0],["06a081","QTR8020 ","Qatar",1679397462,1679397462,142.0225,-37.6856,10058.4,!1,237.67,117.18,-8.78,null,10401.3,"2672",!1,0],["a7df59","UPS8    ","United States",1679397462,1679397462,100.8309,13.9569,769.62,!1,95.08,194.41,-.98,null,731.52,"3344",!1,0],["4c01e5","ASL20K  ","Serbia",1679397462,1679397462,20.1284,45.2036,3703.32,!1,162.61,135.64,-11.38,null,3779.52,"5160",!1,0],["e49b42","ACN5100 ","Brazil",1679397258,1679397258,-41.8469,-22.4573,678.18,!1,78.05,33.17,-2.6,null,716.28,null,!1,0],["86d1f3","SNJ65   ","Japan",1679397462,1679397462,136.8644,34.4468,7917.18,!1,206.61,236.78,0,null,8122.92,"0404",!1,0],["ac3d4a","N888TV  ","United States",1679397462,1679397462,-87.7538,41.9721,350.52,!1,28.25,190.49,.65,null,388.62,"0331",!1,0],["ac2a1f","","United States",null,1679397457,null,null,null,!1,79.75,181.11,11.7,null,null,null,!1,0],["49d116","SUA711  ","Czech Republic",1679397462,1679397462,22.6098,59.5665,10576.56,!1,222.42,59.1,-10.73,null,10294.62,"6454",!1,0],["86d1de","ANA670  ","Japan",1679397462,1679397462,138.1417,34.3544,9166.86,!1,267.55,60.13,-7.8,null,9418.32,"4717",!1,0],["06a087","QTR1007 ","Qatar",1679397462,1679397462,53.7466,25.3249,6705.6,!1,178.19,272.65,0,null,6835.14,null,!1,0],["06a088","QTR1236 ","Qatar",1679397243,1679397243,46.7271,24.8885,990.6,!1,75.36,330.11,-4.55,null,1082.04,null,!1,0],["06a083","QTR45G  ","Qatar",1679397462,1679397462,9.6623,51.4592,10972.8,!1,218.83,295.48,0,null,11003.28,"3270",!1,0],["ab71ba","N8365Q  ","United States",1679397462,1679397462,-81.3716,28.5531,60.96,!1,43.41,84.56,-.98,null,114.3,null,!1,0],["155c2b","SDM6229 ","Russian Federation",1679397275,1679397275,44.087,56.329,2156.46,!1,155.06,7.24,-8.45,null,2278.38,null,!1,0],["06a091","QTR44R  ","Qatar",1679397461,1679397462,26.3375,36.6473,10424.16,!1,240.07,121.24,4.23,null,10576.56,"7401",!1,0],["155c2f","SSF258  ","Russian Federation",1679397462,1679397462,37.8799,55.8403,6423.66,!1,199.65,1.18,8.13,null,6263.64,null,!1,0],["39cf07","AFR566  ","France",1679397453,1679397458,30.3155,38.1813,12496.8,!1,265.67,126.34,0,null,12534.9,"0654",!1,0],["4cad46","ITY620  ","Ireland",1679397462,1679397462,-.9739,53.1303,11582.4,!1,245.35,330.48,0,null,11498.58,"5764",!1,0],["4cad42","SAS849  ","Ireland",1679397462,1679397462,11.4273,60.3631,1623.06,!1,114.25,291.95,-5.2,null,1584.96,"0210",!1,0],["06a07c","QTR933  ","Qatar",1679397462,1679397462,119.8594,14.4269,6896.1,!1,232.12,265.81,6.83,null,7345.68,null,!1,0],["4cad40","SAS708  ","Ireland",1679397462,1679397462,17.9211,59.6591,null,!0,3.6,199.69,null,null,null,null,!1,0],["155c45","RWZ1034 ","Russian Federation",null,1679397318,null,null,null,!1,246.4,63.6,.33,null,null,null,!1,0],["4cad41","SAS537  ","Ireland",1679397462,1679397462,-6.1637,53.4155,487.68,!1,67.16,275.27,-3.58,null,441.96,"1410",!1,0],["ac3d5d","DCM2748 ","United States",1679397462,1679397462,-81.1732,28.6107,10668,!1,228.75,340.83,0,null,11003.28,null,!1,0],["39cf05","AFR983  ","France",1679397451,1679397454,2.6257,48.996,182.88,!1,73.27,265.57,-3.9,null,251.46,"1000",!1,0],["84b940","JJP529  ","Japan",1679397462,1679397462,133.9406,34.8251,9753.6,!1,187.91,256.38,0,null,9974.58,"2104",!1,0],["39cf06","AFR983A ","France",1679397462,1679397462,7.1508,47.318,13106.4,!1,237.95,283.38,0,null,13182.6,"1000",!1,0],["aa4c3e","UAL1923 ","United States",1679397462,1679397462,-75.6299,40.2691,4480.56,!1,178.22,307.73,12.03,null,4472.94,"1102",!1,0],["151ffe","AFL1505 ","Russian Federation",1679397460,1679397462,40.7273,55.8333,10637.52,!1,210.87,266.22,-4.88,null,10401.3,null,!1,0],["3949e5","AFR009  ","France",1679397462,1679397462,2.937,49.2011,2743.2,!1,141.86,101.72,0,null,2811.78,"1154",!1,0],["151fff","AFL1191 ","Russian Federation",1679397459,1679397461,39.4405,55.7697,7162.8,!1,177.71,263.18,-5.2,null,7018.02,null,!1,0],["06a098","QTR55B  ","Qatar",1679397462,1679397462,17.8455,47.5674,11590.02,!1,213.83,298.29,.33,null,11559.54,"5365",!1,0],["06a096","QTR417  ","Qatar",1679397456,1679397457,33.15,32.4359,10675.62,!1,236.29,190.92,0,null,10812.78,"5615",!1,0],["4cad2a","RYR95RV ","Ireland",1679397463,1679397463,13.384,48.8467,11582.4,!1,214.76,294.78,0,null,11605.26,"3547",!1,0],["3c4586","BOX520  ","Germany",1679397462,1679397462,51.119,26.7569,7139.94,!1,254.42,82.21,15.28,null,7162.8,null,!1,0],["39cf0a","AFR520  ","France",1679397462,1679397462,3.159,42.0662,11887.2,!1,254.47,162.59,0,null,12077.7,"7621",!1,0],["155c1b","SDM6730 ","Russian Federation",1679397456,1679397459,31.2087,41.9647,10668,!1,235.01,82.58,-.33,null,10698.48,null,!1,0],["39cf0b","AFR722  ","France",1679397462,1679397462,2.6061,44.4188,11887.2,!1,246.85,171.85,0,null,12016.74,"7621",!1,0],["3cdbba","STQ444  ","Germany",1679397375,1679397376,9.9884,49.6511,304.8,!1,56.7,258.49,-3.9,null,388.62,"3670",!1,0],["39cf0f","AFR218  ","France",1679397462,1679397462,9.3596,47.0982,11887.2,!1,267.55,124.42,0,null,11963.4,"5623",!1,0],["151ff7","AFL016  ","Russian Federation",1679397247,1679397247,34.4865,57.4696,9151.62,!1,211.42,316.48,0,null,8907.78,null,!1,0],["469469","SXECI   ","Greece",1679397462,1679397462,24.1094,38.0933,1181.1,!1,87.66,243.13,-6.83,null,1234.44,null,!1,0],["06a08d","QTR45B  ","Qatar",1679397460,1679397463,30.3598,40.6842,8663.94,!1,242.74,101.12,4.88,null,8763,null,!1,0],["06a09c","QTR41Y  ","Qatar",1679397462,1679397462,19.589,47.2664,1584.96,!1,112.31,284.86,-3.58,null,1668.78,"5367",!1,0],["a5e0d3","SWA673  ","United States",1679397461,1679397462,-95.6355,38.0876,11201.4,!1,264.45,78.1,8.13,null,11125.2,null,!1,0],["a41c69","DAL1319 ","United States",1679397462,1679397462,-82.6177,28.8772,6347.46,!1,211.46,353.01,8.13,null,6591.3,"0163",!1,0],["ad775d","NKS575  ","United States",1679397462,1679397462,-82.5321,28.0071,403.86,!1,84.07,350.13,6.5,null,464.82,null,!1,0],["a6503f","JIA5412 ","United States",1679397462,1679397462,-76.675,39.1899,2918.46,!1,149.02,168.65,0,null,2964.18,"5764",!1,0],["49d136","OKHWL   ","Czech Republic",1679397462,1679397462,12.0293,46.1082,11292.84,!1,229.78,192.54,-.98,null,11361.42,"1000",!1,0],["3c4592","BOX303  ","Germany",1679397462,1679397462,-81.4078,40.2164,10058.4,!1,269.66,86.17,0,null,9959.34,"7363",!1,0],["a65054","N506BA  ","United States",1679397307,1679397308,-73.4146,40.7405,-60.96,!1,55.05,179.46,-3.25,null,30.48,null,!1,0],["3c4593","BOX596  ","Germany",1679397460,1679397462,74.6856,28.2031,9075.42,!1,259.37,88.52,-5.85,null,9258.3,null,!1,0],["abd4e7","SWA1327 ","United States",1679397287,1679397287,-87.746,41.7848,null,!0,4.12,334.69,null,null,null,"3423",!1,0],["3949f9","AFR264  ","France",1679397461,1679397462,5.7675,48.4426,9936.48,!1,256.5,111.78,4.23,null,10043.16,"5647",!1,0],["a6a00b","JBU163  ","United States",1679397461,1679397462,-77.1043,38.9095,10355.58,!1,210.26,225.2,-.33,null,10294.62,"7161",!1,0],["3949f7","AFR934  ","France",1679397462,1679397462,12.8737,41.5582,10058.4,!1,268.74,120.74,0,null,10187.94,"7613",!1,0],["a91315","LFA541  ","United States",1679397462,1679397462,-81.6836,28.6625,228.6,!1,38.49,8.46,.98,null,281.94,null,!1,0],["4cad3d","RYR71   ","Ireland",1679397462,1679397462,8.0354,50.3356,11582.4,!1,209.54,290.7,0,null,11612.88,"3124",!1,0],["4cad9f","EAI24ME ","Ireland",1679397203,1679397203,-2.2742,53.3598,null,!0,0,275.62,null,null,null,"6031",!1,0],["a77c11","UAL1236 ","United States",1679397462,1679397462,-75.4889,40.615,8549.64,!1,199.79,250.91,7.8,null,8420.1,"1667",!1,0],["ae47fe","        ","United States",1679397461,1679397461,-104.7769,38.6911,2011.68,!1,45.89,176.14,1.63,null,1935.48,null,!1,0],["ace1af","EDV5428 ","United States",1679397462,1679397462,-75.9417,39.0482,5059.68,!1,208.2,86.6,-.33,null,5052.06,"7007",!1,0],["a3fc58","DAL2183 ","United States",1679397462,1679397462,-92.8023,37.0182,11277.6,!1,265.11,54.4,0,null,11247.12,"0567",!1,0],["ad01ab","SWA2930 ","United States",1679397461,1679397462,-85.744,28.2737,10972.8,!1,199.22,293.92,0,null,11323.32,"3611",!1,0],["ac91d4","AAL380  ","United States",1679397462,1679397462,-85.6021,41.1275,9570.72,!1,213.99,295.64,-13,null,9479.28,"2445",!1,0],["4d21ee","RYR81UR ","Malta",1679397462,1679397462,9.2342,44.3804,8618.22,!1,176.52,297.98,-9.1,null,8793.48,"1000",!1,0],["846910","ANA457  ","Japan",1679397462,1679397462,139.2069,35.4969,6461.76,!1,150.9,272.74,9.75,null,6598.92,"2343",!1,0],["c04eb6","ACA7247 ","Canada",1679397217,1679397217,-99.0702,19.4417,2118.36,!1,70.03,272.53,0,null,2247.9,null,!1,0],["a0b5c5","FDX67   ","United States",1679397462,1679397462,-97.0953,27.5155,10980.42,!1,229.45,214.4,0,null,11369.04,"2533",!1,0],["a04bbe","AAL1910 ","United States",1679397462,1679397462,-97.4325,36.5832,8534.4,!1,212.61,182.08,.33,null,8526.78,null,!1,0],["aa03a2","RPA3469 ","United States",1679397462,1679397462,-83.3597,42.1938,678.18,!1,76.42,201.73,11.05,null,716.28,"4141",!1,0],["402f77","GBRJV   ","United Kingdom",1679397462,1679397462,1.0486,52.3362,548.64,!1,38.62,228.24,1.3,null,541.02,null,!1,0],["862d94","JAL286  ","Japan",1679397462,1679397462,139.0603,34.7147,6705.6,!1,213.04,88.62,-13.98,null,6880.86,"2462",!1,0],["ab0a95","AAL2911 ","United States",1679397461,1679397462,-81.5269,42.5523,9753.6,!1,198.85,278.78,0,null,9585.96,"2652",!1,0],["ad644e","BEZ2416 ","United States",1679397462,1679397462,-61.1448,12.5224,3368.04,!1,84.41,1.75,.33,null,3497.58,"4353",!1,0],["aaea84","AAL418  ","United States",1679397462,1679397462,-80.0082,36.3337,7490.46,!1,192.76,213.9,-6.5,null,7536.18,"3404",!1,0],["4ca15d","EIN3ER  ","Ireland",1679397462,1679397462,-5.9501,53.4396,1051.56,!1,101.69,243.56,-3.25,null,1013.46,"1346",!1,0],["4ca15c","EIN5AT  ","Ireland",1679397420,1679397455,-6.2487,53.4237,null,!0,5.14,337.5,null,null,null,null,!1,0],["342211","IBS3961 ","Spain",1679397380,1679397392,-13.5689,30.527,10972.8,!1,244.12,40.47,-.33,null,11323.32,null,!1,0],["342210","FIN07RT ","Spain",1679397462,1679397462,8.6121,54.347,10058.4,!1,248.45,44.92,0,null,10058.4,"5576",!1,0],["a72ca2","SWA3619 ","United States",1679397462,1679397462,-84.5706,34.2106,12031.98,!1,217.56,347.57,-5.2,null,12153.9,"3672",!1,0],["aca788","SWA1014 ","United States",1679397462,1679397462,-77.0062,39.2194,3238.5,!1,139.99,271.68,10.73,null,3261.36,"0535",!1,0],["86ddf0","ANA1663 ","Japan",1679397182,1679397434,138.3251,36.9635,7109.46,!1,193.57,46.29,-16.26,null,7200.9,"2302",!1,0],["151fc1","SBI1211 ","Russian Federation",1679397460,1679397461,31.1055,59.2129,10972.8,!1,208.58,312.9,0,null,10652.76,null,!1,0],["4c01ea","ASL69B  ","Serbia",1679397462,1679397462,19.8671,45.9361,8976.36,!1,230.99,153.55,-14.63,null,8968.74,"7556",!1,0],["151fc4","SBI3740 ","Russian Federation",1679397462,1679397462,33.6209,37.1493,10668,!1,226.11,42.51,0,null,10721.34,null,!1,0],["4c01ec","ASL83V  ","Serbia",1679397462,1679397462,5.9615,50.6505,11582.4,!1,215.36,293.81,0,null,11597.64,"3543",!1,0],["4cad86","SAS1610 ","Ireland",1679397462,1679397462,9.2664,52.4604,11590.02,!1,233.65,35.23,-.33,null,11590.02,"5743",!1,0],["4cad87","SAS33F  ","Ireland",1679397463,1679397463,-3.2816,40.6846,10980.42,!1,244.18,8.85,0,null,11201.4,"4547",!1,0],["a9bd9a","AAL950  ","United States",1679397462,1679397462,-73.4379,40.8132,556.26,!1,99.91,272.66,-6.18,null,640.08,"4435",!1,0],["c055c1","JZA7701 ","Canada",1679397462,1679397462,-77.2472,44.0365,6705.6,!1,152.78,225.27,.33,null,6537.96,"1007",!1,0],["407caf","RUK9072 ","United Kingdom",1679397462,1679397462,.5864,44.3937,10972.8,!1,223.86,337.15,0,null,11094.72,"5564",!1,0],["846932","ANA699  ","Japan",1679397461,1679397461,133.8708,34.5911,10980.42,!1,182.17,253.77,-.33,null,11231.88,"2314",!1,0],["155c08","AZO670  ","Russian Federation",1679397460,1679397460,32.3833,42.1858,10675.62,!1,234.59,71.33,.65,null,10698.48,null,!1,0],["4cad6d","EAI41BK ","Ireland",1679397462,1679397462,-1.5993,52.491,1737.36,!1,95.37,356.29,6.5,null,1706.88,"6311",!1,0],["407cb4","RUK3207 ","United Kingdom",1679397462,1679397462,6.4484,46.5119,10972.8,!1,211.37,319.84,0,null,11079.48,"5755",!1,0],["a5fff9","FDX51   ","United States",1679397457,1679397460,-66.9827,19.7802,7406.64,!1,215.53,137.32,-8.45,null,7780.02,null,!1,0],["aaea8c","DAL1269 ","United States",1679397223,1679397223,-93.2275,44.8869,null,!0,.77,213.75,null,null,null,null,!1,0],["407cb0","RUK137Y ","United Kingdom",1679397462,1679397462,2.4376,52.4439,7924.8,!1,192.45,246.86,0,null,7863.84,"1424",!1,0],["151fb5","AUL270  ","Russian Federation",1679397312,1679397461,38.3613,55.8349,5676.9,!1,158.46,307.61,-4.23,null,5547.36,null,!1,0],["4d21f0","RYR5UN  ","Malta",1679397462,1679397462,.3542,51.9645,708.66,!1,73.92,222.46,-4.23,null,723.9,"6651",!1,0],["407cb1","RUK7PN  ","United Kingdom",1679397462,1679397462,-7.398,38.926,11887.2,!1,228.52,191.69,.33,null,12146.28,"0573",!1,0],["151fb8","AUL522  ","Russian Federation",1679396991,1679397246,33.0051,68.6438,2354.58,!1,131.69,169.88,15.93,null,2103.12,null,!1,0],["ad646e","JBU1333 ","United States",1679397462,1679397462,-70.9836,42.3156,624.84,!1,112.15,126.61,6.18,null,685.8,null,!1,0],["a1b092","RPA5620 ","United States",1679397462,1679397462,-73.9339,40.5355,6400.8,!1,210.98,51.73,0,null,6347.46,"1172",!1,0],["4d21db","AMC479  ","Malta",1679397462,1679397462,12.1443,38.7741,11871.96,!1,247.28,168.48,0,null,12016.74,"7612",!1,0],["a6898d","GJS4393 ","United States",1679397462,1679397462,-69.3756,45.9584,8587.74,!1,187.1,229.13,6.5,null,8267.7,null,!1,0],["ad29a6","MRA695  ","United States",1679397454,1679397454,-81.2239,33.6493,1097.28,!1,89.97,194.91,.33,null,1181.1,null,!1,0],["a302a0","SWA2516 ","United States",1679397462,1679397462,-84.4828,33.7337,11414.76,!1,199.94,338.25,-4.55,null,11536.68,"0714",!1,0],["0ac985","EFY9104 ","Colombia",1679397383,1679397383,-75.1263,5.108,5372.1,!1,142.62,307.82,.33,null,5676.9,null,!1,0],["4010ee","EZY26XU ","United Kingdom",1679397462,1679397462,-.5876,46.9217,11590.02,!1,222.37,352.96,.33,null,11658.6,"5344",!1,0],["4010ed","EZY35HN ","United Kingdom",1679397368,1679397369,5.2579,43.4066,266.7,!1,68.76,314.09,-5.2,null,365.76,"2160",!1,0],["a3b529","AAL1178 ","United States",1679397462,1679397462,-79.7389,36.283,7924.8,!1,204.08,219.07,0,null,7970.52,"1756",!1,0],["a34b30","KII837  ","United States",1679397461,1679397462,-87.0134,38.1238,9738.36,!1,188.6,260.9,-.65,null,9669.78,"3433",!1,0],["78072a","YZR7453 ","China",1679397462,1679397462,-170.4447,58.026,10668,!1,271.79,67.76,0,null,9959.34,null,!1,0],["a89076","PDT5981 ","United States",1679397462,1679397462,-80.9236,35.0771,861.06,!1,103.97,5.96,-5.53,null,975.36,null,!1,0],["881422","AIQ3432 ","Thailand",1679397460,1679397461,100.2961,15.8192,9685.02,!1,242.77,147.72,-14.31,null,10233.66,null,!1,0],["881421","AIQ3439 ","Thailand",1679397276,1679397279,99.5558,17.0416,9745.98,!1,226.31,338.39,-.33,null,10271.76,"4215",!1,0],["71bd87","KAL458  ","Republic of Korea",1679397461,1679397462,122.1019,25.6493,11277.6,!1,252.84,38.81,0,null,11772.9,null,!1,0],["a3fba4","FFT2938 ","United States",1679397462,1679397462,-80.5795,27.4354,9784.08,!1,229.55,341.04,5.53,null,10172.7,null,!1,0],["4b4ea6","HB2559  ","Switzerland",1679397462,1679397462,9.0865,47.579,914.4,!1,30.05,263.12,-.65,null,998.22,"7000",!1,0],["a448d7","UAL1102 ","United States",1679397462,1679397462,-83.2549,39.7638,9753.6,!1,217.6,286.76,0,null,9669.78,"2403",!1,0],["4010e9","EZY59NY ","United Kingdom",1679397462,1679397462,-1.9853,52.9491,4381.5,!1,155.61,298.43,-5.2,null,4320.54,"5715",!1,0],["800c07","AIC893  ","India",1679397462,1679397462,76.2324,13.8125,10363.2,!1,216.95,292,0,null,10904.22,null,!1,0],["0ac967","HK5329  ","Colombia",1679397462,1679397462,-73.9243,4.9995,5090.16,!1,171.46,51.82,5.53,null,5394.96,null,!1,0],["a4d521","EJM410  ","United States",1679397462,1679397462,-74.5768,39.708,8755.38,!1,155.7,225.54,10.73,null,8679.18,"1575",!1,0],["406c80","EXS41UK ","United Kingdom",1679397462,1679397462,-3.4465,48.5933,11277.6,!1,237.43,177.27,0,null,11323.32,"5250",!1,0],["a84e07","EJA634  ","United States",1679397462,1679397462,-80.9218,28.076,9410.7,!1,179.51,337.77,10.08,null,9745.98,null,!1,0],["48b15e","SN62YG  ","Poland",1679397462,1679397462,18.379,48.6077,3962.4,!1,87.2,214.91,0,null,4008.12,"1000",!1,0],["4d20eb","VJT525  ","Malta",1679397462,1679397462,4.5643,44.5765,8968.74,!1,231.12,150.24,-11.38,null,9151.62,"6351",!1,0],["a542a9","SWQ3701 ","United States",1679397462,1679397462,-96.3949,28.7773,11277.6,!1,229.16,37.8,0,null,11635.74,null,!1,0],["ab7fe6","AAL729  ","United States",1679397462,1679397463,-7.7212,52.9733,11010.9,!1,227.17,298.25,2.6,null,10965.18,"4440",!1,0],["3f9c84","PCT901  ","Germany",1679397462,1679397462,5.4247,53.5459,1272.54,!1,81.41,249.27,.98,null,1249.68,"1334",!1,0],["a7d39d","JIA5170 ","United States",1679397462,1679397462,-81.4751,35.3792,4145.28,!1,166.92,108.88,-6.18,null,4213.86,"4004",!1,0],["76b442","SIA137  ","Singapore",1679397462,1679397462,103.8305,1.0977,1371.6,!1,121,50.69,-1.95,null,1424.94,"2654",!1,0],["45d93a","VMP944  ","Denmark",null,1679397458,null,null,null,!1,0,45,null,null,null,null,!1,0],["a09b65","GTI3808 ","United States",1679397462,1679397462,-94.0996,37.6662,10668,!1,271.07,85.1,0,null,10568.94,"1013",!1,0],["3c68b4","AHO884W ","Germany",1679397462,1679397462,-.0963,51.9261,967.74,!1,76.86,222.02,.33,null,967.74,"1462",!1,0],["a36516","FFT1930 ","United States",1679397322,1679397326,-81.1443,26.2733,3634.74,!1,202.55,130.36,-10.73,null,3794.76,"7311",!1,0],["406c71","EZY34DZ ","United Kingdom",1679397462,1679397462,-3.0187,41.0412,10972.8,!1,230.49,352.3,-.33,null,11201.4,null,!1,0],["406c72","EZY86YG ","United Kingdom",1679397462,1679397462,-2.9976,54.2038,9471.66,!1,242.28,154.2,3.58,null,9364.98,"0501",!1,0],["a36511","KII835  ","United States",1679397462,1679397462,-85.768,36.766,6408.42,!1,177.02,186.34,-1.3,null,6454.14,"7340",!1,0],["71bd54","KAL2104 ","Republic of Korea",1679397462,1679397462,139.3754,35.776,7543.8,!1,178.87,279.44,13.66,null,7620,"3250",!1,0],["aa79a6","UAL383  ","United States",1679397462,1679397462,-107.0124,38.8366,11277.6,!1,275.9,64.49,-.65,null,11201.4,"2621",!1,0],["a8a3ce","JBU1057 ","United States",1679397462,1679397462,-72.8804,39.9914,6210.3,!1,218.27,174.05,7.8,null,6164.58,"3352",!1,0],["780771","CSN3794 ","China",1679397401,1679397402,113.5717,22.7864,1554.48,!1,114.25,1.55,.33,null,1554.48,null,!1,0],["a35e8a","EJA316  ","United States",1679397462,1679397462,-76.6262,39.1469,144.78,!1,58.97,324.23,-3.25,null,228.6,"1735",!1,0],["3003ae","DLA9500 ","Italy",1679397462,1679397462,5.4725,46.1201,12496.8,!1,215.36,235.02,0,null,12618.72,"6674",!1,0],["abbca1","SWA460  ","United States",1679397462,1679397462,-71.9716,41.5644,6995.16,!1,222.87,68.47,-2.93,null,6880.86,"7015",!1,0],["76b450","","Singapore",1679397248,1679397462,105.1114,.7153,8054.34,!1,192.91,304.24,-11.05,null,8382,null,!1,0],["151efa","SBI3022 ","Russian Federation",1679397462,1679397462,50.2208,56.2098,11582.4,!1,206.56,253.51,0,null,11353.8,null,!1,0],["ab7fee","AAL1940 ","United States",1679397462,1679397462,-93.8369,34.217,8526.78,!1,185.71,248.55,.33,null,8641.08,"0023",!1,0],["a42efc","DAL1212 ","United States",1679397462,1679397462,-81.104,40.0192,11590.02,!1,223.08,197.31,.33,null,11468.1,"2207",!1,0],["7c7b54","YNA     ","Australia",1679397462,1679397462,138.5515,-34.8277,510.54,!1,49.52,60.77,-.33,null,579.12,"4042",!1,0],["7c7b55","YNB     ","Australia",1679397462,1679397462,138.6471,-34.7773,198.12,!1,45.17,14.51,4.55,null,274.32,"1200",!1,0],["485a82","TFL1645 ","Kingdom of the Netherlands",1679397462,1679397462,-2.7707,49.2198,11277.6,!1,234.22,206.06,.33,null,11300.46,"2110",!1,0],["ac2c33","SWA956  ","United States",1679397462,1679397462,-92.2014,41.6923,11887.2,!1,236.47,170.23,0,null,11711.94,null,!1,0],["76b44e","SIA442  ","Singapore",1679397447,1679397447,104.0087,1.4264,685.8,!1,110.25,22.5,7.15,null,533.4,null,!1,0],["151ef1","SBI2157 ","Russian Federation",1679396915,1679397459,42.9066,53.3578,10660.38,!1,223.32,156.8,0,null,10515.6,null,!1,0],["485a81","TFL5KW  ","Kingdom of the Netherlands",1679397459,1679397460,-16.7687,29.3079,11277.6,!1,224.41,190.43,0,null,11590.02,null,!1,0],["800c48","AIC672  ","India",1679397461,1679397461,77.2787,15.2742,11582.4,!1,212.48,302.84,0,null,12169.14,null,!1,0],["485a86","TFL9522 ","Kingdom of the Netherlands",1679397461,1679397462,13.5956,65.4276,10972.8,!1,237.78,203.46,0,null,10538.46,null,!1,0],["151ef3","SBI2507 ","Russian Federation",1679397462,1679397462,40.628,56.2489,10805.16,!1,250.23,79.34,3.58,null,10553.7,null,!1,0],["3003bf","ENF01   ","Italy",1679397462,1679397462,51.6617,25.1275,556.26,!1,82.75,336.94,0,null,480.06,null,!1,0],["a5307f","RPA4710 ","United States",1679397462,1679397462,-90.4501,39.7699,10668,!1,248.73,83.11,-.33,null,10568.94,"1771",!1,0],["151ef8","SBI6344 ","Russian Federation",1679397415,1679397441,52.6214,62.27,11277.6,!1,252.68,86.03,0,null,10850.88,null,!1,0],["151ef9","SBI6348 ","Russian Federation",1679397456,1679397456,44.0309,44.026,10668,!1,231.47,93.7,-.33,null,10607.04,null,!1,0],["3e46e1","DISAR   ","Germany",1679397462,1679397462,11.4039,46.0523,12192,!1,226.41,50.99,0,null,12268.2,"1000",!1,0],["e082d5","","Argentina",1679397459,1679397460,-49.5479,-28.6899,11887.2,!1,254.59,47.87,0,null,12504.42,null,!1,0],["800c3c","VTI715  ","India",1679397462,1679397462,77.2078,28.38,1973.58,!1,161.69,122.53,3.58,null,1950.72,null,!1,0],["800c3b","LLR756  ","India",1679397462,1679397462,88.5707,23.2203,3528.06,!1,116.88,163.64,-3.25,null,3627.12,"2610",!1,0],["151eec","SBI2510 ","Russian Federation",1679397462,1679397462,49.2223,56.4293,11582.4,!1,210.15,256.98,0,null,11353.8,null,!1,0],["151eee","SBI3021 ","Russian Federation",1679397200,1679397200,57.7659,57.764,10660.38,!1,246.06,97.69,0,null,10386.06,null,!1,0],["a8a3ac","AJT502  ","United States",1679397462,1679397462,-94.0091,34.1634,10972.8,!1,192.38,249.82,0,null,11071.86,"6704",!1,0],["800c15","IGO848  ","India",1679397462,1679397462,79.0378,12.361,6629.4,!1,201,58.18,-8.13,null,6926.58,null,!1,0],["71bd79","AAR541  ","Republic of Korea",1679397462,1679397462,29.2446,43.2674,12192,!1,239.94,311,0,null,12138.66,null,!1,0],["7c2bc5","VOZ1229 ","Australia",1679397462,1679397462,153.3339,-27.3575,2682.24,!1,147,11.51,-3.9,null,2880.36,"1454",!1,0],["a448fc","DAL2705 ","United States",1679397462,1679397462,-81.3633,29.4758,4076.7,!1,193.97,327.79,1.95,null,4221.48,null,!1,0],["df128c","","",1679397424,1679397424,9.8019,46.155,null,!1,0,0,0,null,326,null,!1,3],["a65086","DAL997  ","United States",1679397462,1679397462,-82.3761,28.5034,6789.42,!1,212,289.27,6.5,null,7063.74,"1053",!1,0],["a91349","NKS322  ","United States",1679397462,1679397462,-84.3961,33.4618,10355.58,!1,223.37,348.85,0,null,10485.12,"3565",!1,0],["a292c9","ENY3888 ","United States",1679397461,1679397462,-91.9407,34.78,10363.2,!1,182.92,242.71,-.65,null,10462.26,"7303",!1,0],["8514f8","JAL671  ","Japan",1679397462,1679397462,139.4432,35.487,5173.98,!1,168.48,273.15,12.03,null,5295.9,"2210",!1,0],["a4ce11","AAL444  ","United States",1679397461,1679397461,-79.1003,26.9623,7467.6,!1,253.58,31.56,6.18,null,7802.88,null,!1,0],["ac8ce5","AAL2797 ","United States",1679397461,1679397462,-89.9736,29.6339,3672.84,!1,201.14,115.12,9.1,null,3794.76,null,!1,0],["a41bb5","FFT1102 ","United States",1679397462,1679397462,-97.2452,31.6586,10668,!1,283.67,105.25,-.33,null,10927.08,null,!1,0],["a7d35e","TWY63   ","United States",1679397450,1679397456,-71.2933,42.4619,null,!0,0,230.62,null,null,null,null,!1,0],["800c1a","VTMTW   ","India",1679397461,1679397462,79.7403,14.0741,9220.2,!1,191,340.98,8.13,null,9685.02,null,!1,0],["a448f8","UAL2482 ","United States",1679397462,1679397462,-84.3007,27.3382,10668,!1,270.44,109.68,0,null,11064.24,"3240",!1,0],["a448f2","UAL567  ","United States",1679397462,1679397462,-79.5185,43.0778,10972.8,!1,185.75,268.89,0,null,10721.34,"3554",!1,0],["a65092","","United States",1679397461,1679397461,132.3144,36.3437,10668,!1,294.05,92.61,0,null,10797.54,null,!1,0],["4d2237","RYR6BQ  ","Malta",1679397462,1679397462,7.1283,46.0638,9662.16,!1,220.54,316.7,9.43,null,9814.56,"5713",!1,0],["4d2239","RYR2KN  ","Malta",1679397462,1679397462,8.95,43.5656,8641.08,!1,190.65,16.14,-5.2,null,8823.96,"6451",!1,0],["800c75","IGO6534 ","India",1679397462,1679397462,77.1759,22.4116,11887.2,!1,253.3,166.61,0,null,12344.4,null,!1,0],["800c74","IGO525  ","India",1679397462,1679397462,90.8136,23.126,5280.66,!1,158.35,216.94,6.83,null,5417.82,"3305",!1,0],["800c79","GOW808  ","India",1679397343,1679397352,78.1541,16.0583,11582.4,!1,235.79,9.54,0,null,12153.9,null,!1,0],["abaa1a","SWA3822 ","United States",1679397462,1679397462,-70.1834,21.047,11582.4,!1,222.1,302.03,-.33,null,12192,null,!1,0],["4d222a","RYR2AM  ","Malta",1679397462,1679397462,3.9908,51.0554,11582.4,!1,219.18,302.83,0,null,11559.54,"3104",!1,0],["800c73","IGO757  ","India",1679397462,1679397462,88.4434,22.645,null,!0,4.89,8.44,null,null,null,"2644",!1,0],["3986e5","AFR11FK ","France",1679397462,1679397462,3.0492,49.0177,1249.68,!1,108.56,270.81,-5.2,null,1310.64,"1000",!1,0],["4d221e","RYR4548 ","Malta",1679397462,1679397462,-.1527,35.6224,11277.6,!1,237.49,62.1,0,null,11628.12,"7743",!0,0],["3986e7","AFR31NF ","France",1679397462,1679397462,-.4888,45.5088,10363.2,!1,247.61,16.29,0,null,10462.26,"1443",!1,0],["4d221a","RYR5RK  ","Malta",1679397462,1679397462,2.817,48.0219,11277.6,!1,224,156.73,0,null,11323.32,"2263",!1,0],["a89bab","AAL2866 ","United States",1679397462,1679397463,-92.8277,34.4997,10980.42,!1,181.72,251.51,0,null,11087.1,"5645",!1,0],["4d221d","RYR1HK  ","Malta",1679397462,1679397462,1.3433,41.2177,11277.6,!1,195.37,260.91,0,null,11506.2,"4053",!1,0],["3986e9","AFR65QP ","France",1679397462,1679397462,4.3426,48.0274,6766.56,!1,203.27,321.68,-7.8,null,6865.62,"1000",!1,0],["aaeae5","SKW129W ","United States",1679397460,1679397460,-85.2532,40.7843,2735.58,!1,135.91,185.43,14.31,null,2735.58,null,!1,0],["a6d8ff","N540M   ","United States",1679397462,1679397462,-90.7284,44.6739,4899.66,!1,189.82,113.65,9.75,null,4831.08,null,!1,0],["4d2245","RYR5LX  ","Malta",1679397463,1679397463,17.5225,59.3463,3528.06,!1,185.66,206.49,14.96,null,3429,null,!1,0],["a35283","FFT1243 ","United States",1679397462,1679397462,-79.2529,33.7442,11582.4,!1,202.16,219.32,-.33,null,11727.18,"7025",!1,0],["4d2247","RYR3NJ  ","Malta",1679397462,1679397462,6.3076,43.5576,11277.6,!1,207.48,235.4,0,null,11452.86,"1746",!1,0],["abc455","SWA2748 ","United States",1679397462,1679397462,-87.317,28.4981,10668,!1,267.93,99.28,0,null,11018.52,"2517",!1,0],["a05410","DAL2488 ","United States",1679397461,1679397462,-75.2248,43.0225,11582.4,!1,203.72,274.05,0,null,11361.42,"7322",!1,0],["a7e5c1","JBU608  ","United States",1679397462,1679397462,-83.7766,27.4179,10668,!1,274.3,115.32,.33,null,11087.1,"2622",!1,0],["4d222c","RYR23GC ","Malta",1679397461,1679397462,13.7674,40.1075,11056.62,!1,252.46,187.96,-2.6,null,11163.3,"5554",!1,0],["4d2240","RYR3LQ  ","Malta",1679397462,1679397462,9.7595,45.3532,4312.92,!1,185.44,154,15.93,null,4404.36,"6335",!1,0],["4d2241","RYR8022 ","Malta",1679397462,1679397462,14.8037,44.9317,11277.6,!1,230.2,108.23,0,null,11315.7,"0421",!1,0],["4d2242","RYR8FC  ","Malta",1679397461,1679397461,13.333,41.8623,8176.26,!1,207.07,64.07,7.48,null,8290.56,null,!1,0],["4d2243","RYR82PX ","Malta",1679397462,1679397462,-1.6334,43.5377,10972.8,!1,235.71,33.52,0,null,11087.1,"3371",!1,0],["4d2217","RYR3385 ","Malta",1679397462,1679397462,31.3189,33.7284,10980.42,!1,196.62,304.23,0,null,11109.96,"7211",!1,0],["4d2211","RYR29CU ","Malta",1679397462,1679397462,.3444,52.0773,1516.38,!1,115.24,90,-2.6,null,1508.76,"5707",!1,0],["4d2213","RYR7435 ","Malta",1679397462,1679397462,4.1089,41.1168,7627.62,!1,187.93,277.71,-9.75,null,7863.84,"1737",!1,0],["a017a5","DAL2999 ","United States",1679397462,1679397462,-71.6257,41.66,5875.02,!1,213.53,66.28,-10.08,null,5814.06,"3656",!1,0],["800c4b","AIC966  ","India",1679397462,1679397462,73.1852,18.9275,11887.2,!1,262.16,118.22,0,null,12428.22,null,!1,0],["485a35","KLM65H  ","Kingdom of the Netherlands",1679397461,1679397462,2.7634,42.166,5090.16,!1,192.93,190.29,-12.03,null,5273.04,"2103",!1,0],["abaa43","SWA3429 ","United States",1679397462,1679397462,-87.4476,28.5207,10972.8,!1,198.93,286.37,0,null,11315.7,"3733",!1,0],["485a33","KLM1167 ","Kingdom of the Netherlands",1679397402,1679397402,24.9668,60.3195,null,!0,.77,135,null,null,null,"0175",!1,0],["ac7a52","AAL2981 ","United States",1679397463,1679397463,-92.5053,31.5208,9144,!1,200.61,275.74,0,null,9372.6,"7711",!1,0],["800c65","IGO7583 ","India",1679397462,1679397462,88.4459,22.6599,null,!0,7.72,33.75,null,null,null,"1477",!1,0],["800c63","IGO121  ","India",1679397462,1679397462,74.9276,15.9555,6637.02,!1,182.09,237.34,-6.83,null,6896.1,null,!1,0],["4d2223","RYR5813 ","Malta",1679397462,1679397462,25.0246,36.8915,10980.42,!1,194.68,302.26,0,null,11109.96,"4135",!1,0],["aa4cf5","ATN3237 ","United States",1679397462,1679397462,-91.5285,36.3407,11887.2,!1,240.62,17.93,.33,null,11887.2,"5236",!1,0],["a22b9b","N239TC  ","United States",1679397263,1679397263,-84.5407,33.7771,198.12,!1,59.13,79.47,-3.25,null,289.56,"5563",!1,0],["4d220b","RYR4GR  ","Malta",1679397457,1679397457,10.8075,45.3398,449.58,!1,81.85,45.76,-4.23,null,624.84,"7061",!1,0],["4d220c","RYR93GJ ","Malta",1679397093,1679397327,-16.2268,29.8115,10668,!1,218.01,208.62,-10.08,null,10972.8,null,!1,0],["3cee56","AHO545R ","Germany",1679397462,1679397463,5.3601,43.0021,11277.6,!1,203.33,235.83,0,null,11483.34,"3044",!1,0],["abb12d","SWA3466 ","United States",1679397462,1679397462,-93.8053,38.0782,9448.8,!1,248.19,126.06,0,null,9387.84,"2175",!1,0],["4d2221","RYR299X ","Malta",1679397462,1679397462,12.0282,52.284,11582.4,!1,216.63,6.96,0,null,11567.16,"6646",!1,0],["4d226d","RYR682P ","Malta",1679397462,1679397462,1.6177,38.9594,11582.4,!1,241.91,67.36,0,null,11871.96,"5301",!1,0],["aa4ce2","ENY4088 ","United States",1679397462,1679397462,-92.3006,38.5135,8839.2,!1,252.41,39.79,-.33,null,8785.86,"1552",!1,0],["4d226e","RYR28YY ","Malta",1679397462,1679397462,3.821,50.7269,3497.58,!1,196.87,65.78,-5.2,null,3528.06,"1000",!1,0],["a09ab9","UPS954  ","United States",1679397461,1679397462,-120.6712,37.6847,5684.52,!1,208.89,326.35,-10.4,null,5562.6,"7262",!1,0],["80138d","","India",1679397225,1679397226,76.0977,17.6807,10370.82,!1,201.59,266.2,0,null,10873.74,null,!1,0],["80138c","IAD820  ","India",1679397462,1679397462,87.043,22.7925,10668,!1,266.63,39.83,0,null,11109.96,"2742",!1,0],["a1741a","JBU1282 ","United States",1679397462,1679397462,-75.606,39.4419,10058.4,!1,254,40.4,-.33,null,9951.72,"3602",!1,0],["86e79a","ANA204  ","Japan",1679397459,1679397462,98.526,50.0269,null,!0,51.96,179.43,0,null,null,null,!1,0],["a65bb7","DAL158  ","United States",1679397461,1679397462,-113.6473,53.849,11887.2,!1,261.82,109.75,0,null,11452.86,null,!1,0],["a5ee51","SWA6001 ","United States",1679397462,1679397462,-81.5697,27.6158,10363.2,!1,211.54,322.91,0,null,10744.2,"1425",!1,0],["40600d","EZY78CG ","United Kingdom",1679397459,1679397459,-5.4608,45.2751,10668,!1,229,203.57,-.33,null,10774.68,"2035",!1,0],["4cabfe","KZR7988 ","Ireland",1679397461,1679397461,52.2136,26.5688,7010.4,!1,239.41,22.49,0,null,7101.84,null,!1,0],["a4e876","UAL2205 ","United States",1679397462,1679397462,-88.485,36.9478,10363.2,!1,208.37,217.58,.33,null,10386.06,"6646",!1,0],["84091b","SJO624  ","Japan",1679397462,1679397462,133.3098,34.8869,6042.66,!1,191.04,65.16,11.38,null,6172.2,null,!1,0],["abbd8d","SWA1022 ","United States",1679397462,1679397462,-101.0073,30.9382,10972.8,!1,190.61,282.31,0,null,11269.98,"2554",!1,0],["a555da","ATN3505 ","United States",1679397462,1679397462,-93.5526,40.8641,10668,!1,257.45,92.41,0,null,10485.12,"1436",!1,0],["4d2273","RYR5049 ","Malta",1679397462,1679397462,13.9907,40.213,10972.8,!1,196.74,334.44,0,null,11056.62,null,!1,0],["4d2274","RYR146  ","Malta",1679397422,1679397432,.2635,51.9042,236.22,!1,65.16,222.76,-2.28,null,243.84,"1347",!1,0],["406c60","","United Kingdom",1679397462,1679397462,-1.3418,52.8309,396.24,!1,80.79,268.54,21.13,null,365.76,null,!1,0],["4d2275","RYR8BH  ","Malta",1679397462,1679397462,4.1116,45.5006,11887.2,!1,206.63,238.64,0,null,12009.12,"6654",!1,0],["4d2270","RYR3435 ","Malta",1679397462,1679397463,23.8127,37.6343,11582.4,!1,205.73,312.47,-.33,null,11689.08,"5656",!1,0],["44079a","EJU96WB ","Austria",1679397462,1679397462,-7.1851,41.2064,10675.62,!1,229.29,215.69,0,null,10873.74,null,!1,0],["3c68cb","BCS372  ","Germany",1679397462,1679397463,1.2069,51.0163,10972.8,!1,235.49,320.85,0,null,10934.7,"5777",!1,0],["a004e5","N100BZ  ","United States",1679397462,1679397462,-82.7165,34.5748,1348.74,!1,92.22,324.54,10.73,null,1432.56,null,!1,0],["406015","EZY8817 ","United Kingdom",1679397462,1679397462,7.7898,49.6686,11277.6,!1,233.09,117.47,-.33,null,11330.94,"5237",!1,0],["7c80ff","RXA2377 ","Australia",1679397462,1679397462,117.4527,-32.7602,5791.2,!1,145.01,105.22,0,null,6057.9,"4336",!1,0],["80139b","VTI737  ","India",1679397429,1679397429,80.4025,26.5101,10675.62,!1,238.49,130.98,.33,null,10881.36,null,!1,0],["406012","EZY46ZX ","United Kingdom",1679397462,1679397462,-7.0869,39.407,10972.8,!1,240.65,26.95,-.33,null,11224.26,"2210",!1,0],["80139c","IGO072  ","India",1679397398,1679397398,72.8722,19.0931,null,!0,2.31,340.31,null,null,null,null,!1,0],["406011","EZY38DW ","United Kingdom",1679397462,1679397462,6.3221,47.7298,10980.42,!1,207.66,302.35,0,null,11079.48,"2770",!1,0],["4694ee","SXEGN   ","Greece",1679397252,1679397252,23.9569,40.9862,1036.32,!1,75.2,69.58,-9.43,null,1097.28,null,!1,0],["a6c5a8","N5352K  ","United States",1679397448,1679397449,-80.4441,25.9768,609.6,!1,46.07,276.41,-1.3,null,640.08,null,!1,0],["4d226f","RYR75ZN ","Malta",1679397462,1679397462,2.0373,51.7204,6560.82,!1,198.82,332.24,-2.93,null,6537.96,"3127",!1,0],["4d2287","RYR1GJ  ","Malta",1679397462,1679397462,17.1498,59.1079,6697.98,!1,200.47,213.49,12.03,null,6591.3,null,!1,0],["510116","BRU783  ","Belarus",1679397461,1679397461,30.3791,41.7161,7703.82,!1,196.94,258.4,-8.13,null,7810.5,null,!1,0],["406c3b","VIR20V  ","United Kingdom",1679397462,1679397462,-9.8326,52.5938,12489.18,!1,270.3,99.64,-.33,null,12473.94,null,!1,0],["ab618b","UAL758  ","United States",1679397462,1679397462,-77.3287,38.7619,3931.92,!1,167.69,286.21,16.58,null,3954.78,null,!1,0],["a0b71a","N145UW  ","United States",1679397460,1679397460,-86.3635,39.8014,434.34,!1,48,239.04,0,null,487.68,null,!1,0],["4d2256","RYR5HG  ","Malta",1679397462,1679397462,12.281,41.2329,6225.54,!1,202.75,148.49,12.35,null,6347.46,null,!1,0],["4d2257","RYR2DV  ","Malta",1679397462,1679397462,23.2577,42.9793,4107.18,!1,178.39,317.34,6.83,null,4168.14,null,!1,0],["a7debf","NKS1399 ","United States",1679397462,1679397462,-78.1095,34.9603,10965.18,!1,197.41,219.29,0,null,11041.38,"7116",!1,0],["3c55c1","EWG7532 ","Germany",1679397460,1679397460,-3.4387,45.1341,11277.6,!1,226.63,224.91,-.33,null,11376.66,"1103",!1,0],["40731c","BAW36   ","United Kingdom",1679397461,1679397462,21.944,46.0334,12192,!1,236.56,297.74,0,null,12146.28,"2666",!1,0],["406c43","CFE1DB  ","United Kingdom",1679397462,1679397462,.6249,51.7948,4046.22,!1,188.68,57.7,8.45,null,4053.84,"2046",!1,0],["800c8e","VTI853  ","India",1679397462,1679397462,74.8939,16.2972,11277.6,!1,252.36,128.29,0,null,11856.72,null,!1,0],["7bb0ea","CSN3355 ","China",1679397437,1679397437,113.6721,22.8467,967.74,!1,92.49,117.14,-.65,null,1135.38,null,!1,0],["a7dec2","JIA5516 ","United States",1679397461,1679397462,-92.4887,37.4537,10668,!1,261.94,81.07,-.65,null,10622.28,"1177",!1,0],["78070d","CSN3575 ","China",1679397462,1679397462,113.9334,22.512,2103.12,!1,161.11,65.07,7.15,null,2156.46,null,!1,0],["a65bbc","DAL676  ","United States",1679397462,1679397462,-82.0968,26.7175,8343.9,!1,269.87,116.86,-5.53,null,8717.28,"3665",!1,0],["4d2250","RYR575J ","Malta",1679397345,1679397345,-15.0791,29.0704,8488.68,!1,189.23,197.4,-9.1,null,8854.44,null,!1,0],["4d225a","RYR97VN ","Malta",1679397254,1679397256,-.696,44.8422,30.48,!1,76.76,225.81,-3.9,null,144.78,"1000",!1,0],["4d225b","RYR26ZZ ","Malta",1679397460,1679397461,22.5247,47.3049,11277.6,!1,229.92,83.45,0,null,11186.16,"0423",!1,0],["a06764","N125MM  ","United States",1679397462,1679397462,-81.8315,27.1791,6736.08,!1,118.65,348.5,0,null,7010.4,null,!1,0],["a09aa4","N138TT  ","United States",1679397462,1679397462,-86.2961,39.9149,3863.34,!1,99.54,240.26,0,null,3870.96,null,!1,0],["3c55c6","EWG3LR  ","Germany",1679397462,1679397462,5.6357,44.4979,11887.2,!1,220.82,199.74,0,null,12047.22,"1121",!1,0],["801399","GOW287  ","India",1679397457,1679397461,75.4865,31.802,11277.6,!1,229.8,195.72,0,null,11391.9,null,!1,0],["a74871","ATN3331 ","United States",1679397462,1679397462,-86.721,28.3411,10972.8,!1,198.39,284.11,0,null,11308.08,"3720",!1,0],["3c55c3","EWG7088 ","Germany",1679397462,1679397462,-1.9138,46.2227,11277.6,!1,227,225.55,0,null,11369.04,"1111",!1,0],["4d224d","","Malta",1679397394,1679397396,-16.0297,29.0803,8763,!1,213.69,15.64,6.18,null,9052.56,null,!1,0],["406c39","VIR302  ","United Kingdom",1679397462,1679397462,2.4401,51.0914,9624.06,!1,253.45,101.95,4.23,null,9601.2,"3403",!1,0],["3c55c7","EWG2VK  ","Germany",1679397462,1679397462,2.1194,49.0816,11277.6,!1,215.22,229.27,-.33,null,11300.46,"4122",!1,0],["adfd6d","CNV6420 ","United States",1679397462,1679397462,9.0063,48.3736,4876.8,!1,90.05,186.23,6.83,null,5021.58,"2522",!1,0],["4d2263","RYR4UD  ","Malta",1679397460,1679397460,12.5898,41.8004,null,!0,0,123.75,null,null,null,null,!1,0],["4d2264","RYR13UA ","Malta",1679397462,1679397462,-2.251,55.2722,7627.62,!1,160.05,294.09,-18.86,null,7475.22,"1413",!1,0],["801396","VTI976  ","India",1679397462,1679397462,76.094,27.8757,5920.74,!1,212.26,40.87,-10.4,null,6035.04,null,!1,0],["801393","IGO7309 ","India",1679397462,1679397462,88.5059,23.3097,4312.92,!1,110.52,185.07,-5.2,null,4381.5,"0471",!1,0],["70afb7","RNA225  ","Nepal",1679397462,1679397462,78.0413,13.4811,2484.12,!1,129.25,196.42,-2.28,null,2514.6,null,!1,0],["3ff2c6","DMSNX   ","Germany",1679397462,1679397462,6.309,51.2533,632.46,!1,50.68,5.83,-.33,null,655.32,"7000",!1,0],["851580","JAL296  ","Japan",1679397462,1679397463,139.2399,34.8303,5783.58,!1,202.77,73.04,-4.88,null,5943.6,"3451",!1,0],["71005d","SVA554  ","Saudi Arabia",1679397461,1679397462,46.7845,24.8239,7056.12,!1,219.29,159.4,7.15,null,7216.14,null,!1,0],["a22ac6","RPA5638 ","United States",1679397462,1679397462,-73.8637,40.7733,null,!0,0,123.75,null,null,null,"5723",!1,0],["aa17c6","N75AX   ","United States",1679397463,1679397463,-89.5723,30.4818,8313.42,!1,225.06,57.51,11.7,null,8572.5,null,!1,0],["400a7d","SHT12H  ","United Kingdom",1679397461,1679397462,-.9023,52.8393,8534.4,!1,204.44,338.6,0,null,8442.96,"1253",!1,0],["a9ab87","FFT2567 ","United States",1679397462,1679397462,-87.1797,28.8509,10370.82,!1,199.01,292.65,.33,null,10713.72,"3724",!1,0],["710070","SVA175  ","Saudi Arabia",1679397462,1679397462,21.8793,41.6656,10972.8,!1,213.91,315.58,.33,null,11003.28,"2003",!1,0],["a124eb","N173GC  ","United States",1679397462,1679397462,-71.626,43.1557,2369.82,!1,62.19,321.04,2.93,null,2354.58,null,!1,0],["71004a","SVA263  ","Saudi Arabia",1679397461,1679397461,30.1052,39.4954,10492.74,!1,219.2,336.93,-4.88,null,10584.18,null,!1,0],["71004e","SVA774  ","Saudi Arabia",1679397461,1679397461,73.08,16.1009,11887.2,!1,249.89,132,0,null,12481.56,null,!1,0],["a39a13","FFT995  ","United States",1679397462,1679397462,-88.3984,36.5395,10142.22,!1,178.08,286.45,7.8,null,10149.84,"5610",!1,0],["a53d34","AWI6151 ","United States",1679397460,1679397460,-85.5392,42.1866,815.34,!1,104.69,166.65,6.83,null,838.2,null,!1,0],["e49a8b","AZU4363 ","Brazil",1679397462,1679397462,-47.634,-23.107,5722.62,!1,184.83,267.77,11.05,null,6057.9,null,!1,0],["e49a8d","ACN5350 ","Brazil",1679397283,1679397283,-35.9702,-8.0208,3048,!1,84.72,275.23,0,null,3215.64,null,!1,0],["710063","SVA825  ","Saudi Arabia",1679397459,1679397459,50.7884,22.4834,12192,!1,199.92,273.25,0,null,12694.92,null,!1,0],["a3b4c8","","United States",1679397266,1679397266,-77.0403,38.8606,null,!0,.45,53.44,null,null,null,null,!1,0],["71007c","SVA167  ","Saudi Arabia",1679397462,1679397462,20.0861,45.3475,11582.4,!1,224.33,324.05,2.6,null,11574.78,"4564",!1,0],["ada296","AAL944  ","United States",1679397463,1679397463,-85.9641,32.3589,11277.6,!1,235.81,171.22,0,null,11475.72,"1704",!1,0],["862250","JAL639  ","Japan",1679397462,1679397463,136.5554,35.1844,12192,!1,177.1,254.67,0,null,12306.3,"2162",!1,0],["493294","NJE729T ","Portugal",1679397462,1679397462,-5.9584,53.2857,1409.7,!1,110.02,335.11,-2.6,null,1341.12,"6757",!1,0],["0d0dcc","VIV1232 ","Mexico",1679397459,1679397462,-98.7992,19.6456,4312.92,!1,164.11,.18,12.68,null,4541.52,null,!1,0],["71007e","SVA151  ","Saudi Arabia",1679397462,1679397462,26.1296,37.3971,9128.76,!1,212.12,333.5,-.33,null,9304.02,"6440",!1,0],["406ade","EXS13TX ","United Kingdom",1679397462,1679397462,-5.6466,46.7954,10668,!1,238.22,204.9,.98,null,10759.44,"0503",!1,0],["a124d4","FDX1167 ","United States",1679397461,1679397462,-118.4872,37.6346,9761.22,!1,205.27,279.96,-.33,null,9646.92,null,!1,0],["a3b4d6","AAL806  ","United States",1679397462,1679397462,-74.2476,40.7727,4282.44,!1,181.94,237.12,15.28,null,4259.58,"3012",!1,0],["0d0de7","AMX680  ","Mexico",1679397462,1679397462,-74.2157,45.2924,3429,!1,187.32,58.36,-9.1,null,3322.32,"4240",!1,0],["4d2189","HYP022  ","Malta",1679397462,1679397462,20.6561,50.3495,6568.44,!1,191.21,297.39,6.83,null,6553.2,"1000",!1,0],["e49a87","AZU4540 ","Brazil",1679397462,1679397462,-46.7913,-23.2715,4922.52,!1,170.1,95.73,13.98,null,5196.84,null,!1,0],["493283","NJE480Q ","Portugal",1679397462,1679397462,12.4616,55.772,13106.4,!1,216.69,217.09,0,null,13007.34,"0735",!1,0],["a52a26","N4317D  ","United States",1679397462,1679397462,-80.3536,27.5166,845.82,!1,50.44,88.25,-.33,null,906.78,null,!1,0],["e49a6a","PRJKK   ","Brazil",1679397321,1679397324,-40.4071,-22.2273,746.76,!1,74.48,264.05,0,null,800.1,null,!1,0],["a0546c","FRG1690 ","United States",1679397462,1679397462,-85.0634,43.371,5882.64,!1,110.7,332.01,6.18,null,5791.2,"5300",!1,0],["a2941c","KAP711  ","United States",1679397461,1679397462,-72.605,43.3216,2377.44,!1,83.16,336.29,.65,null,2308.86,"5235",!1,0],["300554","DLH2HT  ","Italy",1679397462,1679397462,17.7672,47.1612,10668,!1,241.21,110.21,0,null,10614.66,"1000",!1,0],["300558","DLA8767 ","Italy",1679397462,1679397462,9.2782,50.2191,2225.04,!1,137.32,250.75,-5.2,null,2308.86,"6604",!1,0],["4b4326","HBZLE   ","Switzerland",1679397462,1679397462,7.6711,47.5398,495.3,!1,47.54,305.75,.98,null,571.5,"7000",!1,0],["440732","EJU75XL ","Austria",1679397462,1679397462,6.9202,45.3568,11582.4,!1,222.61,13.36,0,null,11727.18,"5352",!1,0],["a46ad6","HAL822  ","United States",1679397461,1679397462,141.0043,35.4533,5280.66,!1,216.87,106.11,10.4,null,5402.58,"3162",!1,0],["abbd0a","SWA1013 ","United States",1679397462,1679397462,-96.5719,33.9026,11582.4,!1,219.92,195.47,.65,null,11704.32,"5143",!1,0],["3cf571","ATL6U   ","Germany",1679397462,1679397462,.457,43.3844,13106.4,!1,196.87,228.81,0,null,13243.56,"2541",!1,0],["86351c","SNJ19   ","Japan",1679397461,1679397462,136.8494,35.2506,11582.4,!1,170.6,254.79,0,null,11780.52,"2344",!1,0],["300564","DLA8FN  ","Italy",1679397462,1679397462,8.1654,45.3198,4206.24,!1,171.29,208.72,-5.2,null,4351.02,"1000",!1,0],["a1aa4e","SWA419  ","United States",1679397462,1679397462,-86.3382,41.5236,3581.4,!1,156.4,269.43,-11.7,null,3581.4,"1450",!1,0],["a34ae0","DAL2255 ","United States",1679397461,1679397461,-93.2151,44.884,null,!0,0,199.69,null,null,null,null,!1,0],["861b03","ANA8542 ","Japan",1679397383,1679397383,140.3706,35.9748,1569.72,!1,113.51,294.36,-3.9,null,1767.84,"3544",!1,0],["ac8d3c","DAL2668 ","United States",1679397462,1679397462,-81.1024,43.9362,11582.4,!1,208.55,281.67,0,null,11315.7,"3576",!1,0],["710051","SVA891  ","Saudi Arabia",1679397461,1679397461,50.5741,22.4949,11582.4,!1,200.44,273.24,0,null,12054.84,null,!1,0],["a9c537","KII830  ","United States",1679397462,1679397462,-81.4942,41.5399,8839.2,!1,260.4,55.87,0,null,8770.62,"4003",!1,0],["710054","SVA826  ","Saudi Arabia",1679397456,1679397456,80.2665,11.7931,10668,!1,268.02,114.25,0,null,11224.26,null,!1,0],["a04183","VTE3455 ","United States",1679397462,1679397462,-80.6269,35.565,3009.9,!1,145.93,211.45,-.33,null,3093.72,null,!1,0],["a90bdb","NKS417  ","United States",1679397462,1679397462,-83.9,35.8849,11277.6,!1,215.06,187.98,0,null,11300.46,"5741",!1,0],["71002b","SVA376  ","Saudi Arabia",1679397462,1679397462,14.657,35.6683,11887.2,!1,261.33,96.22,-.33,null,12047.22,null,!1,0],["48c2ae","RYR6AF  ","Poland",1679397227,1679397227,19.7998,50.0742,null,!0,.06,154.69,null,null,null,null,!1,0],["48c2ab","RYR60UE ","Poland",1679397462,1679397462,13.9745,42.6425,8244.84,!1,228.92,243.72,-10.73,null,8359.14,"5556",!1,0],["48c2ac","RYR845  ","Poland",1679397461,1679397462,29.2421,35.237,10980.42,!1,206.12,319.35,-.98,null,11117.58,null,!1,0],["a3adb9","AAL1042 ","United States",1679397462,1679397462,-80.4038,27.3972,8382,!1,235.6,160.62,-11.38,null,8740.14,"5676",!1,0],["861b28","JAL134  ","Japan",1679397462,1679397462,139.8927,35.1462,2392.68,!1,156.48,43.4,-1.3,null,2430.78,"2270",!1,0],["868ee4","ANA511  ","Japan",1679397462,1679397462,134.5542,34.1594,8526.78,!1,193.92,230.06,2.6,null,8763,null,!1,0],["342397","VLG6FB  ","Spain",1679397459,1679397459,-4.4739,41.8488,10713.72,!1,215.88,218.81,6.18,null,10805.16,null,!1,0],["abbd47","SWA3391 ","United States",1679397462,1679397462,-86.4326,41.7628,8831.58,!1,228.58,104.07,.98,null,8724.9,"6514",!1,0],["71be30","KAL081  ","Republic of Korea",1679397462,1679397462,-109.4453,52.7127,11277.6,!1,264.05,111.37,0,null,10820.4,null,!1,0],["39c406","FHRAG   ","France",1679397303,1679397303,14.5926,48.6878,1181.1,!1,49.05,257.28,-.33,null,1257.3,null,!1,0],["a76a3a","UPS213  ","United States",1679397461,1679397462,-67.5093,43.0298,11277.6,!1,296.41,72.01,0,null,11064.24,"3724",!1,0],["e49a13","00000000","Brazil",1679397463,1679397463,-55.4366,-12.0986,3954.78,!1,160.91,162.32,9.75,null,4160.52,null,!1,0],["151ec4","SBI1215 ","Russian Federation",1679397223,1679397224,20.838,55.0256,1303.02,!1,120.33,152.78,-1.95,null,1310.64,"4263",!1,0],["a209b9","ENY3944 ","United States",1679397462,1679397462,-75.5314,38.4683,9753.6,!1,216.67,201.45,0,null,9738.36,"1150",!1,0],["7c7a5d","YGF     ","Australia",1679397462,1679397462,115.874,-32.1004,76.2,!1,39.13,230.87,1.63,null,45.72,null,!1,0],["a6c781","JBU253  ","United States",1679397462,1679397462,-72.0802,22.0487,10675.62,!1,262.21,121.2,0,null,11247.12,null,!1,0],["a0afa5","UPS490  ","United States",1679397018,1679397176,-104.9628,45.779,9753.6,!1,220.05,285.6,0,null,9471.66,"6746",!1,0],["48c2a8","RYR41NY ","Poland",1679397462,1679397462,6.8937,51.2312,11277.6,!1,238.54,118.89,.33,null,11292.84,"0523",!1,0],["a2590f","N250SA  ","United States",1679397462,1679397462,.544,39.3367,7924.8,!1,146.26,87.38,-.33,null,8153.4,null,!1,0],["a854d0","JBU948  ","United States",1679397462,1679397462,-76.7107,41.5588,10668,!1,263.98,110.06,0,null,10485.12,"1753",!1,0],["48c2a7","RYR7065 ","Poland",1679397369,1679397369,16.0081,45.4924,1996.44,!1,135.4,272.18,-5.53,null,3322.32,null,!1,0],["acf5bb","NKS419  ","United States",1679397462,1679397462,-81.1742,30.2138,11597.64,!1,216.96,173.46,-.33,null,11887.2,"4132",!1,0],["48c2a3","RYR69QB ","Poland",1679397462,1679397462,27.6055,43.4579,11582.4,!1,213.14,318.23,0,null,11567.16,null,!1,0],["acf5be","AAL2643 ","United States",1679397462,1679397462,-80.1464,36.1663,7330.44,!1,190.19,213.86,-7.48,null,7383.78,"3062",!1,0],["48c2a0","RYR2YR  ","Poland",1679397462,1679397462,11.1476,51.5092,11582.4,!1,211.46,275.72,-.33,null,11590.02,"3542",!1,0],["71be29","KAL214  ","Republic of Korea",1679397462,1679397462,-124.5086,39.8246,10058.4,!1,249.75,317.34,.33,null,9745.98,null,!1,0],["71be20","AAR384  ","Republic of Korea",1679397462,1679397462,120.2957,23.3801,11277.6,!1,246.64,19.12,0,null,11833.86,null,!1,0],["a12622","UPS906  ","United States",1679397462,1679397462,-109.2147,37.6325,9136.38,!1,190.83,234.77,.65,null,9128.76,"1422",!1,0],["407db5","GHFAV   ","United Kingdom",1679397462,1679397462,-1.4226,52.3803,426.72,!1,31.43,291.1,-3.25,null,403.86,null,!1,0],["71c506","KAL2105 ","Republic of Korea",1679397462,1679397462,133.4553,35.8115,10066.02,!1,269.02,105.87,-.33,null,10256.52,"4314",!1,0],["7c7a4a","VOZ243  ","Australia",1679397460,1679397460,140.168,-36.0275,8534.4,!1,223.84,308.19,0,null,8877.3,null,!1,0],["71c505","KAL1312 ","Republic of Korea",1679397462,1679397462,127.2842,37.0474,3573.78,!1,152.95,338.7,-2.6,null,3642.36,null,!1,0],["4cac54","RYR51GG ","Ireland",1679397462,1679397462,-.8871,51.3911,11582.4,!1,220.19,295.91,0,null,11544.3,"2765",!1,0],["7c7a4b","VOZ691  ","Australia",1679397261,1679397262,115.968,-31.9423,30.48,!0,5.4,14.06,null,null,null,"3656",!1,0],["4cac55","RYR5XL  ","Ireland",1679397282,1679397282,-6.2495,53.4297,null,!0,4.12,340.31,null,null,null,"7766",!1,0],["7c7a4c","VOZ1228 ","Australia",1679397462,1679397462,151.3997,-32.1623,10972.8,!1,227.16,197.12,0,null,11513.82,"1155",!1,0],["4cac56","RYR23EJ ","Ireland",1679397462,1679397462,6.9605,53.2263,11582.4,!1,216.27,242.83,0,null,11544.3,"3534",!1,0],["71c508","KAL9983 ","Republic of Korea",1679397461,1679397462,52.1402,26.1047,12184.38,!1,193.49,296.36,-.33,null,12519.66,null,!1,0],["a95ac1","N7011A  ","United States",1679397462,1679397462,-82.6644,27.6164,670.56,!1,46.71,154.56,0,null,739.14,"1004",!1,0],["4cac53","RYR41EV ","Ireland",1679397462,1679397462,.4574,43.9542,11071.86,!1,228.81,344.21,4.88,null,11201.4,"1040",!1,0],["71c502","TWB502  ","Republic of Korea",1679397453,1679397453,129.6907,34.0833,10408.92,!1,224,336.73,-3.58,null,10698.48,null,!1,0],["71c500","TWB101  ","Republic of Korea",1679397462,1679397462,126.7008,36.4819,7673.34,!1,242.47,164.87,4.88,null,7818.12,null,!1,0],["71c501","TWB171  ","Republic of Korea",1679397462,1679397462,126.79,35.9514,8343.9,!1,260.27,184.99,4.88,null,8511.54,null,!1,0],["71be16","AAR281  ","Republic of Korea",1679397459,1679397459,139.2465,38.0053,11582.4,!1,188.57,245.67,0,null,11597.64,null,!1,0],["a84dce","NKS1726 ","United States",1679397462,1679397462,-79.6468,26.3201,4541.52,!1,201.91,45.72,11.38,null,4754.88,null,!1,0],["5113bb","105     ","Estonia",1679397418,1679397418,24.8163,59.418,null,!0,1.29,5.62,null,null,null,null,!1,0],["aa9ad9","SWA3565 ","United States",1679397462,1679397462,-90.9077,39.3913,4168.14,!1,169.05,148.44,-9.43,null,4152.9,"2466",!1,0],["aa4d77","JBU890  ","United States",1679397462,1679397462,-66.2969,18.7734,3924.3,!1,183.71,318.63,19.18,null,4099.56,null,!1,0],["7c7a3b","VOZ562  ","Australia",1679397462,1679397462,149.2298,-34.5148,9936.48,!1,244.62,77.37,-12.35,null,10416.54,"4032",!1,0],["4cac24","RYR5    ","Ireland",1679397462,1679397462,-4.842,37.0986,2796.54,!1,148.17,179.2,-7.15,null,2956.56,"2146",!1,0],["7c7a3d","        ","Australia",1679397181,1679397181,151.1777,-33.9384,null,!0,7.46,75.94,null,null,null,"4337",!1,0],["45ab53","JTD287  ","Denmark",1679397462,1679397462,-10.2365,40.021,11277.6,!1,226.76,212.68,0,null,11513.82,null,!1,0],["aa5457","CSB529  ","United States",1679397462,1679397463,-84.9108,38.7837,4808.22,!1,177.7,190.17,13,null,4792.98,null,!1,0],["45ab4a","JTD927  ","Denmark",1679397462,1679397462,-8.1821,40.539,11277.6,!1,224.37,210.45,0,null,11506.2,null,!1,0],["8514b4","JAL440  ","Japan",1679397462,1679397462,138.9172,34.1934,6896.1,!1,227.81,62.28,-8.13,null,7094.22,"3477",!1,0],["aaeb6a","VXP9521 ","United States",1679397462,1679397462,-81.3368,31.435,12420.6,!1,260.07,25.04,10.73,null,12649.2,null,!1,0],["7c2ad4","JTE753  ","Australia",1679397462,1679397462,118.7933,-30.7662,11582.4,!1,207.77,231.03,0,null,12100.56,null,!1,0],["7c7a48","VOZ694  ","Australia",1679397462,1679397462,117.5557,-32.6727,8610.6,!1,248.91,108.06,5.85,null,8999.22,"3246",!1,0],["a2ca64","UAL525  ","United States",1679397461,1679397462,26.1776,37.0715,12496.8,!1,264.58,131.53,0,null,12595.86,"5203",!1,0],["71be39","KAL9517 ","Republic of Korea",1679397462,1679397462,27.1125,44.3808,10972.8,!1,219.38,302.16,0,null,10949.94,"4015",!1,0],["4cac1e","RYR2674 ","Ireland",1679397459,1679397459,3.0929,55.8899,11277.6,!1,240.47,87.55,0,null,11155.68,"1441",!1,0],["4cac1f","RYR5HR  ","Ireland",1679397458,1679397462,-4.4554,39.418,11277.6,!1,214.82,189.37,0,null,11536.68,"0567",!1,0],["151ece","SBI5005 ","Russian Federation",1679397420,1679397423,42.5688,59.7567,10972.8,!1,206.62,277.73,0,null,10637.52,null,!1,0],["7c44f6","FD626J  ","Australia",1679397462,1679397462,116.6078,-31.4957,9403.08,!1,177.79,37,8.78,null,9852.66,"1534",!1,0],["71be37","KAL035  ","Republic of Korea",1679397462,1679397462,-112.7612,38.1766,10660.38,!1,296.45,93.78,.33,null,10599.42,null,!1,0],["4cac7b","SAS41W  ","Ireland",1679397462,1679397462,.96,45.6388,10370.82,!1,242.22,352.68,.33,null,10462.26,"1054",!1,0],["a2efae","SWA324  ","United States",1679397461,1679397462,-83.2404,31.3974,11277.6,!1,255.98,146.73,0,null,11498.58,"5625",!1,0],["aa542f","AVA086  ","United States",1679397397,1679397397,-46.3124,-23.4882,2910.84,!1,150.03,246.78,13.33,null,3086.1,null,!1,0],["4cac7a","SAS98U  ","Ireland",1679397462,1679397462,7.8816,57.5674,11292.84,!1,247.08,57.93,-.33,null,11178.54,"1427",!1,0],["a173a8","DAL448  ","United States",1679397462,1679397462,-119.2355,33.765,3108.96,!1,179.12,70.89,-3.25,null,3009.9,null,!1,0],["4cac85","RYR77WB ","Ireland",1679397462,1679397462,.0633,45.8424,10972.8,!1,236.6,19.7,0,null,11064.24,"1000",!1,0],["401128","IOS505F ","United Kingdom",1679397462,1679397462,-4.6466,50.3462,2446.02,!1,61.5,250.96,.98,null,2461.26,null,!1,0],["acdbec","ASA802  ","United States",1679397462,1679397462,-124.8679,44.1952,10668,!1,240.42,56.34,0,null,10309.86,"2632",!1,0],["abc2e5","RPA3477 ","United States",1679397462,1679397462,-76.7415,38.7056,8839.2,!1,249.05,39.97,0,null,8808.72,"2573",!1,0],["7819b8","CDG2114 ","China",null,1679397445,null,null,null,!1,203.64,216.06,0,null,null,null,!1,0],["86d2cc","ANA41   ","Japan",1679397460,1679397461,136.4101,34.5437,4297.68,!1,149.22,250.25,-9.75,null,4427.22,"1710",!1,0],["ac2b80","SWA1330 ","United States",1679397374,1679397437,-78.0506,33.2551,10363.2,!1,220.69,195.69,0,null,10492.74,"0547",!1,0],["c069de","CJT990  ","Canada",1679397462,1679397462,-89.6225,35.3061,10363.2,!1,199,225.73,.33,null,10424.16,"3443",!1,0],["ac459f","N890D   ","United States",1679397462,1679397462,-87.461,39.6953,11582.4,!1,218.81,210.36,0,null,11498.58,"5710",!1,0],["c0093f","SWG602  ","Canada",1679397463,1679397463,-79.9694,41.2742,10363.2,!1,233.72,182.14,-.33,null,10210.8,"6357",!1,0],["4cac8a","SAS531  ","Ireland",1679397462,1679397462,10.1896,55.4491,11582.4,!1,213.16,230.78,0,null,11506.2,"0741",!1,0],["45ab50","JTD911  ","Denmark",1679397461,1679397462,4.8769,54.189,10972.8,!1,211.96,237.89,0,null,10904.22,"0754",!1,0],["4d20f6","VJT861  ","Malta",1679397462,1679397462,-8.2429,57.1488,12496.8,!1,254.26,146.05,-.33,null,12374.88,null,!1,0],["c04fbb","ACA891  ","Canada",1679397462,1679397462,10.795,43.6306,8244.84,!1,231.43,316.44,1.95,null,8420.1,"1265",!1,0],["4b4398","HBZPO   ","Switzerland",1679397458,1679397462,8.4737,46.9956,449.58,!1,.73,315,.33,null,548.64,null,!1,0],["86226a","ANA811  ","Japan",1679397327,1679397329,132.1144,32.6154,10972.8,!1,198.73,234.38,0,null,11292.84,null,!1,0],["acdbe7","ENY3301 ","United States",1679397462,1679397462,-90.1207,40.1426,9448.8,!1,238.26,48.15,.65,null,9326.88,"4526",!1,0],["4cac7f","RYR3HL  ","Ireland",1679397462,1679397462,9.6772,52.1353,10972.8,!1,202.76,283.65,.33,null,10988.04,"3565",!1,0],["39c426","AFR095  ","France",1679397462,1679397462,1.1393,49.3185,6004.56,!1,229.89,93.59,-5.85,null,6057.9,null,!1,0],["a186ad","JBU1369 ","United States",1679397462,1679397463,-79.2542,41.7571,8366.76,!1,222.26,192.97,5.85,null,8260.08,"5777",!1,0],["39c427","AFR864  ","France",1679397407,1679397413,4.2017,35.321,11269.98,!1,266.57,178.56,-.33,null,11597.64,"7675",!1,0],["7c7a90","YHU     ","Australia",1679397461,1679397462,115.8563,-32.1095,220.98,!1,41.3,219.44,2.6,null,190.5,"3000",!1,0],["39c429","AFR694  ","France",1679397462,1679397462,-8.6625,57.5508,10965.18,!1,243.01,302.82,-.33,null,10782.3,"7566",!1,0],["400a26","BAW903U ","United Kingdom",1679397407,1679397407,-.484,51.4666,null,!0,5.66,270,null,null,null,"2574",!1,0],["400a25","BAW6NL  ","United Kingdom",1679397462,1679397462,7.0008,49.6566,10972.8,!1,215.46,307.34,0,null,11041.38,"2746",!1,0],["4cac65","ABR426  ","Ireland",1679397462,1679397462,8.3527,47.7455,11887.2,!1,224.93,181.83,0,null,11971.02,"1000",!1,0],["a71aad","DAL2585 ","United States",1679397462,1679397462,-84.5022,33.6496,525.78,!1,61.74,89.52,-3.25,null,609.6,"2405",!1,0],["39c422","AFR890  ","France",1679397449,1679397449,16.1852,41.4028,11277.6,!1,262.12,125.66,0,null,11308.08,"0436",!1,0],["4cac62","ABR255  ","Ireland",1679397462,1679397462,3.7135,49.0973,8442.96,!1,235.78,84.24,9.1,null,8519.16,"1000",!1,0],["4cac63","ABR583  ","Ireland",1679397462,1679397462,9.9761,52.4593,1066.8,!1,87.64,273.7,-3.25,null,1120.14,"7575",!1,0],["4cac64","ABR403  ","Ireland",1679397462,1679397462,7.3744,47.3552,11277.6,!1,207.08,226.71,0,null,11399.52,"6655",!1,0],["a40a9b","N36GT   ","United States",1679397461,1679397461,20.6606,52.2583,388.62,!1,74.02,263.62,-.33,null,441.96,null,!1,0],["86d2ee","ANA599  ","Japan",1679397335,1679397335,139.7823,35.5627,null,!0,9.26,247.5,null,null,null,null,!1,0],["5113f8","EL63    ","Estonia",1679397382,1679397382,24.8136,59.4155,null,!0,9.26,87.19,null,null,null,null,!1,0],["47c8ad","LN0310UA","Norway",1679397462,1679397462,10.1939,55.6759,358.14,!1,15.68,228.99,-1.3,null,327.66,"1421",!0,0],["7c7a6c","YGU     ","Australia",1679397462,1679397462,115.8605,-32.1232,327.66,!1,41.49,137.01,-.65,null,289.56,"3000",!1,0],["3b97ff","ST3     ","France",1679397456,1679397456,2.3549,48.7179,null,!0,0,345.94,null,null,null,null,!1,0],["4cac79","SAS540  ","Ireland",1679397462,1679397462,8.4778,54.6906,11894.82,!1,238.13,63.99,0,null,11826.24,"2060",!1,0],["c04fdd","ACA1086 ","Canada",1679397462,1679397462,-80.2083,41.3535,10363.2,!1,243.21,183.27,0,null,10226.04,"2230",!1,0],["a89d22","RPA3712 ","United States",1679397462,1679397462,-81.7016,41.2375,11277.6,!1,244.82,76.64,0,null,11109.96,"6674",!1,0],["04c11c","KQA761  ","Kenya",1679397448,1679397448,28.2239,-25.7097,7315.2,!1,214.43,17.74,8.78,null,7757.16,null,!1,0],["407dbf","","United Kingdom",1679397460,1679397460,117.6394,22.0701,10668,!1,274.21,58.82,0,null,11231.88,null,!1,0],["4cac5d","EJJMMM  ","Ireland",1679397462,1679397462,.1168,51.4229,647.7,!1,67.88,242.46,-3.25,null,655.32,"7650",!1,0],["3d27d1","DENIF   ","Germany",1679397462,1679397462,15.6688,46.9839,861.06,!1,46.86,72.76,-.33,null,null,null,!1,0],["a2a915","UAL18   ","United States",1679397462,1679397462,-11.9237,54.2572,10972.8,!1,208.67,293.85,-.65,null,10843.26,"3573",!1,0],["a075df","RPA4490 ","United States",1679397462,1679397462,-76.3871,38.3031,10668,!1,246.99,34.22,0,null,10599.42,"3143",!1,0],["861bec","ANA685  ","Japan",1679397461,1679397462,137.872,35.4813,12192,!1,177.27,260.65,-.33,null,12298.68,"1701",!1,0],["801403","IAD784  ","India",1679397462,1679397462,77.0973,28.5403,373.38,!1,86.1,104.53,9.1,null,274.32,null,!1,0],["0c20a6","CMP877  ","Panama",1679397462,1679397462,-79.434,8.7634,1645.92,!1,99.24,341.57,-4.55,null,1729.74,null,!1,0],["801404","IGO781  ","India",1679397439,1679397439,77.0896,28.5703,null,!0,5.14,348.75,null,null,null,null,!1,0],["aa4a9b","SWA1487 ","United States",1679397462,1679397462,-84.719,33.6615,1089.66,!1,83.92,139.47,-.33,null,1181.1,"1171",!1,0],["114730","","Russian Federation",1679397401,1679397401,10.8053,47.6146,null,!1,0,0,0,null,844,null,!1,3],["801408","VTI122  ","India",1679397462,1679397462,84.8426,23.7742,11590.02,!1,197.27,313.1,-.65,null,11948.16,"0743",!1,0],["801405","IGO1787 ","India",1679397462,1679397462,77.1749,28.4246,3322.32,!1,124.9,284.55,-7.15,null,3352.8,null,!1,0],["800d0e","GOW953  ","India",1679397452,1679397453,75.6827,16.7324,9753.6,!1,255.68,59,-.33,null,10233.66,null,!1,0],["407c5a","DHK302  ","United Kingdom",1679397462,1679397462,-11.5509,53.4782,9441.18,!1,205.07,285.57,0,null,9357.36,"4415",!1,0],["407c68","BND93V  ","United Kingdom",1679397453,1679397453,-1.1257,57.829,754.38,!1,95.25,40.4,-4.23,null,670.56,null,!1,0],["789205","HKE851  ","China",1679397146,1679397155,113.9296,22.311,null,!0,0,135,null,null,null,null,!1,0],["a05bde","RPA4301 ","United States",1679397405,1679397407,-77.0416,38.8563,null,!0,0,264.38,null,null,null,"6620",!1,0],["ad8901","SKW5862 ","United States",1679397462,1679397462,-98.5467,45.287,9753.6,!1,198.31,223.63,-.33,null,9494.52,null,!1,0],["789206","HKE899  ","China",1679397462,1679397462,119.4333,23.4773,10972.8,!1,200.68,237.78,0,null,11513.82,null,!1,0],["789215","CPA797  ","China",1679397393,1679397400,113.9327,22.313,null,!0,.45,70.31,null,null,null,null,!1,0],["48c12e","RYR4ZE  ","Poland",1679397462,1679397462,16.7154,47.04,11277.6,!1,214.19,34.53,0,null,11269.98,"0264",!1,0],["aa649c","SWA1289 ","United States",1679397462,1679397462,-90.084,29.8722,1120.14,!1,133.74,287.46,0,null,1188.72,"3674",!1,0],["acf492","AAL1020 ","United States",1679397462,1679397462,-81.6362,34.2959,9753.6,!1,247.12,162.06,0,null,9845.04,"5725",!1,0],["acf497","DAL1382 ","United States",1679397462,1679397462,-77.8294,38.6765,9144,!1,218.13,218.68,0,null,9128.76,"3553",!1,0],["48c133","RYR1CL  ","Poland",1679397462,1679397462,15.8391,43.7241,11277.6,!1,236.17,215.87,-.33,null,11308.08,"1000",!1,0],["86ce81","SNJ20   ","Japan",1679397463,1679397463,138.6198,34.6663,8122.92,!1,258.3,81.06,-11.38,null,8343.9,"3447",!1,0],["48c130","RYR3AP  ","Poland",1679397462,1679397462,14.7636,52.9039,10972.8,!1,212.48,250.78,0,null,10927.08,"3772",!1,0],["a92361","UAL1857 ","United States",1679397462,1679397462,-80.8024,39.118,10363.2,!1,192.99,285.78,0,null,10287,"2471",!1,0],["a92365","UAL1785 ","United States",1679397337,1679397344,-77.45,38.945,null,!0,0,351.56,null,null,null,"3514",!1,0],["800d09","IGO2086 ","India",1679397350,1679397451,81.973,26.2736,9204.96,!1,224.9,211.44,0,null,9418.32,null,!1,0],["800d08","SEJ3757 ","India",1679397447,1679397447,75.1151,26.6789,6705.6,!1,164.75,258.65,-.33,null,6880.86,null,!1,0],["80142a","IGO172  ","India",1679397462,1679397462,88.4496,22.6701,60.96,!1,67.83,186.53,-2.93,null,-30.48,"2705",!1,0],["80142b","IGO1865 ","India",1679397462,1679397462,87.9374,24.6744,9753.6,!1,208.95,289.86,.65,null,10027.92,"4714",!1,0],["78921b","CPA581  ","China",1679397462,1679397462,120.5613,24.3785,10965.18,!1,229.02,227.46,.33,null,11475.72,null,!1,0],["780892","CDG2266 ","China",1679397462,1679397462,113.8436,22.8073,4800.6,!1,191.65,333.71,7.8,null,4991.1,null,!1,0],["800d58","IGO6481 ","India",null,1679397413,null,null,null,!1,201.17,335.2,0,null,null,null,!1,0],["48c128","RYR4DD  ","Poland",1679397462,1679397462,18.0341,50.7567,6111.24,!1,191.11,102.28,-9.75,null,6134.1,"4627",!1,0],["1061be","044     ","Russian Federation",1679397454,1679397459,132.1656,43.397,null,!0,0,154.69,null,null,null,null,!1,0],["1061bd","439     ","Russian Federation",1679397461,1679397461,132.1397,43.3793,null,!0,0,19.69,null,null,null,null,!1,0],["48c126","RYR21RX ","Poland",1679397462,1679397462,12.386,48.1355,10363.2,!1,223.52,208.45,0,null,10431.78,"6411",!1,0],["a6c343","N535CS  ","United States",1679397462,1679397462,-81.3363,32.0287,2308.86,!1,81.73,345.79,-.33,null,2385.06,null,!1,0],["48c127","RYR9JH  ","Poland",1679397452,1679397460,18.4621,54.3818,null,!0,.9,106.88,null,null,null,null,!1,0],["a062ec","DAL1480 ","United States",1679397440,1679397440,-73.8597,40.7687,null,!0,1.03,45,null,null,null,null,!1,0],["789229","HKE647  ","China",1679397462,1679397463,135.2997,34.2061,10363.2,!1,193.77,242.14,0,null,10622.28,"3777",!1,0],["0c20f2","CMP724  ","Panama",1679397304,1679397305,-59.4538,-11.0555,10972.8,!1,244.58,316.88,0,null,11628.12,null,!1,0],["a35b34","UPS2019 ","United States",null,1679397419,null,null,null,!1,1.29,19.69,null,null,null,null,!1,0],["800d4c","IGO318T ","India",1679397462,1679397462,76.8548,28.1005,5013.96,!1,185.16,224.66,12.35,null,5074.92,null,!1,0],["801444","IAD1731 ","India",1679397462,1679397462,77.7234,13.731,5615.94,!1,206.57,12.51,8.78,null,5829.3,null,!1,0],["801441","VTI618  ","India",1679397462,1679397462,76.7959,28.6335,1638.3,!1,108.93,104.5,-4.23,null,1607.82,null,!1,0],["789231","","China",1679397351,1679397417,121.2831,8.4915,11582.4,!1,242.96,333.87,0,null,12352.02,null,!1,0],["789232","CPA826  ","China",1679397451,1679397451,113.9246,22.3163,null,!0,5.66,295.31,null,null,null,null,!1,0],["c0556b","JZA770  ","Canada",1679397462,1679397462,-83.011,42.703,6400.8,!1,193.63,48.99,0,null,6316.98,"4131",!1,0],["407070","GCJDA   ","United Kingdom",1679397458,1679397461,-2.5465,53.5995,723.9,!1,31.68,302.4,-1.3,null,685.8,null,!1,0],["abf9b1","SWA1190 ","United States",1679397462,1679397462,-96.939,32.9586,594.36,!1,82.76,149.77,.33,null,586.74,null,!1,0],["a48e46","DAL712  ","United States",1679397462,1679397462,-87.8037,34.4337,10355.58,!1,184.39,275.12,0,null,10447.02,"7175",!1,0],["48978a","LOT318  ","Poland",1679397462,1679397462,21.0892,51.995,891.54,!1,124.4,20.83,-.33,null,937.26,"1000",!1,0],["78922b","HKE780  ","China",1679397166,1679397166,103.9877,1.3422,null,!0,7.46,202.5,null,null,null,"5344",!1,0],["3aabfb","FMY8060 ","France",1679397462,1679397462,5.256,47.3262,7315.2,!1,102.39,306.01,0,null,7444.74,"1000",!1,0],["a0026e","N10AU   ","United States",1679397462,1679397462,-86.5474,34.4749,1767.84,!1,145.31,349.8,-7.8,null,1821.18,null,!1,0],["3aabfe","FMY8051 ","France",1679397462,1679397462,5.0404,44.1217,5562.6,!1,152.78,171.87,-5.53,null,5715,"1000",!1,0],["407c9c","BAE601  ","United Kingdom",1679397462,1679397462,51.5867,25.212,266.7,!1,73.18,338.12,-3.9,null,182.88,null,!1,0],["a182f6","JBU315  ","United States",1679397462,1679397462,-75.5928,42.4536,7338.06,!1,234.42,131.17,5.53,null,7185.66,"1341",!1,0],["789244","CPA473  ","China",1679397455,1679397455,118.385,22.8617,11582.4,!1,225.18,237.22,0,null,12161.52,null,!1,0],["0c20d5","CMP407  ","Panama",1679397461,1679397461,-89.3302,14.0987,9791.7,!1,245.09,121.09,11.05,null,10363.2,"4762",!1,0],["801455","IGO958  ","India",1679397462,1679397462,78.488,14.7941,10850.88,!1,226.69,205.11,-16.91,null,11430,null,!1,0],["789246","CPA163  ","China",1679397462,1679397462,144.7308,-37.6956,1760.22,!1,138.57,182.98,-4.55,null,1874.52,"5333",!1,0],["789247","CPA402  ","China",1679397428,1679397461,121.2159,25.2056,1828.8,!1,131.5,48.01,-8.78,null,1866.9,null,!1,0],["a7ef4b","FFT106  ","United States",1679397460,1679397461,-69.6903,22.1131,10668,!1,253.75,127.75,0,null,11262.36,null,!1,0],["4020f8","        ","United Kingdom",1679397433,1679397433,-1.3094,54.538,541.02,!1,40.14,181.47,-.65,null,541.02,null,!1,0],["80140c","IGO1859 ","India",1679397461,1679397462,89.0389,23.1708,4549.14,!1,135.03,251.57,-3.58,null,4648.2,"4715",!1,0],["800d36","IGO214  ","India",1679397462,1679397462,77.1935,28.568,1028.7,!1,134.29,90.88,12.03,null,975.36,null,!1,0],["800d35","IGO5372 ","India",1679397461,1679397462,76.8656,28.5944,876.3,!1,100.8,136.45,-1.95,null,815.34,null,!1,0],["80140a","IGO2416 ","India",1679397462,1679397462,76.6078,28.7172,2293.62,!1,121.95,137.22,-2.6,null,2286,null,!1,0],["800d33","IGO148  ","India",1679397349,1679397349,75.5296,31.9328,11574.78,!1,228.81,15.79,0,null,11689.08,null,!1,0],["80140b","IGO6567 ","India",1679397462,1679397462,77.3042,28.3888,3939.54,!1,130.28,325.62,-3.58,null,3985.26,null,!1,0],["489788","LOT3AB  ","Poland",1679397462,1679397462,19.8832,52.0319,5029.2,!1,153.36,101.61,-5.2,null,5013.96,"1000",!1,0],["489787","LOT3VT  ","Poland",1679397463,1679397463,19.6934,52.9792,6705.6,!1,205.06,139.48,.33,null,6682.74,"1000",!1,0],["a12e80","UAL730  ","United States",1679397462,1679397462,-84.9366,41.889,10363.2,!1,204.86,285.89,0,null,10203.18,"7014",!1,0],["489786","LOT2HM  ","Poland",1679397462,1679397462,21.6673,51.3878,6560.82,!1,177.57,1.83,-4.23,null,6515.1,"1000",!1,0],["861bca","ANA779  ","Japan",1679397461,1679397462,140.3546,40.3198,11277.6,!1,255.16,32.57,0,null,11132.82,"0460",!1,0],["801421","IGO2052 ","India",1679397452,1679397452,77.0913,28.5611,null,!0,6.94,284.06,null,null,null,null,!1,0],["789254","HGB683  ","China",1679397460,1679397460,109.066,19.5295,11582.4,!1,209.54,230.88,0,null,12214.86,null,!1,0],["801425","VTCMR   ","India",1679397445,1679397446,88.1206,26.3754,10363.2,!1,203.19,210.59,.33,null,10637.52,"2607",!1,0],["a66c99","JIA5603 ","United States",1679397462,1679397462,-77.3583,37.877,5204.46,!1,176.05,14.04,-7.15,null,5227.32,"0776",!1,0],["acffb7","AAL2261 ","United States",1679397462,1679397462,-93.3733,36.1877,11582.4,!1,205.32,222.77,0,null,11597.64,"1715",!1,0],["abf9d5","","United States",null,1679397335,null,null,null,!1,2.83,174.38,null,null,null,null,!1,0],["800d43","IGO6975 ","India",1679397462,1679397462,76.3089,14.292,10668,!1,254.7,128.03,0,null,11315.7,null,!1,0],["78924e","HKE681  ","China",1679397415,1679397415,113.9056,22.3213,null,!0,7.72,160.31,null,null,null,null,!1,0],["a48e21","N393CA  ","United States",1679397462,1679397462,-89.1376,41.4278,1767.84,!1,58.66,195.26,.33,null,1737.36,null,!1,0],["78924f","HKE182  ","China",1679397450,1679397461,120.1847,24.0109,3261.36,!1,162.81,33.14,-7.48,null,3413.76,null,!1,0],["80141c","IGO2609 ","India",1679397462,1679397462,76.6695,28.8983,3543.3,!1,143.77,226.89,-6.83,null,3581.4,null,!1,0],["ab8fee","AAL2959 ","United States",1679397462,1679397462,-86.6448,28.9139,9753.6,!1,196.81,279.78,0,null,10073.64,"2641",!1,0],["801428","IGO6087 ","India",1679397462,1679397463,88.4866,22.9862,1417.32,!1,101.92,186.08,-3.58,null,1379.22,"0470",!1,0],["aa5130","ENY4053 ","United States",1679397462,1679397462,-82.745,43.0117,9753.6,!1,194.73,266.97,.33,null,9593.58,"7471",!1,0],["40702e","EXS71C  ","United Kingdom",1679397461,1679397462,-2.2603,53.3627,null,!0,0,95.62,null,null,null,null,!1,0],["a8299a","JBU1229 ","United States",1679397462,1679397462,-78.8661,37.2483,10363.2,!1,211.95,217.01,0,null,10386.06,"5777",!1,0],["ab1c47","DAL2767 ","United States",1679397462,1679397462,-82.9845,36.7703,10363.2,!1,231.4,183.44,-.33,null,10347.96,"6671",!1,0],["ac3c0e","FDX38   ","United States",1679397462,1679397462,-79.2963,38.308,10668,!1,269.49,73.02,0,null,10599.42,"0457",!0,0],["0c20b6","CMP475  ","Panama",1679397462,1679397462,-78.1086,-11.786,11590.02,!1,214.64,345,0,null,null,null,!1,0],["a325af","N3012H  ","United States",1679397462,1679397462,4.7691,51.8423,472.44,!1,71.32,243.43,-.65,null,502.92,"7000",!1,0],["7c7c41","YTV     ","Australia",1679397462,1679397462,138.6103,-34.822,144.78,!1,37.98,114.83,-2.28,null,198.12,null,!1,0],["710107","SVA760  ","Saudi Arabia",1679397462,1679397462,76.659,28.4931,2453.64,!1,109.2,282.79,-3.9,null,2468.88,null,!1,0],["ac54b1","FDX31   ","United States",1679397453,1679397459,-122.2153,37.7192,null,!0,0,227.81,null,null,null,"2467",!1,0],["3c4dd5","DLH6TU  ","Germany",1679397463,1679397463,6.9439,49.5947,3276.6,!1,153.93,297.25,-4.88,null,3345.18,"7076",!1,0],["a85e2b","UAL709  ","United States",1679397321,1679397321,-74.1666,40.7,null,!0,0,95.62,null,null,null,"3344",!1,0],["80146d","IGO7234 ","India",1679397462,1679397463,88.2363,22.5768,1645.92,!1,92.67,272.23,5.2,null,1607.82,"1417",!1,0],["4691c5","AEE83W  ","Greece",1679397462,1679397462,23.3895,39.784,7185.66,!1,206.49,150.11,7.8,null,7322.82,null,!1,0],["4691c2","AEE547  ","Greece",1679397461,1679397462,31.8003,35.0945,11079.48,!1,188.28,294.88,4.88,null,11193.78,"7354",!1,0],["a6bba3","ASA42   ","United States",1679397462,1679397462,-74.0532,40.8555,5623.56,!1,178.09,154.32,-10.4,null,5585.46,"3257",!1,0],["3c4dcb","DLH7PA  ","Germany",1679397461,1679397462,9.8506,44.4772,4389.12,!1,165,229.81,-6.5,null,4503.42,"6441",!1,0],["800d94","VTI775  ","India",1679397462,1679397462,88.2943,23.0029,2057.4,!1,120.66,13.56,-3.25,null,2072.64,"0356",!1,0],["4cc4c5","SXY321P ","Iceland",1679397449,1679397461,19.7086,39.332,11887.2,!1,257.23,131.76,0,null,11871.96,null,!1,0],["800d8c","IGO5177 ","India",1679397453,1679397453,81.3364,25.9812,10363.2,!1,210.65,292.24,.33,null,10576.56,null,!1,0],["3c4dd1","DLH5LA  ","Germany",1679397461,1679397461,8.9863,55.5331,1767.84,!1,142.42,334.08,-5.2,null,1767.84,"6453",!1,0],["aa50a0","ABX552  ","United States",1679397220,1679397221,-73.7565,40.6433,-114.3,!1,65.29,210.81,-2.93,null,-15.24,"4015",!1,0],["710112","SVA144  ","Saudi Arabia",1679397462,1679397462,4.5915,48.7451,10546.08,!1,252.35,110.65,4.88,null,10599.42,"5630",!1,0],["ad0d35","AAL1852 ","United States",1679397462,1679397462,-87.3492,42.2347,1470.66,!1,132.91,192.75,-3.25,null,1485.9,"3506",!1,0],["ad6da6","FDY305  ","United States",1679397462,1679397462,-78.756,41.7742,1798.32,!1,49.52,222.47,3.25,null,1813.56,null,!1,0],["ad273b","DAL2179 ","United States",1679397462,1679397462,-94.741,35.9756,6377.94,!1,231.79,102.43,6.83,null,6393.18,"2137",!1,0],["c0550c","JZA663  ","Canada",1679397462,1679397462,-65.5883,44.6004,7315.2,!1,142,260.2,.33,null,7132.32,null,!1,0],["3c4dcf","DLH03T  ","Germany",1679397462,1679397462,12.6829,47.7664,8115.3,!1,210.62,134.7,4.55,null,8214.36,"1000",!1,0],["4d210f","VJT630  ","Malta",1679397459,1679397461,31.8422,33.2325,10363.2,!1,184.32,301.65,.33,null,10523.22,"4132",!1,0],["3c4dcd","DLH1084 ","Germany",1679397462,1679397463,.0185,45.4923,4815.84,!1,170.74,215.56,-7.48,null,4922.52,"1000",!1,0],["800d9f","GOW038  ","India",1679397462,1679397462,80.0529,27.1915,11582.4,!1,210.09,324.87,-.33,null,11795.76,null,!1,0],["3c4dcc","DLH8MW  ","Germany",1679397195,1679397195,17.1604,50.9649,1280.16,!1,125.62,26.25,-5.2,null,1371.6,"1411",!1,0],["adb29f","AAL897  ","United States",1679397462,1679397462,-80.7262,33.8443,7924.8,!1,239.24,180.74,0,null,8016.24,"7433",!1,0],["710100","SVA924  ","Saudi Arabia",1679397462,1679397462,22.2506,36.8434,10668,!1,252.14,146.99,0,null,10782.3,"0114",!1,0],["ad2741","SIL3990 ","United States",1679397455,1679397460,-97.3338,33.0655,601.98,!1,50.42,171.79,-1.95,null,563.88,"1156",!1,0],["800d9d","","India",1679397394,1679397396,80.9741,17.0969,4541.52,!1,159.4,94.26,-8.78,null,null,null,!1,0],["3444cc","VLG1377 ","Spain",1679397462,1679397462,1.4567,42.7881,10972.8,!1,231.12,354.25,0,null,11163.3,"5377",!1,0],["801493","VTI674  ","India",1679397462,1679397462,79.8242,27.4828,9745.98,!1,228.51,324.81,0,null,9928.86,null,!1,0],["600bc8","ESW65   ","Azerbaijan",1679397462,1679397462,-4.0454,37.1608,7871.46,!1,231.66,18.52,13,null,8153.4,null,!1,0],["3444ca","VLG90TA ","Spain",1679397462,1679397462,1.7378,41.8227,6088.38,!1,208.26,346.72,10.4,null,6286.5,"1053",!1,0],["a3b268","UAL1304 ","United States",1679397462,1679397462,-75.1628,39.1778,11582.4,!1,212.95,198.3,0,null,11506.2,"2723",!1,0],["010160","MSR682  ","Egypt",1679397461,1679397462,47.7036,27.8517,9144,!1,196.05,289.15,-.33,null,9189.72,null,!1,0],["abc107","SWA2863 ","United States",1679397462,1679397462,-82.1051,38.1117,11582.4,!1,205.52,250.25,0,null,11529.06,"2135",!1,0],["ac9113","SKW6000 ","United States",1679397462,1679397462,-79.883,42.4617,9753.6,!1,197.12,274.49,0,null,9555.48,"1631",!1,0],["010162","MSR703  ","Egypt",1679397462,1679397462,11.4931,43.823,11254.74,!1,204.26,300.25,-3.9,null,11384.28,"5513",!1,0],["a1226e","","United States",1679397461,1679397462,-81.3223,28.446,152.4,!1,85.41,358.96,18.53,null,175.26,null,!1,0],["010154","MSR985  ","Egypt",1679397462,1679397463,13.8997,53.9945,9753.6,!1,227.81,316.65,0,null,9738.36,"3122",!1,0],["800d6d","IGO265  ","India",1679397441,1679397441,72.8691,19.0904,null,!0,11.32,90,null,null,null,null,!1,0],["3444d1","VLG92JM ","Spain",1679397462,1679397462,9.0773,46.2495,10972.8,!1,224.66,18.56,0,null,11102.34,"2772",!1,0],["7041c1","UBA7001 ","Myanmar",1679397462,1679397462,87.7383,22.9711,10972.8,!1,191.68,305.06,0,null,11407.14,"7407",!1,0],["801464","VTI817  ","India",1679397462,1679397462,76.7531,25.7162,10683.24,!1,257.09,172.99,-.33,null,10934.7,null,!1,0],["abd41a","RPA3428 ","United States",1679397463,1679397463,-81.0964,40.9035,9448.8,!1,250.87,74.54,0,null,9349.74,"6647",!1,0],["490734","RVP940  ","Portugal",1679397462,1679397462,-9.4858,38.7485,541.02,!1,70.98,317.06,1.63,null,678.18,"1373",!1,0],["a43eea","","United States",1679397462,1679397462,-95.3374,29.9549,281.94,!1,82.12,142.13,15.28,null,297.18,null,!1,0],["710130","SVA123  ","Saudi Arabia",1679397462,1679397462,8.4312,49.9612,11582.4,!1,228.11,298.41,0,null,11635.74,"6610",!1,0],["801462","IGO773  ","India",1679397462,1679397462,72.9974,19.0905,716.28,!1,83.35,269.29,-4.55,null,647.7,null,!1,0],["80145d","IGO2115 ","India",1679397460,1679397462,76.9666,23.5873,11887.2,!1,239.93,177.67,0,null,12291.06,null,!1,0],["710118","SVA565  ","Saudi Arabia",1679397462,1679397462,50.8968,26.5784,7315.2,!1,186.29,289.19,0,null,7414.26,null,!1,0],["800d85","IGO6754 ","India",1679397462,1679397463,78.0768,13.9309,5501.64,!1,179.98,205.03,-13.66,null,5715,null,!1,0],["710117","SVA541  ","Saudi Arabia",1679397447,1679397450,46.731,24.8823,1036.32,!1,66.62,329.87,-3.58,null,1013.46,null,!1,0],["01013c","MSR995  ","Egypt",1679397462,1679397462,-79.5353,43.7178,487.68,!1,69.5,226.5,-3.58,null,525.78,"0731",!1,0],["800d84","GOW145  ","India",1679397462,1679397462,79.6048,27.0998,11887.2,!1,256.75,116.67,0,null,12108.18,null,!1,0],["aa76cb","SWA2959 ","United States",1679397462,1679397462,-85.9723,39.5107,7924.8,!1,219.63,356.24,.33,null,7879.08,null,!1,0],["780805","","China",null,1679397180,null,null,null,!1,216.85,166,.33,null,null,null,!1,0],["3444c9","VLG3MX  ","Spain",1679397462,1679397462,-2.3418,37.6126,10668,!1,201.56,244.29,0,null,11003.28,null,!1,0],["aced24","AAL1656 ","United States",1679397461,1679397461,-79.4871,26.2018,6690.36,!1,228.51,54.81,8.13,null,7018.02,null,!1,0],["3444c3","AEA6037 ","Spain",1679397462,1679397462,2.1456,40.7752,5173.98,!1,194.46,154.79,3.25,null,5349.24,null,!1,0],["a445cd","UAL1308 ","United States",1679397451,1679397451,-74.1761,40.6851,null,!0,5.92,25.31,null,null,null,"5717",!1,0],["710120","SVA211  ","Saudi Arabia",1679397358,1679397358,20.0352,38.6674,12184.38,!1,235.49,308.35,0,null,12245.34,"2014",!1,0],["7c479f","JST714  ","Australia",1679397462,1679397462,146.818,-41.045,10972.8,!1,201.48,339.99,0,null,11323.32,"3244",!1,0],["aced1c","ENY3710 ","United States",1679397461,1679397461,-75.7181,41.3445,null,!0,24.69,213.75,null,null,null,null,!1,0],["800d7a","SEJ491  ","India",1679397344,1679397348,88.4412,22.648,null,!0,0,278.44,null,null,null,"1455",!1,0],["801470","IGO6254 ","India",1679397286,1679397286,76.908,24.9493,11894.82,!1,250.72,177.77,0,null,12245.34,null,!1,0],["7c81d8","ZXM     ","Australia",1679397462,1679397462,116.3181,-31.6259,2758.44,!1,132.86,208.95,-7.8,null,2849.88,"3653",!1,0],["a73e16","N566KA  ","United States",1679397462,1679397462,-96.3216,41.9073,6545.58,!1,125.79,171.77,7.15,null,6461.76,null,!1,0],["a79ea0","JIA5184 ","United States",1679397462,1679397462,-89.8043,31.035,10363.2,!1,188.33,276.12,0,null,10637.52,"1056",!1,0],["a04a01","AER43   ","United States",1679397461,1679397461,-147.4547,60.762,7620,!1,107.45,115.83,0,null,7231.38,"4556",!1,0],["a3c549","FFT1570 ","United States",1679397463,1679397463,-81.3892,34.9315,11277.6,!1,256.68,58.19,-.33,null,11338.56,null,!0,0],["780824","CXA882  ","China",1679397457,1679397457,121.0378,24.3003,8366.76,!1,203.48,241.62,5.2,null,8785.86,null,!1,0],["407c0b","TOM59J  ","United Kingdom",1679397264,1679397429,-11.9357,38.2109,11277.6,!1,222.52,210.42,0,null,11567.16,"4526",!1,0],["ad5ae7","WDE22   ","United States",1679397462,1679397462,13.5801,47.872,7315.2,!1,157.02,285.58,0,null,7414.26,"6716",!1,0],["80148e","IGO902  ","India",1679397342,1679397342,77.1098,28.5658,null,!0,1.03,19.69,null,null,null,null,!1,0],["4d2136","ULC66   ","Malta",1679397211,1679397211,4.8068,52.3127,null,!0,0,84.38,null,null,null,null,!1,0],["abe79d","SWA2529 ","United States",1679397461,1679397461,-67.1653,19.4933,8892.54,!1,240.23,309.18,6.83,null,9364.98,null,!1,0],["80148d","IGO2401 ","India",1679397462,1679397462,77.0985,28.5622,null,!0,10.8,286.88,null,null,null,null,!1,0],["3feb3f","DMLAF   ","Germany",1679397459,1679397462,12.4654,47.5999,1562.1,!1,55.05,180.54,-2.6,null,1638.3,"4453",!1,0],["402ca5","GSNUZ   ","United Kingdom",1679397462,1679397463,-2.1555,51.7775,640.08,!1,39.18,193.67,-.33,null,647.7,null,!1,0],["a4e538","RPA4264 ","United States",1679397462,1679397462,-72.7558,41.0434,6096,!1,188.53,196.16,0,null,6042.66,"3567",!1,0],["3c4dc6","DLH4WT  ","Germany",1679397462,1679397462,-.993,53.4555,9349.74,!1,246.69,139.57,5.2,null,9227.82,"2241",!1,0],["a6e8ae","","United States",1679397461,1679397461,-91.2787,15.1521,10287,!1,242.48,140.94,-3.25,null,10904.22,null,!1,0],["3c4dc4","DLH4XA  ","Germany",1679397462,1679397463,12.0844,48.3663,1493.52,!1,108.17,263.72,-1.63,null,1577.34,"1000",!1,0],["80149f","IGO7162 ","India",1679397462,1679397462,77.6472,13.3196,2034.54,!1,83.4,357.88,2.6,null,2004.06,null,!1,0],["3c4dc9","DLH4JC  ","Germany",1679397433,1679397433,14.4855,46.2095,403.86,!1,73.68,305.91,-3.9,null,495.3,"1000",!1,0],["3c4dc7","DLH1KK  ","Germany",1679397436,1679397437,16.8274,52.4159,null,!0,1.29,182.81,null,null,null,"1000",!1,0],["abc14d","SWA599  ","United States",1679397462,1679397462,-84.1757,40.4913,8983.98,!1,211.76,302.8,13.33,null,8900.16,"6723",!1,0],["440469","EJU64LE ","Austria",1679397462,1679397462,4.3779,47.594,8823.96,!1,209.94,308.13,-4.88,null,8961.12,"1000",!1,0],["80149e","IGO196  ","India",1679397462,1679397462,80.5128,26.7559,1524,!1,110.64,88.67,-2.6,null,1485.9,null,!1,0],["80149b","IGO6239 ","India",1679397459,1679397459,80.0113,13.5914,7162.8,!1,202.93,337.34,5.2,null,7467.6,null,!1,0],["80149c","IGO292  ","India",1679397462,1679397462,84.6496,22.8382,11582.4,!1,184.54,275.6,0,null,11993.88,"1403",!1,0],["a552aa","N442GJ  ","United States",1679397462,1679397463,-83.4021,31.3713,9212.58,!1,223.02,155.03,-6.18,null,9441.18,null,!1,0],["39364d","NAK401  ","France",1679397462,1679397462,1.9257,44.1531,2750.82,!1,97,200.16,0,null,2857.5,"1000",!1,0],["3c4dc2","","Germany",1679397039,1679397229,11.802,48.3531,null,!0,7.72,81.56,null,null,null,"6462",!1,0],["a36279","SKW3622 ","United States",1679397462,1679397462,-81.9227,40.9088,8473.44,!1,181.3,297,4.88,null,8404.86,"4163",!1,0],["a517a1","SWA747  ","United States",1679397462,1679397462,-89.1092,39.9699,12192,!1,211.72,224.41,0,null,12070.08,"6275",!1,0],["06a1b8","QTR6K   ","Qatar",1679397462,1679397462,51.0296,26.1219,8092.44,!1,202.74,320.25,7.15,null,8214.36,null,!1,0],["a134bf","N177SA  ","United States",1679397462,1679397462,-1.5283,54.8406,1935.48,!1,42.8,154.36,2.6,null,1859.28,"7050",!1,0],["4b18b8","EDW284  ","Switzerland",1679397461,1679397461,-5.4816,41.4816,10058.4,!1,217.64,243.31,.33,null,10248.9,"4637",!1,0],["a36da0","N32T    ","United States",1679397462,1679397462,-76.0042,39.9483,662.94,!1,48.87,90,0,null,739.14,null,!1,0],["06a1c7","","Qatar",null,1679397454,null,null,null,!1,294.3,101.29,-5.85,null,null,null,!1,0],["a3271e","DAL2190 ","United States",1679397462,1679397462,-111.9967,40.8078,null,!0,0,151.88,null,null,null,null,!1,0],["06a1bd","QTR61A  ","Qatar",1679397462,1679397462,138.6012,-37.2624,11277.6,!1,268.11,106.38,0,null,11673.84,null,!1,0],["06a1d0","QQE955  ","Qatar",1679397461,1679397462,53.8847,24.5306,9753.6,!1,191.86,285.71,0,null,10050.78,null,!1,0],["342091","IBE3477 ","Spain",1679397462,1679397462,8.5558,47.4552,null,!0,5.92,95.62,null,null,null,"3027",!1,0],["342090","IBS39XL ","Spain",1679397462,1679397462,1.1939,39.3878,7040.88,!1,226.6,94.69,-4.23,null,7299.96,null,!1,0],["407ac1","TOM2LH  ","United Kingdom",1679397462,1679397462,.6302,41.0397,11170.92,!1,243.87,16.29,2.6,null,11399.52,null,!1,0],["a98572","N712WC  ","United States",1679397462,1679397462,-83.5049,43.0976,2362.2,!1,83.98,189.52,0,null,2354.58,null,!1,0],["44042c","OEEGL   ","Austria",1679397462,1679397462,13.0481,46.1967,647.7,!1,60.31,208.53,8.78,null,731.52,"7000",!1,0],["aa159e","SWA2833 ","United States",1679397366,1679397366,-76.6617,39.1635,-60.96,!1,65.55,323.94,-3.9,null,53.34,"3574",!1,0],["06a1e9","QTR35M  ","Qatar",1679397461,1679397462,51.7069,25.3118,2506.98,!1,136.89,185.17,.33,null,2506.98,null,!1,0],["4b18ba","EDW15T  ","Switzerland",1679397462,1679397462,25.5579,35.9117,11269.98,!1,243.03,142.74,.33,null,11422.38,"3015",!1,0],["4b18bb","EDW301P ","Switzerland",1679397462,1679397462,8.5551,47.4519,null,!0,9.77,154.69,null,null,null,"0732",!1,0],["407ab0","NJU407R ","United Kingdom",1679397462,1679397462,4.867,52.3587,396.24,!1,55.03,221.59,-2.28,null,419.1,"4614",!1,0],["06a1e0","QTR1176 ","Qatar",1679397462,1679397462,51.6052,25.3969,1539.24,!1,125.75,18.36,12.35,null,1501.14,null,!1,0],["06a1df","QTR4V   ","Qatar",1679397246,1679397246,51.6221,25.2615,null,!0,5.14,157.5,null,null,null,null,!1,0],["a18421","WIG1058 ","United States",1679397462,1679397462,-71.5807,43.1197,1722.12,!1,97.23,328.41,0,null,1737.36,null,!1,0],["0c2167","CMP453  ","Panama",1679397462,1679397462,-79.4802,8.8553,1143,!1,94.6,5.62,-6.18,null,1203.96,null,!1,0],["800baa","VTTRE   ","India",1679397462,1679397462,79.0542,13.1635,5486.4,!1,116.13,261.08,0,null,5684.52,null,!1,0],["c066fb","ACA324  ","Canada",1679397458,1679397462,-114.0124,51.1312,null,!0,0,56.25,null,null,null,null,!1,0],["4bb848","PGT1872 ","Turkey",1679397462,1679397462,33.0521,35.7008,5151.12,!1,215.14,127.23,-12.03,null,5250.18,null,!1,0],["4bb846","PGT2L   ","Turkey",1679397462,1679397462,23.7919,56.4641,11277.6,!1,215.55,12.54,-.33,null,11041.38,"5366",!1,0],["4bb845","PGT20PK ","Turkey",1679397462,1679397462,29.9734,39.437,9448.8,!1,246.91,156.16,.33,null,9555.48,null,!1,0],["a254dd","UAL760  ","United States",1679397462,1679397462,-8.038,52.0441,11879.58,!1,267.83,105.37,-.33,null,11864.34,"2203",!1,0],["76b4ec","SIA740  ","Singapore",1679397462,1679397462,101.4812,4.5932,11582.4,!1,237,325.79,0,null,12313.92,"2225",!1,0],["aa0267","SNC420  ","United States",1679397148,1679397148,-68.7221,18.9437,3002.28,!1,112.42,287.85,-.33,null,3116.58,null,!1,0],["76b4ee","SIA994  ","Singapore",1679397256,1679397256,103.9828,1.3458,null,!0,6.43,292.5,null,null,null,null,!1,0],["800bc7","SEJ532  ","India",1679397462,1679397462,77.367,13.6193,6469.38,!1,183.12,147.74,-8.13,null,6819.9,null,!1,0],["4b18f3","EDW130J ","Switzerland",1679397460,1679397462,25.8849,35.5654,11285.22,!1,241.69,142.96,.33,null,11445.24,"3005",!1,0],["06a1ec","","Qatar",1679397417,1679397418,48.9164,28.6436,8534.4,!1,217.74,325.78,0,null,8534.4,null,!1,0],["4b18f4","EDW228B ","Switzerland",1679397461,1679397461,-4.0413,41.5859,11894.82,!1,222.53,229.31,0,null,12092.94,"4636",!1,0],["4b18f5","EDW214L ","Switzerland",1679397462,1679397462,-9.7608,37.3852,11887.2,!1,209.91,224.3,-.33,null,12192,"4510",!1,0],["8a020e","GIA190  ","Indonesia",1679397329,1679397329,100.6998,.5872,10972.8,!1,234.34,316.42,.33,null,11673.84,null,!1,0],["800bc0","IGO6228 ","India",1679397382,1679397408,79.4738,14.8542,10500.36,!1,228.86,336.84,6.18,null,11056.62,null,!1,0],["01015e","MSR847  ","Egypt",1679397462,1679397462,14.1923,35.8114,12192,!1,222.25,276.78,0,null,12367.26,null,!1,0],["a9854e","AAL1516 ","United States",1679397462,1679397462,-78.8342,40.0766,10980.42,!1,212.81,206.87,0,null,10850.88,"6270",!1,0],["4bb855","PGT1K   ","Turkey",1679397462,1679397462,15.2592,47.6621,11277.6,!1,241.69,110.17,.33,null,11300.46,"6406",!1,0],["4bb856","PGT3JY  ","Turkey",1679397445,1679397445,30.1655,38.5827,10066.02,!1,225.43,181.7,0,null,10172.7,"0775",!1,0],["4bb853","PGT63KF ","Turkey",1679397462,1679397462,10.2169,47.293,8221.98,!1,252.89,100.08,4.55,null,8366.76,"3013",!1,0],["4bb861","PGT19RZ ","Turkey",1679397462,1679397462,8.145,50.7415,8778.24,!1,231.4,118.84,5.53,null,8854.44,"6420",!1,0],["342059","FIN08VD ","Spain",1679397462,1679397462,1.197,48.2605,9745.98,!1,249.89,29.2,0,null,9776.46,"2301",!1,0],["4bb84c","PGT1SC  ","Turkey",1679397462,1679397462,13.1514,48.4816,10972.8,!1,202.93,289.86,0,null,11010.9,"1000",!1,0],["ab8418","TSU841  ","United States",1679397462,1679397462,-92.0517,31.0512,9448.8,!1,268.03,63.68,0,null,9700.26,"2507",!1,0],["7c1a29","VOZ382  ","Australia",1679397462,1679397462,152.645,-26.8873,4251.96,!1,175.46,137.14,-12.35,null,4564.38,null,!1,0],["a59b9c","SWA760  ","United States",1679397462,1679397462,-96.7975,33.3127,7292.34,!1,202.06,351.07,15.28,null,7437.12,null,!1,0],["7c7ab0","VOZ99   ","Australia",1679397462,1679397462,154.6292,-32.967,10668,!1,254.48,66.03,.33,null,11193.78,"1361",!1,0],["7c7aac","VOZ891  ","Australia",1679397462,1679397462,151.0415,-34.0063,2019.3,!1,147.98,62.01,-4.23,null,2209.8,"3275",!1,0],["800ba0","","India",1679397447,1679397447,81.1013,26.071,5486.4,!1,119.88,309.43,-.33,null,5615.94,null,!1,0],["a04a60","N118ES  ","United States",1679397461,1679397461,-75.0017,42.4418,1584.96,!1,89,70.41,0,null,1577.34,null,!1,0],["a98539","DAL2049 ","United States",1679397462,1679397462,-81.3215,36.2228,11574.78,!1,207.35,225.2,0,null,11590.02,"1563",!1,0],["7c7aa3","VOZ352  ","Australia",1679397462,1679397462,145.025,-37.661,891.54,!1,105.42,204.81,-3.58,null,998.22,"1012",!1,0],["407af2","BAW48Q  ","United Kingdom",1679397462,1679397462,-1.5571,52.1316,6035.04,!1,219.6,144.15,-4.23,null,5981.7,"6020",!1,0],["4b18ff","EDW67   ","Switzerland",1679397462,1679397462,53.0578,25.8941,10972.8,!1,185.33,294.43,0,null,11277.6,null,!1,0],["a05d8d","N1220W  ","United States",1679397462,1679397462,-120.9046,38.5875,5303.52,!1,167.96,229.97,-2.6,null,5166.36,null,!1,0],["800bb5","IGO625  ","India",1679397462,1679397462,78.5104,14.0976,10241.28,!1,247,122.93,-12.68,null,10774.68,null,!1,0],["a72b6b","JBU2295 ","United States",1679397462,1679397462,-75.3517,38.7989,9144,!1,226.31,201.61,0,null,9121.14,"7156",!1,0],["862338","ANA1280 ","Japan",1679397441,1679397441,130.4382,33.6042,91.44,!1,73.95,150.4,-3.9,null,106.68,null,!1,0],["344696","VLG8ED  ","Spain",1679397462,1679397462,-.8207,45.9374,10972.8,!1,224.71,335.66,.33,null,11071.86,"5372",!1,0],["a254d6","UAL29   ","United States",1679397461,1679397462,114.5875,4.7614,12184.38,!1,252.05,249.2,0,null,12984.48,null,!1,0],["344697","VLG3SA  ","Spain",1679397463,1679397463,1.9747,41.1695,2004.06,!1,127.12,230.25,16.58,null,2103.12,null,!1,0],["344693","VLG29WZ ","Spain",1679397461,1679397462,-9.2389,36.3143,11277.6,!1,207.17,241.53,0,null,11612.88,"6263",!1,0],["8515a2","JAL698  ","Japan",1679397461,1679397462,137.7805,33.6053,11887.2,!1,252.7,53.53,0,null,12146.28,"2416",!1,0],["71bf54","AAR8980 ","Republic of Korea",1679397460,1679397461,126.9538,35.9363,5791.2,!1,190.59,5.11,.33,null,5913.12,null,!1,0],["46a5e7","SEH9AP  ","Greece",1679397462,1679397462,7.0863,47.3293,11285.22,!1,203.9,283.12,0,null,11407.14,"1000",!1,0],["4cc52b","ICE204  ","Iceland",1679397462,1679397462,12.8538,55.754,944.88,!1,89.73,192.92,-1.95,null,960.12,"2535",!1,0],["800bea","IAD991  ","India",1679397461,1679397462,86.7475,21.207,10972.8,!1,201.9,214.09,-.33,null,11452.86,"2661",!1,0],["789270","HGB531  ","China",1679397182,1679397182,117.0183,22.3244,11582.4,!1,189.87,268.76,-.33,null,12192,null,!1,0],["a4478d","DAL2875 ","United States",1679397462,1679397462,-84.3853,33.648,685.8,!1,82.51,86.07,5.53,null,777.24,null,!1,0],["71bf47","AAR1035 ","Republic of Korea",1679397463,1679397463,137.7857,35.8572,11582.4,!1,175.52,271.85,0,null,11704.32,"3203",!1,0],["aa01a2","CKS277  ","United States",1679397462,1679397462,-70.1022,44.795,11277.6,!1,273.16,70.98,0,null,10965.18,"4021",!1,0],["4cc552","FPY1A   ","Iceland",1679397462,1679397462,-4.0916,55.5069,11590.02,!1,227.36,315.28,.33,null,11468.1,"2057",!1,0],["800bfe","FLG212  ","India",1679397462,1679397462,88.3675,23.2147,4632.96,!1,107.97,352.33,2.93,null,4777.74,"0450",!1,0],["4cc553","FPY7G   ","Iceland",1679397462,1679397462,10.9305,56.4173,9418.32,!1,219.44,313.39,5.85,null,9395.46,"0434",!1,0],["ad8836","JBU1233 ","United States",1679397398,1679397398,-69.4774,21.9594,10668,!1,251.9,127.78,0,null,11239.5,null,!1,0],["4cc53d","ABD702  ","Iceland",1679397462,1679397462,-76.0407,46.7368,10363.2,!1,231.37,225.72,0,null,9951.72,null,!1,0],["acb832","SIL3902 ","United States",1679397462,1679397462,-95.7164,37.8766,6697.98,!1,121.53,202.66,0,null,6667.5,"3676",!1,0],["4cc549","ICE532  ","Iceland",1679397462,1679397462,5.7726,56.2672,11887.2,!1,233.69,158.97,0,null,11795.76,"0730",!1,0],["71bf36","AAR761  ","Republic of Korea",1679397462,1679397462,116.1773,6.6869,12192,!1,228.64,215.01,0,null,12938.76,null,!1,0],["a2915f","N2648X  ","United States",1679397462,1679397462,2.495,48.7932,899.16,!1,105.26,341.48,-6.5,null,952.5,"3312",!1,0],["a35af8","AAL310  ","United States",1679397462,1679397462,-78.9629,29.2037,9144,!1,217.9,192.82,0,null,9441.18,null,!1,0],["71bf39","AAR703  ","Republic of Korea",1679397303,1679397312,126.7393,35.4772,10363.2,!1,246.34,185.03,0,null,10584.18,null,!1,0],["71bf72","        ","Republic of Korea",1679397336,1679397336,126.8015,37.5589,null,!0,3.09,45,null,null,null,null,!1,0],["8515c4","JAL443  ","Japan",1679397462,1679397462,138.817,35.3925,8717.28,!1,185.96,262.05,11.38,null,8892.54,"1714",!1,0],["a48dea","UAL2077 ","United States",1679397462,1679397462,-77.965,34.3351,10668,!1,232.13,1.78,0,null,10759.44,"7442",!1,0],["4bb869","PGT4T   ","Turkey",1679397462,1679397462,11.605,49.3211,10058.4,!1,241.14,120.23,0,null,10142.22,"7640",!1,0],["4bb866","PGT9HX  ","Turkey",1679397462,1679397462,4.7721,52.3155,null,!0,2.06,14.06,null,null,null,null,!1,0],["4cc50f","ICE14T  ","Iceland",1679397462,1679397462,13.7383,52.4093,891.54,!1,89.9,248.87,-5.2,null,944.88,"3523",!1,0],["a81773","NKS1717 ","United States",1679397462,1679397462,-86.0848,28.39,10972.8,!1,196.04,283.2,0,null,11353.8,"0734",!1,0],["4bb867","PGT7K   ","Turkey",1679397462,1679397462,27.2006,39.2149,7071.36,!1,203.33,182.03,-10.08,null,7216.14,"0761",!1,0],["7100b0","SVA543  ","Saudi Arabia",1679397462,1679397462,51.6137,25.5177,2827.02,!1,151.93,352.8,13.33,null,2819.4,null,!1,0],["4bb864","PGT389  ","Turkey",1679397462,1679397462,23.072,53.4532,11262.36,!1,214.5,14.87,0,null,11094.72,"4530",!1,0],["4bb865","PGT3W   ","Turkey",1679397462,1679397462,19.1596,45.8081,11582.4,!1,218.25,307.63,0,null,11567.16,"3214",!1,0],["0100db","MSR787  ","Egypt",1679397461,1679397461,20.3839,43.6094,11582.4,!1,222.81,310.97,0,null,11559.54,"5505",!1,0],["4bb863","PGT6VH  ","Turkey",1679397459,1679397462,34.8897,31.9974,null,!0,0,286.88,null,null,null,null,!1,0],["4bb872","PGT8TT  ","Turkey",1679397462,1679397462,1.7772,51.9335,5059.68,!1,176.3,298.21,-7.15,null,5052.06,"3553",!1,0],["ab355c","JBU1405 ","United States",1679397462,1679397462,-69.7504,18.8814,3672.84,!1,173.48,160.06,-8.13,null,3893.82,null,!1,0],["4bb870","PGT7DL  ","Turkey",1679397383,1679397383,12.3314,45.4893,22.86,!1,67.76,41.92,-3.58,null,152.4,"2310",!1,0],["800be9","IAD716  ","India",1679397461,1679397461,79.2869,25.8041,11216.64,!1,264.1,135.47,1.63,null,11521.44,null,!1,0],["3f66b0","PRIMR62 ","Germany",1679397462,1679397462,19.4809,54.1641,7299.96,!1,160.01,269.08,0,null,7261.86,"1540",!1,0],["0100e0","MSR729  ","Egypt",1679397462,1679397462,25.7835,55.7883,11277.6,!1,231.08,39.22,0,null,11041.38,"6625",!1,0],["7100ad","SVA573  ","Saudi Arabia",1679397462,1679397462,51.98,26.1758,9753.6,!1,151.39,296.22,0,null,9951.72,null,!1,0],["600005","AMW910  ","Armenia",1679393333,1679397459,38.3252,54.9224,8366.76,!1,203.36,131.51,7.48,null,8176.26,null,!1,0],["4bb879","PGT386  ","Turkey",1679397454,1679397455,37.9849,55.1077,2613.66,!1,158.85,4.09,-3.25,null,2545.08,null,!1,0],["504e61","HYM458  ","Republic of Moldova",1679397156,1679397158,28.1385,45.819,6187.44,!1,213.78,15.21,-12.68,null,6233.16,"5552",!1,0],["c0196c","ROU1930 ","Canada",1679397459,1679397462,-106.6928,52.1711,null,!0,1.03,135,null,null,null,null,!1,0],["4bb875","PGT1521 ","Turkey",1679397426,1679397435,37.275,54.5695,4960.62,!1,191.06,98.83,-10.73,null,4869.18,null,!1,0],["7100a6","SVA237  ","Saudi Arabia",1679397462,1679397462,12.4792,43.624,9745.98,!1,215.36,297.3,0,null,9875.52,"5510",!1,0],["4bb876","PGT1691 ","Turkey",1679397462,1679397462,2.6229,51.52,7741.92,!1,185.7,290.09,-4.88,null,7734.3,"3553",!1,0],["4bb873","PGT6SB  ","Turkey",1679397462,1679397462,20.4096,46.1776,10965.18,!1,211.71,309.18,.65,null,10919.46,null,!1,0],["4bb874","PGT9CV  ","Turkey",1679397462,1679397462,11.9534,50.1008,10957.56,!1,202.98,334.8,0,null,11010.9,"6043",!1,0],["ac6886","UAL2170 ","United States",1679397458,1679397458,-74.1809,40.6838,null,!0,0,5.62,null,null,null,"1105",!1,0],["a17170","AAL543  ","United States",1679397429,1679397429,-80.3298,25.8018,91.44,!1,66.93,87.8,-3.25,null,236.22,null,!1,0],["7100a8","SVA1900 ","Saudi Arabia",1679397345,1679397346,46.4319,24.9008,4373.88,!1,124.29,325.45,-5.2,null,4434.84,null,!1,0],["800bf9","AIC921  ","India",1679397462,1679397462,50.2231,22.9249,10972.8,!1,172.74,273.93,0,null,11384.28,null,!1,0],["7c2bef","JTE264D ","Australia",1679397461,1679397461,122.2367,-31.0546,5455.92,!1,153.46,131.33,7.8,null,5737.86,null,!1,0],["4bb86f","PGT5EP  ","Turkey",1679397152,1679397152,5.2578,43.4067,266.7,!1,68.76,314.09,-4.55,null,373.38,"5340",!1,0],["4bb86d","PGT953  ","Turkey",1679397462,1679397462,12.2892,45.6754,11574.78,!1,209.2,298.01,0,null,11658.6,"3224",!1,0],["a494c5","UAL1371 ","United States",1679397462,1679397462,-86.502,39.4355,3413.76,!1,176.95,196.38,8.78,null,3421.38,null,!1,0],["aab2bf","JBU354  ","United States",1679397462,1679397462,-79.7401,41.7384,10668,!1,263.16,84.28,0,null,10500.36,"3221",!1,0],["a339b4","DAL1166 ","United States",1679397462,1679397462,-73.9817,40.8204,1363.98,!1,118.57,220.6,8.13,null,1409.7,"1711",!1,0],["aa5d23","SKW4916 ","United States",1679397462,1679397462,-99.8288,31.5651,5684.52,!1,220.43,66.19,12.35,null,5806.44,null,!1,0],["344645","VLG6ZA  ","Spain",1679397462,1679397462,3.0056,50.1641,10972.8,!1,246.86,26.35,0,null,10972.8,"5547",!1,0],["344646","VLG1GW  ","Spain",1679397462,1679397462,4.7035,42.8982,11285.22,!1,213.55,225.68,0,null,11498.58,"6650",!1,0],["aaabf6","EJA787  ","United States",1679397463,1679397463,-79.9752,42.344,12489.18,!1,271.07,85.1,0,null,12321.54,"1334",!1,0],["ad8895","AAL2831 ","United States",1679397462,1679397462,-86.0774,34.9297,9151.62,!1,275.07,133.79,12.68,null,9235.44,"1620",!1,0],["a06ff3","N127ZA  ","United States",1679397462,1679397462,-79.9046,40.728,10668,!1,220.65,64.15,.33,null,10546.08,"6605",!1,0],["48c074","SPRDW   ","Poland",1679397462,1679397462,16.7674,51.5892,2438.4,!1,63.35,357.21,0,null,2476.5,null,!1,0],["a3b1a0","UPS904  ","United States",1679397462,1679397462,-113.505,35.5169,10980.42,!1,178.55,247.65,0,null,11026.14,"6626",!1,0],["47a097","NOZ532  ","Norway",1679397461,1679397461,7.8571,59.5995,8389.62,!1,167.04,242.88,-9.75,null,8343.9,null,!1,0],["4cc561","FPY4    ","Iceland",1679397462,1679397462,-9.5307,53.5381,11277.6,!1,237.31,151.66,0,null,11209.02,null,!1,0],["71bf30","ABL8018 ","Republic of Korea",1679397462,1679397462,126.9962,36.3191,5791.2,!1,197.29,5.09,0,null,5897.88,null,!1,0],["71bf34","JNA003  ","Republic of Korea",1679397204,1679397204,117.1991,21.051,11582.4,!1,215.71,247.72,0,null,12214.86,null,!1,0],["a13608","UAL601  ","United States",1679397264,1679397264,-74.1744,40.6941,null,!0,2.06,28.12,null,null,null,"3402",!1,0],["7807ac","CSZ9813 ","China",1679397460,1679397462,113.8395,22.5849,1089.66,!1,85.36,153.9,11.05,null,1066.8,null,!1,0],["c0193c","CFJOL   ","Canada",1679397462,1679397462,-77.4715,46.6006,11582.4,!1,201.47,294.27,0,null,11216.64,"1010",!1,0],["8a0289","GIA121  ","Indonesia",1679397187,1679397187,103.9495,-1.615,10668,!1,227.78,140.77,0,null,11346.18,null,!1,0],["aa7718","SWA3539 ","United States",1679397462,1679397462,-82.7993,41.5608,9441.18,!1,235.02,95.15,0,null,9311.64,"3120",!1,0],["8a0285","LNI973  ","Indonesia",1679397462,1679397462,103.7299,.9775,4655.82,!1,197.31,285.27,11.05,null,4899.66,null,!1,0],["a55447","RPA4455 ","United States",1679397462,1679397462,-76.9435,41.061,8199.12,!1,246.63,100.09,-10.73,null,8077.2,"1435",!1,0],["a0a18a","N14NG   ","United States",1679397462,1679397462,-80.8811,29.2039,2651.76,!1,136.43,153.34,-2.93,null,2720.34,null,!1,0],["39cd0b","FHTIL   ","France",1679397462,1679397463,6.5872,43.3811,1303.02,!1,57.12,271.55,-.65,null,1394.46,null,!1,0],["a4347b","HAL452  ","United States",1679397462,1679397462,153.1022,-32.9668,9227.82,!1,259.93,48.77,5.53,null,9730.74,"1263",!1,0],["71bf20","KAL689  ","Republic of Korea",1679397404,1679397420,126.6836,34.9533,11361.42,!1,231.34,184.98,1.3,null,11551.92,null,!1,0],["46b8a1","AEE1DM  ","Greece",1679397327,1679397327,22.9799,40.5215,null,!0,4.12,337.5,null,null,null,null,!1,0],["46b8a8","AEE7RN  ","Greece",1679397462,1679397462,17.9235,59.6472,null,!0,4.12,106.88,null,null,null,"4513",!1,0],["47a05e","NOZ1015 ","Norway",1679397462,1679397462,13.3124,55.4898,12192,!1,219.92,344.53,0,null,12085.32,"7260",!1,0],["46b8a5","AEE638  ","Greece",1679397462,1679397462,-2.2092,53.387,396.24,!1,60.84,221.92,-3.25,null,365.76,"7535",!1,0],["46b8a6","AEE3BR  ","Greece",1679397462,1679397462,5.9148,50.2949,7894.32,!1,229.83,110.3,1.95,null,7985.76,"0116",!1,0],["a97292","ASH574  ","United States",1679397462,1679397462,-84.9009,38.9497,3086.1,!1,148.11,186.58,8.13,null,3108.96,null,!1,0],["a05cf0","UPS9738 ","United States",1679397332,1679397332,-85.7485,38.1861,53.34,!1,62.64,165.74,-4.55,null,198.12,"2616",!1,0],["a196f3","ENY3465 ","United States",1679397461,1679397461,-80.1036,26.58,4808.22,!1,182.58,167.14,-8.13,null,5044.44,null,!1,0],["4caa86","ITY1286 ","Ireland",1679397294,1679397294,9.2797,45.4547,null,!0,3.86,56.25,null,null,null,"1000",!1,0],["7c1ab8","UTY805  ","Australia",1679397462,1679397462,116.0258,-31.7876,845.82,!1,98.16,233.31,-7.8,null,868.68,"4054",!1,0],["406a62","EXS65JT ","United Kingdom",1679397461,1679397462,19.8853,45.1451,11277.6,!1,243.72,134.83,0,null,11262.36,"4657",!1,0],["a61f05","ASA102  ","United States",1679397462,1679397462,-146.426,60.6096,10668,!1,226.55,118.78,0,null,10149.84,"3454",!1,0],["7580a0","GAP2920 ","Philippines",1679397462,1679397462,121.2561,14.3645,2773.68,!1,145.73,256.11,-2.6,null,2979.42,null,!1,0],["407d90","RRR1312 ","United Kingdom",1679397459,1679397459,22.0306,50.1098,null,!0,8.23,90,null,null,null,null,!1,0],["86cf7c","ANA271  ","Japan",1679397462,1679397462,137.3026,35.377,12192,!1,192.2,259.2,0,null,12374.88,"0433",!1,0],["3e7a3c","DKLMI   ","Germany",1679397453,1679397453,8.1219,49.1786,220.98,!1,31.29,99.46,-.33,null,533.4,"7000",!1,0],["407d96","SXN01V  ","United Kingdom",1679397459,1679397461,-3.4837,39.5842,13106.4,!1,225.49,4.45,0,null,13350.24,null,!1,0],["406a63","EXS3YH  ","United Kingdom",1679397428,1679397428,-1.6717,53.8737,null,!0,4.12,227.81,null,null,null,null,!1,0],["a7f79b","EJA612  ","United States",1679397462,1679397462,-81.2606,27.1745,8763,!1,225.91,45.65,7.48,null,9105.9,null,!1,0],["801531","IGO687  ","India",1679397458,1679397458,75.1966,23.5938,10134.6,!1,202.21,352.84,-9.43,null,10553.7,null,!1,0],["406a59","EXS93PK ","United Kingdom",1679397462,1679397462,13.6075,47.1995,11277.6,!1,242.86,124.3,0,null,11338.56,"7323",!1,0],["06a127","QTR39B  ","Qatar",1679397457,1679397462,-113.4484,55.3311,11887.2,!1,263.44,190.81,0,null,11437.62,null,!1,0],["06a124","QTR43C  ","Qatar",1679396588,1679397445,28.1742,43.4608,11887.2,!1,257.19,135.24,0,null,11917.68,"7674",!1,0],["06a125","QTR62R  ","Qatar",1679397462,1679397462,11.4718,55.6183,10972.8,!1,228.89,316.55,0,null,10904.22,"3272",!1,0],["a51958","AAL2567 ","United States",1679397462,1679397462,-92.8213,31.4426,10668,!1,267.87,122.53,0,null,10927.08,null,!1,0],["06a122","QTR99C  ","Qatar",1679397462,1679397462,15.1808,53.2161,10972.8,!1,223.73,315.65,0,null,10919.46,"5327",!1,0],["ab1d06","RPA5709 ","United States",1679397462,1679397462,-76.0178,40.5266,8534.4,!1,196.71,243.43,0,null,8458.2,"2770",!1,0],["406a3d","BAW16MT ","United Kingdom",1679397462,1679397462,4.6917,44.648,8633.46,!1,230.88,5.11,5.53,null,8816.34,"6771",!1,0],["a829a3","N625JL  ","United States",1679397327,1679397328,-85.0947,37.9984,1104.9,!1,81.21,296.73,-.33,null,1150.62,null,!1,0],["406a3e","BAW676  ","United Kingdom",1679397462,1679397463,11.104,49.3782,11277.6,!1,253.51,113.18,0,null,11346.18,"5215",!1,0],["39856b","AFR31YV ","France",1679397462,1679397462,2,48.6596,5897.88,!1,161.12,195.37,4.88,null,5974.08,"1000",!1,0],["a196c8","SWA3489 ","United States",1679397462,1679397462,-86.188,37.4978,11887.2,!1,241.33,159.02,0,null,11841.48,"6540",!1,0],["801502","IGO5247 ","India",1679397461,1679397462,73.181,18.6168,3345.18,!1,149.35,336.88,-8.45,null,3390.9,null,!1,0],["06a138","QTR21C  ","Qatar",1679397462,1679397462,10.1767,49.4917,6568.44,!1,188.09,304.86,-7.48,null,6682.74,"3266",!1,0],["801503","IGO2206 ","India",1679397462,1679397462,78.0698,27.0245,10462.26,!1,253.66,142.08,7.15,null,10660.38,null,!1,0],["a37616","DAL1611 ","United States",1679397461,1679397462,-83.7321,38.2908,10988.04,!1,242.95,153.33,0,null,10927.08,"7435",!1,0],["a8fd73","DAL1097 ","United States",1679397462,1679397463,-82.1336,29.6818,7513.32,!1,238.68,170.07,-1.95,null,7757.16,"5021",!1,0],["4b193a","GSW1PR  ","Switzerland",1679397462,1679397462,11.7046,46.633,11285.22,!1,199.02,289.79,-4.55,null,11384.28,"7211",!1,0],["407d5f","RVR999Y ","United Kingdom",1679397462,1679397462,-3.2412,54.4977,8229.6,!1,180.17,148.31,0,null,8130.54,"7763",!1,0],["407127","GTBUC   ","United Kingdom",null,1679397457,null,null,null,!1,79.01,10.51,5.2,null,null,null,!1,0],["406a2c","BND95Z  ","United Kingdom",1679397408,1679397408,-2.1985,57.2036,205.74,!1,10.82,154.65,.33,null,null,null,!1,0],["a60c09","SWA1604 ","United States",1679397321,1679397350,-79.4335,33.879,11887.2,!1,261.48,40.93,0,null,12009.12,null,!1,0],["a3c649","AAL747  ","United States",1679397421,1679397428,-79.042,33.9126,9144,!1,208.6,219.7,0,null,9235.44,"3542",!1,0],["06a12c","QTR608  ","Qatar",1679397462,1679397462,51.6114,25.2907,449.58,!1,74.8,338.2,14.96,null,373.38,null,!1,0],["407d5c","WUK8785 ","United Kingdom",1679397462,1679397462,2.6775,51.9334,7467.6,!1,182.7,263.7,-5.53,null,7444.74,"3110",!1,0],["801509","AKJ1344 ","India",1679397462,1679397462,78.9985,14.4959,10431.78,!1,254.33,40.49,5.2,null,10942.32,null,!1,0],["406a35","BAW28F  ","United Kingdom",1679397462,1679397462,-6.5775,51.7796,10972.8,!1,267.11,88.34,0,null,10949.94,"7666",!1,0],["a00346","N10KK   ","United States",1679397462,1679397462,-74.743,41.0187,1546.86,!1,95.47,59.57,0,null,1584.96,"7151",!1,0],["06a146","QTR91A  ","Qatar",1679397462,1679397462,26.5475,43.9063,11887.2,!1,256.26,123.37,0,null,11856.72,"3410",!1,0],["adabfe","JBU988  ","United States",1679397462,1679397462,-76.3494,42.3892,10668,!1,263.23,78.27,.33,null,10447.02,"1304",!1,0],["a91d8e","DAL863  ","United States",1679397462,1679397462,-84.5659,33.6319,784.86,!1,85.4,90.69,-1.95,null,868.68,null,!1,0],["a7818f","FDX1584 ","United States",1679397462,1679397462,-116.2106,33.8518,6050.28,!1,164.7,276.64,-7.15,null,6042.66,null,!1,0],["a13651","UAL399  ","United States",1679397461,1679397461,-74.1789,40.6808,null,!0,7.2,25.31,null,null,null,"7404",!1,0],["80154b","IGO5231 ","India",1679397424,1679397451,73.3118,16.2415,7094.22,!1,190.48,330.73,5.53,null,7368.54,null,!1,0],["a300a9","ASA425  ","United States",1679397446,1679397452,-97.6794,30.2131,null,!0,6.69,194.06,null,null,null,null,!1,0],["71bf93","AAR108  ","Republic of Korea",1679397421,1679397421,139.3524,36.9566,8770.62,!1,275.63,80.87,-7.48,null,8877.3,"7121",!1,0],["80154a","AKJ1535 ","India",1679397460,1679397460,72.9836,18.6559,11277.6,!1,225.97,166.44,-.33,null,11818.62,null,!1,0],["06a13a","QTR88U  ","Qatar",1679397462,1679397462,29.6117,42.3748,10668,!1,256.4,120.37,0,null,10683.24,"5225",!1,0],["406a9c","BAW26VP ","United Kingdom",1679397462,1679397462,-3.2504,53.4409,12489.18,!1,265.52,125.54,0,null,12443.46,"7657",!1,0],["06a13b","QTR88Y  ","Qatar",1679397461,1679397462,5.3841,41.0223,10668,!1,222.78,273.97,0,null,10911.84,null,!1,0],["71bf90","ASV704  ","Republic of Korea",1679397462,1679397462,140.4014,35.5488,3573.78,!1,183.4,334.59,10.4,null,3665.22,"3241",!1,0],["a23c5d","ENY3587 ","United States",1679397462,1679397462,-97.5001,26.7953,5105.4,!1,194.14,2.58,11.38,null,5326.38,null,!1,0],["3c4d69","DLH5YN  ","Germany",1679397462,1679397462,16.0884,53.06,11277.6,!1,227.05,38.38,0,null,11209.02,"1000",!1,0],["3c4d68","DLH6EF  ","Germany",1679397459,1679397459,98.5591,50.0404,null,!0,7.72,70.31,null,null,null,null,!1,0],["3c4d67","DLH5AW  ","Germany",1679397462,1679397463,8.4785,49.492,5638.8,!1,184.86,192.37,13.98,null,5745.48,"1000",!1,0],["801562","IGO057  ","India",1679397462,1679397462,84.4366,17.3963,10972.8,!1,199.64,283.71,0,null,null,"6140",!1,0],["a78149","USC108  ","United States",1679397462,1679397462,-84.2764,39.6609,1440.18,!1,105.13,81.28,0,null,1478.28,"1160",!1,0],["ab1d30","DAL73   ","United States",1679397462,1679397462,-6.8373,53.9295,10363.2,!1,210.9,287.02,0,null,10279.38,"2117",!1,0],["40717c","EXS8DY  ","United Kingdom",1679397444,1679397456,-12.0008,40.3018,11277.6,!1,238.6,203.91,0,null,11536.68,null,!1,0],["48c22e","RYR7NZ  ","Poland",1679397462,1679397462,13.0537,48.6071,11277.6,!1,215.74,45.87,0,null,11315.7,"1000",!1,0],["48c22f","RYR2WZ  ","Poland",1679397462,1679397462,14.6124,51.1179,10972.8,!1,216.86,251.18,.33,null,10949.94,"7547",!1,0],["40717b","EXS1401 ","United Kingdom",1679397462,1679397463,-9.0235,36.9711,11277.6,!1,216.94,195.68,0,null,11597.64,"4665",!1,0],["48c22d","RYR2PP  ","Poland",1679397462,1679397462,13.1072,56.0136,12192,!1,214.11,343.96,0,null,12092.94,"7353",!1,0],["48c22b","RYR306E ","Poland",1679397461,1679397461,14.2483,50.1085,null,!0,33.95,244.69,null,null,null,"1000",!1,0],["40717e","EXS69VT ","United Kingdom",1679397462,1679397462,-7.7516,43.6468,10668,!1,250.54,206.46,0,null,10843.26,"2040",!1,0],["86d629","APJ159  ","Japan",1679397462,1679397462,133.9255,34.6042,10187.94,!1,179.57,278.73,9.75,null,10439.4,null,!1,0],["80155d","AKJ1395 ","India",1679397462,1679397462,72.7095,18.7041,4206.24,!1,171.01,61.82,-6.5,null,4305.3,null,!1,0],["48c238","RYR2FG  ","Poland",1679397462,1679397462,16.5933,50.1816,8793.48,!1,244.74,186.15,8.13,null,8801.1,"1407",!1,0],["80155f","VTI819  ","India",1679397462,1679397462,77.889,13.2053,1813.56,!1,89,270.66,-3.58,null,1783.08,null,!1,0],["71bf86","JNA274  ","Republic of Korea",1679397462,1679397462,130.4742,33.5492,777.24,!1,72.02,154.17,14.96,null,777.24,null,!1,0],["06a14b","QTR003  ","Qatar",1679397462,1679397462,1.5147,51.5855,5875.02,!1,169.8,268.78,-12.68,null,5867.4,"3223",!1,0],["407182","EXS57ML ","United Kingdom",1679397462,1679397462,15.7397,46.0122,11277.6,!1,247.15,129.26,0,null,11300.46,"4743",!1,0],["7100c2","SVA885  ","Saudi Arabia",1679397462,1679397462,89.495,22.6735,10355.58,!1,215.37,255.33,0,null,10736.58,"3101",!1,0],["48c235","RYR94JZ ","Poland",1679397462,1679397462,7.1267,53.732,11277.6,!1,241.65,72.92,0,null,11231.88,"7672",!1,0],["7100c8","SVA110  ","Saudi Arabia",1679397462,1679397462,8.0922,49.4005,10668,!1,261.53,123.69,0,null,10751.82,"2206",!1,0],["a24369","RPA5826 ","United States",1679397462,1679397462,-79.6034,40.6156,5257.8,!1,204.35,79.85,2.6,null,5250.18,null,!1,0],["a48315","DAL2093 ","United States",1679397462,1679397462,-74.5787,40.5803,3345.18,!1,168.51,266.67,5.53,null,3360.42,"1605",!1,0],["3d1de4","DEJOM   ","Germany",1679397462,1679397462,15.1534,46.9947,1638.3,!1,70.81,54.46,1.3,null,1706.88,null,!1,0],["407181","EXS45RA ","United Kingdom",1679397085,1679397456,-11.9223,38.1962,11277.6,!1,223.48,210.58,.33,null,11574.78,"1073",!1,0],["406a95","EZY56AQ ","United Kingdom",1679397462,1679397462,-.0969,38.6077,4754.88,!1,186.02,5.4,10.73,null,4953,null,!1,0],["3c5466","DLH9KY  ","Germany",1679397462,1679397462,8.5336,49.8932,2072.64,!1,120.51,177.31,17.56,null,2171.7,"1000",!1,0],["3c5464","DLH1LA  ","Germany",1679397462,1679397462,8.7649,50.101,1104.9,!1,95.56,249.52,-6.18,null,1181.1,"4630",!1,0],["aafd1f","DAL259  ","United States",1679397462,1679397462,-3.9071,53.6263,10363.2,!1,218.63,273.91,0,null,10271.76,"2122",!1,0],["a7f762","NKS667  ","United States",1679397462,1679397462,-77.6105,38.9924,6697.98,!1,185.08,253.53,7.48,null,6705.6,"2424",!1,0],["406a91","EZY91ZJ ","United Kingdom",1679397462,1679397462,-1.265,51.82,9989.82,!1,239.55,152.22,1.63,null,9928.86,"0537",!1,0],["4b4cce","HB2087  ","Switzerland",1679397400,1679397400,7.9094,47.5011,952.5,!1,47.09,7.56,-2,null,1543,"7000",!1,0],["3cfdec","AHO476Z ","Germany",1679397462,1679397462,-4.4453,39.843,12192,!1,231.58,33.13,0,null,12412.98,null,!1,0],["48c227","RYR33JR ","Poland",1679397462,1679397462,15.8588,47.8274,5623.56,!1,194.5,248.59,13,null,5699.76,null,!1,0],["a48307","ABX583  ","United States",1679397462,1679397462,-82.9928,28.5637,11277.6,!1,244.14,156.14,.65,null,11620.5,"6556",!1,0],["a0acdd","UAL2465 ","United States",1679397462,1679397462,-74.2071,40.4072,1706.88,!1,141.68,158.93,.33,null,1760.22,"1165",!1,0],["47a22c","NOZ5990 ","Norway",1679397462,1679397462,2.6633,49.7615,10972.8,!1,240.78,30.56,0,null,10972.8,"2336",!1,0],["407177","EXS7KH  ","United Kingdom",1679397458,1679397458,-7.0929,44.4047,11277.6,!1,235.95,195.95,0,null,11414.76,"2010",!1,0],["a3764b","FFT2066 ","United States",1679397462,1679397462,-79.0547,36.4783,3832.86,!1,191.81,129.67,-4.88,null,3901.44,"1755",!1,0],["801540","IGO055  ","India",1679397391,1679397392,75.2504,31.1926,9128.76,!1,222.16,273.58,1.63,null,9288.78,null,!1,0],["4b064d","HBCKB   ","Switzerland",1679396690,1679397453,9.1154,47.3118,777.24,!1,72.01,37.67,0,null,1534,"7000",!1,3],["80152f","IGO5337 ","India",1679397462,1679397462,77.1629,14.5642,11887.2,!1,250.15,113.77,0,null,12481.56,null,!1,0],["868688","ANA268  ","Japan",1679397462,1679397462,137.7216,34.188,11399.52,!1,279.92,74.76,-14.31,null,11635.74,"2414",!1,0],["80153f","AIC179  ","India",1679397462,1679397462,87.1104,22.4063,9441.18,!1,296.78,83.33,.65,null,9753.6,"0314",!1,0],["800e66","GH15J   ","India",null,1679397258,null,null,60.96,!1,38.07,0,-2.6,null,null,"1410",!1,0],["a97dcb","DAL695  ","United States",1679397462,1679397462,-72.688,41.8306,11582.4,!1,198.71,250.02,0,null,11414.76,"3406",!1,0],["aac7f5","N794MA  ","United States",1679397462,1679397462,-97.3647,34.8731,3855.72,!1,157.1,2.82,-8.45,null,3855.72,null,!1,0],["801549","AKJ1418 ","India",1679397459,1679397459,77.9938,13.3598,1874.52,!1,136.3,186.94,-3.9,null,1859.28,null,!1,0],["407d9a","GCMFF   ","United Kingdom",1679397462,1679397462,-.9888,51.3626,525.78,!1,34.07,218.25,-.65,null,518.16,null,!1,0],["a446aa","DAL463  ","United States",1679397462,1679397462,-74.8756,40.9195,5067.3,!1,167.72,270.7,0,null,5036.82,"3322",!1,0],["801553","VTI628  ","India",1679397462,1679397462,77.0198,28.557,541.02,!1,70.87,103.43,-3.58,null,480.06,null,!1,0],["801554","IGO6907 ","India",1679397462,1679397462,88.4678,22.8245,845.82,!1,87.94,186.04,-2.6,null,777.24,"2720",!1,0],["801551","IGO755  ","India",1679397322,1679397322,81.8212,25.8088,11277.6,!1,265.43,109.95,0,null,11529.06,null,!1,0],["7c1aba","","Australia",1679397453,1679397453,115.9699,-31.9335,null,!0,4.63,284.06,null,null,null,null,!1,0],["002b0b","","",1679397447,1679397447,49.2557,26.4886,5943.6,!1,219.72,88.79,-5.53,null,6118.86,null,!1,0],["abd536","SWA3445 ","United States",1679397462,1679397462,-93.2089,44.8767,350.52,!1,82.34,122.5,18.86,null,342.9,null,!1,0],["80158b","VTI756  ","India",1679397462,1679397462,81.3708,17.0151,10972.8,!1,209.43,234.4,0,null,null,"2615",!1,0],["ad6ecb","DAL2980 ","United States",1679397462,1679397463,-90.3874,38.7964,10668,!1,240.38,130.75,0,null,10599.42,"2625",!1,0],["a816bf","FDX464  ","United States",1679397462,1679397462,-98.457,29.5329,null,!0,0,222.19,null,null,null,null,!1,0],["a5ec55","N481AE  ","United States",1679397153,1679397153,-81.0885,32.029,null,!0,0,42.19,null,null,null,null,!1,0],["a66ce0","DAL517  ","United States",1679397462,1679397462,-93.2894,44.9117,533.4,!1,62.11,121.45,-3.58,null,525.78,null,!1,0],["4702bb","HABAX   ","Hungary",1679397462,1679397462,10.2946,41.7169,4572,!1,99.31,224.37,.33,null,4701.54,"7437",!1,0],["4b0678","","Switzerland",1679397460,1679397461,8.0808,47.3328,1219.2,!1,65.56,-7.02,-4,null,1273,"7000",!1,3],["0c2077","CMP807  ","Panama",1679397462,1679397462,-79.3528,9.4376,4351.02,!1,173.52,171.99,-7.48,null,4602.48,null,!1,0],["a420af","UPS946  ","United States",1679397415,1679397421,-114.8694,38.7288,11582.4,!1,183.28,260.14,0,null,11483.34,"4071",!1,0],["3c66e3","DLH88P  ","Germany",1679397462,1679397462,8.4415,49.4607,10911.84,!1,235.65,89,-5.53,null,11003.28,"1000",!1,0],["3c66e2","DLH9HP  ","Germany",1679397461,1679397462,24.5996,45.2546,8458.2,!1,212.14,295.88,7.8,null,8488.68,"1000",!1,0],["a97310","JBU48   ","United States",1679397462,1679397462,-82.643,30.7117,11277.6,!1,227.03,10.44,0,null,11551.92,"3764",!1,0],["a48356","FFT2142 ","United States",1679397462,1679397462,-86.564,39.843,11277.6,!1,259.07,83.16,.33,null,11170.92,"2743",!1,0],["407d00","WUK1MU  ","United Kingdom",1679397211,1679397211,-.0998,51.1606,388.62,!1,63.28,257.32,-2.93,null,426.72,"2753",!1,0],["47a218","NOZ22R  ","Norway",1679397462,1679397462,-8.2445,42.2289,10058.4,!1,245.75,214.85,-.33,null,10279.38,"2276",!1,0],["a290f3","UAL998  ","United States",1679397462,1679397462,-5.0524,54.7236,9745.98,!1,215.79,311.33,.33,null,9639.3,"4416",!1,0],["abe872","SWA3817 ","United States",1679397462,1679397462,-79.6646,35.8616,12496.8,!1,270.99,57.25,0,null,12557.76,"3137",!1,0],["a8a309","PDT6113 ","United States",1679397452,1679397457,-82.24,37.0047,8839.2,!1,220.27,150.32,0,null,8839.2,null,!1,0],["ad2862","AAL2903 ","United States",1679397462,1679397462,-86.5207,41.526,5394.96,!1,187.38,302.56,-12.35,null,5364.48,"2417",!1,0],["a4c02d","GTI4542 ","United States",1679397462,1679397462,141.1507,36.1343,9448.8,!1,300.02,88.53,0,null,9555.48,"3171",!1,0],["ab723d","N8369F  ","United States",1679397452,1679397453,-71.2922,41.9883,152.4,!1,.73,135,-.33,null,266.7,null,!1,0],["86d5a1","APJ529  ","Japan",1679397462,1679397462,134.5562,34.9447,10972.8,!1,164.84,256.83,0,null,11201.4,"2137",!1,0],["abbb2c","DAL17   ","United States",1679397119,1679397330,-9.5898,57.7812,11582.4,!1,237.94,295.35,0,null,11399.52,"7633",!1,0],["3c66e8","DLH3XV  ","Germany",1679397462,1679397462,10.7369,56.2177,11277.6,!1,220.63,174.65,0,null,11201.4,"0744",!1,0],["3c66e5","DLH8JT  ","Germany",1679397462,1679397462,-2.3592,53.3593,8839.2,!1,242.02,94.51,-.33,null,8778.24,"5206",!1,0],["861e56","JAL465  ","Japan",1679397462,1679397462,137.531,34.8707,8534.4,!1,207.85,249.73,-.33,null,8694.42,"1750",!1,0],["3c66e9","DLH39U  ","Germany",1679397462,1679397462,2.0654,44.538,11285.22,!1,200.84,237.98,0,null,11422.38,"6662",!1,0],["aaa244","UAL735  ","United States",1679397462,1679397463,-82.3304,41.3681,10972.8,!1,199.61,274.14,0,null,10812.78,"3006",!1,0],["85186a","JAL297  ","Japan",1679397461,1679397462,133.9386,34.6479,11574.78,!1,173.35,249.68,0,null,11818.62,"0425",!1,0],["ac8b43","EDV4967 ","United States",1679397206,1679397206,-83.328,42.228,190.5,!1,62.61,208.46,-3.25,null,243.84,"6347",!1,0],["801581","IGO6539 ","India",1679397458,1679397458,80.2231,13.9586,7818.12,!1,230.13,159.86,-8.45,null,8214.36,null,!1,0],["4692c8","AEE809  ","Greece",1679397455,1679397462,9.1953,48.6888,365.76,!0,1.29,345.94,null,null,null,"7665",!1,0],["80157c","AKJ1423 ","India",1679397458,1679397462,78.1926,15.9353,11658.6,!1,229.12,8.91,4.55,null,12222.48,null,!1,0],["86e8ac","ANA714  ","Japan",1679397462,1679397462,139.0938,38.609,10972.8,!1,199.86,201.28,0,null,10972.8,null,!1,0],["aa77f9","ABX3152 ","United States",1679397462,1679397462,-92.4954,36.8952,10668,!1,273.66,72.38,0,null,10637.52,"0740",!1,0],["4692d2","AEE6PX  ","Greece",1679397462,1679397462,11.9505,44.0422,11277.6,!1,249.41,126.44,0,null,11384.28,"0465",!1,0],["a2e0a8","N285BA  ","United States",1679397462,1679397462,-72.6406,42.1653,4770.12,!1,169.57,250.14,.65,null,4701.54,"7364",!1,0],["a3500f","UPS920  ","United States",1679397462,1679397462,-115.8842,33.8189,7840.98,!1,198.39,276.7,-5.2,null,7901.94,null,!1,0],["a5ec64","AVA8588 ","United States",1679397422,1679397425,-75.6287,7.0414,11582.4,!1,233.98,11.93,0,null,12291.06,null,!1,0],["a4d375","PGN41W  ","United States",1679397461,1679397461,-73.4484,41.0078,198.12,!1,71.78,235.51,0,null,274.32,null,!1,0],["4692cd","AEE539  ","Greece",1679397462,1679397462,7.1685,49.9009,10134.6,!1,237.78,120.56,5.85,null,10203.18,"0114",!1,0],["3d0c39","DECWN   ","Germany",1679397267,1679397462,8.4203,47.6474,762,!1,42.8,8.59,-2,null,908,"7000",!1,3],["ab7268","AAL963  ","United States",1679397451,1679397458,-46.2128,-22.3276,6423.66,!1,179.28,191.08,-9.75,null,6804.66,null,!1,0],["7c7bfb","RXA2269 ","Australia",1679397462,1679397462,115.9778,-31.8965,228.6,!1,64.76,194.26,-3.25,null,220.98,"4072",!1,0],["a5ff8a","N486GS  ","United States",1679397461,1679397461,-96.1758,43.6208,4861.56,!1,139.14,86.61,10.4,null,4777.74,null,!1,0],["4692d9","AEE9BG  ","Greece",1679397434,1679397450,24.0254,38.0335,723.9,!1,86.02,216.73,-4.23,null,739.14,"2660",!1,0],["3c66ea","DLH6MM  ","Germany",1679397462,1679397462,16.8558,48.0802,9044.94,!1,222.97,94.63,-4.88,null,9090.66,"1000",!1,0],["a0c82f","N15DP   ","United States",1679397462,1679397462,-77.4572,38.9451,null,!0,10.29,182.81,null,null,null,null,!1,0],["407d4c","SWG636  ","United Kingdom",1679397462,1679397462,-76.8495,40.9174,10363.2,!1,232.97,191.98,0,null,10210.8,"6505",!1,0],["a4df52","AAL832  ","United States",1679397453,1679397461,-112.0015,33.4369,null,!0,0,267.19,null,null,null,null,!1,0],["a388a9","DAL1403 ","United States",1679397462,1679397462,-85.5087,33.485,10363.2,!1,207.19,330.06,-.33,null,10492.74,"3701",!1,0],["adbef0","AAL324  ","United States",1679397462,1679397462,-91.25,29.427,10668,!1,266.01,103.87,0,null,10980.42,null,!1,0],["a4df56","ASA26   ","United States",1679397462,1679397462,-74.449,40.9501,5890.26,!1,193.96,98.39,-7.8,null,5836.92,"6671",!1,0],["3445d4","IBE32HE ","Spain",1679397462,1679397462,3.9238,50.5919,4945.38,!1,176.84,212.16,13,null,5006.34,"7107",!1,0],["407d56","GPFTE   ","United Kingdom",1679397462,1679397462,-1.311,51.8611,274.32,!1,30.15,216.67,-2.93,null,259.08,null,!1,0],["407d54","GPFTC   ","United Kingdom",1679397462,1679397462,-1.3396,51.8649,457.2,!1,36.28,108.18,-3.58,null,457.2,null,!1,0],["adb2a4","DAL2119 ","United States",1679397462,1679397462,-82.6967,35.5206,2750.82,!1,143.98,198.11,13,null,2796.54,null,!1,0],["a7a90e","","United States",1679397430,1679397430,-79.6578,43.6839,null,!0,0,317.81,null,null,null,null,!1,0],["a04b24","AAL1220 ","United States",1679397462,1679397462,-80.3563,26.8946,3253.74,!1,153.84,327.43,3.25,null,3383.28,null,!1,0],["4021a1","GECGC   ","United Kingdom",1679397410,1679397461,-.3435,52.4517,609.6,!1,35,245.7,-1.3,null,601.98,"7000",!1,0],["ad1560","JBU264  ","United States",1679397462,1679397462,-89.4304,44.8745,10668,!1,250.39,107.58,0,null,10401.3,null,!1,0],["a11ba0","UAL85   ","United States",1679397462,1679397462,18.088,44.6153,10972.8,!1,231.1,316.71,.33,null,10995.66,null,!1,0],["a0ae33","DAL451  ","United States",1679397462,1679397462,-71.0148,42.3564,114.3,!1,72.43,196.5,13.98,null,175.26,null,!1,0],["a54cd9","RPA4773 ","United States",1679397462,1679397462,-76.8395,37.7723,9448.8,!1,245.84,33.82,.33,null,9456.42,"2560",!1,0],["4d202e","UVL111  ","Malta",1679397462,1679397462,14.3103,35.8444,2194.56,!1,98.98,190.78,7.15,null,2278.38,null,!1,0],["abc253","LTA57   ","United States",1679397452,1679397452,-86.6603,39.882,975.36,!1,48.97,9.07,-.33,null,1013.46,null,!1,0],["31defe","ID777   ","Italy",1679397452,1679397452,9.9713,44.9983,243.84,!1,53.07,258.25,-1.3,null,320.04,null,!1,0],["a32814","EDV5228 ","United States",1679397462,1679397462,-81.2099,44.5793,8534.4,!1,196.28,255.27,0,null,8328.66,"6550",!1,0],["a89a9f","N65329  ","United States",1679397462,1679397462,-77.2401,39.5347,762,!1,53.23,212.77,0,null,838.2,null,!1,0],["8850af","THA660  ","Thailand",1679397417,1679397417,121.846,22.4799,11887.2,!1,271.46,73.14,.33,null,12496.8,null,!1,0],["4b906d","PGT1891 ","Turkey",1679397462,1679397462,34.0485,35.5702,3070.86,!1,165.96,211.18,-2.6,null,3131.82,null,!1,0],["3c66b1","DLH3UJ  ","Germany",1679397462,1679397462,9.1109,57.2327,11582.4,!1,235.67,358.75,0,null,11475.72,"3747",!1,0],["3c66b0","DLH1424 ","Germany",1679397462,1679397462,15.4951,45.2132,11285.22,!1,253.59,136.07,0,null,11330.94,"5545",!1,0],["3c66a4","DLH03C  ","Germany",1679397462,1679397462,98.5397,50.027,null,!0,12.86,250.31,null,null,null,"1000",!1,0],["a85f30","PDT6006 ","United States",1679397462,1679397462,-75.2549,40.1476,1691.64,!1,136.75,140.8,.65,null,1760.22,"7311",!1,0],["3c66a3","","Germany",null,1679397455,null,null,null,!0,4.12,348.75,null,null,null,"6457",!1,0],["a07844","N12953  ","United States",1679397413,1679397413,-74.8964,39.0253,45.72,!1,29.36,273.01,-4.23,null,121.92,"5367",!1,0],["3c66a5","DLH802  ","Germany",1679397462,1679397462,9.9049,52.1764,10027.92,!1,242.99,23.85,4.23,null,10073.64,"3740",!1,0],["c019eb","SWG414  ","Canada",1679397462,1679397462,-74.3166,41.016,10363.2,!1,219.67,199.71,0,null,10172.7,"0630",!1,0],["abd57e","SWA3317 ","United States",1679397462,1679397462,-82.6463,28.1498,8648.7,!1,211.81,257.52,5.85,null,8968.74,"2626",!1,0],["a78cb4","FDX1423 ","United States",1679397441,1679397441,-111.3727,44.769,10972.8,!1,234.4,286.45,-.33,null,10660.38,null,!1,0],["3c66ad","DLH890  ","Germany",1679397462,1679397462,11.497,51.9532,11277.6,!1,233.32,38.28,0,null,11285.22,"3743",!1,0],["3c66ab","DLH886  ","Germany",1679397462,1679397462,8.6526,50.2302,5052.06,!1,205.18,45.61,9.43,null,5158.74,"7657",!1,0],["3c66ae","DLH8RX  ","Germany",1679397377,1679397377,-3.358,55.9505,null,!0,7.46,194.06,null,null,null,"2550",!1,0],["a028e5","GTI3711 ","United States",1679397462,1679397462,-89.958,30.8484,12199.62,!1,192.53,284.7,-.33,null,12420.6,"3736",!1,0],["a949a1","N698NG  ","United States",1679397462,1679397462,-90.7673,38.817,701.04,!1,96.87,149.35,0,null,723.9,null,!1,0],["a48379","HAL50   ","United States",1679397462,1679397462,-73.5897,40.3683,1943.1,!1,146.83,30.07,-4.88,null,2011.68,"6542",!1,0],["3c66b5","OCN92Y  ","Germany",1679397453,1679397462,-16.0714,30.079,11887.2,!1,217.97,208.32,0,null,12237.72,null,!1,0],["3c66b4","DLH9AJ  ","Germany",1679397404,1679397404,-6.2663,53.4212,null,!0,42.18,272.81,null,null,null,"0121",!1,0],["a949a4","NKS3149 ","United States",1679397462,1679397462,-75.5564,38.5889,8404.86,!1,210.65,202.24,9.43,null,8382,null,!1,0],["3c66b3","OCN4LQ  ","Germany",1679397462,1679397463,3.1803,49.2931,10073.64,!1,211.24,255.76,0,null,10111.74,"0625",!1,0],["3c66b2","OCN8L   ","Germany",1679397462,1679397462,3.6112,45.2171,11277.6,!1,199.33,234.14,0,null,11414.76,"2571",!1,0],["3c66b9","OCN1MW  ","Germany",1679397462,1679397462,-2.1789,46.6239,10660.38,!1,231.8,223.47,0,null,10736.58,"2553",!1,0],["3c66b8","OCN27Z  ","Germany",1679397462,1679397462,-7.2157,41.7703,11277.6,!1,237.42,210.9,0,null,11490.96,null,!1,0],["06a103","QTR727  ","Qatar",1679397462,1679397463,18.1015,51.0223,11582.4,!1,234.92,321.22,0,null,11506.2,"5224",!1,0],["a5aff2","AAL880  ","United States",1679397462,1679397462,-89.2944,29.0149,10378.44,!1,203.04,285.13,-.33,null,10713.72,"4534",!1,0],["a75966","UAL226  ","United States",1679397462,1679397462,-71.4143,42.2018,6903.72,!1,177.08,268,10.08,null,6766.56,null,!1,0],["4b9065","PGT902  ","Turkey",1679397462,1679397462,26.8314,41.7089,10660.38,!1,238.18,129.74,-2.28,null,10736.58,"7123",!1,0],["a96c96","DAL521  ","United States",1679397445,1679397455,-73.7498,40.6517,-60.96,!1,63.44,210.72,-3.25,null,22.86,"3221",!1,0],["3ce02b","DCMET   ","Germany",1679397462,1679397462,4.695,43.1003,3543.3,!1,141.29,317.66,-10.08,null,3657.6,"6402",!1,0],["ad504d","SKW4649 ","United States",1679397462,1679397462,-79.4326,42.4342,9753.6,!1,186.91,274.89,0,null,9563.1,"1632",!1,0],["3d1371","DEFPP   ","Germany",1679397462,1679397462,20.7861,44.5561,1775.46,!1,82.71,311.72,-4.23,null,1813.56,null,!1,0],["ace0cf","NKS1829 ","United States",1679397453,1679397459,-84.4242,33.6374,null,!0,0,208.12,null,null,null,null,!1,0],["44052d","GAC037W ","Austria",1679397462,1679397462,8.9851,48.8431,4206.24,!1,105.08,338.46,9.75,null,4328.16,"0126",!1,0],["a32861","AAL2443 ","United States",1679397462,1679397462,-73.4048,40.4178,3208.02,!1,191.61,125.82,5.85,null,3223.26,"2723",!1,0],["06a0a6","QTR54N  ","Qatar",1679397215,1679397461,33.1711,31.3215,null,!1,274.77,150.75,0,null,null,"3375",!1,0],["06a0a7","QTR28V  ","Qatar",1679397462,1679397462,11.8111,49.6385,12192,!1,234.49,305.08,-.33,null,12214.86,"1000",!1,0],["06a0a5","QTR90L  ","Qatar",1679397462,1679397462,2.8481,53.1011,12192,!1,238,281.09,-.33,null,12169.14,"3236",!1,0],["440521","OECOG   ","Austria",1679397462,1679397462,16.2534,48.3776,518.16,!1,62.21,97.13,-.33,null,647.7,null,!1,0],["407bf5","FLJ63T  ","United Kingdom",null,1679397460,null,null,null,!1,.06,306.56,null,null,null,null,!1,0],["a05256","N12LC   ","United States",1679397458,1679397458,-71.2452,42.466,152.4,!1,37.93,290.65,-3.9,null,236.22,null,!1,0],["ac3078","N885AR  ","United States",1679397462,1679397462,-72.739,40.6484,3962.4,!1,191.59,204.09,11.05,null,3962.4,"1674",!1,0],["a24ef0","ENY3686 ","United States",1679397462,1679397462,-80.2418,26.9832,6926.58,!1,219.96,160.89,-9.75,null,7246.62,null,!1,0],["75823e","GAP2861 ","Philippines",1679397176,1679397176,121.0117,14.5058,null,!0,7.72,239.06,null,null,null,null,!1,0],["75823d","GAP2988 ","Philippines",1679397462,1679397462,121.5174,14.3744,3642.36,!1,151.91,261.43,-2.6,null,3909.06,null,!1,0],["ace0d2","AAL605  ","United States",1679397462,1679397462,-80.3273,25.8746,1424.94,!1,111.16,268.41,-8.45,null,1516.38,"2455",!1,0],["06a0b7","QTR170  ","Qatar",1679397337,1679397369,32.7223,41.531,12496.8,!1,258.91,110.96,-.33,null,12496.8,"2242",!1,0],["758224","APG092  ","Philippines",1679397338,1679397338,113.6271,22.3308,861.06,!1,67.86,160.05,-1.95,null,838.2,null,!1,0],["06a0b5","QTR75H  ","Qatar",1679397462,1679397462,32.4658,41.604,12489.18,!1,261.62,110.61,-.33,null,12489.18,"4637",!1,0],["a0fba3","N1621M  ","United States",1679397458,1679397460,-83.8403,35.1566,3528.06,!1,132.11,189.87,0,null,3611.88,null,!1,0],["06a0b3","QTR79J  ","Qatar",1679397462,1679397462,10.0636,45.6253,7261.86,!1,214.04,261.99,-12.35,null,7421.88,"2347",!1,0],["06a0b1","QTR40M  ","Qatar",1679397285,1679397285,32.7276,41.5295,11887.2,!1,260.84,110.79,-.33,null,11879.58,"3406",!1,0],["06a0b0","QTR47A  ","Qatar",1679397462,1679397462,4.8183,50.9875,12192,!1,236.67,286.54,-.33,null,12199.62,"3256",!1,0],["407be2","EUK935  ","United Kingdom",1679397462,1679397462,-2.3116,53.336,655.32,!1,72.65,229.88,14.31,null,617.22,null,!1,0],["a32844","ENY3354 ","United States",1679397462,1679397462,-81.1406,31.4146,9753.6,!1,200.45,208.01,.33,null,9966.96,null,!1,0],["06a0af","QTR931  ","Qatar",1679397462,1679397462,120.4539,14.9276,2575.56,!1,143.75,203.63,16.26,null,2727.96,null,!1,0],["06a0ab","QTR34B  ","Qatar",1679397462,1679397462,20.2348,43.9568,13106.4,!1,243.17,286.59,-.33,null,13106.4,null,!1,0],["a923ee","UAL746  ","United States",1679397463,1679397463,-74.621,40.6041,1394.46,!1,130.97,12.02,0,null,1447.8,"3171",!1,0],["06a0ac","","Qatar",1679397462,1679397462,51.5962,25.2838,null,!0,2.31,64.69,null,null,null,null,!1,0],["06a0aa","QTR57W  ","Qatar",1679397323,1679397415,31.9245,32.7193,12496.8,!1,274.42,122.68,0,null,12618.72,"1677",!1,0],["ac0818","SWA349  ","United States",1679397462,1679397463,-81.2854,28.8177,3390.9,!1,171.97,353.3,11.38,null,3505.2,null,!1,0],["a9d66c","KII822  ","United States",1679397462,1679397462,-83.9542,38.8582,8534.4,!1,231.51,105.33,-.33,null,8488.68,null,!1,0],["a9735b","SWQ598  ","United States",1679397462,1679397463,-86.3787,37.7148,9753.6,!1,206.36,238.77,0,null,9730.74,"7355",!1,0],["300345","PROVA25 ","Italy",1679397462,1679397462,8.7895,45.7939,556.26,!1,45.07,218.05,.65,null,655.32,"0030",!1,0],["300348","IGREE   ","Italy",1679397461,1679397462,7.4737,44.5573,861.06,!1,75.32,274.31,3.25,null,967.74,null,!1,0],["06a0c2","QTR29Y  ","Qatar",1679397462,1679397462,2.4753,55.2678,12192,!1,232.65,276.86,-.33,null,12100.56,"3252",!1,0],["ab48bf","SKW3965 ","United States",1679397462,1679397462,-83.0453,41.9179,4114.8,!1,173.41,311.87,-6.83,null,4076.7,"7475",!1,0],["88510d","THA417  ","Thailand",1679397462,1679397462,100.9891,4.2637,10782.3,!1,237.22,154.16,-8.13,null,11468.1,null,!1,0],["a68843","N52TE   ","United States",1679397462,1679397462,-82.7518,43.3388,838.2,!1,86.46,339.08,0,null,861.06,null,!1,0],["a96c7c","N706SV  ","United States",1679397462,1679397463,-4.3178,53.8798,6705.6,!1,111.37,313.13,0,null,6591.3,"7451",!1,0],["493033","NJE787Q ","Portugal",1679397457,1679397457,7.127,43.4256,876.3,!1,108.78,35.57,-.33,null,960.12,"1000",!1,0],["adb35c","JBU287  ","United States",1679397462,1679397462,-74.697,43.0629,10370.82,!1,203.44,274.93,-.33,null,10104.12,"1316",!1,0],["06a0bf","QTR5L   ","Qatar",1679397463,1679397463,11.632,48.054,4053.84,!1,177.6,4.82,-6.83,null,4175.76,"6335",!1,0],["ab35a9","RPA4653 ","United States",1679397462,1679397462,-78.6469,40.0624,6705.6,!1,188.85,279.56,-.33,null,6667.5,"3030",!1,0],["06a0bd","QTR43X  ","Qatar",1679397462,1679397462,2.2284,41.3482,571.5,!1,84.51,245.93,-4.88,null,678.18,"1734",!1,0],["800ccb","IGO5349 ","India",1679397462,1679397462,76.0374,11.9698,11887.2,!1,230.76,153.66,-.33,null,12496.8,null,!1,0],["8013c8","IGO068  ","India",1679397462,1679397462,75.7416,12.5554,11277.6,!1,236.74,153.55,0,null,11871.96,null,!1,0],["a8a337","SKW4970 ","United States",1679397462,1679397462,-99.2742,28.0466,4183.38,!1,192.78,18.19,11.38,null,4320.54,null,!1,0],["4b17e0","HOLA    ","Switzerland",1679397210,1679397214,8.5594,47.4541,388.62,!0,0,185.62,null,null,null,"2000",!1,0],["8013c6","IGO5613 ","India",1679397462,1679397462,80.8959,26.1106,10957.56,!1,209.93,313.91,0,null,11209.02,null,!1,0],["a28b5b","ENY3870 ","United States",1679397462,1679397462,-81.3119,31.8177,9753.6,!1,231.32,170.14,-.33,null,9974.58,null,!1,0],["0c203a","CMP764  ","Panama",1679397357,1679397357,-79.4157,9.0071,297.18,!1,76.51,29.84,-3.58,null,419.1,null,!1,0],["a5e02d","EDV4763 ","United States",1679397462,1679397462,-93.5742,39.4324,7216.14,!1,234.87,81.05,7.48,null,7162.8,"2254",!1,0],["abe80e","SWA2635 ","United States",1679397462,1679397462,-85.6546,37.333,8641.08,!1,210.98,192.1,-10.73,null,8641.08,"6325",!1,0],["800ce4","IAD559  ","India",1679397454,1679397455,81.7211,25.6767,10675.62,!1,246.37,122.03,-.65,null,10927.08,null,!1,0],["a9d640","AAL9781 ","United States",1679397462,1679397462,4.7169,50.7014,6400.8,!1,221.12,107.47,0,null,6454.14,"4711",!1,0],["86e7c4","JAL707  ","Japan",1679397297,1679397434,136.0134,32.1122,12192,!1,203.11,239.73,-.33,null,12512.04,"3243",!1,0],["47a0bf","NOZ4CW  ","Norway",1679397462,1679397462,2.4143,41.4789,1455.42,!1,116.16,214.53,-2.28,null,1569.72,"0752",!1,0],["a3a082","UAL2190 ","United States",1679397462,1679397462,-87.1467,35.8091,11582.4,!1,199.77,228.76,-.33,null,11620.5,"7422",!1,0],["a923cd","UAL1789 ","United States",1679397462,1679397462,-84.728,27.8188,9144,!1,211.64,278.39,0,null,9494.52,"4647",!1,0],["aaae1b","SWA586  ","United States",1679397462,1679397462,-98.631,35.6657,9776.46,!1,194.03,308.54,16.26,null,9814.56,"3046",!1,0],["800cdd","IGO187  ","India",1679397462,1679397462,87.9747,24.0006,11582.4,!1,192.99,231.6,-.33,null,11948.16,"2614",!1,0],["401b9d","GCOVZ   ","United Kingdom",1679397462,1679397462,-.9025,51.9507,525.78,!1,40.77,119.48,.98,null,525.78,"7000",!1,0],["8013d4","IGO6572 ","India",1679397461,1679397462,78.7926,14.259,8793.48,!1,234.2,38.76,2.28,null,9220.2,null,!1,0],["a32890","UPS918  ","United States",1679397462,1679397462,-113.2745,35.6813,10370.82,!1,187.91,255.74,0,null,10386.06,"4053",!1,0],["8013d8","IGO034  ","India",1679397461,1679397462,82.638,27.3671,10965.18,!1,206.19,279.77,.33,null,11163.3,null,!1,0],["a86671","NKS883  ","United States",1679397462,1679397462,-81.2211,28.1688,1363.98,!1,133.56,330.97,-11.7,null,1463.04,null,!1,0],["06a0e8","QTR18R  ","Qatar",1679397462,1679397462,12.726,48.9282,11582.4,!1,226.81,312.7,-.33,null,11605.26,"5217",!1,0],["3c0699","AHO734D ","Germany",1679397457,1679397459,53.108,26.0772,9448.8,!1,302.64,111.86,-.65,null,9601.2,null,!1,0],["8013d6","VTI201  ","India",1679397461,1679397461,72.7227,19.0892,1371.6,!1,134.7,276.8,14.31,null,1257.3,null,!1,0],["a495bf","DAL1117 ","United States",1679397462,1679397462,-79.8327,43.6962,10972.8,!1,198.18,280.32,0,null,10706.1,"3572",!1,0],["8013ca","IAD1563 ","India",1679397462,1679397462,86.9565,21.1615,9745.98,!1,185.65,212.9,0,null,10126.98,"1463",!1,0],["a2b8fe","UAL988  ","United States",1679397462,1679397462,8.352,50.0194,1577.34,!1,131.06,258.91,16.26,null,1645.92,"2554",!1,0],["8013cb","IGO6357 ","India",1679397462,1679397462,77.9684,13.7219,3992.88,!1,164.96,198.55,-7.8,null,4107.18,null,!1,0],["a78cfc","JBU1270 ","United States",1679397462,1679397462,-77.3402,37.2694,10058.4,!1,249.33,36.02,-.33,null,10073.64,"0731",!1,0],["8013ce","IGO2088 ","India",1679397196,1679397200,77.3535,24.1508,10972.8,!1,208.9,354.21,0,null,11308.08,null,!1,0],["06a0de","QTR8356 ","Qatar",1679397461,1679397461,49.9746,23.3093,9448.8,!1,323,93.01,0,null,9753.6,null,!1,0],["06a0db","QTR56P  ","Qatar",1679397462,1679397462,19.3183,49.812,10363.2,!1,226.98,323.57,0,null,10264.14,"2224",!1,0],["4acaa2","SAS4473 ","Sweden",1679397462,1679397462,20.728,66.2247,11582.4,!1,224.28,219.79,0,null,11071.86,null,!1,0],["4acaa4","SAS4546 ","Sweden",1679397462,1679397462,11.5131,62.1201,11277.6,!1,218.84,6.07,0,null,11026.14,"0402",!1,0],["8013a1","GOW371  ","India",1679397460,1679397460,72.8703,19.0923,null,!0,4.37,109.69,null,null,null,null,!1,0],["aa50c9","KAP72   ","United States",1679397229,1679397229,-66.8846,18.3287,1036.32,!1,67.26,83.85,-.33,null,1059.18,null,!1,0],["ad0e22","LTA40   ","United States",1679397462,1679397462,-85.8789,39.8043,449.58,!1,56.5,349.51,-2.6,null,502.92,null,!1,0],["7c1b3c","VOZ9232 ","Australia",1679397460,1679397460,115.0097,-29.3862,4991.1,!1,187.27,162.41,8.13,null,5265.42,null,!1,0],["800cb9","VTI658  ","India",1679397460,1679397461,76.8,26.8342,10660.38,!1,236.91,177.26,0,null,10858.5,null,!1,0],["a9bc12","RPA3566 ","United States",1679397462,1679397462,-75.2255,39.9936,4053.84,!1,189.62,43.13,-7.8,null,4084.32,"5621",!1,0],["ab35d3","DAL97   ","United States",1679397462,1679397462,-6.393,55.3799,10668,!1,227.38,310.32,0,null,10530.84,"5614",!1,0],["800cc2","IGO7182 ","India",1679397460,1679397461,77.7671,13.2064,1150.62,!1,56.07,270,-2.6,null,1158.24,null,!1,0],["7cf8f5","WGTL10  ","Australia",1679397389,1679397389,151.6843,-32.6867,792.48,!1,83.21,149.95,-3.9,null,960.12,null,!1,0],["0c200a","CMP201  ","Panama",1679397461,1679397461,-79.4366,8.9703,533.4,!1,77.32,27.76,-4.88,null,571.5,null,!1,0],["86e7e6","JAL751  ","Japan",1679397463,1679397463,129.1824,33.0449,12184.38,!1,189.63,247.68,.33,null,12512.04,"3625",!1,0],["aaa201","SWA1316 ","United States",1679397462,1679397462,-93.2815,44.8096,2385.06,!1,134.64,260.32,-8.78,null,2339.34,"7007",!1,0],["4b17f8","GRUEZI  ","Switzerland",1679397458,1679397459,8.5614,47.4416,null,!0,0,244.69,null,null,null,"2000",!1,0],["7c7bcc","VOZ680  ","Australia",1679397167,1679397167,144.8424,-37.6707,null,!0,6.69,171.56,null,null,null,"4060",!1,0],["8013b2","VTI721  ","India",1679397461,1679397461,85.2573,25.8692,11269.98,!1,266.45,83.9,-.33,null,null,null,!1,0],["8013b1","VTI778  ","India",1679397462,1679397462,81.3403,27.7106,11582.4,!1,204.01,288.07,0,null,11772.9,null,!1,0],["7c1b2b","FD572   ","Australia",1679397456,1679397456,138.5226,-34.9504,null,!0,3.6,11.25,null,null,null,"3657",!1,0],["a30e54","N2961W  ","United States",1679397462,1679397462,-81.3719,28.716,396.24,!1,59.2,268.01,0,null,411.48,null,!1,0],["a05273","N12MG   ","United States",1679397462,1679397462,-76.9936,40.3433,12192,!1,192.68,264.79,-.33,null,12077.7,"2725",!1,0],["4b17df","SWR9UV  ","Switzerland",1679397462,1679397462,8.5591,47.4163,2308.86,!1,145.07,90,9.43,null,2407.92,"3056",!1,0],["a2b8db","UAL951  ","United States",1679397461,1679397462,4.1974,50.9634,2438.4,!1,138.89,318.75,13.66,null,2468.88,"4402",!1,0],["8013af","IAD549  ","India",1679397453,1679397457,77.3266,22.0045,10248.9,!1,250.58,172.57,4.88,null,10690.86,null,!1,0],["4b17e1","SWR98CP ","Switzerland",1679397462,1679397462,2.5563,44.598,11887.2,!1,209.42,240.41,0,null,12039.6,"5745",!1,0],["4b17e2","SWR4VE  ","Switzerland",1679397458,1679397458,8.5915,50.0482,null,!0,9.26,250.31,null,null,null,"1000",!1,0],["ab8553","UAL502  ","United States",1679397462,1679397462,-80.4776,41.1987,11590.02,!1,201.39,277.63,0,null,11422.38,"1773",!1,0],["4b17e6","SWR007  ","Switzerland",1679397457,1679397457,6.1044,46.2316,null,!0,0,180,null,null,null,"6502",!1,0],["a6b0d2","JIA5380 ","United States",1679397462,1679397462,-77.1376,38.9529,624.84,!1,85.3,143.34,-5.53,null,693.42,"3426",!1,0],["a92528","FDX134  ","United States",1679397462,1679397463,-94.0379,44.736,10972.8,!1,228.89,335.85,-.33,null,10721.34,"3456",!1,0],["ad7634","AAL2989 ","United States",1679397462,1679397462,-91.8495,34.3542,11887.2,!1,267.18,66.15,-.33,null,11986.26,"6053",!1,0],["ad1fcd","DAL484  ","United States",1679397462,1679397462,-84.2528,33.5188,3528.06,!1,152.65,311.86,0,null,3619.5,null,!1,0],["ad7639","DAL2266 ","United States",1679397462,1679397462,-80.8084,36.6315,10363.2,!1,205.9,225.61,0,null,10370.82,"1614",!1,0],["acffbc","DAL2988 ","United States",1679397462,1679397462,-81.0785,36.4165,10363.2,!1,205.17,225.41,0,null,10393.68,"2057",!1,0],["7c7c9c","VOZ697  ","Australia",1679397386,1679397454,136.6364,-36.7239,10972.8,!1,204.95,282.47,0,null,11353.8,"3660",!1,0],["a66239","JBU376  ","United States",1679397462,1679397462,-81.2535,28.5879,1851.66,!1,142.17,357.1,12.35,null,1935.48,null,!1,0],["a745db","JIA5674 ","United States",1679397455,1679397461,-80.3586,32.7952,5791.2,!1,190.5,63.02,-.33,null,5913.12,null,!1,0],["8013fe","VTI622  ","India",1679397266,1679397266,81.3738,25.3723,9174.48,!1,217.65,247.19,3.9,null,9364.98,null,!1,0],["aa5237","AAL1884 ","United States",1679397462,1679397463,-81.7476,41.6079,10965.18,!1,200.43,244.62,0,null,10789.92,"1347",!1,0],["a96ba2","JBU2233 ","United States",1679397462,1679397462,-76.6375,37.6914,8823.96,!1,235.42,176.99,7.48,null,8823.96,null,!1,0],["4b17fc","SWR400N ","Switzerland",1679397463,1679397463,-3.5494,51.8844,12192,!1,209.04,285.27,0,null,12184.38,"3061",!1,0],["4b17fd","SWR73B  ","Switzerland",1679397452,1679397457,8.5599,47.4466,null,!0,0,244.69,null,null,null,"2000",!1,0],["4b17fe","SWR253V ","Switzerland",null,1679397461,null,null,null,!1,0,135,null,null,null,null,!1,0],["a9d5a2","UAL1071 ","United States",1679397462,1679397462,-82.4878,42.6567,11582.4,!1,198.4,277.9,0,null,11376.66,"1101",!1,0],["a90b27","FDX120  ","United States",1679397462,1679397462,-97.5366,44.4767,10972.8,!1,225.16,326.75,0,null,10721.34,"4215",!1,0],["aa02ab","AAL2116 ","United States",1679397462,1679397462,-90.8916,33.3207,10370.82,!1,194.05,230.49,0,null,10538.46,"3176",!1,0],["acb953","AAL1913 ","United States",1679397462,1679397462,-91.0858,29.2775,10668,!1,268.29,107.64,0,null,10980.42,"2401",!1,0],["a8eb16","FDX1517 ","United States",1679397463,1679397463,-98.1967,28.3519,9288.78,!1,226.26,225,-5.2,null,9677.4,"7025",!1,0],["a43582","N370TP  ","United States",1679397462,1679397462,-69.4338,21.291,13281.66,!1,196.87,311.19,1.3,null,13883.64,null,!1,0],["acffc2","SIL3970 ","United States",1679397462,1679397462,-93.0862,31.5325,6720.84,!1,103.82,281.14,.33,null,6880.86,null,!1,0],["a41b66","ABX803  ","United States",1679397459,1679397462,-102.4207,37.9058,10972.8,!1,194.02,258.06,-.33,null,10888.98,null,!1,0],["800cee","IGO518  ","India",1679397372,1679397372,80.3102,26.9295,3147.06,!1,104.46,205.68,-5.2,null,3154.68,null,!1,0],["8013e6","IGO2063 ","India",1679397449,1679397449,77.317,23.9336,10980.42,!1,201.92,357.08,0,null,11323.32,null,!1,0],["800cec","IGO6604 ","India",1679397166,1679397214,86.1939,26.2847,10980.42,!1,199.39,275.18,0,null,11216.64,"2620",!1,0],["c0076e","NDL543  ","Canada",1679397462,1679397462,-72.2397,46.2034,3604.26,!1,105.46,229.55,0,null,3459.48,null,!1,0],["ab83e8","","United States",1679397284,1679397287,-86.6718,36.1336,null,!0,1.29,236.25,null,null,null,null,!1,0],["06a19e","QTR4K   ","Qatar",1679397458,1679397462,30.7057,34.0539,10668,!1,265.65,140.42,.33,null,10805.16,"0650",!1,0],["a1bb83","SWA2987 ","United States",1679397462,1679397462,-82.675,30.5613,11887.2,!1,241.25,10.57,.33,null,12161.52,"1453",!1,0],["8013e2","IGO5286 ","India",1679397461,1679397462,75.2961,12.213,11597.64,!1,228.61,331.36,.33,null,12192,null,!1,0],["600b22","AZG280  ","Azerbaijan",1679397361,1679397361,44.0381,41.5872,9753.6,!1,244.69,276.03,-.33,null,9715.5,null,!1,0],["06a19f","","Qatar",1679397452,1679397453,5.9013,36.5228,9753.6,!1,243.08,272.67,0,null,10043.16,null,!1,0],["600b25","AZG6111 ","Azerbaijan",1679397462,1679397462,2.3851,41.6287,11887.2,!1,216.77,242.28,0,null,12077.7,"4020",!1,0],["a732d9","JBU1278 ","United States",1679397405,1679397457,-79.8142,33.2976,11887.2,!1,263.47,41.6,0,null,12054.84,null,!1,0],["a865e3","GTI8039 ","United States",1679397462,1679397462,-7.8152,54.2346,9753.6,!1,195.42,289.53,0,null,9624.06,"4130",!1,0],["8013dc","IGO953  ","India",1679397462,1679397462,77.0895,29.2567,7597.14,!1,228.14,22.4,-14.63,null,7734.3,null,!1,0],["4a81f9","SVF645  ","Sweden",1679397462,1679397463,22.8576,52.8259,12496.8,!1,220.38,357.59,-.33,null,12329.16,"6314",!1,0],["456030","BIRD1   ","Bulgaria",1679397460,1679397460,23.4135,42.7002,null,!0,9.77,61.88,null,null,null,null,!1,0],["a0b59d","DAL2814 ","United States",1679397462,1679397462,-73.8621,40.7711,null,!0,1.54,309.38,null,null,null,"3522",!1,0],["aafc60","BVN8752 ","United States",1679397462,1679397462,-98.6679,30.6197,2438.4,!1,68.1,295.98,0,null,2476.5,"2724",!1,0],["8013da","IGO6002 ","India",1679397462,1679397462,82.3472,17.5032,10363.2,!1,244.18,173.95,-.33,null,null,"2641",!1,0],["484966","KLM96K  ","Kingdom of the Netherlands",1679397462,1679397463,8.5218,50.0273,12192,!1,223.73,336.56,0,null,12176.76,"1000",!1,0],["800cfe","AIC822  ","India",1679397159,1679397160,77.0686,28.5466,289.56,!1,72.62,103.94,-3.58,null,213.36,null,!1,0],["8013f8","IGO783  ","India",1679397462,1679397462,82.1985,17.527,9144,!1,200.65,261.75,0,null,null,"0210",!1,0],["8a018c","AWQ323  ","Indonesia",1679397461,1679397461,103.9311,.5636,10675.62,!1,229.85,132.01,-.33,null,11346.18,"2144",!1,0],["800cfb","IGO7428 ","India",1679397462,1679397462,77.3254,12.1958,4267.2,!1,124.13,185.95,-.33,null,4457.7,null,!1,0],["a9250d","ENY3577 ","United States",1679397462,1679397462,-88.2917,40.1864,2590.8,!1,143.83,332.06,12.35,null,2598.42,"5371",!1,0],["ad5c33","AAL1249 ","United States",1679397462,1679397462,-77.3106,34.5605,9144,!1,221.76,195.2,.33,null,9212.58,"3076",!1,0],["a8aeab","FDX1417 ","United States",1679397227,1679397227,-108.4056,35.213,10363.2,!1,174.7,266.62,0,null,10477.5,null,!1,0],["ad763f","SIL3978 ","United States",1679397462,1679397462,-97.2202,36.8198,6697.98,!1,115.95,192.56,0,null,6690.36,null,!1,0],["ac90a0","ENY3607 ","United States",1679397360,1679397457,-81.6128,37.5741,10363.2,!1,199.91,304.3,-.33,null,10302.24,null,!1,0],["a7de3c","N606HD  ","United States",1679397462,1679397462,-75.193,40.0001,190.5,!1,68.03,135.92,-.98,null,266.7,null,!1,0],["8013ea","VTI707  ","India",1679397462,1679397462,76.7443,28.7446,2575.56,!1,118.35,282.04,-4.55,null,2583.18,null,!1,0],["abd3c7","AAL1604 ","United States",1679397462,1679397462,-93.5988,29.2323,11887.2,!1,273.12,98.56,-.33,null,12222.48,"2432",!1,0],["a495e9","FFT1574 ","United States",1679397462,1679397462,-86.0572,40.9001,6705.6,!1,206.93,323.9,0,null,6667.5,"7107",!1,0],["ab2372","AAL2025 ","United States",1679397462,1679397462,-76.9857,38.7529,1798.32,!1,134.01,97.94,20.81,null,1844.04,null,!1,0],["885153","THA625  ","Thailand",1679397440,1679397449,121.0061,14.5036,null,!0,1.03,250.31,null,null,null,null,!1,0],["ab236a","AAL93   ","United States",1679397462,1679397462,-6.4057,52.5218,11582.4,!1,227.8,299.34,0,null,11544.3,"3020",!1,0],["a04aa9","RPA4386 ","United States",1679397462,1679397462,-89.1471,35.235,6202.68,!1,216.55,72.3,8.45,null,6271.26,null,!1,0],["398561","AFR34PM ","France",1679397462,1679397462,7.3911,51.6305,10972.8,!1,209.46,213.38,.33,null,10988.04,"1373",!1,0],["398562","AFR17UP ","France",1679397461,1679397462,3.4511,48.7406,2827.02,!1,129.98,330.09,-4.23,null,2918.46,"4112",!1,0],["342107","IBS39AW ","Spain",1679397462,1679397462,-5.6531,38.0072,4968.24,!1,206.96,220.26,-13.33,null,5196.84,"5174",!1,0],["342106","IBE30TG ","Spain",1679397462,1679397462,-1.7569,41.0804,9144,!1,231.07,82.19,-.33,null,9364.98,null,!1,0],["342105","IBS38ZH ","Spain",1679397462,1679397462,-5.5371,40.057,9448.8,!1,198.68,232.89,0,null,9685.02,null,!1,0],["456015","VAISALA ","Bulgaria",1679397319,1679397319,23.4044,42.6878,null,!0,6.43,106.88,null,null,null,null,!1,0],["710dc0","KNE231  ","Saudi Arabia",1679397456,1679397461,48.0964,28.0835,5471.16,!1,187.78,359.53,-3.9,null,5494.02,null,!1,0],["398566","AFR91KH ","France",1679397166,1679397186,2.6257,48.9961,175.26,!1,64.65,264.06,-3.25,null,243.84,"1000",!1,0],["a12429","UAL1309 ","United States",1679397462,1679397462,-82.7886,27.7697,4290.06,!1,196.52,.3,11.7,null,4442.46,"1310",!1,0],["a5686a","AWI3924 ","United States",1679397463,1679397463,-82.6036,39.2336,10363.2,!1,200.68,312.19,0,null,10279.38,"5614",!1,0],["4403bb","EJU96QP ","Austria",1679397462,1679397462,-3.3656,39.7672,10972.8,!1,257.71,30.87,0,null,11231.88,"6465",!1,0],["a1240a","UAL1508 ","United States",1679397460,1679397461,-79.5578,26.3977,4594.86,!1,201.56,46.03,11.38,null,4792.98,null,!1,0],["398571","AFR49PY ","France",1679397462,1679397462,4.0883,49.4933,5044.44,!1,174.68,261.7,-5.85,null,5120.64,"4141",!1,0],["3e80df","GAF944  ","Germany",1679397462,1679397462,4.9151,45.2731,7475.22,!1,154.47,194.27,-1.3,null,7604.76,"6202",!1,0],["4a349a","YRMDZ   ","Romania",1679397255,1679397394,25.9694,44.8977,365.76,!1,49.4,261.62,0,null,426.72,"7000",!1,0],["a6751d","N515MH  ","United States",1679397459,1679397462,-84.7409,34.4512,2004.06,!1,92.53,79.75,0,null,2065.02,null,!1,0],["a6d857","JIA5062 ","United States",1679397462,1679397462,-80.9463,40.1737,6812.28,!1,216.82,147.89,7.48,null,6781.8,"7432",!1,0],["885172","THA633  ","Thailand",1679397460,1679397460,102.3583,14.6522,10896.6,!1,214.91,251.87,-7.48,null,11567.16,null,!1,0],["a7e509","DAL2011 ","United States",1679397462,1679397462,-91.0445,30.4958,1287.78,!1,139.23,64.86,8.13,null,1341.12,null,!1,0],["aa7833","DAL2194 ","United States",1679397462,1679397463,-90.952,41.2696,7802.88,!1,235.76,124.87,10.08,null,7703.82,"3125",!1,0],["76eb14","R75     ","Singapore",1679397168,1679397168,103.8564,1.3071,null,!0,5.92,213.75,null,null,null,null,!1,0],["4b1902","EDW34N  ","Switzerland",1679397462,1679397462,-9.9484,40.5471,10972.8,!1,238.75,249.96,0,null,11201.4,"4503",!1,0],["a3c5fd","DAL2967 ","United States",1679397462,1679397462,-84.4908,33.6319,411.48,!1,68.94,90,-3.58,null,510.54,null,!1,0],["4403f0","EJU69FH ","Austria",1679397461,1679397461,8.7224,45.6304,null,!0,9.26,255.94,null,null,null,"2162",!1,0],["abc0e4","SWA2328 ","United States",1679397462,1679397462,-93.7953,39.2301,10972.8,!1,204.94,274.75,-.33,null,10850.88,"2176",!1,0],["a12403","UAL1982 ","United States",1679397462,1679397462,-81.8215,27.2567,6324.6,!1,190.45,343.52,10.08,null,6598.92,"3573",!1,0],["aa781a","N774CE  ","United States",1679397461,1679397461,-93.3349,44.7237,883.92,!1,83.37,102.84,.65,null,861.06,null,!1,0],["704458","MMA350  ","Myanmar",1679397462,1679397462,98.3615,15.2272,10675.62,!1,254,116.2,.33,null,11285.22,null,!1,0],["4b1901","EDW6    ","Switzerland",1679397462,1679397462,-4.5392,48.3182,11277.6,!1,247.04,84.5,0,null,11338.56,null,!1,0],["398551","FHBKR   ","France",1679397332,1679397332,-1.0848,43.7775,861.06,!1,32.38,17.57,-1.3,null,960.12,null,!1,0],["c00734","WJA243  ","Canada",1679397334,1679397334,-79.6207,43.6835,null,!0,.19,112.5,null,null,null,"3670",!1,0],["a41b89","DAL378  ","United States",1679397462,1679397462,-75.6047,39.1387,7612.38,!1,211.13,36.48,-5.2,null,7597.14,"7146",!1,0]]},S7=s=>(s<-180&&(s=180-(-180-s)),s>180&&(s=-180+(s-180)),s*Math.PI/180),R9=s=>(s<-Math.PI&&(s=Math.PI-(-Math.PI-s)),s>Math.PI&&(s=-Math.PI+(s-Math.PI)),s*180/Math.PI),j2=(s,e,l,a,n)=>{const t=l*s,f=S7(a),i=S7(n.lat),r=S7(n.lng),u=Math.asin(Math.sin(i)*Math.cos(t/e)+Math.cos(i)*Math.sin(t/e)*Math.cos(f)),o=r+Math.atan2(Math.sin(f)*Math.sin(t/e)*Math.cos(i),Math.cos(t/e)-Math.sin(i)*Math.sin(u));return{lat:R9(u),lng:R9(o)}},e4={time:0,updateTimeMultiplier:1e3,aircraftPositions:[],searchResults:[],cameraPosition:{lat:0,lng:0}},I6=z2(e4),l4=async()=>{const e=(await Q2()).filter(l=>l.baroAltitude!==null).filter(l=>l.velocity!==null).filter(l=>l.trueTrack!==null).filter(l=>l.longitude!==null).filter(l=>l.latitude!==null).slice(0,200).map(l=>({currentPosition:{lat:l.latitude,lng:l.longitude},distanceTraveled:0,aircraft:{id:l.icao24,callSign:l.callsign,altitude:l.baroAltitude,velocity:l.velocity,bearing:l.trueTrack,distanceTraveled:0,start:{lng:l.longitude,lat:l.latitude}}}));I6.update(l=>({...l,aircraftPositions:e}))},a4=s=>{I6.update(e=>{const l=e.time+s*e.updateTimeMultiplier;return{...e,time:l,aircraftPositions:e.aircraftPositions.map(a=>(a.currentPosition=j2(l,e2+a.aircraft.altitude,a.aircraft.velocity,a.aircraft.bearing,a.aircraft.start),a)),cameraPosition:i4(s,e.cameraPosition,e.selectedAircraftPosition)}})},n4=s=>{I6.update(e=>({...e,searchResults:s4(s,e.aircraftPositions)}))},t4=()=>{H2(r4,"Search")},l2=s=>{I6.update(l=>({...l,selectedAircraftPosition:s}));const e=V2();(e==null?void 0:e.component.name)===E9.name&&K2(e),k2(E9,s.aircraft.callSign,{aircraftPosition:s})},s4=(s,e)=>{try{return e.filter(l=>{var a;return(a=l.aircraft.callSign)==null?void 0:a.match(new RegExp(s,"i"))})}catch{return[]}},i4=(s,e,l)=>{if(!l)return e;const a={...e};return a.lng<l.currentPosition.lng&&(a.lng+=90*s,a.lng>l.currentPosition.lng&&(a.lng=l.currentPosition.lng)),a.lng>l.currentPosition.lng&&(a.lng-=90*s,a.lng<l.currentPosition.lng&&(a.lng=l.currentPosition.lng)),a.lat<l.currentPosition.lat&&(a.lat+=90*s,a.lat>l.currentPosition.lat&&(a.lat=l.currentPosition.lat)),a.lat>l.currentPosition.lat&&(a.lat-=90*s,a.lat<l.currentPosition.lat&&(a.lat=l.currentPosition.lat)),a},fl=I6;function C9(s,e,l){const a=s.slice();return a[5]=e[l],a}function w9(s){let e,l,a=s[5].aircraft.callSign+"",n,t,f,i,r,u,o;f=new e9({props:{latLng:s[5].currentPosition}});function d(){return s[4](s[5])}return{c(){e=G1("li"),l=G1("span"),n=Ie(a),t=Te(),j1(f.$$.fragment),i=Te(),this.h()},l(c){e=B1(c,"LI",{class:!0});var m=Y1(e);l=B1(m,"SPAN",{});var S=Y1(l);n=Ne(S,a),S.forEach(L1),t=Le(m),ee(f.$$.fragment,m),i=Le(m),m.forEach(L1),this.h()},h(){de(e,"class","search-result__item svelte-ox6yag"),T9(e,"search-results__item--selected",s[5]===s[1].selectedAircraftPosition)},m(c,m){ve(c,e,m),U1(e,l),U1(l,n),U1(e,t),le(f,e,null),U1(e,i),r=!0,u||(o=C6(e,"click",d),u=!0)},p(c,m){s=c,(!r||m&2)&&a!==(a=s[5].aircraft.callSign+"")&&ql(n,a);const S={};m&2&&(S.latLng=s[5].currentPosition),f.$set(S),(!r||m&2)&&T9(e,"search-results__item--selected",s[5]===s[1].selectedAircraftPosition)},i(c){r||(y1(f.$$.fragment,c),r=!0)},o(c){R1(f.$$.fragment,c),r=!1},d(c){c&&L1(e),ae(f),u=!1,o()}}}function f4(s){let e,l,a,n,t,f,i,r=s[1].searchResults,u=[];for(let d=0;d<r.length;d+=1)u[d]=w9(C9(s,r,d));const o=d=>R1(u[d],1,1,()=>{u[d]=null});return{c(){e=G1("form"),l=G1("input"),a=Te(),n=G1("ul");for(let d=0;d<u.length;d+=1)u[d].c();this.h()},l(d){e=B1(d,"FORM",{class:!0});var c=Y1(e);l=B1(c,"INPUT",{class:!0,type:!0,placeholder:!0}),c.forEach(L1),a=Le(d),n=B1(d,"UL",{class:!0});var m=Y1(n);for(let S=0;S<u.length;S+=1)u[S].l(m);m.forEach(L1),this.h()},h(){de(l,"class","search-panel__keyword-input svelte-ox6yag"),de(l,"type","search"),de(l,"placeholder","search ..."),de(e,"class","search-panel svelte-ox6yag"),de(n,"class","search-results svelte-ox6yag")},m(d,c){ve(d,e,c),U1(e,l),y9(l,s[0]),ve(d,a,c),ve(d,n,c);for(let m=0;m<u.length;m+=1)u[m]&&u[m].m(n,null);t=!0,f||(i=C6(l,"input",s[3]),f=!0)},p(d,[c]){if(c&1&&l.value!==d[0]&&y9(l,d[0]),c&6){r=d[1].searchResults;let m;for(m=0;m<r.length;m+=1){const S=C9(d,r,m);u[m]?(u[m].p(S,c),y1(u[m],1)):(u[m]=w9(S),u[m].c(),y1(u[m],1),u[m].m(n,null))}for(o9(),m=r.length;m<u.length;m+=1)o(m);d9()}},i(d){if(!t){for(let c=0;c<r.length;c+=1)y1(u[c]);t=!0}},o(d){u=u.filter(Boolean);for(let c=0;c<u.length;c+=1)R1(u[c]);t=!1},d(d){d&&L1(e),d&&L1(a),d&&L1(n),q3(u,d),f=!1,i()}}}function u4(s,e,l){let a;c9(s,fl,r=>l(1,a=r));let n;const t=r=>{l2(r)};function f(){n=this.value,l(0,n)}const i=r=>t(r);return s.$$.update=()=>{s.$$.dirty&1&&n4(n)},[n,a,t,f,i]}class r4 extends pe{constructor(e){super(),me(this,e,u4,f4,Se,{})}}const l9="PlanetContext";class p6{constructor(e){this.parent=e}remove(e){this.parent.remove(e)}add(e){this.parent.add(e)}}const ze="ParentContext";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const h9="150",o4=0,D9=1,d4=2,a2=1,c4=2,T6=3,E7=0,Be=1,y7=2,L7=0,f6=1,P9=2,I9=3,N9=4,h4=5,s6=100,p4=101,m4=102,F9=103,G9=104,S4=200,g4=201,A4=202,b4=203,n2=204,t2=205,_4=206,U4=207,x4=208,M4=209,v4=210,y4=0,T4=1,L4=2,a9=3,E4=4,R4=5,C4=6,w4=7,s2=0,D4=1,P4=2,g7=0,I4=1,N4=2,F4=3,G4=4,B4=5,i2=300,o6=301,d6=302,n9=303,t9=304,rl=306,s9=1e3,Ze=1001,i9=1002,xe=1003,B9=1004,gl=1005,Ke=1006,W4=1007,w6=1008,z7=1009,O4=1010,z4=1011,f2=1012,H4=1013,B7=1014,W7=1015,D6=1016,V4=1017,K4=1018,u6=1020,k4=1021,Qe=1023,J4=1024,Y4=1025,O7=1026,c6=1027,X4=1028,Z4=1029,Q4=1030,q4=1031,$4=1033,Al=33776,bl=33777,_l=33778,Ul=33779,W9=35840,O9=35841,z9=35842,H9=35843,j4=36196,V9=37492,K9=37496,k9=37808,J9=37809,Y9=37810,X9=37811,Z9=37812,Q9=37813,q9=37814,$9=37815,j9=37816,e3=37817,l3=37818,a3=37819,n3=37820,t3=37821,xl=36492,ea=36283,s3=36284,i3=36285,f3=36286,H7=3e3,V1=3001,la=3200,aa=3201,u2=0,na=1,s7="srgb",P6="srgb-linear",r2="display-p3",Ml=7680,ta=519,u3=35044,r3="300 es",f9=1035;class m6{addEventListener(e,l){this._listeners===void 0&&(this._listeners={});const a=this._listeners;a[e]===void 0&&(a[e]=[]),a[e].indexOf(l)===-1&&a[e].push(l)}hasEventListener(e,l){if(this._listeners===void 0)return!1;const a=this._listeners;return a[e]!==void 0&&a[e].indexOf(l)!==-1}removeEventListener(e,l){if(this._listeners===void 0)return;const n=this._listeners[e];if(n!==void 0){const t=n.indexOf(l);t!==-1&&n.splice(t,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const a=this._listeners[e.type];if(a!==void 0){e.target=this;const n=a.slice(0);for(let t=0,f=n.length;t<f;t++)n[t].call(this,e);e.target=null}}}const ce=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],vl=Math.PI/180,o3=180/Math.PI;function N6(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,l=Math.random()*4294967295|0,a=Math.random()*4294967295|0;return(ce[s&255]+ce[s>>8&255]+ce[s>>16&255]+ce[s>>24&255]+"-"+ce[e&255]+ce[e>>8&255]+"-"+ce[e>>16&15|64]+ce[e>>24&255]+"-"+ce[l&63|128]+ce[l>>8&255]+"-"+ce[l>>16&255]+ce[l>>24&255]+ce[a&255]+ce[a>>8&255]+ce[a>>16&255]+ce[a>>24&255]).toLowerCase()}function Fe(s,e,l){return Math.max(e,Math.min(l,s))}function sa(s,e){return(s%e+e)%e}function yl(s,e,l){return(1-l)*s+l*e}function d3(s){return(s&s-1)===0&&s!==0}function ia(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function O6(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function we(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class F1{constructor(e=0,l=0){F1.prototype.isVector2=!0,this.x=e,this.y=l}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,l){return this.x=e,this.y=l,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,l){switch(e){case 0:this.x=l;break;case 1:this.y=l;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,l){return this.x=e.x+l.x,this.y=e.y+l.y,this}addScaledVector(e,l){return this.x+=e.x*l,this.y+=e.y*l,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,l){return this.x=e.x-l.x,this.y=e.y-l.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const l=this.x,a=this.y,n=e.elements;return this.x=n[0]*l+n[3]*a+n[6],this.y=n[1]*l+n[4]*a+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,l){return this.x=Math.max(e.x,Math.min(l.x,this.x)),this.y=Math.max(e.y,Math.min(l.y,this.y)),this}clampScalar(e,l){return this.x=Math.max(e,Math.min(l,this.x)),this.y=Math.max(e,Math.min(l,this.y)),this}clampLength(e,l){const a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(e,Math.min(l,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const l=this.x-e.x,a=this.y-e.y;return l*l+a*a}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,l){return this.x+=(e.x-this.x)*l,this.y+=(e.y-this.y)*l,this}lerpVectors(e,l,a){return this.x=e.x+(l.x-e.x)*a,this.y=e.y+(l.y-e.y)*a,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,l=0){return this.x=e[l],this.y=e[l+1],this}toArray(e=[],l=0){return e[l]=this.x,e[l+1]=this.y,e}fromBufferAttribute(e,l){return this.x=e.getX(l),this.y=e.getY(l),this}rotateAround(e,l){const a=Math.cos(l),n=Math.sin(l),t=this.x-e.x,f=this.y-e.y;return this.x=t*a-f*n+e.x,this.y=t*n+f*a+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Me{constructor(){Me.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,l,a,n,t,f,i,r,u){const o=this.elements;return o[0]=e,o[1]=n,o[2]=i,o[3]=l,o[4]=t,o[5]=r,o[6]=a,o[7]=f,o[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const l=this.elements,a=e.elements;return l[0]=a[0],l[1]=a[1],l[2]=a[2],l[3]=a[3],l[4]=a[4],l[5]=a[5],l[6]=a[6],l[7]=a[7],l[8]=a[8],this}extractBasis(e,l,a){return e.setFromMatrix3Column(this,0),l.setFromMatrix3Column(this,1),a.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const l=e.elements;return this.set(l[0],l[4],l[8],l[1],l[5],l[9],l[2],l[6],l[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,l){const a=e.elements,n=l.elements,t=this.elements,f=a[0],i=a[3],r=a[6],u=a[1],o=a[4],d=a[7],c=a[2],m=a[5],S=a[8],p=n[0],h=n[3],_=n[6],M=n[1],g=n[4],v=n[7],T=n[2],E=n[5],D=n[8];return t[0]=f*p+i*M+r*T,t[3]=f*h+i*g+r*E,t[6]=f*_+i*v+r*D,t[1]=u*p+o*M+d*T,t[4]=u*h+o*g+d*E,t[7]=u*_+o*v+d*D,t[2]=c*p+m*M+S*T,t[5]=c*h+m*g+S*E,t[8]=c*_+m*v+S*D,this}multiplyScalar(e){const l=this.elements;return l[0]*=e,l[3]*=e,l[6]*=e,l[1]*=e,l[4]*=e,l[7]*=e,l[2]*=e,l[5]*=e,l[8]*=e,this}determinant(){const e=this.elements,l=e[0],a=e[1],n=e[2],t=e[3],f=e[4],i=e[5],r=e[6],u=e[7],o=e[8];return l*f*o-l*i*u-a*t*o+a*i*r+n*t*u-n*f*r}invert(){const e=this.elements,l=e[0],a=e[1],n=e[2],t=e[3],f=e[4],i=e[5],r=e[6],u=e[7],o=e[8],d=o*f-i*u,c=i*r-o*t,m=u*t-f*r,S=l*d+a*c+n*m;if(S===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/S;return e[0]=d*p,e[1]=(n*u-o*a)*p,e[2]=(i*a-n*f)*p,e[3]=c*p,e[4]=(o*l-n*r)*p,e[5]=(n*t-i*l)*p,e[6]=m*p,e[7]=(a*r-u*l)*p,e[8]=(f*l-a*t)*p,this}transpose(){let e;const l=this.elements;return e=l[1],l[1]=l[3],l[3]=e,e=l[2],l[2]=l[6],l[6]=e,e=l[5],l[5]=l[7],l[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const l=this.elements;return e[0]=l[0],e[1]=l[3],e[2]=l[6],e[3]=l[1],e[4]=l[4],e[5]=l[7],e[6]=l[2],e[7]=l[5],e[8]=l[8],this}setUvTransform(e,l,a,n,t,f,i){const r=Math.cos(t),u=Math.sin(t);return this.set(a*r,a*u,-a*(r*f+u*i)+f+e,-n*u,n*r,-n*(-u*f+r*i)+i+l,0,0,1),this}scale(e,l){return this.premultiply(Tl.makeScale(e,l)),this}rotate(e){return this.premultiply(Tl.makeRotation(-e)),this}translate(e,l){return this.premultiply(Tl.makeTranslation(e,l)),this}makeTranslation(e,l){return this.set(1,0,e,0,1,l,0,0,1),this}makeRotation(e){const l=Math.cos(e),a=Math.sin(e);return this.set(l,-a,0,a,l,0,0,0,1),this}makeScale(e,l){return this.set(e,0,0,0,l,0,0,0,1),this}equals(e){const l=this.elements,a=e.elements;for(let n=0;n<9;n++)if(l[n]!==a[n])return!1;return!0}fromArray(e,l=0){for(let a=0;a<9;a++)this.elements[a]=e[a+l];return this}toArray(e=[],l=0){const a=this.elements;return e[l]=a[0],e[l+1]=a[1],e[l+2]=a[2],e[l+3]=a[3],e[l+4]=a[4],e[l+5]=a[5],e[l+6]=a[6],e[l+7]=a[7],e[l+8]=a[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Tl=new Me;function o2(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}function ul(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}class F6{constructor(e=0,l=0,a=0,n=1){this.isQuaternion=!0,this._x=e,this._y=l,this._z=a,this._w=n}static slerpFlat(e,l,a,n,t,f,i){let r=a[n+0],u=a[n+1],o=a[n+2],d=a[n+3];const c=t[f+0],m=t[f+1],S=t[f+2],p=t[f+3];if(i===0){e[l+0]=r,e[l+1]=u,e[l+2]=o,e[l+3]=d;return}if(i===1){e[l+0]=c,e[l+1]=m,e[l+2]=S,e[l+3]=p;return}if(d!==p||r!==c||u!==m||o!==S){let h=1-i;const _=r*c+u*m+o*S+d*p,M=_>=0?1:-1,g=1-_*_;if(g>Number.EPSILON){const T=Math.sqrt(g),E=Math.atan2(T,_*M);h=Math.sin(h*E)/T,i=Math.sin(i*E)/T}const v=i*M;if(r=r*h+c*v,u=u*h+m*v,o=o*h+S*v,d=d*h+p*v,h===1-i){const T=1/Math.sqrt(r*r+u*u+o*o+d*d);r*=T,u*=T,o*=T,d*=T}}e[l]=r,e[l+1]=u,e[l+2]=o,e[l+3]=d}static multiplyQuaternionsFlat(e,l,a,n,t,f){const i=a[n],r=a[n+1],u=a[n+2],o=a[n+3],d=t[f],c=t[f+1],m=t[f+2],S=t[f+3];return e[l]=i*S+o*d+r*m-u*c,e[l+1]=r*S+o*c+u*d-i*m,e[l+2]=u*S+o*m+i*c-r*d,e[l+3]=o*S-i*d-r*c-u*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,l,a,n){return this._x=e,this._y=l,this._z=a,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,l){const a=e._x,n=e._y,t=e._z,f=e._order,i=Math.cos,r=Math.sin,u=i(a/2),o=i(n/2),d=i(t/2),c=r(a/2),m=r(n/2),S=r(t/2);switch(f){case"XYZ":this._x=c*o*d+u*m*S,this._y=u*m*d-c*o*S,this._z=u*o*S+c*m*d,this._w=u*o*d-c*m*S;break;case"YXZ":this._x=c*o*d+u*m*S,this._y=u*m*d-c*o*S,this._z=u*o*S-c*m*d,this._w=u*o*d+c*m*S;break;case"ZXY":this._x=c*o*d-u*m*S,this._y=u*m*d+c*o*S,this._z=u*o*S+c*m*d,this._w=u*o*d-c*m*S;break;case"ZYX":this._x=c*o*d-u*m*S,this._y=u*m*d+c*o*S,this._z=u*o*S-c*m*d,this._w=u*o*d+c*m*S;break;case"YZX":this._x=c*o*d+u*m*S,this._y=u*m*d+c*o*S,this._z=u*o*S-c*m*d,this._w=u*o*d-c*m*S;break;case"XZY":this._x=c*o*d-u*m*S,this._y=u*m*d-c*o*S,this._z=u*o*S+c*m*d,this._w=u*o*d+c*m*S;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+f)}return l!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,l){const a=l/2,n=Math.sin(a);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(a),this._onChangeCallback(),this}setFromRotationMatrix(e){const l=e.elements,a=l[0],n=l[4],t=l[8],f=l[1],i=l[5],r=l[9],u=l[2],o=l[6],d=l[10],c=a+i+d;if(c>0){const m=.5/Math.sqrt(c+1);this._w=.25/m,this._x=(o-r)*m,this._y=(t-u)*m,this._z=(f-n)*m}else if(a>i&&a>d){const m=2*Math.sqrt(1+a-i-d);this._w=(o-r)/m,this._x=.25*m,this._y=(n+f)/m,this._z=(t+u)/m}else if(i>d){const m=2*Math.sqrt(1+i-a-d);this._w=(t-u)/m,this._x=(n+f)/m,this._y=.25*m,this._z=(r+o)/m}else{const m=2*Math.sqrt(1+d-a-i);this._w=(f-n)/m,this._x=(t+u)/m,this._y=(r+o)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,l){let a=e.dot(l)+1;return a<Number.EPSILON?(a=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*l.z-e.z*l.y,this._y=e.z*l.x-e.x*l.z,this._z=e.x*l.y-e.y*l.x,this._w=a),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Fe(this.dot(e),-1,1)))}rotateTowards(e,l){const a=this.angleTo(e);if(a===0)return this;const n=Math.min(1,l/a);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,l){const a=e._x,n=e._y,t=e._z,f=e._w,i=l._x,r=l._y,u=l._z,o=l._w;return this._x=a*o+f*i+n*u-t*r,this._y=n*o+f*r+t*i-a*u,this._z=t*o+f*u+a*r-n*i,this._w=f*o-a*i-n*r-t*u,this._onChangeCallback(),this}slerp(e,l){if(l===0)return this;if(l===1)return this.copy(e);const a=this._x,n=this._y,t=this._z,f=this._w;let i=f*e._w+a*e._x+n*e._y+t*e._z;if(i<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,i=-i):this.copy(e),i>=1)return this._w=f,this._x=a,this._y=n,this._z=t,this;const r=1-i*i;if(r<=Number.EPSILON){const m=1-l;return this._w=m*f+l*this._w,this._x=m*a+l*this._x,this._y=m*n+l*this._y,this._z=m*t+l*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(r),o=Math.atan2(u,i),d=Math.sin((1-l)*o)/u,c=Math.sin(l*o)/u;return this._w=f*d+this._w*c,this._x=a*d+this._x*c,this._y=n*d+this._y*c,this._z=t*d+this._z*c,this._onChangeCallback(),this}slerpQuaternions(e,l,a){return this.copy(e).slerp(l,a)}random(){const e=Math.random(),l=Math.sqrt(1-e),a=Math.sqrt(e),n=2*Math.PI*Math.random(),t=2*Math.PI*Math.random();return this.set(l*Math.cos(n),a*Math.sin(t),a*Math.cos(t),l*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,l=0){return this._x=e[l],this._y=e[l+1],this._z=e[l+2],this._w=e[l+3],this._onChangeCallback(),this}toArray(e=[],l=0){return e[l]=this._x,e[l+1]=this._y,e[l+2]=this._z,e[l+3]=this._w,e}fromBufferAttribute(e,l){return this._x=e.getX(l),this._y=e.getY(l),this._z=e.getZ(l),this._w=e.getW(l),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(e=0,l=0,a=0){I.prototype.isVector3=!0,this.x=e,this.y=l,this.z=a}set(e,l,a){return a===void 0&&(a=this.z),this.x=e,this.y=l,this.z=a,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,l){switch(e){case 0:this.x=l;break;case 1:this.y=l;break;case 2:this.z=l;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,l){return this.x=e.x+l.x,this.y=e.y+l.y,this.z=e.z+l.z,this}addScaledVector(e,l){return this.x+=e.x*l,this.y+=e.y*l,this.z+=e.z*l,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,l){return this.x=e.x-l.x,this.y=e.y-l.y,this.z=e.z-l.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,l){return this.x=e.x*l.x,this.y=e.y*l.y,this.z=e.z*l.z,this}applyEuler(e){return this.applyQuaternion(c3.setFromEuler(e))}applyAxisAngle(e,l){return this.applyQuaternion(c3.setFromAxisAngle(e,l))}applyMatrix3(e){const l=this.x,a=this.y,n=this.z,t=e.elements;return this.x=t[0]*l+t[3]*a+t[6]*n,this.y=t[1]*l+t[4]*a+t[7]*n,this.z=t[2]*l+t[5]*a+t[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const l=this.x,a=this.y,n=this.z,t=e.elements,f=1/(t[3]*l+t[7]*a+t[11]*n+t[15]);return this.x=(t[0]*l+t[4]*a+t[8]*n+t[12])*f,this.y=(t[1]*l+t[5]*a+t[9]*n+t[13])*f,this.z=(t[2]*l+t[6]*a+t[10]*n+t[14])*f,this}applyQuaternion(e){const l=this.x,a=this.y,n=this.z,t=e.x,f=e.y,i=e.z,r=e.w,u=r*l+f*n-i*a,o=r*a+i*l-t*n,d=r*n+t*a-f*l,c=-t*l-f*a-i*n;return this.x=u*r+c*-t+o*-i-d*-f,this.y=o*r+c*-f+d*-t-u*-i,this.z=d*r+c*-i+u*-f-o*-t,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const l=this.x,a=this.y,n=this.z,t=e.elements;return this.x=t[0]*l+t[4]*a+t[8]*n,this.y=t[1]*l+t[5]*a+t[9]*n,this.z=t[2]*l+t[6]*a+t[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,l){return this.x=Math.max(e.x,Math.min(l.x,this.x)),this.y=Math.max(e.y,Math.min(l.y,this.y)),this.z=Math.max(e.z,Math.min(l.z,this.z)),this}clampScalar(e,l){return this.x=Math.max(e,Math.min(l,this.x)),this.y=Math.max(e,Math.min(l,this.y)),this.z=Math.max(e,Math.min(l,this.z)),this}clampLength(e,l){const a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(e,Math.min(l,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,l){return this.x+=(e.x-this.x)*l,this.y+=(e.y-this.y)*l,this.z+=(e.z-this.z)*l,this}lerpVectors(e,l,a){return this.x=e.x+(l.x-e.x)*a,this.y=e.y+(l.y-e.y)*a,this.z=e.z+(l.z-e.z)*a,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,l){const a=e.x,n=e.y,t=e.z,f=l.x,i=l.y,r=l.z;return this.x=n*r-t*i,this.y=t*f-a*r,this.z=a*i-n*f,this}projectOnVector(e){const l=e.lengthSq();if(l===0)return this.set(0,0,0);const a=e.dot(this)/l;return this.copy(e).multiplyScalar(a)}projectOnPlane(e){return Ll.copy(this).projectOnVector(e),this.sub(Ll)}reflect(e){return this.sub(Ll.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const l=Math.sqrt(this.lengthSq()*e.lengthSq());if(l===0)return Math.PI/2;const a=this.dot(e)/l;return Math.acos(Fe(a,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const l=this.x-e.x,a=this.y-e.y,n=this.z-e.z;return l*l+a*a+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,l,a){const n=Math.sin(l)*e;return this.x=n*Math.sin(a),this.y=Math.cos(l)*e,this.z=n*Math.cos(a),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,l,a){return this.x=e*Math.sin(l),this.y=a,this.z=e*Math.cos(l),this}setFromMatrixPosition(e){const l=e.elements;return this.x=l[12],this.y=l[13],this.z=l[14],this}setFromMatrixScale(e){const l=this.setFromMatrixColumn(e,0).length(),a=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=l,this.y=a,this.z=n,this}setFromMatrixColumn(e,l){return this.fromArray(e.elements,l*4)}setFromMatrix3Column(e,l){return this.fromArray(e.elements,l*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,l=0){return this.x=e[l],this.y=e[l+1],this.z=e[l+2],this}toArray(e=[],l=0){return e[l]=this.x,e[l+1]=this.y,e[l+2]=this.z,e}fromBufferAttribute(e,l){return this.x=e.getX(l),this.y=e.getY(l),this.z=e.getZ(l),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,l=Math.random()*Math.PI*2,a=Math.sqrt(1-e**2);return this.x=a*Math.cos(l),this.y=a*Math.sin(l),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ll=new I,c3=new F6;function r6(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function El(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const fa=new Me().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),ua=new Me().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),T7=new I;function ra(s){return s.convertSRGBToLinear(),T7.set(s.r,s.g,s.b).applyMatrix3(ua),s.setRGB(T7.x,T7.y,T7.z)}function oa(s){return T7.set(s.r,s.g,s.b).applyMatrix3(fa),s.setRGB(T7.x,T7.y,T7.z).convertLinearToSRGB()}const da={[P6]:s=>s,[s7]:s=>s.convertSRGBToLinear(),[r2]:ra},ca={[P6]:s=>s,[s7]:s=>s.convertLinearToSRGB(),[r2]:oa},_e={enabled:!1,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return P6},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,l){if(this.enabled===!1||e===l||!e||!l)return s;const a=da[e],n=ca[l];if(a===void 0||n===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${l}".`);return n(a(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}};let J7;class d2{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let l;if(e instanceof HTMLCanvasElement)l=e;else{J7===void 0&&(J7=ul("canvas")),J7.width=e.width,J7.height=e.height;const a=J7.getContext("2d");e instanceof ImageData?a.putImageData(e,0,0):a.drawImage(e,0,0,e.width,e.height),l=J7}return l.width>2048||l.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),l.toDataURL("image/jpeg",.6)):l.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const l=ul("canvas");l.width=e.width,l.height=e.height;const a=l.getContext("2d");a.drawImage(e,0,0,e.width,e.height);const n=a.getImageData(0,0,e.width,e.height),t=n.data;for(let f=0;f<t.length;f++)t[f]=r6(t[f]/255)*255;return a.putImageData(n,0,0),l}else if(e.data){const l=e.data.slice(0);for(let a=0;a<l.length;a++)l instanceof Uint8Array||l instanceof Uint8ClampedArray?l[a]=Math.floor(r6(l[a]/255)*255):l[a]=r6(l[a]);return{data:l,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class c2{constructor(e=null){this.isSource=!0,this.uuid=N6(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const l=e===void 0||typeof e=="string";if(!l&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const a={uuid:this.uuid,url:""},n=this.data;if(n!==null){let t;if(Array.isArray(n)){t=[];for(let f=0,i=n.length;f<i;f++)n[f].isDataTexture?t.push(Rl(n[f].image)):t.push(Rl(n[f]))}else t=Rl(n);a.url=t}return l||(e.images[this.uuid]=a),a}}function Rl(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?d2.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ha=0;class We extends m6{constructor(e=We.DEFAULT_IMAGE,l=We.DEFAULT_MAPPING,a=Ze,n=Ze,t=Ke,f=w6,i=Qe,r=z7,u=We.DEFAULT_ANISOTROPY,o=H7){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ha++}),this.uuid=N6(),this.name="",this.source=new c2(e),this.mipmaps=[],this.mapping=l,this.wrapS=a,this.wrapT=n,this.magFilter=t,this.minFilter=f,this.anisotropy=u,this.format=i,this.internalFormat=null,this.type=r,this.offset=new F1(0,0),this.repeat=new F1(1,1),this.center=new F1(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Me,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=o,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const l=e===void 0||typeof e=="string";if(!l&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const a={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(a.userData=this.userData),l||(e.textures[this.uuid]=a),a}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==i2)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case s9:e.x=e.x-Math.floor(e.x);break;case Ze:e.x=e.x<0?0:1;break;case i9:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case s9:e.y=e.y-Math.floor(e.y);break;case Ze:e.y=e.y<0?0:1;break;case i9:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}We.DEFAULT_IMAGE=null;We.DEFAULT_MAPPING=i2;We.DEFAULT_ANISOTROPY=1;class K1{constructor(e=0,l=0,a=0,n=1){K1.prototype.isVector4=!0,this.x=e,this.y=l,this.z=a,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,l,a,n){return this.x=e,this.y=l,this.z=a,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,l){switch(e){case 0:this.x=l;break;case 1:this.y=l;break;case 2:this.z=l;break;case 3:this.w=l;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,l){return this.x=e.x+l.x,this.y=e.y+l.y,this.z=e.z+l.z,this.w=e.w+l.w,this}addScaledVector(e,l){return this.x+=e.x*l,this.y+=e.y*l,this.z+=e.z*l,this.w+=e.w*l,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,l){return this.x=e.x-l.x,this.y=e.y-l.y,this.z=e.z-l.z,this.w=e.w-l.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const l=this.x,a=this.y,n=this.z,t=this.w,f=e.elements;return this.x=f[0]*l+f[4]*a+f[8]*n+f[12]*t,this.y=f[1]*l+f[5]*a+f[9]*n+f[13]*t,this.z=f[2]*l+f[6]*a+f[10]*n+f[14]*t,this.w=f[3]*l+f[7]*a+f[11]*n+f[15]*t,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const l=Math.sqrt(1-e.w*e.w);return l<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/l,this.y=e.y/l,this.z=e.z/l),this}setAxisAngleFromRotationMatrix(e){let l,a,n,t;const r=e.elements,u=r[0],o=r[4],d=r[8],c=r[1],m=r[5],S=r[9],p=r[2],h=r[6],_=r[10];if(Math.abs(o-c)<.01&&Math.abs(d-p)<.01&&Math.abs(S-h)<.01){if(Math.abs(o+c)<.1&&Math.abs(d+p)<.1&&Math.abs(S+h)<.1&&Math.abs(u+m+_-3)<.1)return this.set(1,0,0,0),this;l=Math.PI;const g=(u+1)/2,v=(m+1)/2,T=(_+1)/2,E=(o+c)/4,D=(d+p)/4,b=(S+h)/4;return g>v&&g>T?g<.01?(a=0,n=.707106781,t=.707106781):(a=Math.sqrt(g),n=E/a,t=D/a):v>T?v<.01?(a=.707106781,n=0,t=.707106781):(n=Math.sqrt(v),a=E/n,t=b/n):T<.01?(a=.707106781,n=.707106781,t=0):(t=Math.sqrt(T),a=D/t,n=b/t),this.set(a,n,t,l),this}let M=Math.sqrt((h-S)*(h-S)+(d-p)*(d-p)+(c-o)*(c-o));return Math.abs(M)<.001&&(M=1),this.x=(h-S)/M,this.y=(d-p)/M,this.z=(c-o)/M,this.w=Math.acos((u+m+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,l){return this.x=Math.max(e.x,Math.min(l.x,this.x)),this.y=Math.max(e.y,Math.min(l.y,this.y)),this.z=Math.max(e.z,Math.min(l.z,this.z)),this.w=Math.max(e.w,Math.min(l.w,this.w)),this}clampScalar(e,l){return this.x=Math.max(e,Math.min(l,this.x)),this.y=Math.max(e,Math.min(l,this.y)),this.z=Math.max(e,Math.min(l,this.z)),this.w=Math.max(e,Math.min(l,this.w)),this}clampLength(e,l){const a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(e,Math.min(l,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,l){return this.x+=(e.x-this.x)*l,this.y+=(e.y-this.y)*l,this.z+=(e.z-this.z)*l,this.w+=(e.w-this.w)*l,this}lerpVectors(e,l,a){return this.x=e.x+(l.x-e.x)*a,this.y=e.y+(l.y-e.y)*a,this.z=e.z+(l.z-e.z)*a,this.w=e.w+(l.w-e.w)*a,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,l=0){return this.x=e[l],this.y=e[l+1],this.z=e[l+2],this.w=e[l+3],this}toArray(e=[],l=0){return e[l]=this.x,e[l+1]=this.y,e[l+2]=this.z,e[l+3]=this.w,e}fromBufferAttribute(e,l){return this.x=e.getX(l),this.y=e.getY(l),this.z=e.getZ(l),this.w=e.getW(l),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class V7 extends m6{constructor(e=1,l=1,a={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=l,this.depth=1,this.scissor=new K1(0,0,e,l),this.scissorTest=!1,this.viewport=new K1(0,0,e,l);const n={width:e,height:l,depth:1};this.texture=new We(n,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=a.generateMipmaps!==void 0?a.generateMipmaps:!1,this.texture.internalFormat=a.internalFormat!==void 0?a.internalFormat:null,this.texture.minFilter=a.minFilter!==void 0?a.minFilter:Ke,this.depthBuffer=a.depthBuffer!==void 0?a.depthBuffer:!0,this.stencilBuffer=a.stencilBuffer!==void 0?a.stencilBuffer:!1,this.depthTexture=a.depthTexture!==void 0?a.depthTexture:null,this.samples=a.samples!==void 0?a.samples:0}setSize(e,l,a=1){(this.width!==e||this.height!==l||this.depth!==a)&&(this.width=e,this.height=l,this.depth=a,this.texture.image.width=e,this.texture.image.height=l,this.texture.image.depth=a,this.dispose()),this.viewport.set(0,0,e,l),this.scissor.set(0,0,e,l)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const l=Object.assign({},e.texture.image);return this.texture.source=new c2(l),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class h2 extends We{constructor(e=null,l=1,a=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:l,height:a,depth:n},this.magFilter=xe,this.minFilter=xe,this.wrapR=Ze,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class pa extends We{constructor(e=null,l=1,a=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:l,height:a,depth:n},this.magFilter=xe,this.minFilter=xe,this.wrapR=Ze,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class G6{constructor(e=new I(1/0,1/0,1/0),l=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=l}set(e,l){return this.min.copy(e),this.max.copy(l),this}setFromArray(e){let l=1/0,a=1/0,n=1/0,t=-1/0,f=-1/0,i=-1/0;for(let r=0,u=e.length;r<u;r+=3){const o=e[r],d=e[r+1],c=e[r+2];o<l&&(l=o),d<a&&(a=d),c<n&&(n=c),o>t&&(t=o),d>f&&(f=d),c>i&&(i=c)}return this.min.set(l,a,n),this.max.set(t,f,i),this}setFromBufferAttribute(e){let l=1/0,a=1/0,n=1/0,t=-1/0,f=-1/0,i=-1/0;for(let r=0,u=e.count;r<u;r++){const o=e.getX(r),d=e.getY(r),c=e.getZ(r);o<l&&(l=o),d<a&&(a=d),c<n&&(n=c),o>t&&(t=o),d>f&&(f=d),c>i&&(i=c)}return this.min.set(l,a,n),this.max.set(t,f,i),this}setFromPoints(e){this.makeEmpty();for(let l=0,a=e.length;l<a;l++)this.expandByPoint(e[l]);return this}setFromCenterAndSize(e,l){const a=D7.copy(l).multiplyScalar(.5);return this.min.copy(e).sub(a),this.max.copy(e).add(a),this}setFromObject(e,l=!1){return this.makeEmpty(),this.expandByObject(e,l)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,l=!1){e.updateWorldMatrix(!1,!1);const a=e.geometry;if(a!==void 0)if(l&&a.attributes!=null&&a.attributes.position!==void 0){const t=a.attributes.position;for(let f=0,i=t.count;f<i;f++)D7.fromBufferAttribute(t,f).applyMatrix4(e.matrixWorld),this.expandByPoint(D7)}else a.boundingBox===null&&a.computeBoundingBox(),Cl.copy(a.boundingBox),Cl.applyMatrix4(e.matrixWorld),this.union(Cl);const n=e.children;for(let t=0,f=n.length;t<f;t++)this.expandByObject(n[t],l);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,l){return l.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,D7),D7.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let l,a;return e.normal.x>0?(l=e.normal.x*this.min.x,a=e.normal.x*this.max.x):(l=e.normal.x*this.max.x,a=e.normal.x*this.min.x),e.normal.y>0?(l+=e.normal.y*this.min.y,a+=e.normal.y*this.max.y):(l+=e.normal.y*this.max.y,a+=e.normal.y*this.min.y),e.normal.z>0?(l+=e.normal.z*this.min.z,a+=e.normal.z*this.max.z):(l+=e.normal.z*this.max.z,a+=e.normal.z*this.min.z),l<=-e.constant&&a>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(A6),z6.subVectors(this.max,A6),Y7.subVectors(e.a,A6),X7.subVectors(e.b,A6),Z7.subVectors(e.c,A6),U7.subVectors(X7,Y7),x7.subVectors(Z7,X7),P7.subVectors(Y7,Z7);let l=[0,-U7.z,U7.y,0,-x7.z,x7.y,0,-P7.z,P7.y,U7.z,0,-U7.x,x7.z,0,-x7.x,P7.z,0,-P7.x,-U7.y,U7.x,0,-x7.y,x7.x,0,-P7.y,P7.x,0];return!wl(l,Y7,X7,Z7,z6)||(l=[1,0,0,0,1,0,0,0,1],!wl(l,Y7,X7,Z7,z6))?!1:(H6.crossVectors(U7,x7),l=[H6.x,H6.y,H6.z],wl(l,Y7,X7,Z7,z6))}clampPoint(e,l){return l.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,D7).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(D7).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(o7[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),o7[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),o7[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),o7[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),o7[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),o7[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),o7[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),o7[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(o7),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const o7=[new I,new I,new I,new I,new I,new I,new I,new I],D7=new I,Cl=new G6,Y7=new I,X7=new I,Z7=new I,U7=new I,x7=new I,P7=new I,A6=new I,z6=new I,H6=new I,I7=new I;function wl(s,e,l,a,n){for(let t=0,f=s.length-3;t<=f;t+=3){I7.fromArray(s,t);const i=n.x*Math.abs(I7.x)+n.y*Math.abs(I7.y)+n.z*Math.abs(I7.z),r=e.dot(I7),u=l.dot(I7),o=a.dot(I7);if(Math.max(-Math.max(r,u,o),Math.min(r,u,o))>i)return!1}return!0}const ma=new G6,b6=new I,Dl=new I;let p9=class{constructor(e=new I,l=-1){this.center=e,this.radius=l}set(e,l){return this.center.copy(e),this.radius=l,this}setFromPoints(e,l){const a=this.center;l!==void 0?a.copy(l):ma.setFromPoints(e).getCenter(a);let n=0;for(let t=0,f=e.length;t<f;t++)n=Math.max(n,a.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const l=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=l*l}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,l){const a=this.center.distanceToSquared(e);return l.copy(e),a>this.radius*this.radius&&(l.sub(this.center).normalize(),l.multiplyScalar(this.radius).add(this.center)),l}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;b6.subVectors(e,this.center);const l=b6.lengthSq();if(l>this.radius*this.radius){const a=Math.sqrt(l),n=(a-this.radius)*.5;this.center.addScaledVector(b6,n/a),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Dl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(b6.copy(e.center).add(Dl)),this.expandByPoint(b6.copy(e.center).sub(Dl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const d7=new I,Pl=new I,V6=new I,M7=new I,Il=new I,K6=new I,Nl=new I;class p2{constructor(e=new I,l=new I(0,0,-1)){this.origin=e,this.direction=l}set(e,l){return this.origin.copy(e),this.direction.copy(l),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,l){return l.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,d7)),this}closestPointToPoint(e,l){l.subVectors(e,this.origin);const a=l.dot(this.direction);return a<0?l.copy(this.origin):l.copy(this.origin).addScaledVector(this.direction,a)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const l=d7.subVectors(e,this.origin).dot(this.direction);return l<0?this.origin.distanceToSquared(e):(d7.copy(this.origin).addScaledVector(this.direction,l),d7.distanceToSquared(e))}distanceSqToSegment(e,l,a,n){Pl.copy(e).add(l).multiplyScalar(.5),V6.copy(l).sub(e).normalize(),M7.copy(this.origin).sub(Pl);const t=e.distanceTo(l)*.5,f=-this.direction.dot(V6),i=M7.dot(this.direction),r=-M7.dot(V6),u=M7.lengthSq(),o=Math.abs(1-f*f);let d,c,m,S;if(o>0)if(d=f*r-i,c=f*i-r,S=t*o,d>=0)if(c>=-S)if(c<=S){const p=1/o;d*=p,c*=p,m=d*(d+f*c+2*i)+c*(f*d+c+2*r)+u}else c=t,d=Math.max(0,-(f*c+i)),m=-d*d+c*(c+2*r)+u;else c=-t,d=Math.max(0,-(f*c+i)),m=-d*d+c*(c+2*r)+u;else c<=-S?(d=Math.max(0,-(-f*t+i)),c=d>0?-t:Math.min(Math.max(-t,-r),t),m=-d*d+c*(c+2*r)+u):c<=S?(d=0,c=Math.min(Math.max(-t,-r),t),m=c*(c+2*r)+u):(d=Math.max(0,-(f*t+i)),c=d>0?t:Math.min(Math.max(-t,-r),t),m=-d*d+c*(c+2*r)+u);else c=f>0?-t:t,d=Math.max(0,-(f*c+i)),m=-d*d+c*(c+2*r)+u;return a&&a.copy(this.origin).addScaledVector(this.direction,d),n&&n.copy(Pl).addScaledVector(V6,c),m}intersectSphere(e,l){d7.subVectors(e.center,this.origin);const a=d7.dot(this.direction),n=d7.dot(d7)-a*a,t=e.radius*e.radius;if(n>t)return null;const f=Math.sqrt(t-n),i=a-f,r=a+f;return r<0?null:i<0?this.at(r,l):this.at(i,l)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const l=e.normal.dot(this.direction);if(l===0)return e.distanceToPoint(this.origin)===0?0:null;const a=-(this.origin.dot(e.normal)+e.constant)/l;return a>=0?a:null}intersectPlane(e,l){const a=this.distanceToPlane(e);return a===null?null:this.at(a,l)}intersectsPlane(e){const l=e.distanceToPoint(this.origin);return l===0||e.normal.dot(this.direction)*l<0}intersectBox(e,l){let a,n,t,f,i,r;const u=1/this.direction.x,o=1/this.direction.y,d=1/this.direction.z,c=this.origin;return u>=0?(a=(e.min.x-c.x)*u,n=(e.max.x-c.x)*u):(a=(e.max.x-c.x)*u,n=(e.min.x-c.x)*u),o>=0?(t=(e.min.y-c.y)*o,f=(e.max.y-c.y)*o):(t=(e.max.y-c.y)*o,f=(e.min.y-c.y)*o),a>f||t>n||((t>a||isNaN(a))&&(a=t),(f<n||isNaN(n))&&(n=f),d>=0?(i=(e.min.z-c.z)*d,r=(e.max.z-c.z)*d):(i=(e.max.z-c.z)*d,r=(e.min.z-c.z)*d),a>r||i>n)||((i>a||a!==a)&&(a=i),(r<n||n!==n)&&(n=r),n<0)?null:this.at(a>=0?a:n,l)}intersectsBox(e){return this.intersectBox(e,d7)!==null}intersectTriangle(e,l,a,n,t){Il.subVectors(l,e),K6.subVectors(a,e),Nl.crossVectors(Il,K6);let f=this.direction.dot(Nl),i;if(f>0){if(n)return null;i=1}else if(f<0)i=-1,f=-f;else return null;M7.subVectors(this.origin,e);const r=i*this.direction.dot(K6.crossVectors(M7,K6));if(r<0)return null;const u=i*this.direction.dot(Il.cross(M7));if(u<0||r+u>f)return null;const o=-i*M7.dot(Nl);return o<0?null:this.at(o/f,t)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class k1{constructor(){k1.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,l,a,n,t,f,i,r,u,o,d,c,m,S,p,h){const _=this.elements;return _[0]=e,_[4]=l,_[8]=a,_[12]=n,_[1]=t,_[5]=f,_[9]=i,_[13]=r,_[2]=u,_[6]=o,_[10]=d,_[14]=c,_[3]=m,_[7]=S,_[11]=p,_[15]=h,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new k1().fromArray(this.elements)}copy(e){const l=this.elements,a=e.elements;return l[0]=a[0],l[1]=a[1],l[2]=a[2],l[3]=a[3],l[4]=a[4],l[5]=a[5],l[6]=a[6],l[7]=a[7],l[8]=a[8],l[9]=a[9],l[10]=a[10],l[11]=a[11],l[12]=a[12],l[13]=a[13],l[14]=a[14],l[15]=a[15],this}copyPosition(e){const l=this.elements,a=e.elements;return l[12]=a[12],l[13]=a[13],l[14]=a[14],this}setFromMatrix3(e){const l=e.elements;return this.set(l[0],l[3],l[6],0,l[1],l[4],l[7],0,l[2],l[5],l[8],0,0,0,0,1),this}extractBasis(e,l,a){return e.setFromMatrixColumn(this,0),l.setFromMatrixColumn(this,1),a.setFromMatrixColumn(this,2),this}makeBasis(e,l,a){return this.set(e.x,l.x,a.x,0,e.y,l.y,a.y,0,e.z,l.z,a.z,0,0,0,0,1),this}extractRotation(e){const l=this.elements,a=e.elements,n=1/Q7.setFromMatrixColumn(e,0).length(),t=1/Q7.setFromMatrixColumn(e,1).length(),f=1/Q7.setFromMatrixColumn(e,2).length();return l[0]=a[0]*n,l[1]=a[1]*n,l[2]=a[2]*n,l[3]=0,l[4]=a[4]*t,l[5]=a[5]*t,l[6]=a[6]*t,l[7]=0,l[8]=a[8]*f,l[9]=a[9]*f,l[10]=a[10]*f,l[11]=0,l[12]=0,l[13]=0,l[14]=0,l[15]=1,this}makeRotationFromEuler(e){const l=this.elements,a=e.x,n=e.y,t=e.z,f=Math.cos(a),i=Math.sin(a),r=Math.cos(n),u=Math.sin(n),o=Math.cos(t),d=Math.sin(t);if(e.order==="XYZ"){const c=f*o,m=f*d,S=i*o,p=i*d;l[0]=r*o,l[4]=-r*d,l[8]=u,l[1]=m+S*u,l[5]=c-p*u,l[9]=-i*r,l[2]=p-c*u,l[6]=S+m*u,l[10]=f*r}else if(e.order==="YXZ"){const c=r*o,m=r*d,S=u*o,p=u*d;l[0]=c+p*i,l[4]=S*i-m,l[8]=f*u,l[1]=f*d,l[5]=f*o,l[9]=-i,l[2]=m*i-S,l[6]=p+c*i,l[10]=f*r}else if(e.order==="ZXY"){const c=r*o,m=r*d,S=u*o,p=u*d;l[0]=c-p*i,l[4]=-f*d,l[8]=S+m*i,l[1]=m+S*i,l[5]=f*o,l[9]=p-c*i,l[2]=-f*u,l[6]=i,l[10]=f*r}else if(e.order==="ZYX"){const c=f*o,m=f*d,S=i*o,p=i*d;l[0]=r*o,l[4]=S*u-m,l[8]=c*u+p,l[1]=r*d,l[5]=p*u+c,l[9]=m*u-S,l[2]=-u,l[6]=i*r,l[10]=f*r}else if(e.order==="YZX"){const c=f*r,m=f*u,S=i*r,p=i*u;l[0]=r*o,l[4]=p-c*d,l[8]=S*d+m,l[1]=d,l[5]=f*o,l[9]=-i*o,l[2]=-u*o,l[6]=m*d+S,l[10]=c-p*d}else if(e.order==="XZY"){const c=f*r,m=f*u,S=i*r,p=i*u;l[0]=r*o,l[4]=-d,l[8]=u*o,l[1]=c*d+p,l[5]=f*o,l[9]=m*d-S,l[2]=S*d-m,l[6]=i*o,l[10]=p*d+c}return l[3]=0,l[7]=0,l[11]=0,l[12]=0,l[13]=0,l[14]=0,l[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Sa,e,ga)}lookAt(e,l,a){const n=this.elements;return De.subVectors(e,l),De.lengthSq()===0&&(De.z=1),De.normalize(),v7.crossVectors(a,De),v7.lengthSq()===0&&(Math.abs(a.z)===1?De.x+=1e-4:De.z+=1e-4,De.normalize(),v7.crossVectors(a,De)),v7.normalize(),k6.crossVectors(De,v7),n[0]=v7.x,n[4]=k6.x,n[8]=De.x,n[1]=v7.y,n[5]=k6.y,n[9]=De.y,n[2]=v7.z,n[6]=k6.z,n[10]=De.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,l){const a=e.elements,n=l.elements,t=this.elements,f=a[0],i=a[4],r=a[8],u=a[12],o=a[1],d=a[5],c=a[9],m=a[13],S=a[2],p=a[6],h=a[10],_=a[14],M=a[3],g=a[7],v=a[11],T=a[15],E=n[0],D=n[4],b=n[8],y=n[12],w=n[1],z=n[5],J=n[9],F=n[13],C=n[2],B=n[6],Y=n[10],$=n[14],K=n[3],X=n[7],Z=n[11],r1=n[15];return t[0]=f*E+i*w+r*C+u*K,t[4]=f*D+i*z+r*B+u*X,t[8]=f*b+i*J+r*Y+u*Z,t[12]=f*y+i*F+r*$+u*r1,t[1]=o*E+d*w+c*C+m*K,t[5]=o*D+d*z+c*B+m*X,t[9]=o*b+d*J+c*Y+m*Z,t[13]=o*y+d*F+c*$+m*r1,t[2]=S*E+p*w+h*C+_*K,t[6]=S*D+p*z+h*B+_*X,t[10]=S*b+p*J+h*Y+_*Z,t[14]=S*y+p*F+h*$+_*r1,t[3]=M*E+g*w+v*C+T*K,t[7]=M*D+g*z+v*B+T*X,t[11]=M*b+g*J+v*Y+T*Z,t[15]=M*y+g*F+v*$+T*r1,this}multiplyScalar(e){const l=this.elements;return l[0]*=e,l[4]*=e,l[8]*=e,l[12]*=e,l[1]*=e,l[5]*=e,l[9]*=e,l[13]*=e,l[2]*=e,l[6]*=e,l[10]*=e,l[14]*=e,l[3]*=e,l[7]*=e,l[11]*=e,l[15]*=e,this}determinant(){const e=this.elements,l=e[0],a=e[4],n=e[8],t=e[12],f=e[1],i=e[5],r=e[9],u=e[13],o=e[2],d=e[6],c=e[10],m=e[14],S=e[3],p=e[7],h=e[11],_=e[15];return S*(+t*r*d-n*u*d-t*i*c+a*u*c+n*i*m-a*r*m)+p*(+l*r*m-l*u*c+t*f*c-n*f*m+n*u*o-t*r*o)+h*(+l*u*d-l*i*m-t*f*d+a*f*m+t*i*o-a*u*o)+_*(-n*i*o-l*r*d+l*i*c+n*f*d-a*f*c+a*r*o)}transpose(){const e=this.elements;let l;return l=e[1],e[1]=e[4],e[4]=l,l=e[2],e[2]=e[8],e[8]=l,l=e[6],e[6]=e[9],e[9]=l,l=e[3],e[3]=e[12],e[12]=l,l=e[7],e[7]=e[13],e[13]=l,l=e[11],e[11]=e[14],e[14]=l,this}setPosition(e,l,a){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=l,n[14]=a),this}invert(){const e=this.elements,l=e[0],a=e[1],n=e[2],t=e[3],f=e[4],i=e[5],r=e[6],u=e[7],o=e[8],d=e[9],c=e[10],m=e[11],S=e[12],p=e[13],h=e[14],_=e[15],M=d*h*u-p*c*u+p*r*m-i*h*m-d*r*_+i*c*_,g=S*c*u-o*h*u-S*r*m+f*h*m+o*r*_-f*c*_,v=o*p*u-S*d*u+S*i*m-f*p*m-o*i*_+f*d*_,T=S*d*r-o*p*r-S*i*c+f*p*c+o*i*h-f*d*h,E=l*M+a*g+n*v+t*T;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/E;return e[0]=M*D,e[1]=(p*c*t-d*h*t-p*n*m+a*h*m+d*n*_-a*c*_)*D,e[2]=(i*h*t-p*r*t+p*n*u-a*h*u-i*n*_+a*r*_)*D,e[3]=(d*r*t-i*c*t-d*n*u+a*c*u+i*n*m-a*r*m)*D,e[4]=g*D,e[5]=(o*h*t-S*c*t+S*n*m-l*h*m-o*n*_+l*c*_)*D,e[6]=(S*r*t-f*h*t-S*n*u+l*h*u+f*n*_-l*r*_)*D,e[7]=(f*c*t-o*r*t+o*n*u-l*c*u-f*n*m+l*r*m)*D,e[8]=v*D,e[9]=(S*d*t-o*p*t-S*a*m+l*p*m+o*a*_-l*d*_)*D,e[10]=(f*p*t-S*i*t+S*a*u-l*p*u-f*a*_+l*i*_)*D,e[11]=(o*i*t-f*d*t-o*a*u+l*d*u+f*a*m-l*i*m)*D,e[12]=T*D,e[13]=(o*p*n-S*d*n+S*a*c-l*p*c-o*a*h+l*d*h)*D,e[14]=(S*i*n-f*p*n-S*a*r+l*p*r+f*a*h-l*i*h)*D,e[15]=(f*d*n-o*i*n+o*a*r-l*d*r-f*a*c+l*i*c)*D,this}scale(e){const l=this.elements,a=e.x,n=e.y,t=e.z;return l[0]*=a,l[4]*=n,l[8]*=t,l[1]*=a,l[5]*=n,l[9]*=t,l[2]*=a,l[6]*=n,l[10]*=t,l[3]*=a,l[7]*=n,l[11]*=t,this}getMaxScaleOnAxis(){const e=this.elements,l=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],a=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(l,a,n))}makeTranslation(e,l,a){return this.set(1,0,0,e,0,1,0,l,0,0,1,a,0,0,0,1),this}makeRotationX(e){const l=Math.cos(e),a=Math.sin(e);return this.set(1,0,0,0,0,l,-a,0,0,a,l,0,0,0,0,1),this}makeRotationY(e){const l=Math.cos(e),a=Math.sin(e);return this.set(l,0,a,0,0,1,0,0,-a,0,l,0,0,0,0,1),this}makeRotationZ(e){const l=Math.cos(e),a=Math.sin(e);return this.set(l,-a,0,0,a,l,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,l){const a=Math.cos(l),n=Math.sin(l),t=1-a,f=e.x,i=e.y,r=e.z,u=t*f,o=t*i;return this.set(u*f+a,u*i-n*r,u*r+n*i,0,u*i+n*r,o*i+a,o*r-n*f,0,u*r-n*i,o*r+n*f,t*r*r+a,0,0,0,0,1),this}makeScale(e,l,a){return this.set(e,0,0,0,0,l,0,0,0,0,a,0,0,0,0,1),this}makeShear(e,l,a,n,t,f){return this.set(1,a,t,0,e,1,f,0,l,n,1,0,0,0,0,1),this}compose(e,l,a){const n=this.elements,t=l._x,f=l._y,i=l._z,r=l._w,u=t+t,o=f+f,d=i+i,c=t*u,m=t*o,S=t*d,p=f*o,h=f*d,_=i*d,M=r*u,g=r*o,v=r*d,T=a.x,E=a.y,D=a.z;return n[0]=(1-(p+_))*T,n[1]=(m+v)*T,n[2]=(S-g)*T,n[3]=0,n[4]=(m-v)*E,n[5]=(1-(c+_))*E,n[6]=(h+M)*E,n[7]=0,n[8]=(S+g)*D,n[9]=(h-M)*D,n[10]=(1-(c+p))*D,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,l,a){const n=this.elements;let t=Q7.set(n[0],n[1],n[2]).length();const f=Q7.set(n[4],n[5],n[6]).length(),i=Q7.set(n[8],n[9],n[10]).length();this.determinant()<0&&(t=-t),e.x=n[12],e.y=n[13],e.z=n[14],Je.copy(this);const u=1/t,o=1/f,d=1/i;return Je.elements[0]*=u,Je.elements[1]*=u,Je.elements[2]*=u,Je.elements[4]*=o,Je.elements[5]*=o,Je.elements[6]*=o,Je.elements[8]*=d,Je.elements[9]*=d,Je.elements[10]*=d,l.setFromRotationMatrix(Je),a.x=t,a.y=f,a.z=i,this}makePerspective(e,l,a,n,t,f){const i=this.elements,r=2*t/(l-e),u=2*t/(a-n),o=(l+e)/(l-e),d=(a+n)/(a-n),c=-(f+t)/(f-t),m=-2*f*t/(f-t);return i[0]=r,i[4]=0,i[8]=o,i[12]=0,i[1]=0,i[5]=u,i[9]=d,i[13]=0,i[2]=0,i[6]=0,i[10]=c,i[14]=m,i[3]=0,i[7]=0,i[11]=-1,i[15]=0,this}makeOrthographic(e,l,a,n,t,f){const i=this.elements,r=1/(l-e),u=1/(a-n),o=1/(f-t),d=(l+e)*r,c=(a+n)*u,m=(f+t)*o;return i[0]=2*r,i[4]=0,i[8]=0,i[12]=-d,i[1]=0,i[5]=2*u,i[9]=0,i[13]=-c,i[2]=0,i[6]=0,i[10]=-2*o,i[14]=-m,i[3]=0,i[7]=0,i[11]=0,i[15]=1,this}equals(e){const l=this.elements,a=e.elements;for(let n=0;n<16;n++)if(l[n]!==a[n])return!1;return!0}fromArray(e,l=0){for(let a=0;a<16;a++)this.elements[a]=e[a+l];return this}toArray(e=[],l=0){const a=this.elements;return e[l]=a[0],e[l+1]=a[1],e[l+2]=a[2],e[l+3]=a[3],e[l+4]=a[4],e[l+5]=a[5],e[l+6]=a[6],e[l+7]=a[7],e[l+8]=a[8],e[l+9]=a[9],e[l+10]=a[10],e[l+11]=a[11],e[l+12]=a[12],e[l+13]=a[13],e[l+14]=a[14],e[l+15]=a[15],e}}const Q7=new I,Je=new k1,Sa=new I(0,0,0),ga=new I(1,1,1),v7=new I,k6=new I,De=new I,h3=new k1,p3=new F6;class ol{constructor(e=0,l=0,a=0,n=ol.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=l,this._z=a,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,l,a,n=this._order){return this._x=e,this._y=l,this._z=a,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,l=this._order,a=!0){const n=e.elements,t=n[0],f=n[4],i=n[8],r=n[1],u=n[5],o=n[9],d=n[2],c=n[6],m=n[10];switch(l){case"XYZ":this._y=Math.asin(Fe(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(-o,m),this._z=Math.atan2(-f,t)):(this._x=Math.atan2(c,u),this._z=0);break;case"YXZ":this._x=Math.asin(-Fe(o,-1,1)),Math.abs(o)<.9999999?(this._y=Math.atan2(i,m),this._z=Math.atan2(r,u)):(this._y=Math.atan2(-d,t),this._z=0);break;case"ZXY":this._x=Math.asin(Fe(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-d,m),this._z=Math.atan2(-f,u)):(this._y=0,this._z=Math.atan2(r,t));break;case"ZYX":this._y=Math.asin(-Fe(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(c,m),this._z=Math.atan2(r,t)):(this._x=0,this._z=Math.atan2(-f,u));break;case"YZX":this._z=Math.asin(Fe(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-o,u),this._y=Math.atan2(-d,t)):(this._x=0,this._y=Math.atan2(i,m));break;case"XZY":this._z=Math.asin(-Fe(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(c,u),this._y=Math.atan2(i,t)):(this._x=Math.atan2(-o,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+l)}return this._order=l,a===!0&&this._onChangeCallback(),this}setFromQuaternion(e,l,a){return h3.makeRotationFromQuaternion(e),this.setFromRotationMatrix(h3,l,a)}setFromVector3(e,l=this._order){return this.set(e.x,e.y,e.z,l)}reorder(e){return p3.setFromEuler(this),this.setFromQuaternion(p3,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],l=0){return e[l]=this._x,e[l+1]=this._y,e[l+2]=this._z,e[l+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ol.DEFAULT_ORDER="XYZ";class m9{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Aa=0;const m3=new I,q7=new F6,c7=new k1,J6=new I,_6=new I,ba=new I,_a=new F6,S3=new I(1,0,0),g3=new I(0,1,0),A3=new I(0,0,1),Ua={type:"added"},b3={type:"removed"};class ye extends m6{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Aa++}),this.uuid=N6(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ye.DEFAULT_UP.clone();const e=new I,l=new ol,a=new F6,n=new I(1,1,1);function t(){a.setFromEuler(l,!1)}function f(){l.setFromQuaternion(a,void 0,!1)}l._onChange(t),a._onChange(f),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:l},quaternion:{configurable:!0,enumerable:!0,value:a},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new k1},normalMatrix:{value:new Me}}),this.matrix=new k1,this.matrixWorld=new k1,this.matrixAutoUpdate=ye.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ye.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new m9,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,l){this.quaternion.setFromAxisAngle(e,l)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,l){return q7.setFromAxisAngle(e,l),this.quaternion.multiply(q7),this}rotateOnWorldAxis(e,l){return q7.setFromAxisAngle(e,l),this.quaternion.premultiply(q7),this}rotateX(e){return this.rotateOnAxis(S3,e)}rotateY(e){return this.rotateOnAxis(g3,e)}rotateZ(e){return this.rotateOnAxis(A3,e)}translateOnAxis(e,l){return m3.copy(e).applyQuaternion(this.quaternion),this.position.add(m3.multiplyScalar(l)),this}translateX(e){return this.translateOnAxis(S3,e)}translateY(e){return this.translateOnAxis(g3,e)}translateZ(e){return this.translateOnAxis(A3,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(c7.copy(this.matrixWorld).invert())}lookAt(e,l,a){e.isVector3?J6.copy(e):J6.set(e,l,a);const n=this.parent;this.updateWorldMatrix(!0,!1),_6.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?c7.lookAt(_6,J6,this.up):c7.lookAt(J6,_6,this.up),this.quaternion.setFromRotationMatrix(c7),n&&(c7.extractRotation(n.matrixWorld),q7.setFromRotationMatrix(c7),this.quaternion.premultiply(q7.invert()))}add(e){if(arguments.length>1){for(let l=0;l<arguments.length;l++)this.add(arguments[l]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Ua)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let a=0;a<arguments.length;a++)this.remove(arguments[a]);return this}const l=this.children.indexOf(e);return l!==-1&&(e.parent=null,this.children.splice(l,1),e.dispatchEvent(b3)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const l=this.children[e];l.parent=null,l.dispatchEvent(b3)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),c7.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),c7.multiply(e.parent.matrixWorld)),e.applyMatrix4(c7),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,l){if(this[e]===l)return this;for(let a=0,n=this.children.length;a<n;a++){const f=this.children[a].getObjectByProperty(e,l);if(f!==void 0)return f}}getObjectsByProperty(e,l){let a=[];this[e]===l&&a.push(this);for(let n=0,t=this.children.length;n<t;n++){const f=this.children[n].getObjectsByProperty(e,l);f.length>0&&(a=a.concat(f))}return a}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_6,e,ba),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_6,_a,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const l=this.matrixWorld.elements;return e.set(l[8],l[9],l[10]).normalize()}raycast(){}traverse(e){e(this);const l=this.children;for(let a=0,n=l.length;a<n;a++)l[a].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const l=this.children;for(let a=0,n=l.length;a<n;a++)l[a].traverseVisible(e)}traverseAncestors(e){const l=this.parent;l!==null&&(e(l),l.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const l=this.children;for(let a=0,n=l.length;a<n;a++){const t=l[a];(t.matrixWorldAutoUpdate===!0||e===!0)&&t.updateMatrixWorld(e)}}updateWorldMatrix(e,l){const a=this.parent;if(e===!0&&a!==null&&a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),l===!0){const n=this.children;for(let t=0,f=n.length;t<f;t++){const i=n[t];i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!1,!0)}}}toJSON(e){const l=e===void 0||typeof e=="string",a={};l&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},a.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON()));function t(i,r){return i[r.uuid]===void 0&&(i[r.uuid]=r.toJSON(e)),r.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=t(e.geometries,this.geometry);const i=this.geometry.parameters;if(i!==void 0&&i.shapes!==void 0){const r=i.shapes;if(Array.isArray(r))for(let u=0,o=r.length;u<o;u++){const d=r[u];t(e.shapes,d)}else t(e.shapes,r)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(t(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const i=[];for(let r=0,u=this.material.length;r<u;r++)i.push(t(e.materials,this.material[r]));n.material=i}else n.material=t(e.materials,this.material);if(this.children.length>0){n.children=[];for(let i=0;i<this.children.length;i++)n.children.push(this.children[i].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let i=0;i<this.animations.length;i++){const r=this.animations[i];n.animations.push(t(e.animations,r))}}if(l){const i=f(e.geometries),r=f(e.materials),u=f(e.textures),o=f(e.images),d=f(e.shapes),c=f(e.skeletons),m=f(e.animations),S=f(e.nodes);i.length>0&&(a.geometries=i),r.length>0&&(a.materials=r),u.length>0&&(a.textures=u),o.length>0&&(a.images=o),d.length>0&&(a.shapes=d),c.length>0&&(a.skeletons=c),m.length>0&&(a.animations=m),S.length>0&&(a.nodes=S)}return a.object=n,a;function f(i){const r=[];for(const u in i){const o=i[u];delete o.metadata,r.push(o)}return r}}clone(e){return new this.constructor().copy(this,e)}copy(e,l=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),l===!0)for(let a=0;a<e.children.length;a++){const n=e.children[a];this.add(n.clone())}return this}}ye.DEFAULT_UP=new I(0,1,0);ye.DEFAULT_MATRIX_AUTO_UPDATE=!0;ye.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ye=new I,h7=new I,Fl=new I,p7=new I,$7=new I,j7=new I,_3=new I,Gl=new I,Bl=new I,Wl=new I;class m7{constructor(e=new I,l=new I,a=new I){this.a=e,this.b=l,this.c=a}static getNormal(e,l,a,n){n.subVectors(a,l),Ye.subVectors(e,l),n.cross(Ye);const t=n.lengthSq();return t>0?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}static getBarycoord(e,l,a,n,t){Ye.subVectors(n,l),h7.subVectors(a,l),Fl.subVectors(e,l);const f=Ye.dot(Ye),i=Ye.dot(h7),r=Ye.dot(Fl),u=h7.dot(h7),o=h7.dot(Fl),d=f*u-i*i;if(d===0)return t.set(-2,-1,-1);const c=1/d,m=(u*r-i*o)*c,S=(f*o-i*r)*c;return t.set(1-m-S,S,m)}static containsPoint(e,l,a,n){return this.getBarycoord(e,l,a,n,p7),p7.x>=0&&p7.y>=0&&p7.x+p7.y<=1}static getUV(e,l,a,n,t,f,i,r){return this.getBarycoord(e,l,a,n,p7),r.set(0,0),r.addScaledVector(t,p7.x),r.addScaledVector(f,p7.y),r.addScaledVector(i,p7.z),r}static isFrontFacing(e,l,a,n){return Ye.subVectors(a,l),h7.subVectors(e,l),Ye.cross(h7).dot(n)<0}set(e,l,a){return this.a.copy(e),this.b.copy(l),this.c.copy(a),this}setFromPointsAndIndices(e,l,a,n){return this.a.copy(e[l]),this.b.copy(e[a]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,l,a,n){return this.a.fromBufferAttribute(e,l),this.b.fromBufferAttribute(e,a),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ye.subVectors(this.c,this.b),h7.subVectors(this.a,this.b),Ye.cross(h7).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return m7.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,l){return m7.getBarycoord(e,this.a,this.b,this.c,l)}getUV(e,l,a,n,t){return m7.getUV(e,this.a,this.b,this.c,l,a,n,t)}containsPoint(e){return m7.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return m7.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,l){const a=this.a,n=this.b,t=this.c;let f,i;$7.subVectors(n,a),j7.subVectors(t,a),Gl.subVectors(e,a);const r=$7.dot(Gl),u=j7.dot(Gl);if(r<=0&&u<=0)return l.copy(a);Bl.subVectors(e,n);const o=$7.dot(Bl),d=j7.dot(Bl);if(o>=0&&d<=o)return l.copy(n);const c=r*d-o*u;if(c<=0&&r>=0&&o<=0)return f=r/(r-o),l.copy(a).addScaledVector($7,f);Wl.subVectors(e,t);const m=$7.dot(Wl),S=j7.dot(Wl);if(S>=0&&m<=S)return l.copy(t);const p=m*u-r*S;if(p<=0&&u>=0&&S<=0)return i=u/(u-S),l.copy(a).addScaledVector(j7,i);const h=o*S-m*d;if(h<=0&&d-o>=0&&m-S>=0)return _3.subVectors(t,n),i=(d-o)/(d-o+(m-S)),l.copy(n).addScaledVector(_3,i);const _=1/(h+p+c);return f=p*_,i=c*_,l.copy(a).addScaledVector($7,f).addScaledVector(j7,i)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let xa=0;class B6 extends m6{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xa++}),this.uuid=N6(),this.name="",this.type="Material",this.blending=f6,this.side=E7,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=n2,this.blendDst=t2,this.blendEquation=s6,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=a9,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ta,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ml,this.stencilZFail=Ml,this.stencilZPass=Ml,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const l in e){const a=e[l];if(a===void 0){console.warn("THREE.Material: '"+l+"' parameter is undefined.");continue}const n=this[l];if(n===void 0){console.warn("THREE."+this.type+": '"+l+"' is not a property of this material.");continue}n&&n.isColor?n.set(a):n&&n.isVector3&&a&&a.isVector3?n.copy(a):this[l]=a}}toJSON(e){const l=e===void 0||typeof e=="string";l&&(e={textures:{},images:{}});const a={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};a.uuid=this.uuid,a.type=this.type,this.name!==""&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),this.roughness!==void 0&&(a.roughness=this.roughness),this.metalness!==void 0&&(a.metalness=this.metalness),this.sheen!==void 0&&(a.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(a.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(a.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(a.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(a.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(a.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(a.shininess=this.shininess),this.clearcoat!==void 0&&(a.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(a.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(a.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(a.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(a.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,a.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(a.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(a.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(a.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(a.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(a.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(a.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(e).uuid,a.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(a.aoMap=this.aoMap.toJSON(e).uuid,a.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(e).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(e).uuid,a.normalMapType=this.normalMapType,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(e).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(a.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(a.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(a.combine=this.combine)),this.envMapIntensity!==void 0&&(a.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(a.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(a.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(a.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(a.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(a.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(a.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(a.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(a.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(a.size=this.size),this.shadowSide!==null&&(a.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==f6&&(a.blending=this.blending),this.side!==E7&&(a.side=this.side),this.vertexColors&&(a.vertexColors=!0),this.opacity<1&&(a.opacity=this.opacity),this.transparent===!0&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.colorWrite=this.colorWrite,a.stencilWrite=this.stencilWrite,a.stencilWriteMask=this.stencilWriteMask,a.stencilFunc=this.stencilFunc,a.stencilRef=this.stencilRef,a.stencilFuncMask=this.stencilFuncMask,a.stencilFail=this.stencilFail,a.stencilZFail=this.stencilZFail,a.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(a.rotation=this.rotation),this.polygonOffset===!0&&(a.polygonOffset=!0),this.polygonOffsetFactor!==0&&(a.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(a.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(a.linewidth=this.linewidth),this.dashSize!==void 0&&(a.dashSize=this.dashSize),this.gapSize!==void 0&&(a.gapSize=this.gapSize),this.scale!==void 0&&(a.scale=this.scale),this.dithering===!0&&(a.dithering=!0),this.alphaTest>0&&(a.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(a.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(a.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(a.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(a.wireframe=this.wireframe),this.wireframeLinewidth>1&&(a.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(a.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(a.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(a.flatShading=this.flatShading),this.visible===!1&&(a.visible=!1),this.toneMapped===!1&&(a.toneMapped=!1),this.fog===!1&&(a.fog=!1),Object.keys(this.userData).length>0&&(a.userData=this.userData);function n(t){const f=[];for(const i in t){const r=t[i];delete r.metadata,f.push(r)}return f}if(l){const t=n(e.textures),f=n(e.images);t.length>0&&(a.textures=t),f.length>0&&(a.images=f)}return a}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const l=e.clippingPlanes;let a=null;if(l!==null){const n=l.length;a=new Array(n);for(let t=0;t!==n;++t)a[t]=l[t].clone()}return this.clippingPlanes=a,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const m2={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Xe={h:0,s:0,l:0},Y6={h:0,s:0,l:0};function Ol(s,e,l){return l<0&&(l+=1),l>1&&(l-=1),l<1/6?s+(e-s)*6*l:l<1/2?e:l<2/3?s+(e-s)*6*(2/3-l):s}class O1{constructor(e,l,a){return this.isColor=!0,this.r=1,this.g=1,this.b=1,l===void 0&&a===void 0?this.set(e):this.setRGB(e,l,a)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,l=s7){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,_e.toWorkingColorSpace(this,l),this}setRGB(e,l,a,n=_e.workingColorSpace){return this.r=e,this.g=l,this.b=a,_e.toWorkingColorSpace(this,n),this}setHSL(e,l,a,n=_e.workingColorSpace){if(e=sa(e,1),l=Fe(l,0,1),a=Fe(a,0,1),l===0)this.r=this.g=this.b=a;else{const t=a<=.5?a*(1+l):a+l-a*l,f=2*a-t;this.r=Ol(f,t,e+1/3),this.g=Ol(f,t,e),this.b=Ol(f,t,e-1/3)}return _e.toWorkingColorSpace(this,n),this}setStyle(e,l=s7){function a(t){t!==void 0&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let t;const f=n[1],i=n[2];switch(f){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,_e.toWorkingColorSpace(this,l),a(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,_e.toWorkingColorSpace(this,l),a(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const r=parseFloat(t[1])/360,u=parseFloat(t[2])/100,o=parseFloat(t[3])/100;return a(t[4]),this.setHSL(r,u,o,l)}break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const t=n[1],f=t.length;if(f===3)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,_e.toWorkingColorSpace(this,l),this;if(f===6)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,_e.toWorkingColorSpace(this,l),this;console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,l);return this}setColorName(e,l=s7){const a=m2[e.toLowerCase()];return a!==void 0?this.setHex(a,l):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=r6(e.r),this.g=r6(e.g),this.b=r6(e.b),this}copyLinearToSRGB(e){return this.r=El(e.r),this.g=El(e.g),this.b=El(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=s7){return _e.fromWorkingColorSpace(he.copy(this),e),Fe(he.r*255,0,255)<<16^Fe(he.g*255,0,255)<<8^Fe(he.b*255,0,255)<<0}getHexString(e=s7){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,l=_e.workingColorSpace){_e.fromWorkingColorSpace(he.copy(this),l);const a=he.r,n=he.g,t=he.b,f=Math.max(a,n,t),i=Math.min(a,n,t);let r,u;const o=(i+f)/2;if(i===f)r=0,u=0;else{const d=f-i;switch(u=o<=.5?d/(f+i):d/(2-f-i),f){case a:r=(n-t)/d+(n<t?6:0);break;case n:r=(t-a)/d+2;break;case t:r=(a-n)/d+4;break}r/=6}return e.h=r,e.s=u,e.l=o,e}getRGB(e,l=_e.workingColorSpace){return _e.fromWorkingColorSpace(he.copy(this),l),e.r=he.r,e.g=he.g,e.b=he.b,e}getStyle(e=s7){_e.fromWorkingColorSpace(he.copy(this),e);const l=he.r,a=he.g,n=he.b;return e!==s7?`color(${e} ${l.toFixed(3)} ${a.toFixed(3)} ${n.toFixed(3)})`:`rgb(${l*255|0},${a*255|0},${n*255|0})`}offsetHSL(e,l,a){return this.getHSL(Xe),Xe.h+=e,Xe.s+=l,Xe.l+=a,this.setHSL(Xe.h,Xe.s,Xe.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,l){return this.r=e.r+l.r,this.g=e.g+l.g,this.b=e.b+l.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,l){return this.r+=(e.r-this.r)*l,this.g+=(e.g-this.g)*l,this.b+=(e.b-this.b)*l,this}lerpColors(e,l,a){return this.r=e.r+(l.r-e.r)*a,this.g=e.g+(l.g-e.g)*a,this.b=e.b+(l.b-e.b)*a,this}lerpHSL(e,l){this.getHSL(Xe),e.getHSL(Y6);const a=yl(Xe.h,Y6.h,l),n=yl(Xe.s,Y6.s,l),t=yl(Xe.l,Y6.l,l);return this.setHSL(a,n,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,l=0){return this.r=e[l],this.g=e[l+1],this.b=e[l+2],this}toArray(e=[],l=0){return e[l]=this.r,e[l+1]=this.g,e[l+2]=this.b,e}fromBufferAttribute(e,l){return this.r=e.getX(l),this.g=e.getY(l),this.b=e.getZ(l),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const he=new O1;O1.NAMES=m2;class S2 extends B6{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new O1(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=s2,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const q1=new I,X6=new F1;class u7{constructor(e,l,a=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=l,this.count=e!==void 0?e.length/l:0,this.normalized=a,this.usage=u3,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,l,a){e*=this.itemSize,a*=l.itemSize;for(let n=0,t=this.itemSize;n<t;n++)this.array[e+n]=l.array[a+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let l=0,a=this.count;l<a;l++)X6.fromBufferAttribute(this,l),X6.applyMatrix3(e),this.setXY(l,X6.x,X6.y);else if(this.itemSize===3)for(let l=0,a=this.count;l<a;l++)q1.fromBufferAttribute(this,l),q1.applyMatrix3(e),this.setXYZ(l,q1.x,q1.y,q1.z);return this}applyMatrix4(e){for(let l=0,a=this.count;l<a;l++)q1.fromBufferAttribute(this,l),q1.applyMatrix4(e),this.setXYZ(l,q1.x,q1.y,q1.z);return this}applyNormalMatrix(e){for(let l=0,a=this.count;l<a;l++)q1.fromBufferAttribute(this,l),q1.applyNormalMatrix(e),this.setXYZ(l,q1.x,q1.y,q1.z);return this}transformDirection(e){for(let l=0,a=this.count;l<a;l++)q1.fromBufferAttribute(this,l),q1.transformDirection(e),this.setXYZ(l,q1.x,q1.y,q1.z);return this}set(e,l=0){return this.array.set(e,l),this}getX(e){let l=this.array[e*this.itemSize];return this.normalized&&(l=O6(l,this.array)),l}setX(e,l){return this.normalized&&(l=we(l,this.array)),this.array[e*this.itemSize]=l,this}getY(e){let l=this.array[e*this.itemSize+1];return this.normalized&&(l=O6(l,this.array)),l}setY(e,l){return this.normalized&&(l=we(l,this.array)),this.array[e*this.itemSize+1]=l,this}getZ(e){let l=this.array[e*this.itemSize+2];return this.normalized&&(l=O6(l,this.array)),l}setZ(e,l){return this.normalized&&(l=we(l,this.array)),this.array[e*this.itemSize+2]=l,this}getW(e){let l=this.array[e*this.itemSize+3];return this.normalized&&(l=O6(l,this.array)),l}setW(e,l){return this.normalized&&(l=we(l,this.array)),this.array[e*this.itemSize+3]=l,this}setXY(e,l,a){return e*=this.itemSize,this.normalized&&(l=we(l,this.array),a=we(a,this.array)),this.array[e+0]=l,this.array[e+1]=a,this}setXYZ(e,l,a,n){return e*=this.itemSize,this.normalized&&(l=we(l,this.array),a=we(a,this.array),n=we(n,this.array)),this.array[e+0]=l,this.array[e+1]=a,this.array[e+2]=n,this}setXYZW(e,l,a,n,t){return e*=this.itemSize,this.normalized&&(l=we(l,this.array),a=we(a,this.array),n=we(n,this.array),t=we(t,this.array)),this.array[e+0]=l,this.array[e+1]=a,this.array[e+2]=n,this.array[e+3]=t,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==u3&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class g2 extends u7{constructor(e,l,a){super(new Uint16Array(e),l,a)}}class A2 extends u7{constructor(e,l,a){super(new Uint32Array(e),l,a)}}class Oe extends u7{constructor(e,l,a){super(new Float32Array(e),l,a)}}let Ma=0;const Ve=new k1,zl=new ye,e6=new I,Pe=new G6,U6=new G6,re=new I;class _7 extends m6{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ma++}),this.uuid=N6(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(o2(e)?A2:g2)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,l){return this.attributes[e]=l,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,l,a=0){this.groups.push({start:e,count:l,materialIndex:a})}clearGroups(){this.groups=[]}setDrawRange(e,l){this.drawRange.start=e,this.drawRange.count=l}applyMatrix4(e){const l=this.attributes.position;l!==void 0&&(l.applyMatrix4(e),l.needsUpdate=!0);const a=this.attributes.normal;if(a!==void 0){const t=new Me().getNormalMatrix(e);a.applyNormalMatrix(t),a.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ve.makeRotationFromQuaternion(e),this.applyMatrix4(Ve),this}rotateX(e){return Ve.makeRotationX(e),this.applyMatrix4(Ve),this}rotateY(e){return Ve.makeRotationY(e),this.applyMatrix4(Ve),this}rotateZ(e){return Ve.makeRotationZ(e),this.applyMatrix4(Ve),this}translate(e,l,a){return Ve.makeTranslation(e,l,a),this.applyMatrix4(Ve),this}scale(e,l,a){return Ve.makeScale(e,l,a),this.applyMatrix4(Ve),this}lookAt(e){return zl.lookAt(e),zl.updateMatrix(),this.applyMatrix4(zl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(e6).negate(),this.translate(e6.x,e6.y,e6.z),this}setFromPoints(e){const l=[];for(let a=0,n=e.length;a<n;a++){const t=e[a];l.push(t.x,t.y,t.z||0)}return this.setAttribute("position",new Oe(l,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new G6);const e=this.attributes.position,l=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),l)for(let a=0,n=l.length;a<n;a++){const t=l[a];Pe.setFromBufferAttribute(t),this.morphTargetsRelative?(re.addVectors(this.boundingBox.min,Pe.min),this.boundingBox.expandByPoint(re),re.addVectors(this.boundingBox.max,Pe.max),this.boundingBox.expandByPoint(re)):(this.boundingBox.expandByPoint(Pe.min),this.boundingBox.expandByPoint(Pe.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new p9);const e=this.attributes.position,l=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new I,1/0);return}if(e){const a=this.boundingSphere.center;if(Pe.setFromBufferAttribute(e),l)for(let t=0,f=l.length;t<f;t++){const i=l[t];U6.setFromBufferAttribute(i),this.morphTargetsRelative?(re.addVectors(Pe.min,U6.min),Pe.expandByPoint(re),re.addVectors(Pe.max,U6.max),Pe.expandByPoint(re)):(Pe.expandByPoint(U6.min),Pe.expandByPoint(U6.max))}Pe.getCenter(a);let n=0;for(let t=0,f=e.count;t<f;t++)re.fromBufferAttribute(e,t),n=Math.max(n,a.distanceToSquared(re));if(l)for(let t=0,f=l.length;t<f;t++){const i=l[t],r=this.morphTargetsRelative;for(let u=0,o=i.count;u<o;u++)re.fromBufferAttribute(i,u),r&&(e6.fromBufferAttribute(e,u),re.add(e6)),n=Math.max(n,a.distanceToSquared(re))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,l=this.attributes;if(e===null||l.position===void 0||l.normal===void 0||l.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const a=e.array,n=l.position.array,t=l.normal.array,f=l.uv.array,i=n.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new u7(new Float32Array(4*i),4));const r=this.getAttribute("tangent").array,u=[],o=[];for(let w=0;w<i;w++)u[w]=new I,o[w]=new I;const d=new I,c=new I,m=new I,S=new F1,p=new F1,h=new F1,_=new I,M=new I;function g(w,z,J){d.fromArray(n,w*3),c.fromArray(n,z*3),m.fromArray(n,J*3),S.fromArray(f,w*2),p.fromArray(f,z*2),h.fromArray(f,J*2),c.sub(d),m.sub(d),p.sub(S),h.sub(S);const F=1/(p.x*h.y-h.x*p.y);isFinite(F)&&(_.copy(c).multiplyScalar(h.y).addScaledVector(m,-p.y).multiplyScalar(F),M.copy(m).multiplyScalar(p.x).addScaledVector(c,-h.x).multiplyScalar(F),u[w].add(_),u[z].add(_),u[J].add(_),o[w].add(M),o[z].add(M),o[J].add(M))}let v=this.groups;v.length===0&&(v=[{start:0,count:a.length}]);for(let w=0,z=v.length;w<z;++w){const J=v[w],F=J.start,C=J.count;for(let B=F,Y=F+C;B<Y;B+=3)g(a[B+0],a[B+1],a[B+2])}const T=new I,E=new I,D=new I,b=new I;function y(w){D.fromArray(t,w*3),b.copy(D);const z=u[w];T.copy(z),T.sub(D.multiplyScalar(D.dot(z))).normalize(),E.crossVectors(b,z);const F=E.dot(o[w])<0?-1:1;r[w*4]=T.x,r[w*4+1]=T.y,r[w*4+2]=T.z,r[w*4+3]=F}for(let w=0,z=v.length;w<z;++w){const J=v[w],F=J.start,C=J.count;for(let B=F,Y=F+C;B<Y;B+=3)y(a[B+0]),y(a[B+1]),y(a[B+2])}}computeVertexNormals(){const e=this.index,l=this.getAttribute("position");if(l!==void 0){let a=this.getAttribute("normal");if(a===void 0)a=new u7(new Float32Array(l.count*3),3),this.setAttribute("normal",a);else for(let c=0,m=a.count;c<m;c++)a.setXYZ(c,0,0,0);const n=new I,t=new I,f=new I,i=new I,r=new I,u=new I,o=new I,d=new I;if(e)for(let c=0,m=e.count;c<m;c+=3){const S=e.getX(c+0),p=e.getX(c+1),h=e.getX(c+2);n.fromBufferAttribute(l,S),t.fromBufferAttribute(l,p),f.fromBufferAttribute(l,h),o.subVectors(f,t),d.subVectors(n,t),o.cross(d),i.fromBufferAttribute(a,S),r.fromBufferAttribute(a,p),u.fromBufferAttribute(a,h),i.add(o),r.add(o),u.add(o),a.setXYZ(S,i.x,i.y,i.z),a.setXYZ(p,r.x,r.y,r.z),a.setXYZ(h,u.x,u.y,u.z)}else for(let c=0,m=l.count;c<m;c+=3)n.fromBufferAttribute(l,c+0),t.fromBufferAttribute(l,c+1),f.fromBufferAttribute(l,c+2),o.subVectors(f,t),d.subVectors(n,t),o.cross(d),a.setXYZ(c+0,o.x,o.y,o.z),a.setXYZ(c+1,o.x,o.y,o.z),a.setXYZ(c+2,o.x,o.y,o.z);this.normalizeNormals(),a.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let l=0,a=e.count;l<a;l++)re.fromBufferAttribute(e,l),re.normalize(),e.setXYZ(l,re.x,re.y,re.z)}toNonIndexed(){function e(i,r){const u=i.array,o=i.itemSize,d=i.normalized,c=new u.constructor(r.length*o);let m=0,S=0;for(let p=0,h=r.length;p<h;p++){i.isInterleavedBufferAttribute?m=r[p]*i.data.stride+i.offset:m=r[p]*o;for(let _=0;_<o;_++)c[S++]=u[m++]}return new u7(c,o,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const l=new _7,a=this.index.array,n=this.attributes;for(const i in n){const r=n[i],u=e(r,a);l.setAttribute(i,u)}const t=this.morphAttributes;for(const i in t){const r=[],u=t[i];for(let o=0,d=u.length;o<d;o++){const c=u[o],m=e(c,a);r.push(m)}l.morphAttributes[i]=r}l.morphTargetsRelative=this.morphTargetsRelative;const f=this.groups;for(let i=0,r=f.length;i<r;i++){const u=f[i];l.addGroup(u.start,u.count,u.materialIndex)}return l}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const r=this.parameters;for(const u in r)r[u]!==void 0&&(e[u]=r[u]);return e}e.data={attributes:{}};const l=this.index;l!==null&&(e.data.index={type:l.array.constructor.name,array:Array.prototype.slice.call(l.array)});const a=this.attributes;for(const r in a){const u=a[r];e.data.attributes[r]=u.toJSON(e.data)}const n={};let t=!1;for(const r in this.morphAttributes){const u=this.morphAttributes[r],o=[];for(let d=0,c=u.length;d<c;d++){const m=u[d];o.push(m.toJSON(e.data))}o.length>0&&(n[r]=o,t=!0)}t&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const f=this.groups;f.length>0&&(e.data.groups=JSON.parse(JSON.stringify(f)));const i=this.boundingSphere;return i!==null&&(e.data.boundingSphere={center:i.center.toArray(),radius:i.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const l={};this.name=e.name;const a=e.index;a!==null&&this.setIndex(a.clone(l));const n=e.attributes;for(const u in n){const o=n[u];this.setAttribute(u,o.clone(l))}const t=e.morphAttributes;for(const u in t){const o=[],d=t[u];for(let c=0,m=d.length;c<m;c++)o.push(d[c].clone(l));this.morphAttributes[u]=o}this.morphTargetsRelative=e.morphTargetsRelative;const f=e.groups;for(let u=0,o=f.length;u<o;u++){const d=f[u];this.addGroup(d.start,d.count,d.materialIndex)}const i=e.boundingBox;i!==null&&(this.boundingBox=i.clone());const r=e.boundingSphere;return r!==null&&(this.boundingSphere=r.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const U3=new k1,t7=new p2,Z6=new p9,x3=new I,x6=new I,M6=new I,v6=new I,Hl=new I,Q6=new I,q6=new F1,$6=new F1,j6=new F1,Vl=new I,el=new I;class f7 extends ye{constructor(e=new _7,l=new S2){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=l,this.updateMorphTargets()}copy(e,l){return super.copy(e,l),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const l=this.geometry.morphAttributes,a=Object.keys(l);if(a.length>0){const n=l[a[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,f=n.length;t<f;t++){const i=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}getVertexPosition(e,l){const a=this.geometry,n=a.attributes.position,t=a.morphAttributes.position,f=a.morphTargetsRelative;l.fromBufferAttribute(n,e);const i=this.morphTargetInfluences;if(t&&i){Q6.set(0,0,0);for(let r=0,u=t.length;r<u;r++){const o=i[r],d=t[r];o!==0&&(Hl.fromBufferAttribute(d,e),f?Q6.addScaledVector(Hl,o):Q6.addScaledVector(Hl.sub(l),o))}l.add(Q6)}return this.isSkinnedMesh&&this.boneTransform(e,l),l}raycast(e,l){const a=this.geometry,n=this.material,t=this.matrixWorld;if(n===void 0||(a.boundingSphere===null&&a.computeBoundingSphere(),Z6.copy(a.boundingSphere),Z6.applyMatrix4(t),t7.copy(e.ray).recast(e.near),Z6.containsPoint(t7.origin)===!1&&(t7.intersectSphere(Z6,x3)===null||t7.origin.distanceToSquared(x3)>(e.far-e.near)**2))||(U3.copy(t).invert(),t7.copy(e.ray).applyMatrix4(U3),a.boundingBox!==null&&t7.intersectsBox(a.boundingBox)===!1))return;let f;const i=a.index,r=a.attributes.position,u=a.attributes.uv,o=a.attributes.uv2,d=a.groups,c=a.drawRange;if(i!==null)if(Array.isArray(n))for(let m=0,S=d.length;m<S;m++){const p=d[m],h=n[p.materialIndex],_=Math.max(p.start,c.start),M=Math.min(i.count,Math.min(p.start+p.count,c.start+c.count));for(let g=_,v=M;g<v;g+=3){const T=i.getX(g),E=i.getX(g+1),D=i.getX(g+2);f=ll(this,h,e,t7,u,o,T,E,D),f&&(f.faceIndex=Math.floor(g/3),f.face.materialIndex=p.materialIndex,l.push(f))}}else{const m=Math.max(0,c.start),S=Math.min(i.count,c.start+c.count);for(let p=m,h=S;p<h;p+=3){const _=i.getX(p),M=i.getX(p+1),g=i.getX(p+2);f=ll(this,n,e,t7,u,o,_,M,g),f&&(f.faceIndex=Math.floor(p/3),l.push(f))}}else if(r!==void 0)if(Array.isArray(n))for(let m=0,S=d.length;m<S;m++){const p=d[m],h=n[p.materialIndex],_=Math.max(p.start,c.start),M=Math.min(r.count,Math.min(p.start+p.count,c.start+c.count));for(let g=_,v=M;g<v;g+=3){const T=g,E=g+1,D=g+2;f=ll(this,h,e,t7,u,o,T,E,D),f&&(f.faceIndex=Math.floor(g/3),f.face.materialIndex=p.materialIndex,l.push(f))}}else{const m=Math.max(0,c.start),S=Math.min(r.count,c.start+c.count);for(let p=m,h=S;p<h;p+=3){const _=p,M=p+1,g=p+2;f=ll(this,n,e,t7,u,o,_,M,g),f&&(f.faceIndex=Math.floor(p/3),l.push(f))}}}}function va(s,e,l,a,n,t,f,i){let r;if(e.side===Be?r=a.intersectTriangle(f,t,n,!0,i):r=a.intersectTriangle(n,t,f,e.side===E7,i),r===null)return null;el.copy(i),el.applyMatrix4(s.matrixWorld);const u=l.ray.origin.distanceTo(el);return u<l.near||u>l.far?null:{distance:u,point:el.clone(),object:s}}function ll(s,e,l,a,n,t,f,i,r){s.getVertexPosition(f,x6),s.getVertexPosition(i,M6),s.getVertexPosition(r,v6);const u=va(s,e,l,a,x6,M6,v6,Vl);if(u){n&&(q6.fromBufferAttribute(n,f),$6.fromBufferAttribute(n,i),j6.fromBufferAttribute(n,r),u.uv=m7.getUV(Vl,x6,M6,v6,q6,$6,j6,new F1)),t&&(q6.fromBufferAttribute(t,f),$6.fromBufferAttribute(t,i),j6.fromBufferAttribute(t,r),u.uv2=m7.getUV(Vl,x6,M6,v6,q6,$6,j6,new F1));const o={a:f,b:i,c:r,normal:new I,materialIndex:0};m7.getNormal(x6,M6,v6,o.normal),u.face=o}return u}class W6 extends _7{constructor(e=1,l=1,a=1,n=1,t=1,f=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:l,depth:a,widthSegments:n,heightSegments:t,depthSegments:f};const i=this;n=Math.floor(n),t=Math.floor(t),f=Math.floor(f);const r=[],u=[],o=[],d=[];let c=0,m=0;S("z","y","x",-1,-1,a,l,e,f,t,0),S("z","y","x",1,-1,a,l,-e,f,t,1),S("x","z","y",1,1,e,a,l,n,f,2),S("x","z","y",1,-1,e,a,-l,n,f,3),S("x","y","z",1,-1,e,l,a,n,t,4),S("x","y","z",-1,-1,e,l,-a,n,t,5),this.setIndex(r),this.setAttribute("position",new Oe(u,3)),this.setAttribute("normal",new Oe(o,3)),this.setAttribute("uv",new Oe(d,2));function S(p,h,_,M,g,v,T,E,D,b,y){const w=v/D,z=T/b,J=v/2,F=T/2,C=E/2,B=D+1,Y=b+1;let $=0,K=0;const X=new I;for(let Z=0;Z<Y;Z++){const r1=Z*z-F;for(let G=0;G<B;G++){const Q=G*w-J;X[p]=Q*M,X[h]=r1*g,X[_]=C,u.push(X.x,X.y,X.z),X[p]=0,X[h]=0,X[_]=E>0?1:-1,o.push(X.x,X.y,X.z),d.push(G/D),d.push(1-Z/b),$+=1}}for(let Z=0;Z<b;Z++)for(let r1=0;r1<D;r1++){const G=c+r1+B*Z,Q=c+r1+B*(Z+1),n1=c+(r1+1)+B*(Z+1),R=c+(r1+1)+B*Z;r.push(G,Q,R),r.push(Q,n1,R),K+=6}i.addGroup(m,K,y),m+=K,c+=$}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new W6(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function h6(s){const e={};for(const l in s){e[l]={};for(const a in s[l]){const n=s[l][a];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?e[l][a]=n.clone():Array.isArray(n)?e[l][a]=n.slice():e[l][a]=n}}return e}function Ue(s){const e={};for(let l=0;l<s.length;l++){const a=h6(s[l]);for(const n in a)e[n]=a[n]}return e}function ya(s){const e=[];for(let l=0;l<s.length;l++)e.push(s[l].clone());return e}function b2(s){return s.getRenderTarget()===null&&s.outputEncoding===V1?s7:P6}const Ta={clone:h6,merge:Ue};var La=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ea=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class K7 extends B6{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=La,this.fragmentShader=Ea,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=h6(e.uniforms),this.uniformsGroups=ya(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const l=super.toJSON(e);l.glslVersion=this.glslVersion,l.uniforms={};for(const n in this.uniforms){const f=this.uniforms[n].value;f&&f.isTexture?l.uniforms[n]={type:"t",value:f.toJSON(e).uuid}:f&&f.isColor?l.uniforms[n]={type:"c",value:f.getHex()}:f&&f.isVector2?l.uniforms[n]={type:"v2",value:f.toArray()}:f&&f.isVector3?l.uniforms[n]={type:"v3",value:f.toArray()}:f&&f.isVector4?l.uniforms[n]={type:"v4",value:f.toArray()}:f&&f.isMatrix3?l.uniforms[n]={type:"m3",value:f.toArray()}:f&&f.isMatrix4?l.uniforms[n]={type:"m4",value:f.toArray()}:l.uniforms[n]={value:f}}Object.keys(this.defines).length>0&&(l.defines=this.defines),l.vertexShader=this.vertexShader,l.fragmentShader=this.fragmentShader;const a={};for(const n in this.extensions)this.extensions[n]===!0&&(a[n]=!0);return Object.keys(a).length>0&&(l.extensions=a),l}}class _2 extends ye{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new k1,this.projectionMatrix=new k1,this.projectionMatrixInverse=new k1}copy(e,l){return super.copy(e,l),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const l=this.matrixWorld.elements;return e.set(-l[8],-l[9],-l[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,l){super.updateWorldMatrix(e,l),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}let Ge=class extends _2{constructor(e=50,l=1,a=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=a,this.far=n,this.focus=10,this.aspect=l,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,l){return super.copy(e,l),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const l=.5*this.getFilmHeight()/e;this.fov=o3*2*Math.atan(l),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(vl*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return o3*2*Math.atan(Math.tan(vl*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,l,a,n,t,f){this.aspect=e/l,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=l,this.view.offsetX=a,this.view.offsetY=n,this.view.width=t,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let l=e*Math.tan(vl*.5*this.fov)/this.zoom,a=2*l,n=this.aspect*a,t=-.5*n;const f=this.view;if(this.view!==null&&this.view.enabled){const r=f.fullWidth,u=f.fullHeight;t+=f.offsetX*n/r,l-=f.offsetY*a/u,n*=f.width/r,a*=f.height/u}const i=this.filmOffset;i!==0&&(t+=e*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(t,t+n,l,l-a,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const l=super.toJSON(e);return l.object.fov=this.fov,l.object.zoom=this.zoom,l.object.near=this.near,l.object.far=this.far,l.object.focus=this.focus,l.object.aspect=this.aspect,this.view!==null&&(l.object.view=Object.assign({},this.view)),l.object.filmGauge=this.filmGauge,l.object.filmOffset=this.filmOffset,l}};const l6=-90,a6=1;class Ra extends ye{constructor(e,l,a){super(),this.type="CubeCamera",this.renderTarget=a;const n=new Ge(l6,a6,e,l);n.layers=this.layers,n.up.set(0,1,0),n.lookAt(1,0,0),this.add(n);const t=new Ge(l6,a6,e,l);t.layers=this.layers,t.up.set(0,1,0),t.lookAt(-1,0,0),this.add(t);const f=new Ge(l6,a6,e,l);f.layers=this.layers,f.up.set(0,0,-1),f.lookAt(0,1,0),this.add(f);const i=new Ge(l6,a6,e,l);i.layers=this.layers,i.up.set(0,0,1),i.lookAt(0,-1,0),this.add(i);const r=new Ge(l6,a6,e,l);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(0,0,1),this.add(r);const u=new Ge(l6,a6,e,l);u.layers=this.layers,u.up.set(0,1,0),u.lookAt(0,0,-1),this.add(u)}update(e,l){this.parent===null&&this.updateMatrixWorld();const a=this.renderTarget,[n,t,f,i,r,u]=this.children,o=e.getRenderTarget(),d=e.toneMapping,c=e.xr.enabled;e.toneMapping=g7,e.xr.enabled=!1;const m=a.texture.generateMipmaps;a.texture.generateMipmaps=!1,e.setRenderTarget(a,0),e.render(l,n),e.setRenderTarget(a,1),e.render(l,t),e.setRenderTarget(a,2),e.render(l,f),e.setRenderTarget(a,3),e.render(l,i),e.setRenderTarget(a,4),e.render(l,r),a.texture.generateMipmaps=m,e.setRenderTarget(a,5),e.render(l,u),e.setRenderTarget(o),e.toneMapping=d,e.xr.enabled=c,a.texture.needsPMREMUpdate=!0}}class U2 extends We{constructor(e,l,a,n,t,f,i,r,u,o){e=e!==void 0?e:[],l=l!==void 0?l:o6,super(e,l,a,n,t,f,i,r,u,o),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Ca extends V7{constructor(e=1,l={}){super(e,e,l),this.isWebGLCubeRenderTarget=!0;const a={width:e,height:e,depth:1},n=[a,a,a,a,a,a];this.texture=new U2(n,l.mapping,l.wrapS,l.wrapT,l.magFilter,l.minFilter,l.format,l.type,l.anisotropy,l.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=l.generateMipmaps!==void 0?l.generateMipmaps:!1,this.texture.minFilter=l.minFilter!==void 0?l.minFilter:Ke}fromEquirectangularTexture(e,l){this.texture.type=l.type,this.texture.encoding=l.encoding,this.texture.generateMipmaps=l.generateMipmaps,this.texture.minFilter=l.minFilter,this.texture.magFilter=l.magFilter;const a={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new W6(5,5,5),t=new K7({name:"CubemapFromEquirect",uniforms:h6(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,side:Be,blending:L7});t.uniforms.tEquirect.value=l;const f=new f7(n,t),i=l.minFilter;return l.minFilter===w6&&(l.minFilter=Ke),new Ra(1,10,this).update(e,f),l.minFilter=i,f.geometry.dispose(),f.material.dispose(),this}clear(e,l,a,n){const t=e.getRenderTarget();for(let f=0;f<6;f++)e.setRenderTarget(this,f),e.clear(l,a,n);e.setRenderTarget(t)}}const Kl=new I,wa=new I,Da=new Me;class N7{constructor(e=new I(1,0,0),l=0){this.isPlane=!0,this.normal=e,this.constant=l}set(e,l){return this.normal.copy(e),this.constant=l,this}setComponents(e,l,a,n){return this.normal.set(e,l,a),this.constant=n,this}setFromNormalAndCoplanarPoint(e,l){return this.normal.copy(e),this.constant=-l.dot(this.normal),this}setFromCoplanarPoints(e,l,a){const n=Kl.subVectors(a,l).cross(wa.subVectors(e,l)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,l){return l.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,l){const a=e.delta(Kl),n=this.normal.dot(a);if(n===0)return this.distanceToPoint(e.start)===0?l.copy(e.start):null;const t=-(e.start.dot(this.normal)+this.constant)/n;return t<0||t>1?null:l.copy(e.start).addScaledVector(a,t)}intersectsLine(e){const l=this.distanceToPoint(e.start),a=this.distanceToPoint(e.end);return l<0&&a>0||a<0&&l>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,l){const a=l||Da.getNormalMatrix(e),n=this.coplanarPoint(Kl).applyMatrix4(e),t=this.normal.applyMatrix3(a).normalize();return this.constant=-n.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const n6=new p9,al=new I;class S9{constructor(e=new N7,l=new N7,a=new N7,n=new N7,t=new N7,f=new N7){this.planes=[e,l,a,n,t,f]}set(e,l,a,n,t,f){const i=this.planes;return i[0].copy(e),i[1].copy(l),i[2].copy(a),i[3].copy(n),i[4].copy(t),i[5].copy(f),this}copy(e){const l=this.planes;for(let a=0;a<6;a++)l[a].copy(e.planes[a]);return this}setFromProjectionMatrix(e){const l=this.planes,a=e.elements,n=a[0],t=a[1],f=a[2],i=a[3],r=a[4],u=a[5],o=a[6],d=a[7],c=a[8],m=a[9],S=a[10],p=a[11],h=a[12],_=a[13],M=a[14],g=a[15];return l[0].setComponents(i-n,d-r,p-c,g-h).normalize(),l[1].setComponents(i+n,d+r,p+c,g+h).normalize(),l[2].setComponents(i+t,d+u,p+m,g+_).normalize(),l[3].setComponents(i-t,d-u,p-m,g-_).normalize(),l[4].setComponents(i-f,d-o,p-S,g-M).normalize(),l[5].setComponents(i+f,d+o,p+S,g+M).normalize(),this}intersectsObject(e){const l=e.geometry;return l.boundingSphere===null&&l.computeBoundingSphere(),n6.copy(l.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(n6)}intersectsSprite(e){return n6.center.set(0,0,0),n6.radius=.7071067811865476,n6.applyMatrix4(e.matrixWorld),this.intersectsSphere(n6)}intersectsSphere(e){const l=this.planes,a=e.center,n=-e.radius;for(let t=0;t<6;t++)if(l[t].distanceToPoint(a)<n)return!1;return!0}intersectsBox(e){const l=this.planes;for(let a=0;a<6;a++){const n=l[a];if(al.x=n.normal.x>0?e.max.x:e.min.x,al.y=n.normal.y>0?e.max.y:e.min.y,al.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(al)<0)return!1}return!0}containsPoint(e){const l=this.planes;for(let a=0;a<6;a++)if(l[a].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function x2(){let s=null,e=!1,l=null,a=null;function n(t,f){l(t,f),a=s.requestAnimationFrame(n)}return{start:function(){e!==!0&&l!==null&&(a=s.requestAnimationFrame(n),e=!0)},stop:function(){s.cancelAnimationFrame(a),e=!1},setAnimationLoop:function(t){l=t},setContext:function(t){s=t}}}function Pa(s,e){const l=e.isWebGL2,a=new WeakMap;function n(u,o){const d=u.array,c=u.usage,m=s.createBuffer();s.bindBuffer(o,m),s.bufferData(o,d,c),u.onUploadCallback();let S;if(d instanceof Float32Array)S=5126;else if(d instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(l)S=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else S=5123;else if(d instanceof Int16Array)S=5122;else if(d instanceof Uint32Array)S=5125;else if(d instanceof Int32Array)S=5124;else if(d instanceof Int8Array)S=5120;else if(d instanceof Uint8Array)S=5121;else if(d instanceof Uint8ClampedArray)S=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:m,type:S,bytesPerElement:d.BYTES_PER_ELEMENT,version:u.version}}function t(u,o,d){const c=o.array,m=o.updateRange;s.bindBuffer(d,u),m.count===-1?s.bufferSubData(d,0,c):(l?s.bufferSubData(d,m.offset*c.BYTES_PER_ELEMENT,c,m.offset,m.count):s.bufferSubData(d,m.offset*c.BYTES_PER_ELEMENT,c.subarray(m.offset,m.offset+m.count)),m.count=-1),o.onUploadCallback()}function f(u){return u.isInterleavedBufferAttribute&&(u=u.data),a.get(u)}function i(u){u.isInterleavedBufferAttribute&&(u=u.data);const o=a.get(u);o&&(s.deleteBuffer(o.buffer),a.delete(u))}function r(u,o){if(u.isGLBufferAttribute){const c=a.get(u);(!c||c.version<u.version)&&a.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const d=a.get(u);d===void 0?a.set(u,n(u,o)):d.version<u.version&&(t(d.buffer,u,o),d.version=u.version)}return{get:f,remove:i,update:r}}class g9 extends _7{constructor(e=1,l=1,a=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:l,widthSegments:a,heightSegments:n};const t=e/2,f=l/2,i=Math.floor(a),r=Math.floor(n),u=i+1,o=r+1,d=e/i,c=l/r,m=[],S=[],p=[],h=[];for(let _=0;_<o;_++){const M=_*c-f;for(let g=0;g<u;g++){const v=g*d-t;S.push(v,-M,0),p.push(0,0,1),h.push(g/i),h.push(1-_/r)}}for(let _=0;_<r;_++)for(let M=0;M<i;M++){const g=M+u*_,v=M+u*(_+1),T=M+1+u*(_+1),E=M+1+u*_;m.push(g,v,E),m.push(v,T,E)}this.setIndex(m),this.setAttribute("position",new Oe(S,3)),this.setAttribute("normal",new Oe(p,3)),this.setAttribute("uv",new Oe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new g9(e.width,e.height,e.widthSegments,e.heightSegments)}}var Ia=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Na=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Fa=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Ga=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Ba=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Wa=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Oa="vec3 transformed = vec3( position );",za=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Ha=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Va=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Ka=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ka=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Ja=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Ya=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Xa=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Za=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Qa=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,qa=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,$a=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,ja=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,en=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ln=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,an=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,nn=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,tn=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,sn=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,fn="gl_FragColor = linearToOutputTexel( gl_FragColor );",un=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,rn=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,on=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,dn=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,cn=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,hn=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,pn=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,mn=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Sn=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,gn=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,An=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,bn=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,_n=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Un=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,xn=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Mn=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,vn=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,yn=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Tn=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Ln=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,En=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Rn=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Cn=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,wn=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Dn=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Pn=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,In=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Nn=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Fn=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Gn=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Bn=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Wn=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,On=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,zn=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Hn=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Vn=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Kn=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,kn=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Jn=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Yn=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Xn=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Zn=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Qn=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,qn=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,$n=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,jn=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,et=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,lt=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,at=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,nt=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,tt=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,st=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,it=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,ft=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,ut=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,rt=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ot=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,dt=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,ct=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,ht=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,pt=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,mt=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,St=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,gt=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,At=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,bt=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,_t=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Ut=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,xt=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Mt=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,vt=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,yt=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		
		vec2 lodFudge = pow( 1.95, lod ) / fullSize;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec2 fullSize = vec2( textureSize( sampler, 0 ) );
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Tt=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Lt=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Et=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Rt=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Ct=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,wt=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Dt=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Pt=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,It=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Nt=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ft=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Gt=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Bt=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Wt=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Ot=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,zt=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Ht=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Vt=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Kt=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,kt=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Jt=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Yt=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Xt=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zt=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Qt=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qt=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,$t=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jt=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,e0=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,l0=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,a0=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,n0=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,t0=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,s0=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,i0=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,f0=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,u0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,r0=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,o0=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,d0=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,c0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,v1={alphamap_fragment:Ia,alphamap_pars_fragment:Na,alphatest_fragment:Fa,alphatest_pars_fragment:Ga,aomap_fragment:Ba,aomap_pars_fragment:Wa,begin_vertex:Oa,beginnormal_vertex:za,bsdfs:Ha,iridescence_fragment:Va,bumpmap_pars_fragment:Ka,clipping_planes_fragment:ka,clipping_planes_pars_fragment:Ja,clipping_planes_pars_vertex:Ya,clipping_planes_vertex:Xa,color_fragment:Za,color_pars_fragment:Qa,color_pars_vertex:qa,color_vertex:$a,common:ja,cube_uv_reflection_fragment:en,defaultnormal_vertex:ln,displacementmap_pars_vertex:an,displacementmap_vertex:nn,emissivemap_fragment:tn,emissivemap_pars_fragment:sn,encodings_fragment:fn,encodings_pars_fragment:un,envmap_fragment:rn,envmap_common_pars_fragment:on,envmap_pars_fragment:dn,envmap_pars_vertex:cn,envmap_physical_pars_fragment:vn,envmap_vertex:hn,fog_vertex:pn,fog_pars_vertex:mn,fog_fragment:Sn,fog_pars_fragment:gn,gradientmap_pars_fragment:An,lightmap_fragment:bn,lightmap_pars_fragment:_n,lights_lambert_fragment:Un,lights_lambert_pars_fragment:xn,lights_pars_begin:Mn,lights_toon_fragment:yn,lights_toon_pars_fragment:Tn,lights_phong_fragment:Ln,lights_phong_pars_fragment:En,lights_physical_fragment:Rn,lights_physical_pars_fragment:Cn,lights_fragment_begin:wn,lights_fragment_maps:Dn,lights_fragment_end:Pn,logdepthbuf_fragment:In,logdepthbuf_pars_fragment:Nn,logdepthbuf_pars_vertex:Fn,logdepthbuf_vertex:Gn,map_fragment:Bn,map_pars_fragment:Wn,map_particle_fragment:On,map_particle_pars_fragment:zn,metalnessmap_fragment:Hn,metalnessmap_pars_fragment:Vn,morphcolor_vertex:Kn,morphnormal_vertex:kn,morphtarget_pars_vertex:Jn,morphtarget_vertex:Yn,normal_fragment_begin:Xn,normal_fragment_maps:Zn,normal_pars_fragment:Qn,normal_pars_vertex:qn,normal_vertex:$n,normalmap_pars_fragment:jn,clearcoat_normal_fragment_begin:et,clearcoat_normal_fragment_maps:lt,clearcoat_pars_fragment:at,iridescence_pars_fragment:nt,output_fragment:tt,packing:st,premultiplied_alpha_fragment:it,project_vertex:ft,dithering_fragment:ut,dithering_pars_fragment:rt,roughnessmap_fragment:ot,roughnessmap_pars_fragment:dt,shadowmap_pars_fragment:ct,shadowmap_pars_vertex:ht,shadowmap_vertex:pt,shadowmask_pars_fragment:mt,skinbase_vertex:St,skinning_pars_vertex:gt,skinning_vertex:At,skinnormal_vertex:bt,specularmap_fragment:_t,specularmap_pars_fragment:Ut,tonemapping_fragment:xt,tonemapping_pars_fragment:Mt,transmission_fragment:vt,transmission_pars_fragment:yt,uv_pars_fragment:Tt,uv_pars_vertex:Lt,uv_vertex:Et,uv2_pars_fragment:Rt,uv2_pars_vertex:Ct,uv2_vertex:wt,worldpos_vertex:Dt,background_vert:Pt,background_frag:It,backgroundCube_vert:Nt,backgroundCube_frag:Ft,cube_vert:Gt,cube_frag:Bt,depth_vert:Wt,depth_frag:Ot,distanceRGBA_vert:zt,distanceRGBA_frag:Ht,equirect_vert:Vt,equirect_frag:Kt,linedashed_vert:kt,linedashed_frag:Jt,meshbasic_vert:Yt,meshbasic_frag:Xt,meshlambert_vert:Zt,meshlambert_frag:Qt,meshmatcap_vert:qt,meshmatcap_frag:$t,meshnormal_vert:jt,meshnormal_frag:e0,meshphong_vert:l0,meshphong_frag:a0,meshphysical_vert:n0,meshphysical_frag:t0,meshtoon_vert:s0,meshtoon_frag:i0,points_vert:f0,points_frag:u0,shadow_vert:r0,shadow_frag:o0,sprite_vert:d0,sprite_frag:c0},a1={common:{diffuse:{value:new O1(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Me},uv2Transform:{value:new Me},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new F1(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new O1(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new O1(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Me}},sprite:{diffuse:{value:new O1(16777215)},opacity:{value:1},center:{value:new F1(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Me}}},i7={basic:{uniforms:Ue([a1.common,a1.specularmap,a1.envmap,a1.aomap,a1.lightmap,a1.fog]),vertexShader:v1.meshbasic_vert,fragmentShader:v1.meshbasic_frag},lambert:{uniforms:Ue([a1.common,a1.specularmap,a1.envmap,a1.aomap,a1.lightmap,a1.emissivemap,a1.bumpmap,a1.normalmap,a1.displacementmap,a1.fog,a1.lights,{emissive:{value:new O1(0)}}]),vertexShader:v1.meshlambert_vert,fragmentShader:v1.meshlambert_frag},phong:{uniforms:Ue([a1.common,a1.specularmap,a1.envmap,a1.aomap,a1.lightmap,a1.emissivemap,a1.bumpmap,a1.normalmap,a1.displacementmap,a1.fog,a1.lights,{emissive:{value:new O1(0)},specular:{value:new O1(1118481)},shininess:{value:30}}]),vertexShader:v1.meshphong_vert,fragmentShader:v1.meshphong_frag},standard:{uniforms:Ue([a1.common,a1.envmap,a1.aomap,a1.lightmap,a1.emissivemap,a1.bumpmap,a1.normalmap,a1.displacementmap,a1.roughnessmap,a1.metalnessmap,a1.fog,a1.lights,{emissive:{value:new O1(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:v1.meshphysical_vert,fragmentShader:v1.meshphysical_frag},toon:{uniforms:Ue([a1.common,a1.aomap,a1.lightmap,a1.emissivemap,a1.bumpmap,a1.normalmap,a1.displacementmap,a1.gradientmap,a1.fog,a1.lights,{emissive:{value:new O1(0)}}]),vertexShader:v1.meshtoon_vert,fragmentShader:v1.meshtoon_frag},matcap:{uniforms:Ue([a1.common,a1.bumpmap,a1.normalmap,a1.displacementmap,a1.fog,{matcap:{value:null}}]),vertexShader:v1.meshmatcap_vert,fragmentShader:v1.meshmatcap_frag},points:{uniforms:Ue([a1.points,a1.fog]),vertexShader:v1.points_vert,fragmentShader:v1.points_frag},dashed:{uniforms:Ue([a1.common,a1.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:v1.linedashed_vert,fragmentShader:v1.linedashed_frag},depth:{uniforms:Ue([a1.common,a1.displacementmap]),vertexShader:v1.depth_vert,fragmentShader:v1.depth_frag},normal:{uniforms:Ue([a1.common,a1.bumpmap,a1.normalmap,a1.displacementmap,{opacity:{value:1}}]),vertexShader:v1.meshnormal_vert,fragmentShader:v1.meshnormal_frag},sprite:{uniforms:Ue([a1.sprite,a1.fog]),vertexShader:v1.sprite_vert,fragmentShader:v1.sprite_frag},background:{uniforms:{uvTransform:{value:new Me},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:v1.background_vert,fragmentShader:v1.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:v1.backgroundCube_vert,fragmentShader:v1.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:v1.cube_vert,fragmentShader:v1.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:v1.equirect_vert,fragmentShader:v1.equirect_frag},distanceRGBA:{uniforms:Ue([a1.common,a1.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:v1.distanceRGBA_vert,fragmentShader:v1.distanceRGBA_frag},shadow:{uniforms:Ue([a1.lights,a1.fog,{color:{value:new O1(0)},opacity:{value:1}}]),vertexShader:v1.shadow_vert,fragmentShader:v1.shadow_frag}};i7.physical={uniforms:Ue([i7.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new F1(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new O1(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new F1},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new O1(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new O1(1,1,1)},specularColorMap:{value:null}}]),vertexShader:v1.meshphysical_vert,fragmentShader:v1.meshphysical_frag};const nl={r:0,b:0,g:0};function h0(s,e,l,a,n,t,f){const i=new O1(0);let r=t===!0?0:1,u,o,d=null,c=0,m=null;function S(h,_){let M=!1,g=_.isScene===!0?_.background:null;g&&g.isTexture&&(g=(_.backgroundBlurriness>0?l:e).get(g));const v=s.xr,T=v.getSession&&v.getSession();T&&T.environmentBlendMode==="additive"&&(g=null),g===null?p(i,r):g&&g.isColor&&(p(g,1),M=!0),(s.autoClear||M)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),g&&(g.isCubeTexture||g.mapping===rl)?(o===void 0&&(o=new f7(new W6(1,1,1),new K7({name:"BackgroundCubeMaterial",uniforms:h6(i7.backgroundCube.uniforms),vertexShader:i7.backgroundCube.vertexShader,fragmentShader:i7.backgroundCube.fragmentShader,side:Be,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(E,D,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(o)),o.material.uniforms.envMap.value=g,o.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g.isRenderTargetTexture===!1?-1:1,o.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,o.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,o.material.toneMapped=g.encoding!==V1,(d!==g||c!==g.version||m!==s.toneMapping)&&(o.material.needsUpdate=!0,d=g,c=g.version,m=s.toneMapping),o.layers.enableAll(),h.unshift(o,o.geometry,o.material,0,0,null)):g&&g.isTexture&&(u===void 0&&(u=new f7(new g9(2,2),new K7({name:"BackgroundMaterial",uniforms:h6(i7.background.uniforms),vertexShader:i7.background.vertexShader,fragmentShader:i7.background.fragmentShader,side:E7,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(u)),u.material.uniforms.t2D.value=g,u.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,u.material.toneMapped=g.encoding!==V1,g.matrixAutoUpdate===!0&&g.updateMatrix(),u.material.uniforms.uvTransform.value.copy(g.matrix),(d!==g||c!==g.version||m!==s.toneMapping)&&(u.material.needsUpdate=!0,d=g,c=g.version,m=s.toneMapping),u.layers.enableAll(),h.unshift(u,u.geometry,u.material,0,0,null))}function p(h,_){h.getRGB(nl,b2(s)),a.buffers.color.setClear(nl.r,nl.g,nl.b,_,f)}return{getClearColor:function(){return i},setClearColor:function(h,_=1){i.set(h),r=_,p(i,r)},getClearAlpha:function(){return r},setClearAlpha:function(h){r=h,p(i,r)},render:S}}function p0(s,e,l,a){const n=s.getParameter(34921),t=a.isWebGL2?null:e.get("OES_vertex_array_object"),f=a.isWebGL2||t!==null,i={},r=h(null);let u=r,o=!1;function d(C,B,Y,$,K){let X=!1;if(f){const Z=p($,Y,B);u!==Z&&(u=Z,m(u.object)),X=_(C,$,Y,K),X&&M(C,$,Y,K)}else{const Z=B.wireframe===!0;(u.geometry!==$.id||u.program!==Y.id||u.wireframe!==Z)&&(u.geometry=$.id,u.program=Y.id,u.wireframe=Z,X=!0)}K!==null&&l.update(K,34963),(X||o)&&(o=!1,b(C,B,Y,$),K!==null&&s.bindBuffer(34963,l.get(K).buffer))}function c(){return a.isWebGL2?s.createVertexArray():t.createVertexArrayOES()}function m(C){return a.isWebGL2?s.bindVertexArray(C):t.bindVertexArrayOES(C)}function S(C){return a.isWebGL2?s.deleteVertexArray(C):t.deleteVertexArrayOES(C)}function p(C,B,Y){const $=Y.wireframe===!0;let K=i[C.id];K===void 0&&(K={},i[C.id]=K);let X=K[B.id];X===void 0&&(X={},K[B.id]=X);let Z=X[$];return Z===void 0&&(Z=h(c()),X[$]=Z),Z}function h(C){const B=[],Y=[],$=[];for(let K=0;K<n;K++)B[K]=0,Y[K]=0,$[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:Y,attributeDivisors:$,object:C,attributes:{},index:null}}function _(C,B,Y,$){const K=u.attributes,X=B.attributes;let Z=0;const r1=Y.getAttributes();for(const G in r1)if(r1[G].location>=0){const n1=K[G];let R=X[G];if(R===void 0&&(G==="instanceMatrix"&&C.instanceMatrix&&(R=C.instanceMatrix),G==="instanceColor"&&C.instanceColor&&(R=C.instanceColor)),n1===void 0||n1.attribute!==R||R&&n1.data!==R.data)return!0;Z++}return u.attributesNum!==Z||u.index!==$}function M(C,B,Y,$){const K={},X=B.attributes;let Z=0;const r1=Y.getAttributes();for(const G in r1)if(r1[G].location>=0){let n1=X[G];n1===void 0&&(G==="instanceMatrix"&&C.instanceMatrix&&(n1=C.instanceMatrix),G==="instanceColor"&&C.instanceColor&&(n1=C.instanceColor));const R={};R.attribute=n1,n1&&n1.data&&(R.data=n1.data),K[G]=R,Z++}u.attributes=K,u.attributesNum=Z,u.index=$}function g(){const C=u.newAttributes;for(let B=0,Y=C.length;B<Y;B++)C[B]=0}function v(C){T(C,0)}function T(C,B){const Y=u.newAttributes,$=u.enabledAttributes,K=u.attributeDivisors;Y[C]=1,$[C]===0&&(s.enableVertexAttribArray(C),$[C]=1),K[C]!==B&&((a.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[a.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](C,B),K[C]=B)}function E(){const C=u.newAttributes,B=u.enabledAttributes;for(let Y=0,$=B.length;Y<$;Y++)B[Y]!==C[Y]&&(s.disableVertexAttribArray(Y),B[Y]=0)}function D(C,B,Y,$,K,X){a.isWebGL2===!0&&(Y===5124||Y===5125)?s.vertexAttribIPointer(C,B,Y,K,X):s.vertexAttribPointer(C,B,Y,$,K,X)}function b(C,B,Y,$){if(a.isWebGL2===!1&&(C.isInstancedMesh||$.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;g();const K=$.attributes,X=Y.getAttributes(),Z=B.defaultAttributeValues;for(const r1 in X){const G=X[r1];if(G.location>=0){let Q=K[r1];if(Q===void 0&&(r1==="instanceMatrix"&&C.instanceMatrix&&(Q=C.instanceMatrix),r1==="instanceColor"&&C.instanceColor&&(Q=C.instanceColor)),Q!==void 0){const n1=Q.normalized,R=Q.itemSize,j=l.get(Q);if(j===void 0)continue;const s1=j.buffer,f1=j.type,o1=j.bytesPerElement;if(Q.isInterleavedBufferAttribute){const p1=Q.data,x1=p1.stride,M1=Q.offset;if(p1.isInstancedInterleavedBuffer){for(let C1=0;C1<G.locationSize;C1++)T(G.location+C1,p1.meshPerAttribute);C.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=p1.meshPerAttribute*p1.count)}else for(let C1=0;C1<G.locationSize;C1++)v(G.location+C1);s.bindBuffer(34962,s1);for(let C1=0;C1<G.locationSize;C1++)D(G.location+C1,R/G.locationSize,f1,n1,x1*o1,(M1+R/G.locationSize*C1)*o1)}else{if(Q.isInstancedBufferAttribute){for(let p1=0;p1<G.locationSize;p1++)T(G.location+p1,Q.meshPerAttribute);C.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let p1=0;p1<G.locationSize;p1++)v(G.location+p1);s.bindBuffer(34962,s1);for(let p1=0;p1<G.locationSize;p1++)D(G.location+p1,R/G.locationSize,f1,n1,R*o1,R/G.locationSize*p1*o1)}}else if(Z!==void 0){const n1=Z[r1];if(n1!==void 0)switch(n1.length){case 2:s.vertexAttrib2fv(G.location,n1);break;case 3:s.vertexAttrib3fv(G.location,n1);break;case 4:s.vertexAttrib4fv(G.location,n1);break;default:s.vertexAttrib1fv(G.location,n1)}}}}E()}function y(){J();for(const C in i){const B=i[C];for(const Y in B){const $=B[Y];for(const K in $)S($[K].object),delete $[K];delete B[Y]}delete i[C]}}function w(C){if(i[C.id]===void 0)return;const B=i[C.id];for(const Y in B){const $=B[Y];for(const K in $)S($[K].object),delete $[K];delete B[Y]}delete i[C.id]}function z(C){for(const B in i){const Y=i[B];if(Y[C.id]===void 0)continue;const $=Y[C.id];for(const K in $)S($[K].object),delete $[K];delete Y[C.id]}}function J(){F(),o=!0,u!==r&&(u=r,m(u.object))}function F(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:d,reset:J,resetDefaultState:F,dispose:y,releaseStatesOfGeometry:w,releaseStatesOfProgram:z,initAttributes:g,enableAttribute:v,disableUnusedAttributes:E}}function m0(s,e,l,a){const n=a.isWebGL2;let t;function f(u){t=u}function i(u,o){s.drawArrays(t,u,o),l.update(o,t,1)}function r(u,o,d){if(d===0)return;let c,m;if(n)c=s,m="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",c===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}c[m](t,u,o,d),l.update(o,t,d)}this.setMode=f,this.render=i,this.renderInstances=r}function S0(s,e,l){let a;function n(){if(a!==void 0)return a;if(e.has("EXT_texture_filter_anisotropic")===!0){const D=e.get("EXT_texture_filter_anisotropic");a=s.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else a=0;return a}function t(D){if(D==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";D="mediump"}return D==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const f=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext;let i=l.precision!==void 0?l.precision:"highp";const r=t(i);r!==i&&(console.warn("THREE.WebGLRenderer:",i,"not supported, using",r,"instead."),i=r);const u=f||e.has("WEBGL_draw_buffers"),o=l.logarithmicDepthBuffer===!0,d=s.getParameter(34930),c=s.getParameter(35660),m=s.getParameter(3379),S=s.getParameter(34076),p=s.getParameter(34921),h=s.getParameter(36347),_=s.getParameter(36348),M=s.getParameter(36349),g=c>0,v=f||e.has("OES_texture_float"),T=g&&v,E=f?s.getParameter(36183):0;return{isWebGL2:f,drawBuffers:u,getMaxAnisotropy:n,getMaxPrecision:t,precision:i,logarithmicDepthBuffer:o,maxTextures:d,maxVertexTextures:c,maxTextureSize:m,maxCubemapSize:S,maxAttributes:p,maxVertexUniforms:h,maxVaryings:_,maxFragmentUniforms:M,vertexTextures:g,floatFragmentTextures:v,floatVertexTextures:T,maxSamples:E}}function g0(s){const e=this;let l=null,a=0,n=!1,t=!1;const f=new N7,i=new Me,r={value:null,needsUpdate:!1};this.uniform=r,this.numPlanes=0,this.numIntersection=0,this.init=function(d,c){const m=d.length!==0||c||a!==0||n;return n=c,a=d.length,m},this.beginShadows=function(){t=!0,o(null)},this.endShadows=function(){t=!1},this.setGlobalState=function(d,c){l=o(d,c,0)},this.setState=function(d,c,m){const S=d.clippingPlanes,p=d.clipIntersection,h=d.clipShadows,_=s.get(d);if(!n||S===null||S.length===0||t&&!h)t?o(null):u();else{const M=t?0:a,g=M*4;let v=_.clippingState||null;r.value=v,v=o(S,c,g,m);for(let T=0;T!==g;++T)v[T]=l[T];_.clippingState=v,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=M}};function u(){r.value!==l&&(r.value=l,r.needsUpdate=a>0),e.numPlanes=a,e.numIntersection=0}function o(d,c,m,S){const p=d!==null?d.length:0;let h=null;if(p!==0){if(h=r.value,S!==!0||h===null){const _=m+p*4,M=c.matrixWorldInverse;i.getNormalMatrix(M),(h===null||h.length<_)&&(h=new Float32Array(_));for(let g=0,v=m;g!==p;++g,v+=4)f.copy(d[g]).applyMatrix4(M,i),f.normal.toArray(h,v),h[v+3]=f.constant}r.value=h,r.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,h}}function A0(s){let e=new WeakMap;function l(f,i){return i===n9?f.mapping=o6:i===t9&&(f.mapping=d6),f}function a(f){if(f&&f.isTexture&&f.isRenderTargetTexture===!1){const i=f.mapping;if(i===n9||i===t9)if(e.has(f)){const r=e.get(f).texture;return l(r,f.mapping)}else{const r=f.image;if(r&&r.height>0){const u=new Ca(r.height/2);return u.fromEquirectangularTexture(s,f),e.set(f,u),f.addEventListener("dispose",n),l(u.texture,f.mapping)}else return null}}return f}function n(f){const i=f.target;i.removeEventListener("dispose",n);const r=e.get(i);r!==void 0&&(e.delete(i),r.dispose())}function t(){e=new WeakMap}return{get:a,dispose:t}}class b0 extends _2{constructor(e=-1,l=1,a=1,n=-1,t=.1,f=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=l,this.top=a,this.bottom=n,this.near=t,this.far=f,this.updateProjectionMatrix()}copy(e,l){return super.copy(e,l),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,l,a,n,t,f){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=l,this.view.offsetX=a,this.view.offsetY=n,this.view.width=t,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),l=(this.top-this.bottom)/(2*this.zoom),a=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let t=a-e,f=a+e,i=n+l,r=n-l;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,o=(this.top-this.bottom)/this.view.fullHeight/this.zoom;t+=u*this.view.offsetX,f=t+u*this.view.width,i-=o*this.view.offsetY,r=i-o*this.view.height}this.projectionMatrix.makeOrthographic(t,f,i,r,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const l=super.toJSON(e);return l.object.zoom=this.zoom,l.object.left=this.left,l.object.right=this.right,l.object.top=this.top,l.object.bottom=this.bottom,l.object.near=this.near,l.object.far=this.far,this.view!==null&&(l.object.view=Object.assign({},this.view)),l}}const i6=4,M3=[.125,.215,.35,.446,.526,.582],G7=20,kl=new b0,v3=new O1;let Jl=null;const F7=(1+Math.sqrt(5))/2,t6=1/F7,y3=[new I(1,1,1),new I(-1,1,1),new I(1,1,-1),new I(-1,1,-1),new I(0,F7,t6),new I(0,F7,-t6),new I(t6,0,F7),new I(-t6,0,F7),new I(F7,t6,0),new I(-F7,t6,0)];class T3{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,l=0,a=.1,n=100){Jl=this._renderer.getRenderTarget(),this._setSize(256);const t=this._allocateTargets();return t.depthBuffer=!0,this._sceneToCubeUV(e,a,n,t),l>0&&this._blur(t,0,0,l),this._applyPMREM(t),this._cleanup(t),t}fromEquirectangular(e,l=null){return this._fromTexture(e,l)}fromCubemap(e,l=null){return this._fromTexture(e,l)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=R3(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=E3(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Jl),e.scissorTest=!1,tl(e,0,0,e.width,e.height)}_fromTexture(e,l){e.mapping===o6||e.mapping===d6?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Jl=this._renderer.getRenderTarget();const a=l||this._allocateTargets();return this._textureToCubeUV(e,a),this._applyPMREM(a),this._cleanup(a),a}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),l=4*this._cubeSize,a={magFilter:Ke,minFilter:Ke,generateMipmaps:!1,type:D6,format:Qe,encoding:H7,depthBuffer:!1},n=L3(e,l,a);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==l){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=L3(e,l,a);const{_lodMax:t}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=_0(t)),this._blurMaterial=U0(t,e,l)}return n}_compileMaterial(e){const l=new f7(this._lodPlanes[0],e);this._renderer.compile(l,kl)}_sceneToCubeUV(e,l,a,n){const i=new Ge(90,1,l,a),r=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],o=this._renderer,d=o.autoClear,c=o.toneMapping;o.getClearColor(v3),o.toneMapping=g7,o.autoClear=!1;const m=new S2({name:"PMREM.Background",side:Be,depthWrite:!1,depthTest:!1}),S=new f7(new W6,m);let p=!1;const h=e.background;h?h.isColor&&(m.color.copy(h),e.background=null,p=!0):(m.color.copy(v3),p=!0);for(let _=0;_<6;_++){const M=_%3;M===0?(i.up.set(0,r[_],0),i.lookAt(u[_],0,0)):M===1?(i.up.set(0,0,r[_]),i.lookAt(0,u[_],0)):(i.up.set(0,r[_],0),i.lookAt(0,0,u[_]));const g=this._cubeSize;tl(n,M*g,_>2?g:0,g,g),o.setRenderTarget(n),p&&o.render(S,i),o.render(e,i)}S.geometry.dispose(),S.material.dispose(),o.toneMapping=c,o.autoClear=d,e.background=h}_textureToCubeUV(e,l){const a=this._renderer,n=e.mapping===o6||e.mapping===d6;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=R3()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=E3());const t=n?this._cubemapMaterial:this._equirectMaterial,f=new f7(this._lodPlanes[0],t),i=t.uniforms;i.envMap.value=e;const r=this._cubeSize;tl(l,0,0,3*r,2*r),a.setRenderTarget(l),a.render(f,kl)}_applyPMREM(e){const l=this._renderer,a=l.autoClear;l.autoClear=!1;for(let n=1;n<this._lodPlanes.length;n++){const t=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]),f=y3[(n-1)%y3.length];this._blur(e,n-1,n,t,f)}l.autoClear=a}_blur(e,l,a,n,t){const f=this._pingPongRenderTarget;this._halfBlur(e,f,l,a,n,"latitudinal",t),this._halfBlur(f,e,a,a,n,"longitudinal",t)}_halfBlur(e,l,a,n,t,f,i){const r=this._renderer,u=this._blurMaterial;f!=="latitudinal"&&f!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const o=3,d=new f7(this._lodPlanes[n],u),c=u.uniforms,m=this._sizeLods[a]-1,S=isFinite(t)?Math.PI/(2*m):2*Math.PI/(2*G7-1),p=t/S,h=isFinite(t)?1+Math.floor(o*p):G7;h>G7&&console.warn(`sigmaRadians, ${t}, is too large and will clip, as it requested ${h} samples when the maximum is set to ${G7}`);const _=[];let M=0;for(let D=0;D<G7;++D){const b=D/p,y=Math.exp(-b*b/2);_.push(y),D===0?M+=y:D<h&&(M+=2*y)}for(let D=0;D<_.length;D++)_[D]=_[D]/M;c.envMap.value=e.texture,c.samples.value=h,c.weights.value=_,c.latitudinal.value=f==="latitudinal",i&&(c.poleAxis.value=i);const{_lodMax:g}=this;c.dTheta.value=S,c.mipInt.value=g-a;const v=this._sizeLods[n],T=3*v*(n>g-i6?n-g+i6:0),E=4*(this._cubeSize-v);tl(l,T,E,3*v,2*v),r.setRenderTarget(l),r.render(d,kl)}}function _0(s){const e=[],l=[],a=[];let n=s;const t=s-i6+1+M3.length;for(let f=0;f<t;f++){const i=Math.pow(2,n);l.push(i);let r=1/i;f>s-i6?r=M3[f-s+i6-1]:f===0&&(r=0),a.push(r);const u=1/(i-2),o=-u,d=1+u,c=[o,o,d,o,d,d,o,o,d,d,o,d],m=6,S=6,p=3,h=2,_=1,M=new Float32Array(p*S*m),g=new Float32Array(h*S*m),v=new Float32Array(_*S*m);for(let E=0;E<m;E++){const D=E%3*2/3-1,b=E>2?0:-1,y=[D,b,0,D+2/3,b,0,D+2/3,b+1,0,D,b,0,D+2/3,b+1,0,D,b+1,0];M.set(y,p*S*E),g.set(c,h*S*E);const w=[E,E,E,E,E,E];v.set(w,_*S*E)}const T=new _7;T.setAttribute("position",new u7(M,p)),T.setAttribute("uv",new u7(g,h)),T.setAttribute("faceIndex",new u7(v,_)),e.push(T),n>i6&&n--}return{lodPlanes:e,sizeLods:l,sigmas:a}}function L3(s,e,l){const a=new V7(s,e,l);return a.texture.mapping=rl,a.texture.name="PMREM.cubeUv",a.scissorTest=!0,a}function tl(s,e,l,a,n){s.viewport.set(e,l,a,n),s.scissor.set(e,l,a,n)}function U0(s,e,l){const a=new Float32Array(G7),n=new I(0,1,0);return new K7({name:"SphericalGaussianBlur",defines:{n:G7,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/l,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:a},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:A9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:L7,depthTest:!1,depthWrite:!1})}function E3(){return new K7({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:A9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:L7,depthTest:!1,depthWrite:!1})}function R3(){return new K7({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:A9(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:L7,depthTest:!1,depthWrite:!1})}function A9(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function x0(s){let e=new WeakMap,l=null;function a(i){if(i&&i.isTexture){const r=i.mapping,u=r===n9||r===t9,o=r===o6||r===d6;if(u||o)if(i.isRenderTargetTexture&&i.needsPMREMUpdate===!0){i.needsPMREMUpdate=!1;let d=e.get(i);return l===null&&(l=new T3(s)),d=u?l.fromEquirectangular(i,d):l.fromCubemap(i,d),e.set(i,d),d.texture}else{if(e.has(i))return e.get(i).texture;{const d=i.image;if(u&&d&&d.height>0||o&&d&&n(d)){l===null&&(l=new T3(s));const c=u?l.fromEquirectangular(i):l.fromCubemap(i);return e.set(i,c),i.addEventListener("dispose",t),c.texture}else return null}}}return i}function n(i){let r=0;const u=6;for(let o=0;o<u;o++)i[o]!==void 0&&r++;return r===u}function t(i){const r=i.target;r.removeEventListener("dispose",t);const u=e.get(r);u!==void 0&&(e.delete(r),u.dispose())}function f(){e=new WeakMap,l!==null&&(l.dispose(),l=null)}return{get:a,dispose:f}}function M0(s){const e={};function l(a){if(e[a]!==void 0)return e[a];let n;switch(a){case"WEBGL_depth_texture":n=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=s.getExtension(a)}return e[a]=n,n}return{has:function(a){return l(a)!==null},init:function(a){a.isWebGL2?l("EXT_color_buffer_float"):(l("WEBGL_depth_texture"),l("OES_texture_float"),l("OES_texture_half_float"),l("OES_texture_half_float_linear"),l("OES_standard_derivatives"),l("OES_element_index_uint"),l("OES_vertex_array_object"),l("ANGLE_instanced_arrays")),l("OES_texture_float_linear"),l("EXT_color_buffer_half_float"),l("WEBGL_multisampled_render_to_texture")},get:function(a){const n=l(a);return n===null&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),n}}}function v0(s,e,l,a){const n={},t=new WeakMap;function f(d){const c=d.target;c.index!==null&&e.remove(c.index);for(const S in c.attributes)e.remove(c.attributes[S]);c.removeEventListener("dispose",f),delete n[c.id];const m=t.get(c);m&&(e.remove(m),t.delete(c)),a.releaseStatesOfGeometry(c),c.isInstancedBufferGeometry===!0&&delete c._maxInstanceCount,l.memory.geometries--}function i(d,c){return n[c.id]===!0||(c.addEventListener("dispose",f),n[c.id]=!0,l.memory.geometries++),c}function r(d){const c=d.attributes;for(const S in c)e.update(c[S],34962);const m=d.morphAttributes;for(const S in m){const p=m[S];for(let h=0,_=p.length;h<_;h++)e.update(p[h],34962)}}function u(d){const c=[],m=d.index,S=d.attributes.position;let p=0;if(m!==null){const M=m.array;p=m.version;for(let g=0,v=M.length;g<v;g+=3){const T=M[g+0],E=M[g+1],D=M[g+2];c.push(T,E,E,D,D,T)}}else{const M=S.array;p=S.version;for(let g=0,v=M.length/3-1;g<v;g+=3){const T=g+0,E=g+1,D=g+2;c.push(T,E,E,D,D,T)}}const h=new(o2(c)?A2:g2)(c,1);h.version=p;const _=t.get(d);_&&e.remove(_),t.set(d,h)}function o(d){const c=t.get(d);if(c){const m=d.index;m!==null&&c.version<m.version&&u(d)}else u(d);return t.get(d)}return{get:i,update:r,getWireframeAttribute:o}}function y0(s,e,l,a){const n=a.isWebGL2;let t;function f(c){t=c}let i,r;function u(c){i=c.type,r=c.bytesPerElement}function o(c,m){s.drawElements(t,m,i,c*r),l.update(m,t,1)}function d(c,m,S){if(S===0)return;let p,h;if(n)p=s,h="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[h](t,m,i,c*r,S),l.update(m,t,S)}this.setMode=f,this.setIndex=u,this.render=o,this.renderInstances=d}function T0(s){const e={geometries:0,textures:0},l={frame:0,calls:0,triangles:0,points:0,lines:0};function a(t,f,i){switch(l.calls++,f){case 4:l.triangles+=i*(t/3);break;case 1:l.lines+=i*(t/2);break;case 3:l.lines+=i*(t-1);break;case 2:l.lines+=i*t;break;case 0:l.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",f);break}}function n(){l.frame++,l.calls=0,l.triangles=0,l.points=0,l.lines=0}return{memory:e,render:l,programs:null,autoReset:!0,reset:n,update:a}}function L0(s,e){return s[0]-e[0]}function E0(s,e){return Math.abs(e[1])-Math.abs(s[1])}function R0(s,e,l){const a={},n=new Float32Array(8),t=new WeakMap,f=new K1,i=[];for(let u=0;u<8;u++)i[u]=[u,0];function r(u,o,d){const c=u.morphTargetInfluences;if(e.isWebGL2===!0){const m=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,S=m!==void 0?m.length:0;let p=t.get(o);if(p===void 0||p.count!==S){let C=function(){J.dispose(),t.delete(o),o.removeEventListener("dispose",C)};p!==void 0&&p.texture.dispose();const M=o.morphAttributes.position!==void 0,g=o.morphAttributes.normal!==void 0,v=o.morphAttributes.color!==void 0,T=o.morphAttributes.position||[],E=o.morphAttributes.normal||[],D=o.morphAttributes.color||[];let b=0;M===!0&&(b=1),g===!0&&(b=2),v===!0&&(b=3);let y=o.attributes.position.count*b,w=1;y>e.maxTextureSize&&(w=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);const z=new Float32Array(y*w*4*S),J=new h2(z,y,w,S);J.type=W7,J.needsUpdate=!0;const F=b*4;for(let B=0;B<S;B++){const Y=T[B],$=E[B],K=D[B],X=y*w*4*B;for(let Z=0;Z<Y.count;Z++){const r1=Z*F;M===!0&&(f.fromBufferAttribute(Y,Z),z[X+r1+0]=f.x,z[X+r1+1]=f.y,z[X+r1+2]=f.z,z[X+r1+3]=0),g===!0&&(f.fromBufferAttribute($,Z),z[X+r1+4]=f.x,z[X+r1+5]=f.y,z[X+r1+6]=f.z,z[X+r1+7]=0),v===!0&&(f.fromBufferAttribute(K,Z),z[X+r1+8]=f.x,z[X+r1+9]=f.y,z[X+r1+10]=f.z,z[X+r1+11]=K.itemSize===4?f.w:1)}}p={count:S,texture:J,size:new F1(y,w)},t.set(o,p),o.addEventListener("dispose",C)}let h=0;for(let M=0;M<c.length;M++)h+=c[M];const _=o.morphTargetsRelative?1:1-h;d.getUniforms().setValue(s,"morphTargetBaseInfluence",_),d.getUniforms().setValue(s,"morphTargetInfluences",c),d.getUniforms().setValue(s,"morphTargetsTexture",p.texture,l),d.getUniforms().setValue(s,"morphTargetsTextureSize",p.size)}else{const m=c===void 0?0:c.length;let S=a[o.id];if(S===void 0||S.length!==m){S=[];for(let g=0;g<m;g++)S[g]=[g,0];a[o.id]=S}for(let g=0;g<m;g++){const v=S[g];v[0]=g,v[1]=c[g]}S.sort(E0);for(let g=0;g<8;g++)g<m&&S[g][1]?(i[g][0]=S[g][0],i[g][1]=S[g][1]):(i[g][0]=Number.MAX_SAFE_INTEGER,i[g][1]=0);i.sort(L0);const p=o.morphAttributes.position,h=o.morphAttributes.normal;let _=0;for(let g=0;g<8;g++){const v=i[g],T=v[0],E=v[1];T!==Number.MAX_SAFE_INTEGER&&E?(p&&o.getAttribute("morphTarget"+g)!==p[T]&&o.setAttribute("morphTarget"+g,p[T]),h&&o.getAttribute("morphNormal"+g)!==h[T]&&o.setAttribute("morphNormal"+g,h[T]),n[g]=E,_+=E):(p&&o.hasAttribute("morphTarget"+g)===!0&&o.deleteAttribute("morphTarget"+g),h&&o.hasAttribute("morphNormal"+g)===!0&&o.deleteAttribute("morphNormal"+g),n[g]=0)}const M=o.morphTargetsRelative?1:1-_;d.getUniforms().setValue(s,"morphTargetBaseInfluence",M),d.getUniforms().setValue(s,"morphTargetInfluences",n)}}return{update:r}}function C0(s,e,l,a){let n=new WeakMap;function t(r){const u=a.render.frame,o=r.geometry,d=e.get(r,o);return n.get(d)!==u&&(e.update(d),n.set(d,u)),r.isInstancedMesh&&(r.hasEventListener("dispose",i)===!1&&r.addEventListener("dispose",i),l.update(r.instanceMatrix,34962),r.instanceColor!==null&&l.update(r.instanceColor,34962)),d}function f(){n=new WeakMap}function i(r){const u=r.target;u.removeEventListener("dispose",i),l.remove(u.instanceMatrix),u.instanceColor!==null&&l.remove(u.instanceColor)}return{update:t,dispose:f}}const M2=new We,v2=new h2,y2=new pa,T2=new U2,C3=[],w3=[],D3=new Float32Array(16),P3=new Float32Array(9),I3=new Float32Array(4);function S6(s,e,l){const a=s[0];if(a<=0||a>0)return s;const n=e*l;let t=C3[n];if(t===void 0&&(t=new Float32Array(n),C3[n]=t),e!==0){a.toArray(t,0);for(let f=1,i=0;f!==e;++f)i+=l,s[f].toArray(t,i)}return t}function ne(s,e){if(s.length!==e.length)return!1;for(let l=0,a=s.length;l<a;l++)if(s[l]!==e[l])return!1;return!0}function te(s,e){for(let l=0,a=e.length;l<a;l++)s[l]=e[l]}function dl(s,e){let l=w3[e];l===void 0&&(l=new Int32Array(e),w3[e]=l);for(let a=0;a!==e;++a)l[a]=s.allocateTextureUnit();return l}function w0(s,e){const l=this.cache;l[0]!==e&&(s.uniform1f(this.addr,e),l[0]=e)}function D0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),l[0]=e.x,l[1]=e.y);else{if(ne(l,e))return;s.uniform2fv(this.addr,e),te(l,e)}}function P0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y||l[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),l[0]=e.x,l[1]=e.y,l[2]=e.z);else if(e.r!==void 0)(l[0]!==e.r||l[1]!==e.g||l[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),l[0]=e.r,l[1]=e.g,l[2]=e.b);else{if(ne(l,e))return;s.uniform3fv(this.addr,e),te(l,e)}}function I0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y||l[2]!==e.z||l[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),l[0]=e.x,l[1]=e.y,l[2]=e.z,l[3]=e.w);else{if(ne(l,e))return;s.uniform4fv(this.addr,e),te(l,e)}}function N0(s,e){const l=this.cache,a=e.elements;if(a===void 0){if(ne(l,e))return;s.uniformMatrix2fv(this.addr,!1,e),te(l,e)}else{if(ne(l,a))return;I3.set(a),s.uniformMatrix2fv(this.addr,!1,I3),te(l,a)}}function F0(s,e){const l=this.cache,a=e.elements;if(a===void 0){if(ne(l,e))return;s.uniformMatrix3fv(this.addr,!1,e),te(l,e)}else{if(ne(l,a))return;P3.set(a),s.uniformMatrix3fv(this.addr,!1,P3),te(l,a)}}function G0(s,e){const l=this.cache,a=e.elements;if(a===void 0){if(ne(l,e))return;s.uniformMatrix4fv(this.addr,!1,e),te(l,e)}else{if(ne(l,a))return;D3.set(a),s.uniformMatrix4fv(this.addr,!1,D3),te(l,a)}}function B0(s,e){const l=this.cache;l[0]!==e&&(s.uniform1i(this.addr,e),l[0]=e)}function W0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),l[0]=e.x,l[1]=e.y);else{if(ne(l,e))return;s.uniform2iv(this.addr,e),te(l,e)}}function O0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y||l[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),l[0]=e.x,l[1]=e.y,l[2]=e.z);else{if(ne(l,e))return;s.uniform3iv(this.addr,e),te(l,e)}}function z0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y||l[2]!==e.z||l[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),l[0]=e.x,l[1]=e.y,l[2]=e.z,l[3]=e.w);else{if(ne(l,e))return;s.uniform4iv(this.addr,e),te(l,e)}}function H0(s,e){const l=this.cache;l[0]!==e&&(s.uniform1ui(this.addr,e),l[0]=e)}function V0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),l[0]=e.x,l[1]=e.y);else{if(ne(l,e))return;s.uniform2uiv(this.addr,e),te(l,e)}}function K0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y||l[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),l[0]=e.x,l[1]=e.y,l[2]=e.z);else{if(ne(l,e))return;s.uniform3uiv(this.addr,e),te(l,e)}}function k0(s,e){const l=this.cache;if(e.x!==void 0)(l[0]!==e.x||l[1]!==e.y||l[2]!==e.z||l[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),l[0]=e.x,l[1]=e.y,l[2]=e.z,l[3]=e.w);else{if(ne(l,e))return;s.uniform4uiv(this.addr,e),te(l,e)}}function J0(s,e,l){const a=this.cache,n=l.allocateTextureUnit();a[0]!==n&&(s.uniform1i(this.addr,n),a[0]=n),l.setTexture2D(e||M2,n)}function Y0(s,e,l){const a=this.cache,n=l.allocateTextureUnit();a[0]!==n&&(s.uniform1i(this.addr,n),a[0]=n),l.setTexture3D(e||y2,n)}function X0(s,e,l){const a=this.cache,n=l.allocateTextureUnit();a[0]!==n&&(s.uniform1i(this.addr,n),a[0]=n),l.setTextureCube(e||T2,n)}function Z0(s,e,l){const a=this.cache,n=l.allocateTextureUnit();a[0]!==n&&(s.uniform1i(this.addr,n),a[0]=n),l.setTexture2DArray(e||v2,n)}function Q0(s){switch(s){case 5126:return w0;case 35664:return D0;case 35665:return P0;case 35666:return I0;case 35674:return N0;case 35675:return F0;case 35676:return G0;case 5124:case 35670:return B0;case 35667:case 35671:return W0;case 35668:case 35672:return O0;case 35669:case 35673:return z0;case 5125:return H0;case 36294:return V0;case 36295:return K0;case 36296:return k0;case 35678:case 36198:case 36298:case 36306:case 35682:return J0;case 35679:case 36299:case 36307:return Y0;case 35680:case 36300:case 36308:case 36293:return X0;case 36289:case 36303:case 36311:case 36292:return Z0}}function q0(s,e){s.uniform1fv(this.addr,e)}function $0(s,e){const l=S6(e,this.size,2);s.uniform2fv(this.addr,l)}function j0(s,e){const l=S6(e,this.size,3);s.uniform3fv(this.addr,l)}function es(s,e){const l=S6(e,this.size,4);s.uniform4fv(this.addr,l)}function ls(s,e){const l=S6(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,l)}function as(s,e){const l=S6(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,l)}function ns(s,e){const l=S6(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,l)}function ts(s,e){s.uniform1iv(this.addr,e)}function ss(s,e){s.uniform2iv(this.addr,e)}function is(s,e){s.uniform3iv(this.addr,e)}function fs(s,e){s.uniform4iv(this.addr,e)}function us(s,e){s.uniform1uiv(this.addr,e)}function rs(s,e){s.uniform2uiv(this.addr,e)}function os(s,e){s.uniform3uiv(this.addr,e)}function ds(s,e){s.uniform4uiv(this.addr,e)}function cs(s,e,l){const a=this.cache,n=e.length,t=dl(l,n);ne(a,t)||(s.uniform1iv(this.addr,t),te(a,t));for(let f=0;f!==n;++f)l.setTexture2D(e[f]||M2,t[f])}function hs(s,e,l){const a=this.cache,n=e.length,t=dl(l,n);ne(a,t)||(s.uniform1iv(this.addr,t),te(a,t));for(let f=0;f!==n;++f)l.setTexture3D(e[f]||y2,t[f])}function ps(s,e,l){const a=this.cache,n=e.length,t=dl(l,n);ne(a,t)||(s.uniform1iv(this.addr,t),te(a,t));for(let f=0;f!==n;++f)l.setTextureCube(e[f]||T2,t[f])}function ms(s,e,l){const a=this.cache,n=e.length,t=dl(l,n);ne(a,t)||(s.uniform1iv(this.addr,t),te(a,t));for(let f=0;f!==n;++f)l.setTexture2DArray(e[f]||v2,t[f])}function Ss(s){switch(s){case 5126:return q0;case 35664:return $0;case 35665:return j0;case 35666:return es;case 35674:return ls;case 35675:return as;case 35676:return ns;case 5124:case 35670:return ts;case 35667:case 35671:return ss;case 35668:case 35672:return is;case 35669:case 35673:return fs;case 5125:return us;case 36294:return rs;case 36295:return os;case 36296:return ds;case 35678:case 36198:case 36298:case 36306:case 35682:return cs;case 35679:case 36299:case 36307:return hs;case 35680:case 36300:case 36308:case 36293:return ps;case 36289:case 36303:case 36311:case 36292:return ms}}class gs{constructor(e,l,a){this.id=e,this.addr=a,this.cache=[],this.setValue=Q0(l.type)}}class As{constructor(e,l,a){this.id=e,this.addr=a,this.cache=[],this.size=l.size,this.setValue=Ss(l.type)}}class bs{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,l,a){const n=this.seq;for(let t=0,f=n.length;t!==f;++t){const i=n[t];i.setValue(e,l[i.id],a)}}}const Yl=/(\w+)(\])?(\[|\.)?/g;function N3(s,e){s.seq.push(e),s.map[e.id]=e}function _s(s,e,l){const a=s.name,n=a.length;for(Yl.lastIndex=0;;){const t=Yl.exec(a),f=Yl.lastIndex;let i=t[1];const r=t[2]==="]",u=t[3];if(r&&(i=i|0),u===void 0||u==="["&&f+2===n){N3(l,u===void 0?new gs(i,s,e):new As(i,s,e));break}else{let d=l.map[i];d===void 0&&(d=new bs(i),N3(l,d)),l=d}}}class sl{constructor(e,l){this.seq=[],this.map={};const a=e.getProgramParameter(l,35718);for(let n=0;n<a;++n){const t=e.getActiveUniform(l,n),f=e.getUniformLocation(l,t.name);_s(t,f,this)}}setValue(e,l,a,n){const t=this.map[l];t!==void 0&&t.setValue(e,a,n)}setOptional(e,l,a){const n=l[a];n!==void 0&&this.setValue(e,a,n)}static upload(e,l,a,n){for(let t=0,f=l.length;t!==f;++t){const i=l[t],r=a[i.id];r.needsUpdate!==!1&&i.setValue(e,r.value,n)}}static seqWithValue(e,l){const a=[];for(let n=0,t=e.length;n!==t;++n){const f=e[n];f.id in l&&a.push(f)}return a}}function F3(s,e,l){const a=s.createShader(e);return s.shaderSource(a,l),s.compileShader(a),a}let Us=0;function xs(s,e){const l=s.split(`
`),a=[],n=Math.max(e-6,0),t=Math.min(e+6,l.length);for(let f=n;f<t;f++){const i=f+1;a.push(`${i===e?">":" "} ${i}: ${l[f]}`)}return a.join(`
`)}function Ms(s){switch(s){case H7:return["Linear","( value )"];case V1:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function G3(s,e,l){const a=s.getShaderParameter(e,35713),n=s.getShaderInfoLog(e).trim();if(a&&n==="")return"";const t=/ERROR: 0:(\d+)/.exec(n);if(t){const f=parseInt(t[1]);return l.toUpperCase()+`

`+n+`

`+xs(s.getShaderSource(e),f)}else return n}function vs(s,e){const l=Ms(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+l[0]+l[1]+"; }"}function ys(s,e){let l;switch(e){case I4:l="Linear";break;case N4:l="Reinhard";break;case F4:l="OptimizedCineon";break;case G4:l="ACESFilmic";break;case B4:l="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),l="Linear"}return"vec3 "+s+"( vec3 color ) { return "+l+"ToneMapping( color ); }"}function Ts(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(L6).join(`
`)}function Ls(s){const e=[];for(const l in s){const a=s[l];a!==!1&&e.push("#define "+l+" "+a)}return e.join(`
`)}function Es(s,e){const l={},a=s.getProgramParameter(e,35721);for(let n=0;n<a;n++){const t=s.getActiveAttrib(e,n),f=t.name;let i=1;t.type===35674&&(i=2),t.type===35675&&(i=3),t.type===35676&&(i=4),l[f]={type:t.type,location:s.getAttribLocation(e,f),locationSize:i}}return l}function L6(s){return s!==""}function B3(s,e){const l=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,l).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function W3(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Rs=/^[ \t]*#include +<([\w\d./]+)>/gm;function u9(s){return s.replace(Rs,Cs)}function Cs(s,e){const l=v1[e];if(l===void 0)throw new Error("Can not resolve #include <"+e+">");return u9(l)}const ws=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function O3(s){return s.replace(ws,Ds)}function Ds(s,e,l,a){let n="";for(let t=parseInt(e);t<parseInt(l);t++)n+=a.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return n}function z3(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Ps(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===a2?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===c4?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===T6&&(e="SHADOWMAP_TYPE_VSM"),e}function Is(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case o6:case d6:e="ENVMAP_TYPE_CUBE";break;case rl:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Ns(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case d6:e="ENVMAP_MODE_REFRACTION";break}return e}function Fs(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case s2:e="ENVMAP_BLENDING_MULTIPLY";break;case D4:e="ENVMAP_BLENDING_MIX";break;case P4:e="ENVMAP_BLENDING_ADD";break}return e}function Gs(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const l=Math.log2(e)-2,a=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,l),7*16)),texelHeight:a,maxMip:l}}function Bs(s,e,l,a){const n=s.getContext(),t=l.defines;let f=l.vertexShader,i=l.fragmentShader;const r=Ps(l),u=Is(l),o=Ns(l),d=Fs(l),c=Gs(l),m=l.isWebGL2?"":Ts(l),S=Ls(t),p=n.createProgram();let h,_,M=l.glslVersion?"#version "+l.glslVersion+`
`:"";l.isRawShaderMaterial?(h=[S].filter(L6).join(`
`),h.length>0&&(h+=`
`),_=[m,S].filter(L6).join(`
`),_.length>0&&(_+=`
`)):(h=[z3(l),"#define SHADER_NAME "+l.shaderName,S,l.instancing?"#define USE_INSTANCING":"",l.instancingColor?"#define USE_INSTANCING_COLOR":"",l.supportsVertexTextures?"#define VERTEX_TEXTURES":"",l.useFog&&l.fog?"#define USE_FOG":"",l.useFog&&l.fogExp2?"#define FOG_EXP2":"",l.map?"#define USE_MAP":"",l.envMap?"#define USE_ENVMAP":"",l.envMap?"#define "+o:"",l.lightMap?"#define USE_LIGHTMAP":"",l.aoMap?"#define USE_AOMAP":"",l.emissiveMap?"#define USE_EMISSIVEMAP":"",l.bumpMap?"#define USE_BUMPMAP":"",l.normalMap?"#define USE_NORMALMAP":"",l.normalMap&&l.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",l.normalMap&&l.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",l.clearcoatMap?"#define USE_CLEARCOATMAP":"",l.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",l.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",l.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",l.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",l.displacementMap&&l.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",l.specularMap?"#define USE_SPECULARMAP":"",l.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",l.specularColorMap?"#define USE_SPECULARCOLORMAP":"",l.roughnessMap?"#define USE_ROUGHNESSMAP":"",l.metalnessMap?"#define USE_METALNESSMAP":"",l.alphaMap?"#define USE_ALPHAMAP":"",l.transmission?"#define USE_TRANSMISSION":"",l.transmissionMap?"#define USE_TRANSMISSIONMAP":"",l.thicknessMap?"#define USE_THICKNESSMAP":"",l.sheenColorMap?"#define USE_SHEENCOLORMAP":"",l.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",l.vertexTangents?"#define USE_TANGENT":"",l.vertexColors?"#define USE_COLOR":"",l.vertexAlphas?"#define USE_COLOR_ALPHA":"",l.vertexUvs?"#define USE_UV":"",l.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",l.flatShading?"#define FLAT_SHADED":"",l.skinning?"#define USE_SKINNING":"",l.morphTargets?"#define USE_MORPHTARGETS":"",l.morphNormals&&l.flatShading===!1?"#define USE_MORPHNORMALS":"",l.morphColors&&l.isWebGL2?"#define USE_MORPHCOLORS":"",l.morphTargetsCount>0&&l.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",l.morphTargetsCount>0&&l.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+l.morphTextureStride:"",l.morphTargetsCount>0&&l.isWebGL2?"#define MORPHTARGETS_COUNT "+l.morphTargetsCount:"",l.doubleSided?"#define DOUBLE_SIDED":"",l.flipSided?"#define FLIP_SIDED":"",l.shadowMapEnabled?"#define USE_SHADOWMAP":"",l.shadowMapEnabled?"#define "+r:"",l.sizeAttenuation?"#define USE_SIZEATTENUATION":"",l.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",l.logarithmicDepthBuffer&&l.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(L6).join(`
`),_=[m,z3(l),"#define SHADER_NAME "+l.shaderName,S,l.useFog&&l.fog?"#define USE_FOG":"",l.useFog&&l.fogExp2?"#define FOG_EXP2":"",l.map?"#define USE_MAP":"",l.matcap?"#define USE_MATCAP":"",l.envMap?"#define USE_ENVMAP":"",l.envMap?"#define "+u:"",l.envMap?"#define "+o:"",l.envMap?"#define "+d:"",c?"#define CUBEUV_TEXEL_WIDTH "+c.texelWidth:"",c?"#define CUBEUV_TEXEL_HEIGHT "+c.texelHeight:"",c?"#define CUBEUV_MAX_MIP "+c.maxMip+".0":"",l.lightMap?"#define USE_LIGHTMAP":"",l.aoMap?"#define USE_AOMAP":"",l.emissiveMap?"#define USE_EMISSIVEMAP":"",l.bumpMap?"#define USE_BUMPMAP":"",l.normalMap?"#define USE_NORMALMAP":"",l.normalMap&&l.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",l.normalMap&&l.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",l.clearcoat?"#define USE_CLEARCOAT":"",l.clearcoatMap?"#define USE_CLEARCOATMAP":"",l.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",l.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",l.iridescence?"#define USE_IRIDESCENCE":"",l.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",l.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",l.specularMap?"#define USE_SPECULARMAP":"",l.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",l.specularColorMap?"#define USE_SPECULARCOLORMAP":"",l.roughnessMap?"#define USE_ROUGHNESSMAP":"",l.metalnessMap?"#define USE_METALNESSMAP":"",l.alphaMap?"#define USE_ALPHAMAP":"",l.alphaTest?"#define USE_ALPHATEST":"",l.sheen?"#define USE_SHEEN":"",l.sheenColorMap?"#define USE_SHEENCOLORMAP":"",l.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",l.transmission?"#define USE_TRANSMISSION":"",l.transmissionMap?"#define USE_TRANSMISSIONMAP":"",l.thicknessMap?"#define USE_THICKNESSMAP":"",l.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",l.vertexTangents?"#define USE_TANGENT":"",l.vertexColors||l.instancingColor?"#define USE_COLOR":"",l.vertexAlphas?"#define USE_COLOR_ALPHA":"",l.vertexUvs?"#define USE_UV":"",l.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",l.gradientMap?"#define USE_GRADIENTMAP":"",l.flatShading?"#define FLAT_SHADED":"",l.doubleSided?"#define DOUBLE_SIDED":"",l.flipSided?"#define FLIP_SIDED":"",l.shadowMapEnabled?"#define USE_SHADOWMAP":"",l.shadowMapEnabled?"#define "+r:"",l.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",l.useLegacyLights?"#define LEGACY_LIGHTS":"",l.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",l.logarithmicDepthBuffer&&l.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",l.toneMapping!==g7?"#define TONE_MAPPING":"",l.toneMapping!==g7?v1.tonemapping_pars_fragment:"",l.toneMapping!==g7?ys("toneMapping",l.toneMapping):"",l.dithering?"#define DITHERING":"",l.opaque?"#define OPAQUE":"",v1.encodings_pars_fragment,vs("linearToOutputTexel",l.outputEncoding),l.useDepthPacking?"#define DEPTH_PACKING "+l.depthPacking:"",`
`].filter(L6).join(`
`)),f=u9(f),f=B3(f,l),f=W3(f,l),i=u9(i),i=B3(i,l),i=W3(i,l),f=O3(f),i=O3(i),l.isWebGL2&&l.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,h=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+h,_=["#define varying in",l.glslVersion===r3?"":"layout(location = 0) out highp vec4 pc_fragColor;",l.glslVersion===r3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const g=M+h+f,v=M+_+i,T=F3(n,35633,g),E=F3(n,35632,v);if(n.attachShader(p,T),n.attachShader(p,E),l.index0AttributeName!==void 0?n.bindAttribLocation(p,0,l.index0AttributeName):l.morphTargets===!0&&n.bindAttribLocation(p,0,"position"),n.linkProgram(p),s.debug.checkShaderErrors){const y=n.getProgramInfoLog(p).trim(),w=n.getShaderInfoLog(T).trim(),z=n.getShaderInfoLog(E).trim();let J=!0,F=!0;if(n.getProgramParameter(p,35714)===!1){J=!1;const C=G3(n,T,"vertex"),B=G3(n,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(p,35715)+`

Program Info Log: `+y+`
`+C+`
`+B)}else y!==""?console.warn("THREE.WebGLProgram: Program Info Log:",y):(w===""||z==="")&&(F=!1);F&&(this.diagnostics={runnable:J,programLog:y,vertexShader:{log:w,prefix:h},fragmentShader:{log:z,prefix:_}})}n.deleteShader(T),n.deleteShader(E);let D;this.getUniforms=function(){return D===void 0&&(D=new sl(n,p)),D};let b;return this.getAttributes=function(){return b===void 0&&(b=Es(n,p)),b},this.destroy=function(){a.releaseStatesOfProgram(this),n.deleteProgram(p),this.program=void 0},this.name=l.shaderName,this.id=Us++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=T,this.fragmentShader=E,this}let Ws=0;class Os{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const l=e.vertexShader,a=e.fragmentShader,n=this._getShaderStage(l),t=this._getShaderStage(a),f=this._getShaderCacheForMaterial(e);return f.has(n)===!1&&(f.add(n),n.usedTimes++),f.has(t)===!1&&(f.add(t),t.usedTimes++),this}remove(e){const l=this.materialCache.get(e);for(const a of l)a.usedTimes--,a.usedTimes===0&&this.shaderCache.delete(a.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const l=this.materialCache;let a=l.get(e);return a===void 0&&(a=new Set,l.set(e,a)),a}_getShaderStage(e){const l=this.shaderCache;let a=l.get(e);return a===void 0&&(a=new zs(e),l.set(e,a)),a}}class zs{constructor(e){this.id=Ws++,this.code=e,this.usedTimes=0}}function Hs(s,e,l,a,n,t,f){const i=new m9,r=new Os,u=[],o=n.isWebGL2,d=n.logarithmicDepthBuffer,c=n.vertexTextures;let m=n.precision;const S={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(b,y,w,z,J){const F=z.fog,C=J.geometry,B=b.isMeshStandardMaterial?z.environment:null,Y=(b.isMeshStandardMaterial?l:e).get(b.envMap||B),$=Y&&Y.mapping===rl?Y.image.height:null,K=S[b.type];b.precision!==null&&(m=n.getMaxPrecision(b.precision),m!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",m,"instead."));const X=C.morphAttributes.position||C.morphAttributes.normal||C.morphAttributes.color,Z=X!==void 0?X.length:0;let r1=0;C.morphAttributes.position!==void 0&&(r1=1),C.morphAttributes.normal!==void 0&&(r1=2),C.morphAttributes.color!==void 0&&(r1=3);let G,Q,n1,R;if(K){const x1=i7[K];G=x1.vertexShader,Q=x1.fragmentShader}else G=b.vertexShader,Q=b.fragmentShader,r.update(b),n1=r.getVertexShaderID(b),R=r.getFragmentShaderID(b);const j=s.getRenderTarget(),s1=b.alphaTest>0,f1=b.clearcoat>0,o1=b.iridescence>0;return{isWebGL2:o,shaderID:K,shaderName:b.type,vertexShader:G,fragmentShader:Q,defines:b.defines,customVertexShaderID:n1,customFragmentShaderID:R,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:m,instancing:J.isInstancedMesh===!0,instancingColor:J.isInstancedMesh===!0&&J.instanceColor!==null,supportsVertexTextures:c,outputEncoding:j===null?s.outputEncoding:j.isXRRenderTarget===!0?j.texture.encoding:H7,map:!!b.map,matcap:!!b.matcap,envMap:!!Y,envMapMode:Y&&Y.mapping,envMapCubeUVHeight:$,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===na,tangentSpaceNormalMap:b.normalMapType===u2,decodeVideoTexture:!!b.map&&b.map.isVideoTexture===!0&&b.map.encoding===V1,clearcoat:f1,clearcoatMap:f1&&!!b.clearcoatMap,clearcoatRoughnessMap:f1&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:f1&&!!b.clearcoatNormalMap,iridescence:o1,iridescenceMap:o1&&!!b.iridescenceMap,iridescenceThicknessMap:o1&&!!b.iridescenceThicknessMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:b.transparent===!1&&b.blending===f6,alphaMap:!!b.alphaMap,alphaTest:s1,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!C.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!C.attributes.color&&C.attributes.color.itemSize===4,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||!!b.sheenRoughnessMap,uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.iridescenceMap||b.iridescenceThicknessMap||b.transmission>0||b.transmissionMap||b.thicknessMap||b.specularIntensityMap||b.specularColorMap||b.sheen>0||b.sheenColorMap||b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!F,useFog:b.fog===!0,fogExp2:F&&F.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:d,skinning:J.isSkinnedMesh===!0,morphTargets:C.morphAttributes.position!==void 0,morphNormals:C.morphAttributes.normal!==void 0,morphColors:C.morphAttributes.color!==void 0,morphTargetsCount:Z,morphTextureStride:r1,numDirLights:y.directional.length,numPointLights:y.point.length,numSpotLights:y.spot.length,numSpotLightMaps:y.spotLightMap.length,numRectAreaLights:y.rectArea.length,numHemiLights:y.hemi.length,numDirLightShadows:y.directionalShadowMap.length,numPointLightShadows:y.pointShadowMap.length,numSpotLightShadows:y.spotShadowMap.length,numSpotLightShadowsWithMaps:y.numSpotLightShadowsWithMaps,numClippingPlanes:f.numPlanes,numClipIntersection:f.numIntersection,dithering:b.dithering,shadowMapEnabled:s.shadowMap.enabled&&w.length>0,shadowMapType:s.shadowMap.type,toneMapping:b.toneMapped?s.toneMapping:g7,useLegacyLights:s.useLegacyLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===y7,flipSided:b.side===Be,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||a.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||a.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||a.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function h(b){const y=[];if(b.shaderID?y.push(b.shaderID):(y.push(b.customVertexShaderID),y.push(b.customFragmentShaderID)),b.defines!==void 0)for(const w in b.defines)y.push(w),y.push(b.defines[w]);return b.isRawShaderMaterial===!1&&(_(y,b),M(y,b),y.push(s.outputEncoding)),y.push(b.customProgramCacheKey),y.join()}function _(b,y){b.push(y.precision),b.push(y.outputEncoding),b.push(y.envMapMode),b.push(y.envMapCubeUVHeight),b.push(y.combine),b.push(y.vertexUvs),b.push(y.fogExp2),b.push(y.sizeAttenuation),b.push(y.morphTargetsCount),b.push(y.morphAttributeCount),b.push(y.numDirLights),b.push(y.numPointLights),b.push(y.numSpotLights),b.push(y.numSpotLightMaps),b.push(y.numHemiLights),b.push(y.numRectAreaLights),b.push(y.numDirLightShadows),b.push(y.numPointLightShadows),b.push(y.numSpotLightShadows),b.push(y.numSpotLightShadowsWithMaps),b.push(y.shadowMapType),b.push(y.toneMapping),b.push(y.numClippingPlanes),b.push(y.numClipIntersection),b.push(y.depthPacking)}function M(b,y){i.disableAll(),y.isWebGL2&&i.enable(0),y.supportsVertexTextures&&i.enable(1),y.instancing&&i.enable(2),y.instancingColor&&i.enable(3),y.map&&i.enable(4),y.matcap&&i.enable(5),y.envMap&&i.enable(6),y.lightMap&&i.enable(7),y.aoMap&&i.enable(8),y.emissiveMap&&i.enable(9),y.bumpMap&&i.enable(10),y.normalMap&&i.enable(11),y.objectSpaceNormalMap&&i.enable(12),y.tangentSpaceNormalMap&&i.enable(13),y.clearcoat&&i.enable(14),y.clearcoatMap&&i.enable(15),y.clearcoatRoughnessMap&&i.enable(16),y.clearcoatNormalMap&&i.enable(17),y.iridescence&&i.enable(18),y.iridescenceMap&&i.enable(19),y.iridescenceThicknessMap&&i.enable(20),y.displacementMap&&i.enable(21),y.specularMap&&i.enable(22),y.roughnessMap&&i.enable(23),y.metalnessMap&&i.enable(24),y.gradientMap&&i.enable(25),y.alphaMap&&i.enable(26),y.alphaTest&&i.enable(27),y.vertexColors&&i.enable(28),y.vertexAlphas&&i.enable(29),y.vertexUvs&&i.enable(30),y.vertexTangents&&i.enable(31),y.uvsVertexOnly&&i.enable(32),b.push(i.mask),i.disableAll(),y.fog&&i.enable(0),y.useFog&&i.enable(1),y.flatShading&&i.enable(2),y.logarithmicDepthBuffer&&i.enable(3),y.skinning&&i.enable(4),y.morphTargets&&i.enable(5),y.morphNormals&&i.enable(6),y.morphColors&&i.enable(7),y.premultipliedAlpha&&i.enable(8),y.shadowMapEnabled&&i.enable(9),y.useLegacyLights&&i.enable(10),y.doubleSided&&i.enable(11),y.flipSided&&i.enable(12),y.useDepthPacking&&i.enable(13),y.dithering&&i.enable(14),y.specularIntensityMap&&i.enable(15),y.specularColorMap&&i.enable(16),y.transmission&&i.enable(17),y.transmissionMap&&i.enable(18),y.thicknessMap&&i.enable(19),y.sheen&&i.enable(20),y.sheenColorMap&&i.enable(21),y.sheenRoughnessMap&&i.enable(22),y.decodeVideoTexture&&i.enable(23),y.opaque&&i.enable(24),b.push(i.mask)}function g(b){const y=S[b.type];let w;if(y){const z=i7[y];w=Ta.clone(z.uniforms)}else w=b.uniforms;return w}function v(b,y){let w;for(let z=0,J=u.length;z<J;z++){const F=u[z];if(F.cacheKey===y){w=F,++w.usedTimes;break}}return w===void 0&&(w=new Bs(s,y,b,t),u.push(w)),w}function T(b){if(--b.usedTimes===0){const y=u.indexOf(b);u[y]=u[u.length-1],u.pop(),b.destroy()}}function E(b){r.remove(b)}function D(){r.dispose()}return{getParameters:p,getProgramCacheKey:h,getUniforms:g,acquireProgram:v,releaseProgram:T,releaseShaderCache:E,programs:u,dispose:D}}function Vs(){let s=new WeakMap;function e(t){let f=s.get(t);return f===void 0&&(f={},s.set(t,f)),f}function l(t){s.delete(t)}function a(t,f,i){s.get(t)[f]=i}function n(){s=new WeakMap}return{get:e,remove:l,update:a,dispose:n}}function Ks(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function H3(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function V3(){const s=[];let e=0;const l=[],a=[],n=[];function t(){e=0,l.length=0,a.length=0,n.length=0}function f(d,c,m,S,p,h){let _=s[e];return _===void 0?(_={id:d.id,object:d,geometry:c,material:m,groupOrder:S,renderOrder:d.renderOrder,z:p,group:h},s[e]=_):(_.id=d.id,_.object=d,_.geometry=c,_.material=m,_.groupOrder=S,_.renderOrder=d.renderOrder,_.z=p,_.group=h),e++,_}function i(d,c,m,S,p,h){const _=f(d,c,m,S,p,h);m.transmission>0?a.push(_):m.transparent===!0?n.push(_):l.push(_)}function r(d,c,m,S,p,h){const _=f(d,c,m,S,p,h);m.transmission>0?a.unshift(_):m.transparent===!0?n.unshift(_):l.unshift(_)}function u(d,c){l.length>1&&l.sort(d||Ks),a.length>1&&a.sort(c||H3),n.length>1&&n.sort(c||H3)}function o(){for(let d=e,c=s.length;d<c;d++){const m=s[d];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:l,transmissive:a,transparent:n,init:t,push:i,unshift:r,finish:o,sort:u}}function ks(){let s=new WeakMap;function e(a,n){const t=s.get(a);let f;return t===void 0?(f=new V3,s.set(a,[f])):n>=t.length?(f=new V3,t.push(f)):f=t[n],f}function l(){s=new WeakMap}return{get:e,dispose:l}}function Js(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let l;switch(e.type){case"DirectionalLight":l={direction:new I,color:new O1};break;case"SpotLight":l={position:new I,direction:new I,color:new O1,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":l={position:new I,color:new O1,distance:0,decay:0};break;case"HemisphereLight":l={direction:new I,skyColor:new O1,groundColor:new O1};break;case"RectAreaLight":l={color:new O1,position:new I,halfWidth:new I,halfHeight:new I};break}return s[e.id]=l,l}}}function Ys(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let l;switch(e.type){case"DirectionalLight":l={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new F1};break;case"SpotLight":l={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new F1};break;case"PointLight":l={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new F1,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=l,l}}}let Xs=0;function Zs(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function Qs(s,e){const l=new Js,a=Ys(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let o=0;o<9;o++)n.probe.push(new I);const t=new I,f=new k1,i=new k1;function r(o,d){let c=0,m=0,S=0;for(let z=0;z<9;z++)n.probe[z].set(0,0,0);let p=0,h=0,_=0,M=0,g=0,v=0,T=0,E=0,D=0,b=0;o.sort(Zs);const y=d===!0?Math.PI:1;for(let z=0,J=o.length;z<J;z++){const F=o[z],C=F.color,B=F.intensity,Y=F.distance,$=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)c+=C.r*B*y,m+=C.g*B*y,S+=C.b*B*y;else if(F.isLightProbe)for(let K=0;K<9;K++)n.probe[K].addScaledVector(F.sh.coefficients[K],B);else if(F.isDirectionalLight){const K=l.get(F);if(K.color.copy(F.color).multiplyScalar(F.intensity*y),F.castShadow){const X=F.shadow,Z=a.get(F);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,n.directionalShadow[p]=Z,n.directionalShadowMap[p]=$,n.directionalShadowMatrix[p]=F.shadow.matrix,v++}n.directional[p]=K,p++}else if(F.isSpotLight){const K=l.get(F);K.position.setFromMatrixPosition(F.matrixWorld),K.color.copy(C).multiplyScalar(B*y),K.distance=Y,K.coneCos=Math.cos(F.angle),K.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),K.decay=F.decay,n.spot[_]=K;const X=F.shadow;if(F.map&&(n.spotLightMap[D]=F.map,D++,X.updateMatrices(F),F.castShadow&&b++),n.spotLightMatrix[_]=X.matrix,F.castShadow){const Z=a.get(F);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,n.spotShadow[_]=Z,n.spotShadowMap[_]=$,E++}_++}else if(F.isRectAreaLight){const K=l.get(F);K.color.copy(C).multiplyScalar(B),K.halfWidth.set(F.width*.5,0,0),K.halfHeight.set(0,F.height*.5,0),n.rectArea[M]=K,M++}else if(F.isPointLight){const K=l.get(F);if(K.color.copy(F.color).multiplyScalar(F.intensity*y),K.distance=F.distance,K.decay=F.decay,F.castShadow){const X=F.shadow,Z=a.get(F);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,Z.shadowCameraNear=X.camera.near,Z.shadowCameraFar=X.camera.far,n.pointShadow[h]=Z,n.pointShadowMap[h]=$,n.pointShadowMatrix[h]=F.shadow.matrix,T++}n.point[h]=K,h++}else if(F.isHemisphereLight){const K=l.get(F);K.skyColor.copy(F.color).multiplyScalar(B*y),K.groundColor.copy(F.groundColor).multiplyScalar(B*y),n.hemi[g]=K,g++}}M>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=a1.LTC_FLOAT_1,n.rectAreaLTC2=a1.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(n.rectAreaLTC1=a1.LTC_HALF_1,n.rectAreaLTC2=a1.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=c,n.ambient[1]=m,n.ambient[2]=S;const w=n.hash;(w.directionalLength!==p||w.pointLength!==h||w.spotLength!==_||w.rectAreaLength!==M||w.hemiLength!==g||w.numDirectionalShadows!==v||w.numPointShadows!==T||w.numSpotShadows!==E||w.numSpotMaps!==D)&&(n.directional.length=p,n.spot.length=_,n.rectArea.length=M,n.point.length=h,n.hemi.length=g,n.directionalShadow.length=v,n.directionalShadowMap.length=v,n.pointShadow.length=T,n.pointShadowMap.length=T,n.spotShadow.length=E,n.spotShadowMap.length=E,n.directionalShadowMatrix.length=v,n.pointShadowMatrix.length=T,n.spotLightMatrix.length=E+D-b,n.spotLightMap.length=D,n.numSpotLightShadowsWithMaps=b,w.directionalLength=p,w.pointLength=h,w.spotLength=_,w.rectAreaLength=M,w.hemiLength=g,w.numDirectionalShadows=v,w.numPointShadows=T,w.numSpotShadows=E,w.numSpotMaps=D,n.version=Xs++)}function u(o,d){let c=0,m=0,S=0,p=0,h=0;const _=d.matrixWorldInverse;for(let M=0,g=o.length;M<g;M++){const v=o[M];if(v.isDirectionalLight){const T=n.directional[c];T.direction.setFromMatrixPosition(v.matrixWorld),t.setFromMatrixPosition(v.target.matrixWorld),T.direction.sub(t),T.direction.transformDirection(_),c++}else if(v.isSpotLight){const T=n.spot[S];T.position.setFromMatrixPosition(v.matrixWorld),T.position.applyMatrix4(_),T.direction.setFromMatrixPosition(v.matrixWorld),t.setFromMatrixPosition(v.target.matrixWorld),T.direction.sub(t),T.direction.transformDirection(_),S++}else if(v.isRectAreaLight){const T=n.rectArea[p];T.position.setFromMatrixPosition(v.matrixWorld),T.position.applyMatrix4(_),i.identity(),f.copy(v.matrixWorld),f.premultiply(_),i.extractRotation(f),T.halfWidth.set(v.width*.5,0,0),T.halfHeight.set(0,v.height*.5,0),T.halfWidth.applyMatrix4(i),T.halfHeight.applyMatrix4(i),p++}else if(v.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(v.matrixWorld),T.position.applyMatrix4(_),m++}else if(v.isHemisphereLight){const T=n.hemi[h];T.direction.setFromMatrixPosition(v.matrixWorld),T.direction.transformDirection(_),h++}}}return{setup:r,setupView:u,state:n}}function K3(s,e){const l=new Qs(s,e),a=[],n=[];function t(){a.length=0,n.length=0}function f(d){a.push(d)}function i(d){n.push(d)}function r(d){l.setup(a,d)}function u(d){l.setupView(a,d)}return{init:t,state:{lightsArray:a,shadowsArray:n,lights:l},setupLights:r,setupLightsView:u,pushLight:f,pushShadow:i}}function qs(s,e){let l=new WeakMap;function a(t,f=0){const i=l.get(t);let r;return i===void 0?(r=new K3(s,e),l.set(t,[r])):f>=i.length?(r=new K3(s,e),i.push(r)):r=i[f],r}function n(){l=new WeakMap}return{get:a,dispose:n}}class $s extends B6{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=la,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class js extends B6{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new I,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const ei=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,li=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function ai(s,e,l){let a=new S9;const n=new F1,t=new F1,f=new K1,i=new $s({depthPacking:aa}),r=new js,u={},o=l.maxTextureSize,d={[E7]:Be,[Be]:E7,[y7]:y7},c=new K7({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new F1},radius:{value:4}},vertexShader:ei,fragmentShader:li}),m=c.clone();m.defines.HORIZONTAL_PASS=1;const S=new _7;S.setAttribute("position",new u7(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new f7(S,c),h=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=a2,this.render=function(v,T,E){if(h.enabled===!1||h.autoUpdate===!1&&h.needsUpdate===!1||v.length===0)return;const D=s.getRenderTarget(),b=s.getActiveCubeFace(),y=s.getActiveMipmapLevel(),w=s.state;w.setBlending(L7),w.buffers.color.setClear(1,1,1,1),w.buffers.depth.setTest(!0),w.setScissorTest(!1);for(let z=0,J=v.length;z<J;z++){const F=v[z],C=F.shadow;if(C===void 0){console.warn("THREE.WebGLShadowMap:",F,"has no shadow.");continue}if(C.autoUpdate===!1&&C.needsUpdate===!1)continue;n.copy(C.mapSize);const B=C.getFrameExtents();if(n.multiply(B),t.copy(C.mapSize),(n.x>o||n.y>o)&&(n.x>o&&(t.x=Math.floor(o/B.x),n.x=t.x*B.x,C.mapSize.x=t.x),n.y>o&&(t.y=Math.floor(o/B.y),n.y=t.y*B.y,C.mapSize.y=t.y)),C.map===null){const $=this.type!==T6?{minFilter:xe,magFilter:xe}:{};C.map=new V7(n.x,n.y,$),C.map.texture.name=F.name+".shadowMap",C.camera.updateProjectionMatrix()}s.setRenderTarget(C.map),s.clear();const Y=C.getViewportCount();for(let $=0;$<Y;$++){const K=C.getViewport($);f.set(t.x*K.x,t.y*K.y,t.x*K.z,t.y*K.w),w.viewport(f),C.updateMatrices(F,$),a=C.getFrustum(),g(T,E,C.camera,F,this.type)}C.isPointLightShadow!==!0&&this.type===T6&&_(C,E),C.needsUpdate=!1}h.needsUpdate=!1,s.setRenderTarget(D,b,y)};function _(v,T){const E=e.update(p);c.defines.VSM_SAMPLES!==v.blurSamples&&(c.defines.VSM_SAMPLES=v.blurSamples,m.defines.VSM_SAMPLES=v.blurSamples,c.needsUpdate=!0,m.needsUpdate=!0),v.mapPass===null&&(v.mapPass=new V7(n.x,n.y)),c.uniforms.shadow_pass.value=v.map.texture,c.uniforms.resolution.value=v.mapSize,c.uniforms.radius.value=v.radius,s.setRenderTarget(v.mapPass),s.clear(),s.renderBufferDirect(T,null,E,c,p,null),m.uniforms.shadow_pass.value=v.mapPass.texture,m.uniforms.resolution.value=v.mapSize,m.uniforms.radius.value=v.radius,s.setRenderTarget(v.map),s.clear(),s.renderBufferDirect(T,null,E,m,p,null)}function M(v,T,E,D,b,y){let w=null;const z=E.isPointLight===!0?v.customDistanceMaterial:v.customDepthMaterial;if(z!==void 0)w=z;else if(w=E.isPointLight===!0?r:i,s.localClippingEnabled&&T.clipShadows===!0&&Array.isArray(T.clippingPlanes)&&T.clippingPlanes.length!==0||T.displacementMap&&T.displacementScale!==0||T.alphaMap&&T.alphaTest>0||T.map&&T.alphaTest>0){const J=w.uuid,F=T.uuid;let C=u[J];C===void 0&&(C={},u[J]=C);let B=C[F];B===void 0&&(B=w.clone(),C[F]=B),w=B}return w.visible=T.visible,w.wireframe=T.wireframe,y===T6?w.side=T.shadowSide!==null?T.shadowSide:T.side:w.side=T.shadowSide!==null?T.shadowSide:d[T.side],w.alphaMap=T.alphaMap,w.alphaTest=T.alphaTest,w.map=T.map,w.clipShadows=T.clipShadows,w.clippingPlanes=T.clippingPlanes,w.clipIntersection=T.clipIntersection,w.displacementMap=T.displacementMap,w.displacementScale=T.displacementScale,w.displacementBias=T.displacementBias,w.wireframeLinewidth=T.wireframeLinewidth,w.linewidth=T.linewidth,E.isPointLight===!0&&w.isMeshDistanceMaterial===!0&&(w.referencePosition.setFromMatrixPosition(E.matrixWorld),w.nearDistance=D,w.farDistance=b),w}function g(v,T,E,D,b){if(v.visible===!1)return;if(v.layers.test(T.layers)&&(v.isMesh||v.isLine||v.isPoints)&&(v.castShadow||v.receiveShadow&&b===T6)&&(!v.frustumCulled||a.intersectsObject(v))){v.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,v.matrixWorld);const z=e.update(v),J=v.material;if(Array.isArray(J)){const F=z.groups;for(let C=0,B=F.length;C<B;C++){const Y=F[C],$=J[Y.materialIndex];if($&&$.visible){const K=M(v,$,D,E.near,E.far,b);s.renderBufferDirect(E,null,z,K,v,Y)}}}else if(J.visible){const F=M(v,J,D,E.near,E.far,b);s.renderBufferDirect(E,null,z,F,v,null)}}const w=v.children;for(let z=0,J=w.length;z<J;z++)g(w[z],T,E,D,b)}}function ni(s,e,l){const a=l.isWebGL2;function n(){let L=!1;const O=new K1;let q=null;const i1=new K1(0,0,0,0);return{setMask:function(d1){q!==d1&&!L&&(s.colorMask(d1,d1,d1,d1),q=d1)},setLocked:function(d1){L=d1},setClear:function(d1,H1,fe,Ae,l7){l7===!0&&(d1*=Ae,H1*=Ae,fe*=Ae),O.set(d1,H1,fe,Ae),i1.equals(O)===!1&&(s.clearColor(d1,H1,fe,Ae),i1.copy(O))},reset:function(){L=!1,q=null,i1.set(-1,0,0,0)}}}function t(){let L=!1,O=null,q=null,i1=null;return{setTest:function(d1){d1?s1(2929):f1(2929)},setMask:function(d1){O!==d1&&!L&&(s.depthMask(d1),O=d1)},setFunc:function(d1){if(q!==d1){switch(d1){case y4:s.depthFunc(512);break;case T4:s.depthFunc(519);break;case L4:s.depthFunc(513);break;case a9:s.depthFunc(515);break;case E4:s.depthFunc(514);break;case R4:s.depthFunc(518);break;case C4:s.depthFunc(516);break;case w4:s.depthFunc(517);break;default:s.depthFunc(515)}q=d1}},setLocked:function(d1){L=d1},setClear:function(d1){i1!==d1&&(s.clearDepth(d1),i1=d1)},reset:function(){L=!1,O=null,q=null,i1=null}}}function f(){let L=!1,O=null,q=null,i1=null,d1=null,H1=null,fe=null,Ae=null,l7=null;return{setTest:function(X1){L||(X1?s1(2960):f1(2960))},setMask:function(X1){O!==X1&&!L&&(s.stencilMask(X1),O=X1)},setFunc:function(X1,He,a7){(q!==X1||i1!==He||d1!==a7)&&(s.stencilFunc(X1,He,a7),q=X1,i1=He,d1=a7)},setOp:function(X1,He,a7){(H1!==X1||fe!==He||Ae!==a7)&&(s.stencilOp(X1,He,a7),H1=X1,fe=He,Ae=a7)},setLocked:function(X1){L=X1},setClear:function(X1){l7!==X1&&(s.clearStencil(X1),l7=X1)},reset:function(){L=!1,O=null,q=null,i1=null,d1=null,H1=null,fe=null,Ae=null,l7=null}}}const i=new n,r=new t,u=new f,o=new WeakMap,d=new WeakMap;let c={},m={},S=new WeakMap,p=[],h=null,_=!1,M=null,g=null,v=null,T=null,E=null,D=null,b=null,y=!1,w=null,z=null,J=null,F=null,C=null;const B=s.getParameter(35661);let Y=!1,$=0;const K=s.getParameter(7938);K.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(K)[1]),Y=$>=1):K.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),Y=$>=2);let X=null,Z={};const r1=s.getParameter(3088),G=s.getParameter(2978),Q=new K1().fromArray(r1),n1=new K1().fromArray(G);function R(L,O,q){const i1=new Uint8Array(4),d1=s.createTexture();s.bindTexture(L,d1),s.texParameteri(L,10241,9728),s.texParameteri(L,10240,9728);for(let H1=0;H1<q;H1++)s.texImage2D(O+H1,0,6408,1,1,0,6408,5121,i1);return d1}const j={};j[3553]=R(3553,3553,1),j[34067]=R(34067,34069,6),i.setClear(0,0,0,1),r.setClear(1),u.setClear(0),s1(2929),r.setFunc(a9),oe(!1),$1(D9),s1(2884),se(L7);function s1(L){c[L]!==!0&&(s.enable(L),c[L]=!0)}function f1(L){c[L]!==!1&&(s.disable(L),c[L]=!1)}function o1(L,O){return m[L]!==O?(s.bindFramebuffer(L,O),m[L]=O,a&&(L===36009&&(m[36160]=O),L===36160&&(m[36009]=O)),!0):!1}function p1(L,O){let q=p,i1=!1;if(L)if(q=S.get(O),q===void 0&&(q=[],S.set(O,q)),L.isWebGLMultipleRenderTargets){const d1=L.texture;if(q.length!==d1.length||q[0]!==36064){for(let H1=0,fe=d1.length;H1<fe;H1++)q[H1]=36064+H1;q.length=d1.length,i1=!0}}else q[0]!==36064&&(q[0]=36064,i1=!0);else q[0]!==1029&&(q[0]=1029,i1=!0);i1&&(l.isWebGL2?s.drawBuffers(q):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(q))}function x1(L){return h!==L?(s.useProgram(L),h=L,!0):!1}const M1={[s6]:32774,[p4]:32778,[m4]:32779};if(a)M1[F9]=32775,M1[G9]=32776;else{const L=e.get("EXT_blend_minmax");L!==null&&(M1[F9]=L.MIN_EXT,M1[G9]=L.MAX_EXT)}const C1={[S4]:0,[g4]:1,[A4]:768,[n2]:770,[v4]:776,[x4]:774,[_4]:772,[b4]:769,[t2]:771,[M4]:775,[U4]:773};function se(L,O,q,i1,d1,H1,fe,Ae){if(L===L7){_===!0&&(f1(3042),_=!1);return}if(_===!1&&(s1(3042),_=!0),L!==h4){if(L!==M||Ae!==y){if((g!==s6||E!==s6)&&(s.blendEquation(32774),g=s6,E=s6),Ae)switch(L){case f6:s.blendFuncSeparate(1,771,1,771);break;case P9:s.blendFunc(1,1);break;case I9:s.blendFuncSeparate(0,769,0,1);break;case N9:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}else switch(L){case f6:s.blendFuncSeparate(770,771,1,771);break;case P9:s.blendFunc(770,1);break;case I9:s.blendFuncSeparate(0,769,0,1);break;case N9:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}v=null,T=null,D=null,b=null,M=L,y=Ae}return}d1=d1||O,H1=H1||q,fe=fe||i1,(O!==g||d1!==E)&&(s.blendEquationSeparate(M1[O],M1[d1]),g=O,E=d1),(q!==v||i1!==T||H1!==D||fe!==b)&&(s.blendFuncSeparate(C1[q],C1[i1],C1[H1],C1[fe]),v=q,T=i1,D=H1,b=fe),M=L,y=!1}function ge(L,O){L.side===y7?f1(2884):s1(2884);let q=L.side===Be;O&&(q=!q),oe(q),L.blending===f6&&L.transparent===!1?se(L7):se(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.premultipliedAlpha),r.setFunc(L.depthFunc),r.setTest(L.depthTest),r.setMask(L.depthWrite),i.setMask(L.colorWrite);const i1=L.stencilWrite;u.setTest(i1),i1&&(u.setMask(L.stencilWriteMask),u.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),u.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),W1(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits),L.alphaToCoverage===!0?s1(32926):f1(32926)}function oe(L){w!==L&&(L?s.frontFace(2304):s.frontFace(2305),w=L)}function $1(L){L!==o4?(s1(2884),L!==z&&(L===D9?s.cullFace(1029):L===d4?s.cullFace(1028):s.cullFace(1032))):f1(2884),z=L}function z1(L){L!==J&&(Y&&s.lineWidth(L),J=L)}function W1(L,O,q){L?(s1(32823),(F!==O||C!==q)&&(s.polygonOffset(O,q),F=O,C=q)):f1(32823)}function Ee(L){L?s1(3089):f1(3089)}function ke(L){L===void 0&&(L=33984+B-1),X!==L&&(s.activeTexture(L),X=L)}function x(L,O,q){q===void 0&&(X===null?q=33984+B-1:q=X);let i1=Z[q];i1===void 0&&(i1={type:void 0,texture:void 0},Z[q]=i1),(i1.type!==L||i1.texture!==O)&&(X!==q&&(s.activeTexture(q),X=q),s.bindTexture(L,O||j[L]),i1.type=L,i1.texture=O)}function A(){const L=Z[X];L!==void 0&&L.type!==void 0&&(s.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)}function H(){try{s.compressedTexImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function e1(){try{s.compressedTexImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function l1(){try{s.texSubImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function t1(){try{s.texSubImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function m1(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function u1(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function k(){try{s.texStorage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function A1(){try{s.texStorage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function c1(){try{s.texImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function b1(){try{s.texImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function g1(L){Q.equals(L)===!1&&(s.scissor(L.x,L.y,L.z,L.w),Q.copy(L))}function h1(L){n1.equals(L)===!1&&(s.viewport(L.x,L.y,L.z,L.w),n1.copy(L))}function I1(L,O){let q=d.get(O);q===void 0&&(q=new WeakMap,d.set(O,q));let i1=q.get(L);i1===void 0&&(i1=s.getUniformBlockIndex(O,L.name),q.set(L,i1))}function J1(L,O){const i1=d.get(O).get(L);o.get(O)!==i1&&(s.uniformBlockBinding(O,i1,L.__bindingPointIndex),o.set(O,i1))}function ie(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),a===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),c={},X=null,Z={},m={},S=new WeakMap,p=[],h=null,_=!1,M=null,g=null,v=null,T=null,E=null,D=null,b=null,y=!1,w=null,z=null,J=null,F=null,C=null,Q.set(0,0,s.canvas.width,s.canvas.height),n1.set(0,0,s.canvas.width,s.canvas.height),i.reset(),r.reset(),u.reset()}return{buffers:{color:i,depth:r,stencil:u},enable:s1,disable:f1,bindFramebuffer:o1,drawBuffers:p1,useProgram:x1,setBlending:se,setMaterial:ge,setFlipSided:oe,setCullFace:$1,setLineWidth:z1,setPolygonOffset:W1,setScissorTest:Ee,activeTexture:ke,bindTexture:x,unbindTexture:A,compressedTexImage2D:H,compressedTexImage3D:e1,texImage2D:c1,texImage3D:b1,updateUBOMapping:I1,uniformBlockBinding:J1,texStorage2D:k,texStorage3D:A1,texSubImage2D:l1,texSubImage3D:t1,compressedTexSubImage2D:m1,compressedTexSubImage3D:u1,scissor:g1,viewport:h1,reset:ie}}function ti(s,e,l,a,n,t,f){const i=n.isWebGL2,r=n.maxTextures,u=n.maxCubemapSize,o=n.maxTextureSize,d=n.maxSamples,c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),S=new WeakMap;let p;const h=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function M(x,A){return _?new OffscreenCanvas(x,A):ul("canvas")}function g(x,A,H,e1){let l1=1;if((x.width>e1||x.height>e1)&&(l1=e1/Math.max(x.width,x.height)),l1<1||A===!0)if(typeof HTMLImageElement<"u"&&x instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&x instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&x instanceof ImageBitmap){const t1=A?ia:Math.floor,m1=t1(l1*x.width),u1=t1(l1*x.height);p===void 0&&(p=M(m1,u1));const k=H?M(m1,u1):p;return k.width=m1,k.height=u1,k.getContext("2d").drawImage(x,0,0,m1,u1),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+x.width+"x"+x.height+") to ("+m1+"x"+u1+")."),k}else return"data"in x&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+x.width+"x"+x.height+")."),x;return x}function v(x){return d3(x.width)&&d3(x.height)}function T(x){return i?!1:x.wrapS!==Ze||x.wrapT!==Ze||x.minFilter!==xe&&x.minFilter!==Ke}function E(x,A){return x.generateMipmaps&&A&&x.minFilter!==xe&&x.minFilter!==Ke}function D(x){s.generateMipmap(x)}function b(x,A,H,e1,l1=!1){if(i===!1)return A;if(x!==null){if(s[x]!==void 0)return s[x];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+x+"'")}let t1=A;return A===6403&&(H===5126&&(t1=33326),H===5131&&(t1=33325),H===5121&&(t1=33321)),A===33319&&(H===5126&&(t1=33328),H===5131&&(t1=33327),H===5121&&(t1=33323)),A===6408&&(H===5126&&(t1=34836),H===5131&&(t1=34842),H===5121&&(t1=e1===V1&&l1===!1?35907:32856),H===32819&&(t1=32854),H===32820&&(t1=32855)),(t1===33325||t1===33326||t1===33327||t1===33328||t1===34842||t1===34836)&&e.get("EXT_color_buffer_float"),t1}function y(x,A,H){return E(x,H)===!0||x.isFramebufferTexture&&x.minFilter!==xe&&x.minFilter!==Ke?Math.log2(Math.max(A.width,A.height))+1:x.mipmaps!==void 0&&x.mipmaps.length>0?x.mipmaps.length:x.isCompressedTexture&&Array.isArray(x.image)?A.mipmaps.length:1}function w(x){return x===xe||x===B9||x===gl?9728:9729}function z(x){const A=x.target;A.removeEventListener("dispose",z),F(A),A.isVideoTexture&&S.delete(A)}function J(x){const A=x.target;A.removeEventListener("dispose",J),B(A)}function F(x){const A=a.get(x);if(A.__webglInit===void 0)return;const H=x.source,e1=h.get(H);if(e1){const l1=e1[A.__cacheKey];l1.usedTimes--,l1.usedTimes===0&&C(x),Object.keys(e1).length===0&&h.delete(H)}a.remove(x)}function C(x){const A=a.get(x);s.deleteTexture(A.__webglTexture);const H=x.source,e1=h.get(H);delete e1[A.__cacheKey],f.memory.textures--}function B(x){const A=x.texture,H=a.get(x),e1=a.get(A);if(e1.__webglTexture!==void 0&&(s.deleteTexture(e1.__webglTexture),f.memory.textures--),x.depthTexture&&x.depthTexture.dispose(),x.isWebGLCubeRenderTarget)for(let l1=0;l1<6;l1++)s.deleteFramebuffer(H.__webglFramebuffer[l1]),H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer[l1]);else{if(s.deleteFramebuffer(H.__webglFramebuffer),H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer),H.__webglMultisampledFramebuffer&&s.deleteFramebuffer(H.__webglMultisampledFramebuffer),H.__webglColorRenderbuffer)for(let l1=0;l1<H.__webglColorRenderbuffer.length;l1++)H.__webglColorRenderbuffer[l1]&&s.deleteRenderbuffer(H.__webglColorRenderbuffer[l1]);H.__webglDepthRenderbuffer&&s.deleteRenderbuffer(H.__webglDepthRenderbuffer)}if(x.isWebGLMultipleRenderTargets)for(let l1=0,t1=A.length;l1<t1;l1++){const m1=a.get(A[l1]);m1.__webglTexture&&(s.deleteTexture(m1.__webglTexture),f.memory.textures--),a.remove(A[l1])}a.remove(A),a.remove(x)}let Y=0;function $(){Y=0}function K(){const x=Y;return x>=r&&console.warn("THREE.WebGLTextures: Trying to use "+x+" texture units while this GPU supports only "+r),Y+=1,x}function X(x){const A=[];return A.push(x.wrapS),A.push(x.wrapT),A.push(x.wrapR||0),A.push(x.magFilter),A.push(x.minFilter),A.push(x.anisotropy),A.push(x.internalFormat),A.push(x.format),A.push(x.type),A.push(x.generateMipmaps),A.push(x.premultiplyAlpha),A.push(x.flipY),A.push(x.unpackAlignment),A.push(x.encoding),A.join()}function Z(x,A){const H=a.get(x);if(x.isVideoTexture&&Ee(x),x.isRenderTargetTexture===!1&&x.version>0&&H.__version!==x.version){const e1=x.image;if(e1===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(e1.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{f1(H,x,A);return}}l.bindTexture(3553,H.__webglTexture,33984+A)}function r1(x,A){const H=a.get(x);if(x.version>0&&H.__version!==x.version){f1(H,x,A);return}l.bindTexture(35866,H.__webglTexture,33984+A)}function G(x,A){const H=a.get(x);if(x.version>0&&H.__version!==x.version){f1(H,x,A);return}l.bindTexture(32879,H.__webglTexture,33984+A)}function Q(x,A){const H=a.get(x);if(x.version>0&&H.__version!==x.version){o1(H,x,A);return}l.bindTexture(34067,H.__webglTexture,33984+A)}const n1={[s9]:10497,[Ze]:33071,[i9]:33648},R={[xe]:9728,[B9]:9984,[gl]:9986,[Ke]:9729,[W4]:9985,[w6]:9987};function j(x,A,H){if(H?(s.texParameteri(x,10242,n1[A.wrapS]),s.texParameteri(x,10243,n1[A.wrapT]),(x===32879||x===35866)&&s.texParameteri(x,32882,n1[A.wrapR]),s.texParameteri(x,10240,R[A.magFilter]),s.texParameteri(x,10241,R[A.minFilter])):(s.texParameteri(x,10242,33071),s.texParameteri(x,10243,33071),(x===32879||x===35866)&&s.texParameteri(x,32882,33071),(A.wrapS!==Ze||A.wrapT!==Ze)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(x,10240,w(A.magFilter)),s.texParameteri(x,10241,w(A.minFilter)),A.minFilter!==xe&&A.minFilter!==Ke&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const e1=e.get("EXT_texture_filter_anisotropic");if(A.magFilter===xe||A.minFilter!==gl&&A.minFilter!==w6||A.type===W7&&e.has("OES_texture_float_linear")===!1||i===!1&&A.type===D6&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||a.get(A).__currentAnisotropy)&&(s.texParameterf(x,e1.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,n.getMaxAnisotropy())),a.get(A).__currentAnisotropy=A.anisotropy)}}function s1(x,A){let H=!1;x.__webglInit===void 0&&(x.__webglInit=!0,A.addEventListener("dispose",z));const e1=A.source;let l1=h.get(e1);l1===void 0&&(l1={},h.set(e1,l1));const t1=X(A);if(t1!==x.__cacheKey){l1[t1]===void 0&&(l1[t1]={texture:s.createTexture(),usedTimes:0},f.memory.textures++,H=!0),l1[t1].usedTimes++;const m1=l1[x.__cacheKey];m1!==void 0&&(l1[x.__cacheKey].usedTimes--,m1.usedTimes===0&&C(A)),x.__cacheKey=t1,x.__webglTexture=l1[t1].texture}return H}function f1(x,A,H){let e1=3553;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(e1=35866),A.isData3DTexture&&(e1=32879);const l1=s1(x,A),t1=A.source;l.bindTexture(e1,x.__webglTexture,33984+H);const m1=a.get(t1);if(t1.version!==m1.__version||l1===!0){l.activeTexture(33984+H),s.pixelStorei(37440,A.flipY),s.pixelStorei(37441,A.premultiplyAlpha),s.pixelStorei(3317,A.unpackAlignment),s.pixelStorei(37443,0);const u1=T(A)&&v(A.image)===!1;let k=g(A.image,u1,!1,o);k=ke(A,k);const A1=v(k)||i,c1=t.convert(A.format,A.encoding);let b1=t.convert(A.type),g1=b(A.internalFormat,c1,b1,A.encoding,A.isVideoTexture);j(e1,A,A1);let h1;const I1=A.mipmaps,J1=i&&A.isVideoTexture!==!0,ie=m1.__version===void 0||l1===!0,L=y(A,k,A1);if(A.isDepthTexture)g1=6402,i?A.type===W7?g1=36012:A.type===B7?g1=33190:A.type===u6?g1=35056:g1=33189:A.type===W7&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===O7&&g1===6402&&A.type!==f2&&A.type!==B7&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=B7,b1=t.convert(A.type)),A.format===c6&&g1===6402&&(g1=34041,A.type!==u6&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=u6,b1=t.convert(A.type))),ie&&(J1?l.texStorage2D(3553,1,g1,k.width,k.height):l.texImage2D(3553,0,g1,k.width,k.height,0,c1,b1,null));else if(A.isDataTexture)if(I1.length>0&&A1){J1&&ie&&l.texStorage2D(3553,L,g1,I1[0].width,I1[0].height);for(let O=0,q=I1.length;O<q;O++)h1=I1[O],J1?l.texSubImage2D(3553,O,0,0,h1.width,h1.height,c1,b1,h1.data):l.texImage2D(3553,O,g1,h1.width,h1.height,0,c1,b1,h1.data);A.generateMipmaps=!1}else J1?(ie&&l.texStorage2D(3553,L,g1,k.width,k.height),l.texSubImage2D(3553,0,0,0,k.width,k.height,c1,b1,k.data)):l.texImage2D(3553,0,g1,k.width,k.height,0,c1,b1,k.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){J1&&ie&&l.texStorage3D(35866,L,g1,I1[0].width,I1[0].height,k.depth);for(let O=0,q=I1.length;O<q;O++)h1=I1[O],A.format!==Qe?c1!==null?J1?l.compressedTexSubImage3D(35866,O,0,0,0,h1.width,h1.height,k.depth,c1,h1.data,0,0):l.compressedTexImage3D(35866,O,g1,h1.width,h1.height,k.depth,0,h1.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):J1?l.texSubImage3D(35866,O,0,0,0,h1.width,h1.height,k.depth,c1,b1,h1.data):l.texImage3D(35866,O,g1,h1.width,h1.height,k.depth,0,c1,b1,h1.data)}else{J1&&ie&&l.texStorage2D(3553,L,g1,I1[0].width,I1[0].height);for(let O=0,q=I1.length;O<q;O++)h1=I1[O],A.format!==Qe?c1!==null?J1?l.compressedTexSubImage2D(3553,O,0,0,h1.width,h1.height,c1,h1.data):l.compressedTexImage2D(3553,O,g1,h1.width,h1.height,0,h1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):J1?l.texSubImage2D(3553,O,0,0,h1.width,h1.height,c1,b1,h1.data):l.texImage2D(3553,O,g1,h1.width,h1.height,0,c1,b1,h1.data)}else if(A.isDataArrayTexture)J1?(ie&&l.texStorage3D(35866,L,g1,k.width,k.height,k.depth),l.texSubImage3D(35866,0,0,0,0,k.width,k.height,k.depth,c1,b1,k.data)):l.texImage3D(35866,0,g1,k.width,k.height,k.depth,0,c1,b1,k.data);else if(A.isData3DTexture)J1?(ie&&l.texStorage3D(32879,L,g1,k.width,k.height,k.depth),l.texSubImage3D(32879,0,0,0,0,k.width,k.height,k.depth,c1,b1,k.data)):l.texImage3D(32879,0,g1,k.width,k.height,k.depth,0,c1,b1,k.data);else if(A.isFramebufferTexture){if(ie)if(J1)l.texStorage2D(3553,L,g1,k.width,k.height);else{let O=k.width,q=k.height;for(let i1=0;i1<L;i1++)l.texImage2D(3553,i1,g1,O,q,0,c1,b1,null),O>>=1,q>>=1}}else if(I1.length>0&&A1){J1&&ie&&l.texStorage2D(3553,L,g1,I1[0].width,I1[0].height);for(let O=0,q=I1.length;O<q;O++)h1=I1[O],J1?l.texSubImage2D(3553,O,0,0,c1,b1,h1):l.texImage2D(3553,O,g1,c1,b1,h1);A.generateMipmaps=!1}else J1?(ie&&l.texStorage2D(3553,L,g1,k.width,k.height),l.texSubImage2D(3553,0,0,0,c1,b1,k)):l.texImage2D(3553,0,g1,c1,b1,k);E(A,A1)&&D(e1),m1.__version=t1.version,A.onUpdate&&A.onUpdate(A)}x.__version=A.version}function o1(x,A,H){if(A.image.length!==6)return;const e1=s1(x,A),l1=A.source;l.bindTexture(34067,x.__webglTexture,33984+H);const t1=a.get(l1);if(l1.version!==t1.__version||e1===!0){l.activeTexture(33984+H),s.pixelStorei(37440,A.flipY),s.pixelStorei(37441,A.premultiplyAlpha),s.pixelStorei(3317,A.unpackAlignment),s.pixelStorei(37443,0);const m1=A.isCompressedTexture||A.image[0].isCompressedTexture,u1=A.image[0]&&A.image[0].isDataTexture,k=[];for(let O=0;O<6;O++)!m1&&!u1?k[O]=g(A.image[O],!1,!0,u):k[O]=u1?A.image[O].image:A.image[O],k[O]=ke(A,k[O]);const A1=k[0],c1=v(A1)||i,b1=t.convert(A.format,A.encoding),g1=t.convert(A.type),h1=b(A.internalFormat,b1,g1,A.encoding),I1=i&&A.isVideoTexture!==!0,J1=t1.__version===void 0||e1===!0;let ie=y(A,A1,c1);j(34067,A,c1);let L;if(m1){I1&&J1&&l.texStorage2D(34067,ie,h1,A1.width,A1.height);for(let O=0;O<6;O++){L=k[O].mipmaps;for(let q=0;q<L.length;q++){const i1=L[q];A.format!==Qe?b1!==null?I1?l.compressedTexSubImage2D(34069+O,q,0,0,i1.width,i1.height,b1,i1.data):l.compressedTexImage2D(34069+O,q,h1,i1.width,i1.height,0,i1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):I1?l.texSubImage2D(34069+O,q,0,0,i1.width,i1.height,b1,g1,i1.data):l.texImage2D(34069+O,q,h1,i1.width,i1.height,0,b1,g1,i1.data)}}}else{L=A.mipmaps,I1&&J1&&(L.length>0&&ie++,l.texStorage2D(34067,ie,h1,k[0].width,k[0].height));for(let O=0;O<6;O++)if(u1){I1?l.texSubImage2D(34069+O,0,0,0,k[O].width,k[O].height,b1,g1,k[O].data):l.texImage2D(34069+O,0,h1,k[O].width,k[O].height,0,b1,g1,k[O].data);for(let q=0;q<L.length;q++){const d1=L[q].image[O].image;I1?l.texSubImage2D(34069+O,q+1,0,0,d1.width,d1.height,b1,g1,d1.data):l.texImage2D(34069+O,q+1,h1,d1.width,d1.height,0,b1,g1,d1.data)}}else{I1?l.texSubImage2D(34069+O,0,0,0,b1,g1,k[O]):l.texImage2D(34069+O,0,h1,b1,g1,k[O]);for(let q=0;q<L.length;q++){const i1=L[q];I1?l.texSubImage2D(34069+O,q+1,0,0,b1,g1,i1.image[O]):l.texImage2D(34069+O,q+1,h1,b1,g1,i1.image[O])}}}E(A,c1)&&D(34067),t1.__version=l1.version,A.onUpdate&&A.onUpdate(A)}x.__version=A.version}function p1(x,A,H,e1,l1){const t1=t.convert(H.format,H.encoding),m1=t.convert(H.type),u1=b(H.internalFormat,t1,m1,H.encoding);a.get(A).__hasExternalTextures||(l1===32879||l1===35866?l.texImage3D(l1,0,u1,A.width,A.height,A.depth,0,t1,m1,null):l.texImage2D(l1,0,u1,A.width,A.height,0,t1,m1,null)),l.bindFramebuffer(36160,x),W1(A)?c.framebufferTexture2DMultisampleEXT(36160,e1,l1,a.get(H).__webglTexture,0,z1(A)):(l1===3553||l1>=34069&&l1<=34074)&&s.framebufferTexture2D(36160,e1,l1,a.get(H).__webglTexture,0),l.bindFramebuffer(36160,null)}function x1(x,A,H){if(s.bindRenderbuffer(36161,x),A.depthBuffer&&!A.stencilBuffer){let e1=33189;if(H||W1(A)){const l1=A.depthTexture;l1&&l1.isDepthTexture&&(l1.type===W7?e1=36012:l1.type===B7&&(e1=33190));const t1=z1(A);W1(A)?c.renderbufferStorageMultisampleEXT(36161,t1,e1,A.width,A.height):s.renderbufferStorageMultisample(36161,t1,e1,A.width,A.height)}else s.renderbufferStorage(36161,e1,A.width,A.height);s.framebufferRenderbuffer(36160,36096,36161,x)}else if(A.depthBuffer&&A.stencilBuffer){const e1=z1(A);H&&W1(A)===!1?s.renderbufferStorageMultisample(36161,e1,35056,A.width,A.height):W1(A)?c.renderbufferStorageMultisampleEXT(36161,e1,35056,A.width,A.height):s.renderbufferStorage(36161,34041,A.width,A.height),s.framebufferRenderbuffer(36160,33306,36161,x)}else{const e1=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let l1=0;l1<e1.length;l1++){const t1=e1[l1],m1=t.convert(t1.format,t1.encoding),u1=t.convert(t1.type),k=b(t1.internalFormat,m1,u1,t1.encoding),A1=z1(A);H&&W1(A)===!1?s.renderbufferStorageMultisample(36161,A1,k,A.width,A.height):W1(A)?c.renderbufferStorageMultisampleEXT(36161,A1,k,A.width,A.height):s.renderbufferStorage(36161,k,A.width,A.height)}}s.bindRenderbuffer(36161,null)}function M1(x,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(l.bindFramebuffer(36160,x),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!a.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),Z(A.depthTexture,0);const e1=a.get(A.depthTexture).__webglTexture,l1=z1(A);if(A.depthTexture.format===O7)W1(A)?c.framebufferTexture2DMultisampleEXT(36160,36096,3553,e1,0,l1):s.framebufferTexture2D(36160,36096,3553,e1,0);else if(A.depthTexture.format===c6)W1(A)?c.framebufferTexture2DMultisampleEXT(36160,33306,3553,e1,0,l1):s.framebufferTexture2D(36160,33306,3553,e1,0);else throw new Error("Unknown depthTexture format")}function C1(x){const A=a.get(x),H=x.isWebGLCubeRenderTarget===!0;if(x.depthTexture&&!A.__autoAllocateDepthBuffer){if(H)throw new Error("target.depthTexture not supported in Cube render targets");M1(A.__webglFramebuffer,x)}else if(H){A.__webglDepthbuffer=[];for(let e1=0;e1<6;e1++)l.bindFramebuffer(36160,A.__webglFramebuffer[e1]),A.__webglDepthbuffer[e1]=s.createRenderbuffer(),x1(A.__webglDepthbuffer[e1],x,!1)}else l.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=s.createRenderbuffer(),x1(A.__webglDepthbuffer,x,!1);l.bindFramebuffer(36160,null)}function se(x,A,H){const e1=a.get(x);A!==void 0&&p1(e1.__webglFramebuffer,x,x.texture,36064,3553),H!==void 0&&C1(x)}function ge(x){const A=x.texture,H=a.get(x),e1=a.get(A);x.addEventListener("dispose",J),x.isWebGLMultipleRenderTargets!==!0&&(e1.__webglTexture===void 0&&(e1.__webglTexture=s.createTexture()),e1.__version=A.version,f.memory.textures++);const l1=x.isWebGLCubeRenderTarget===!0,t1=x.isWebGLMultipleRenderTargets===!0,m1=v(x)||i;if(l1){H.__webglFramebuffer=[];for(let u1=0;u1<6;u1++)H.__webglFramebuffer[u1]=s.createFramebuffer()}else{if(H.__webglFramebuffer=s.createFramebuffer(),t1)if(n.drawBuffers){const u1=x.texture;for(let k=0,A1=u1.length;k<A1;k++){const c1=a.get(u1[k]);c1.__webglTexture===void 0&&(c1.__webglTexture=s.createTexture(),f.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(i&&x.samples>0&&W1(x)===!1){const u1=t1?A:[A];H.__webglMultisampledFramebuffer=s.createFramebuffer(),H.__webglColorRenderbuffer=[],l.bindFramebuffer(36160,H.__webglMultisampledFramebuffer);for(let k=0;k<u1.length;k++){const A1=u1[k];H.__webglColorRenderbuffer[k]=s.createRenderbuffer(),s.bindRenderbuffer(36161,H.__webglColorRenderbuffer[k]);const c1=t.convert(A1.format,A1.encoding),b1=t.convert(A1.type),g1=b(A1.internalFormat,c1,b1,A1.encoding,x.isXRRenderTarget===!0),h1=z1(x);s.renderbufferStorageMultisample(36161,h1,g1,x.width,x.height),s.framebufferRenderbuffer(36160,36064+k,36161,H.__webglColorRenderbuffer[k])}s.bindRenderbuffer(36161,null),x.depthBuffer&&(H.__webglDepthRenderbuffer=s.createRenderbuffer(),x1(H.__webglDepthRenderbuffer,x,!0)),l.bindFramebuffer(36160,null)}}if(l1){l.bindTexture(34067,e1.__webglTexture),j(34067,A,m1);for(let u1=0;u1<6;u1++)p1(H.__webglFramebuffer[u1],x,A,36064,34069+u1);E(A,m1)&&D(34067),l.unbindTexture()}else if(t1){const u1=x.texture;for(let k=0,A1=u1.length;k<A1;k++){const c1=u1[k],b1=a.get(c1);l.bindTexture(3553,b1.__webglTexture),j(3553,c1,m1),p1(H.__webglFramebuffer,x,c1,36064+k,3553),E(c1,m1)&&D(3553)}l.unbindTexture()}else{let u1=3553;(x.isWebGL3DRenderTarget||x.isWebGLArrayRenderTarget)&&(i?u1=x.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),l.bindTexture(u1,e1.__webglTexture),j(u1,A,m1),p1(H.__webglFramebuffer,x,A,36064,u1),E(A,m1)&&D(u1),l.unbindTexture()}x.depthBuffer&&C1(x)}function oe(x){const A=v(x)||i,H=x.isWebGLMultipleRenderTargets===!0?x.texture:[x.texture];for(let e1=0,l1=H.length;e1<l1;e1++){const t1=H[e1];if(E(t1,A)){const m1=x.isWebGLCubeRenderTarget?34067:3553,u1=a.get(t1).__webglTexture;l.bindTexture(m1,u1),D(m1),l.unbindTexture()}}}function $1(x){if(i&&x.samples>0&&W1(x)===!1){const A=x.isWebGLMultipleRenderTargets?x.texture:[x.texture],H=x.width,e1=x.height;let l1=16384;const t1=[],m1=x.stencilBuffer?33306:36096,u1=a.get(x),k=x.isWebGLMultipleRenderTargets===!0;if(k)for(let A1=0;A1<A.length;A1++)l.bindFramebuffer(36160,u1.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+A1,36161,null),l.bindFramebuffer(36160,u1.__webglFramebuffer),s.framebufferTexture2D(36009,36064+A1,3553,null,0);l.bindFramebuffer(36008,u1.__webglMultisampledFramebuffer),l.bindFramebuffer(36009,u1.__webglFramebuffer);for(let A1=0;A1<A.length;A1++){t1.push(36064+A1),x.depthBuffer&&t1.push(m1);const c1=u1.__ignoreDepthValues!==void 0?u1.__ignoreDepthValues:!1;if(c1===!1&&(x.depthBuffer&&(l1|=256),x.stencilBuffer&&(l1|=1024)),k&&s.framebufferRenderbuffer(36008,36064,36161,u1.__webglColorRenderbuffer[A1]),c1===!0&&(s.invalidateFramebuffer(36008,[m1]),s.invalidateFramebuffer(36009,[m1])),k){const b1=a.get(A[A1]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,b1,0)}s.blitFramebuffer(0,0,H,e1,0,0,H,e1,l1,9728),m&&s.invalidateFramebuffer(36008,t1)}if(l.bindFramebuffer(36008,null),l.bindFramebuffer(36009,null),k)for(let A1=0;A1<A.length;A1++){l.bindFramebuffer(36160,u1.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+A1,36161,u1.__webglColorRenderbuffer[A1]);const c1=a.get(A[A1]).__webglTexture;l.bindFramebuffer(36160,u1.__webglFramebuffer),s.framebufferTexture2D(36009,36064+A1,3553,c1,0)}l.bindFramebuffer(36009,u1.__webglMultisampledFramebuffer)}}function z1(x){return Math.min(d,x.samples)}function W1(x){const A=a.get(x);return i&&x.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function Ee(x){const A=f.render.frame;S.get(x)!==A&&(S.set(x,A),x.update())}function ke(x,A){const H=x.encoding,e1=x.format,l1=x.type;return x.isCompressedTexture===!0||x.isVideoTexture===!0||x.format===f9||H!==H7&&(H===V1?i===!1?e.has("EXT_sRGB")===!0&&e1===Qe?(x.format=f9,x.minFilter=Ke,x.generateMipmaps=!1):A=d2.sRGBToLinear(A):(e1!==Qe||l1!==z7)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",H)),A}this.allocateTextureUnit=K,this.resetTextureUnits=$,this.setTexture2D=Z,this.setTexture2DArray=r1,this.setTexture3D=G,this.setTextureCube=Q,this.rebindTextures=se,this.setupRenderTarget=ge,this.updateRenderTargetMipmap=oe,this.updateMultisampleRenderTarget=$1,this.setupDepthRenderbuffer=C1,this.setupFrameBufferTexture=p1,this.useMultisampledRTT=W1}function si(s,e,l){const a=l.isWebGL2;function n(t,f=null){let i;if(t===z7)return 5121;if(t===V4)return 32819;if(t===K4)return 32820;if(t===O4)return 5120;if(t===z4)return 5122;if(t===f2)return 5123;if(t===H4)return 5124;if(t===B7)return 5125;if(t===W7)return 5126;if(t===D6)return a?5131:(i=e.get("OES_texture_half_float"),i!==null?i.HALF_FLOAT_OES:null);if(t===k4)return 6406;if(t===Qe)return 6408;if(t===J4)return 6409;if(t===Y4)return 6410;if(t===O7)return 6402;if(t===c6)return 34041;if(t===f9)return i=e.get("EXT_sRGB"),i!==null?i.SRGB_ALPHA_EXT:null;if(t===X4)return 6403;if(t===Z4)return 36244;if(t===Q4)return 33319;if(t===q4)return 33320;if(t===$4)return 36249;if(t===Al||t===bl||t===_l||t===Ul)if(f===V1)if(i=e.get("WEBGL_compressed_texture_s3tc_srgb"),i!==null){if(t===Al)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(t===bl)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(t===_l)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(t===Ul)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(i=e.get("WEBGL_compressed_texture_s3tc"),i!==null){if(t===Al)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===bl)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===_l)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Ul)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(t===W9||t===O9||t===z9||t===H9)if(i=e.get("WEBGL_compressed_texture_pvrtc"),i!==null){if(t===W9)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===O9)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===z9)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===H9)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(t===j4)return i=e.get("WEBGL_compressed_texture_etc1"),i!==null?i.COMPRESSED_RGB_ETC1_WEBGL:null;if(t===V9||t===K9)if(i=e.get("WEBGL_compressed_texture_etc"),i!==null){if(t===V9)return f===V1?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(t===K9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(t===k9||t===J9||t===Y9||t===X9||t===Z9||t===Q9||t===q9||t===$9||t===j9||t===e3||t===l3||t===a3||t===n3||t===t3)if(i=e.get("WEBGL_compressed_texture_astc"),i!==null){if(t===k9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(t===J9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(t===Y9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(t===X9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(t===Z9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(t===Q9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(t===q9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(t===$9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(t===j9)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(t===e3)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(t===l3)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(t===a3)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(t===n3)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(t===t3)return f===V1?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(t===xl)if(i=e.get("EXT_texture_compression_bptc"),i!==null){if(t===xl)return f===V1?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(t===ea||t===s3||t===i3||t===f3)if(i=e.get("EXT_texture_compression_rgtc"),i!==null){if(t===xl)return i.COMPRESSED_RED_RGTC1_EXT;if(t===s3)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(t===i3)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(t===f3)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return t===u6?a?34042:(i=e.get("WEBGL_depth_texture"),i!==null?i.UNSIGNED_INT_24_8_WEBGL:null):s[t]!==void 0?s[t]:null}return{convert:n}}class ii extends Ge{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}let E6=class extends ye{constructor(){super(),this.isGroup=!0,this.type="Group"}};const fi={type:"move"};class Xl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new E6,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new E6,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new E6,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const l=this._hand;if(l)for(const a of e.hand.values())this._getHandJoint(l,a)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,l,a){let n=null,t=null,f=null;const i=this._targetRay,r=this._grip,u=this._hand;if(e&&l.session.visibilityState!=="visible-blurred"){if(u&&e.hand){f=!0;for(const p of e.hand.values()){const h=l.getJointPose(p,a),_=this._getHandJoint(u,p);h!==null&&(_.matrix.fromArray(h.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.jointRadius=h.radius),_.visible=h!==null}const o=u.joints["index-finger-tip"],d=u.joints["thumb-tip"],c=o.position.distanceTo(d.position),m=.02,S=.005;u.inputState.pinching&&c>m+S?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&c<=m-S&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else r!==null&&e.gripSpace&&(t=l.getPose(e.gripSpace,a),t!==null&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),t.linearVelocity?(r.hasLinearVelocity=!0,r.linearVelocity.copy(t.linearVelocity)):r.hasLinearVelocity=!1,t.angularVelocity?(r.hasAngularVelocity=!0,r.angularVelocity.copy(t.angularVelocity)):r.hasAngularVelocity=!1));i!==null&&(n=l.getPose(e.targetRaySpace,a),n===null&&t!==null&&(n=t),n!==null&&(i.matrix.fromArray(n.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),n.linearVelocity?(i.hasLinearVelocity=!0,i.linearVelocity.copy(n.linearVelocity)):i.hasLinearVelocity=!1,n.angularVelocity?(i.hasAngularVelocity=!0,i.angularVelocity.copy(n.angularVelocity)):i.hasAngularVelocity=!1,this.dispatchEvent(fi)))}return i!==null&&(i.visible=n!==null),r!==null&&(r.visible=t!==null),u!==null&&(u.visible=f!==null),this}_getHandJoint(e,l){if(e.joints[l.jointName]===void 0){const a=new E6;a.matrixAutoUpdate=!1,a.visible=!1,e.joints[l.jointName]=a,e.add(a)}return e.joints[l.jointName]}}class ui extends We{constructor(e,l,a,n,t,f,i,r,u,o){if(o=o!==void 0?o:O7,o!==O7&&o!==c6)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");a===void 0&&o===O7&&(a=B7),a===void 0&&o===c6&&(a=u6),super(null,n,t,f,i,r,o,a,u),this.isDepthTexture=!0,this.image={width:e,height:l},this.magFilter=i!==void 0?i:xe,this.minFilter=r!==void 0?r:xe,this.flipY=!1,this.generateMipmaps=!1}}class ri extends m6{constructor(e,l){super();const a=this;let n=null,t=1,f=null,i="local-floor",r=1,u=null,o=null,d=null,c=null,m=null,S=null;const p=l.getContextAttributes();let h=null,_=null;const M=[],g=[],v=new Set,T=new Map,E=new Ge;E.layers.enable(1),E.viewport=new K1;const D=new Ge;D.layers.enable(2),D.viewport=new K1;const b=[E,D],y=new ii;y.layers.enable(1),y.layers.enable(2);let w=null,z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(G){let Q=M[G];return Q===void 0&&(Q=new Xl,M[G]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(G){let Q=M[G];return Q===void 0&&(Q=new Xl,M[G]=Q),Q.getGripSpace()},this.getHand=function(G){let Q=M[G];return Q===void 0&&(Q=new Xl,M[G]=Q),Q.getHandSpace()};function J(G){const Q=g.indexOf(G.inputSource);if(Q===-1)return;const n1=M[Q];n1!==void 0&&n1.dispatchEvent({type:G.type,data:G.inputSource})}function F(){n.removeEventListener("select",J),n.removeEventListener("selectstart",J),n.removeEventListener("selectend",J),n.removeEventListener("squeeze",J),n.removeEventListener("squeezestart",J),n.removeEventListener("squeezeend",J),n.removeEventListener("end",F),n.removeEventListener("inputsourceschange",C);for(let G=0;G<M.length;G++){const Q=g[G];Q!==null&&(g[G]=null,M[G].disconnect(Q))}w=null,z=null,e.setRenderTarget(h),m=null,c=null,d=null,n=null,_=null,r1.stop(),a.isPresenting=!1,a.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(G){t=G,a.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(G){i=G,a.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||f},this.setReferenceSpace=function(G){u=G},this.getBaseLayer=function(){return c!==null?c:m},this.getBinding=function(){return d},this.getFrame=function(){return S},this.getSession=function(){return n},this.setSession=async function(G){if(n=G,n!==null){if(h=e.getRenderTarget(),n.addEventListener("select",J),n.addEventListener("selectstart",J),n.addEventListener("selectend",J),n.addEventListener("squeeze",J),n.addEventListener("squeezestart",J),n.addEventListener("squeezeend",J),n.addEventListener("end",F),n.addEventListener("inputsourceschange",C),p.xrCompatible!==!0&&await l.makeXRCompatible(),n.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Q={antialias:n.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:t};m=new XRWebGLLayer(n,l,Q),n.updateRenderState({baseLayer:m}),_=new V7(m.framebufferWidth,m.framebufferHeight,{format:Qe,type:z7,encoding:e.outputEncoding,stencilBuffer:p.stencil})}else{let Q=null,n1=null,R=null;p.depth&&(R=p.stencil?35056:33190,Q=p.stencil?c6:O7,n1=p.stencil?u6:B7);const j={colorFormat:32856,depthFormat:R,scaleFactor:t};d=new XRWebGLBinding(n,l),c=d.createProjectionLayer(j),n.updateRenderState({layers:[c]}),_=new V7(c.textureWidth,c.textureHeight,{format:Qe,type:z7,depthTexture:new ui(c.textureWidth,c.textureHeight,n1,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const s1=e.properties.get(_);s1.__ignoreDepthValues=c.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(r),u=null,f=await n.requestReferenceSpace(i),r1.setContext(n),r1.start(),a.isPresenting=!0,a.dispatchEvent({type:"sessionstart"})}};function C(G){for(let Q=0;Q<G.removed.length;Q++){const n1=G.removed[Q],R=g.indexOf(n1);R>=0&&(g[R]=null,M[R].disconnect(n1))}for(let Q=0;Q<G.added.length;Q++){const n1=G.added[Q];let R=g.indexOf(n1);if(R===-1){for(let s1=0;s1<M.length;s1++)if(s1>=g.length){g.push(n1),R=s1;break}else if(g[s1]===null){g[s1]=n1,R=s1;break}if(R===-1)break}const j=M[R];j&&j.connect(n1)}}const B=new I,Y=new I;function $(G,Q,n1){B.setFromMatrixPosition(Q.matrixWorld),Y.setFromMatrixPosition(n1.matrixWorld);const R=B.distanceTo(Y),j=Q.projectionMatrix.elements,s1=n1.projectionMatrix.elements,f1=j[14]/(j[10]-1),o1=j[14]/(j[10]+1),p1=(j[9]+1)/j[5],x1=(j[9]-1)/j[5],M1=(j[8]-1)/j[0],C1=(s1[8]+1)/s1[0],se=f1*M1,ge=f1*C1,oe=R/(-M1+C1),$1=oe*-M1;Q.matrixWorld.decompose(G.position,G.quaternion,G.scale),G.translateX($1),G.translateZ(oe),G.matrixWorld.compose(G.position,G.quaternion,G.scale),G.matrixWorldInverse.copy(G.matrixWorld).invert();const z1=f1+oe,W1=o1+oe,Ee=se-$1,ke=ge+(R-$1),x=p1*o1/W1*z1,A=x1*o1/W1*z1;G.projectionMatrix.makePerspective(Ee,ke,x,A,z1,W1)}function K(G,Q){Q===null?G.matrixWorld.copy(G.matrix):G.matrixWorld.multiplyMatrices(Q.matrixWorld,G.matrix),G.matrixWorldInverse.copy(G.matrixWorld).invert()}this.updateCamera=function(G){if(n===null)return;y.near=D.near=E.near=G.near,y.far=D.far=E.far=G.far,(w!==y.near||z!==y.far)&&(n.updateRenderState({depthNear:y.near,depthFar:y.far}),w=y.near,z=y.far);const Q=G.parent,n1=y.cameras;K(y,Q);for(let j=0;j<n1.length;j++)K(n1[j],Q);y.matrixWorld.decompose(y.position,y.quaternion,y.scale),G.matrix.copy(y.matrix),G.matrix.decompose(G.position,G.quaternion,G.scale);const R=G.children;for(let j=0,s1=R.length;j<s1;j++)R[j].updateMatrixWorld(!0);n1.length===2?$(y,E,D):y.projectionMatrix.copy(E.projectionMatrix)},this.getCamera=function(){return y},this.getFoveation=function(){if(!(c===null&&m===null))return r},this.setFoveation=function(G){r=G,c!==null&&(c.fixedFoveation=G),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=G)},this.getPlanes=function(){return v};let X=null;function Z(G,Q){if(o=Q.getViewerPose(u||f),S=Q,o!==null){const n1=o.views;m!==null&&(e.setRenderTargetFramebuffer(_,m.framebuffer),e.setRenderTarget(_));let R=!1;n1.length!==y.cameras.length&&(y.cameras.length=0,R=!0);for(let j=0;j<n1.length;j++){const s1=n1[j];let f1=null;if(m!==null)f1=m.getViewport(s1);else{const p1=d.getViewSubImage(c,s1);f1=p1.viewport,j===0&&(e.setRenderTargetTextures(_,p1.colorTexture,c.ignoreDepthValues?void 0:p1.depthStencilTexture),e.setRenderTarget(_))}let o1=b[j];o1===void 0&&(o1=new Ge,o1.layers.enable(j),o1.viewport=new K1,b[j]=o1),o1.matrix.fromArray(s1.transform.matrix),o1.projectionMatrix.fromArray(s1.projectionMatrix),o1.viewport.set(f1.x,f1.y,f1.width,f1.height),j===0&&y.matrix.copy(o1.matrix),R===!0&&y.cameras.push(o1)}}for(let n1=0;n1<M.length;n1++){const R=g[n1],j=M[n1];R!==null&&j!==void 0&&j.update(R,Q,u||f)}if(X&&X(G,Q),Q.detectedPlanes){a.dispatchEvent({type:"planesdetected",data:Q.detectedPlanes});let n1=null;for(const R of v)Q.detectedPlanes.has(R)||(n1===null&&(n1=[]),n1.push(R));if(n1!==null)for(const R of n1)v.delete(R),T.delete(R),a.dispatchEvent({type:"planeremoved",data:R});for(const R of Q.detectedPlanes)if(!v.has(R))v.add(R),T.set(R,Q.lastChangedTime),a.dispatchEvent({type:"planeadded",data:R});else{const j=T.get(R);R.lastChangedTime>j&&(T.set(R,R.lastChangedTime),a.dispatchEvent({type:"planechanged",data:R}))}}S=null}const r1=new x2;r1.setAnimationLoop(Z),this.setAnimationLoop=function(G){X=G},this.dispose=function(){}}}function oi(s,e){function l(p,h){h.color.getRGB(p.fogColor.value,b2(s)),h.isFog?(p.fogNear.value=h.near,p.fogFar.value=h.far):h.isFogExp2&&(p.fogDensity.value=h.density)}function a(p,h,_,M,g){h.isMeshBasicMaterial||h.isMeshLambertMaterial?n(p,h):h.isMeshToonMaterial?(n(p,h),o(p,h)):h.isMeshPhongMaterial?(n(p,h),u(p,h)):h.isMeshStandardMaterial?(n(p,h),d(p,h),h.isMeshPhysicalMaterial&&c(p,h,g)):h.isMeshMatcapMaterial?(n(p,h),m(p,h)):h.isMeshDepthMaterial?n(p,h):h.isMeshDistanceMaterial?(n(p,h),S(p,h)):h.isMeshNormalMaterial?n(p,h):h.isLineBasicMaterial?(t(p,h),h.isLineDashedMaterial&&f(p,h)):h.isPointsMaterial?i(p,h,_,M):h.isSpriteMaterial?r(p,h):h.isShadowMaterial?(p.color.value.copy(h.color),p.opacity.value=h.opacity):h.isShaderMaterial&&(h.uniformsNeedUpdate=!1)}function n(p,h){p.opacity.value=h.opacity,h.color&&p.diffuse.value.copy(h.color),h.emissive&&p.emissive.value.copy(h.emissive).multiplyScalar(h.emissiveIntensity),h.map&&(p.map.value=h.map),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.bumpMap&&(p.bumpMap.value=h.bumpMap,p.bumpScale.value=h.bumpScale,h.side===Be&&(p.bumpScale.value*=-1)),h.displacementMap&&(p.displacementMap.value=h.displacementMap,p.displacementScale.value=h.displacementScale,p.displacementBias.value=h.displacementBias),h.emissiveMap&&(p.emissiveMap.value=h.emissiveMap),h.normalMap&&(p.normalMap.value=h.normalMap,p.normalScale.value.copy(h.normalScale),h.side===Be&&p.normalScale.value.negate()),h.specularMap&&(p.specularMap.value=h.specularMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest);const _=e.get(h).envMap;if(_&&(p.envMap.value=_,p.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=h.reflectivity,p.ior.value=h.ior,p.refractionRatio.value=h.refractionRatio),h.lightMap){p.lightMap.value=h.lightMap;const v=s.useLegacyLights===!0?Math.PI:1;p.lightMapIntensity.value=h.lightMapIntensity*v}h.aoMap&&(p.aoMap.value=h.aoMap,p.aoMapIntensity.value=h.aoMapIntensity);let M;h.map?M=h.map:h.specularMap?M=h.specularMap:h.displacementMap?M=h.displacementMap:h.normalMap?M=h.normalMap:h.bumpMap?M=h.bumpMap:h.roughnessMap?M=h.roughnessMap:h.metalnessMap?M=h.metalnessMap:h.alphaMap?M=h.alphaMap:h.emissiveMap?M=h.emissiveMap:h.clearcoatMap?M=h.clearcoatMap:h.clearcoatNormalMap?M=h.clearcoatNormalMap:h.clearcoatRoughnessMap?M=h.clearcoatRoughnessMap:h.iridescenceMap?M=h.iridescenceMap:h.iridescenceThicknessMap?M=h.iridescenceThicknessMap:h.specularIntensityMap?M=h.specularIntensityMap:h.specularColorMap?M=h.specularColorMap:h.transmissionMap?M=h.transmissionMap:h.thicknessMap?M=h.thicknessMap:h.sheenColorMap?M=h.sheenColorMap:h.sheenRoughnessMap&&(M=h.sheenRoughnessMap),M!==void 0&&(M.isWebGLRenderTarget&&(M=M.texture),M.matrixAutoUpdate===!0&&M.updateMatrix(),p.uvTransform.value.copy(M.matrix));let g;h.aoMap?g=h.aoMap:h.lightMap&&(g=h.lightMap),g!==void 0&&(g.isWebGLRenderTarget&&(g=g.texture),g.matrixAutoUpdate===!0&&g.updateMatrix(),p.uv2Transform.value.copy(g.matrix))}function t(p,h){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity}function f(p,h){p.dashSize.value=h.dashSize,p.totalSize.value=h.dashSize+h.gapSize,p.scale.value=h.scale}function i(p,h,_,M){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity,p.size.value=h.size*_,p.scale.value=M*.5,h.map&&(p.map.value=h.map),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest);let g;h.map?g=h.map:h.alphaMap&&(g=h.alphaMap),g!==void 0&&(g.matrixAutoUpdate===!0&&g.updateMatrix(),p.uvTransform.value.copy(g.matrix))}function r(p,h){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity,p.rotation.value=h.rotation,h.map&&(p.map.value=h.map),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest);let _;h.map?_=h.map:h.alphaMap&&(_=h.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),p.uvTransform.value.copy(_.matrix))}function u(p,h){p.specular.value.copy(h.specular),p.shininess.value=Math.max(h.shininess,1e-4)}function o(p,h){h.gradientMap&&(p.gradientMap.value=h.gradientMap)}function d(p,h){p.roughness.value=h.roughness,p.metalness.value=h.metalness,h.roughnessMap&&(p.roughnessMap.value=h.roughnessMap),h.metalnessMap&&(p.metalnessMap.value=h.metalnessMap),e.get(h).envMap&&(p.envMapIntensity.value=h.envMapIntensity)}function c(p,h,_){p.ior.value=h.ior,h.sheen>0&&(p.sheenColor.value.copy(h.sheenColor).multiplyScalar(h.sheen),p.sheenRoughness.value=h.sheenRoughness,h.sheenColorMap&&(p.sheenColorMap.value=h.sheenColorMap),h.sheenRoughnessMap&&(p.sheenRoughnessMap.value=h.sheenRoughnessMap)),h.clearcoat>0&&(p.clearcoat.value=h.clearcoat,p.clearcoatRoughness.value=h.clearcoatRoughness,h.clearcoatMap&&(p.clearcoatMap.value=h.clearcoatMap),h.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=h.clearcoatRoughnessMap),h.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(h.clearcoatNormalScale),p.clearcoatNormalMap.value=h.clearcoatNormalMap,h.side===Be&&p.clearcoatNormalScale.value.negate())),h.iridescence>0&&(p.iridescence.value=h.iridescence,p.iridescenceIOR.value=h.iridescenceIOR,p.iridescenceThicknessMinimum.value=h.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=h.iridescenceThicknessRange[1],h.iridescenceMap&&(p.iridescenceMap.value=h.iridescenceMap),h.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=h.iridescenceThicknessMap)),h.transmission>0&&(p.transmission.value=h.transmission,p.transmissionSamplerMap.value=_.texture,p.transmissionSamplerSize.value.set(_.width,_.height),h.transmissionMap&&(p.transmissionMap.value=h.transmissionMap),p.thickness.value=h.thickness,h.thicknessMap&&(p.thicknessMap.value=h.thicknessMap),p.attenuationDistance.value=h.attenuationDistance,p.attenuationColor.value.copy(h.attenuationColor)),p.specularIntensity.value=h.specularIntensity,p.specularColor.value.copy(h.specularColor),h.specularIntensityMap&&(p.specularIntensityMap.value=h.specularIntensityMap),h.specularColorMap&&(p.specularColorMap.value=h.specularColorMap)}function m(p,h){h.matcap&&(p.matcap.value=h.matcap)}function S(p,h){p.referencePosition.value.copy(h.referencePosition),p.nearDistance.value=h.nearDistance,p.farDistance.value=h.farDistance}return{refreshFogUniforms:l,refreshMaterialUniforms:a}}function di(s,e,l,a){let n={},t={},f=[];const i=l.isWebGL2?s.getParameter(35375):0;function r(M,g){const v=g.program;a.uniformBlockBinding(M,v)}function u(M,g){let v=n[M.id];v===void 0&&(S(M),v=o(M),n[M.id]=v,M.addEventListener("dispose",h));const T=g.program;a.updateUBOMapping(M,T);const E=e.render.frame;t[M.id]!==E&&(c(M),t[M.id]=E)}function o(M){const g=d();M.__bindingPointIndex=g;const v=s.createBuffer(),T=M.__size,E=M.usage;return s.bindBuffer(35345,v),s.bufferData(35345,T,E),s.bindBuffer(35345,null),s.bindBufferBase(35345,g,v),v}function d(){for(let M=0;M<i;M++)if(f.indexOf(M)===-1)return f.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function c(M){const g=n[M.id],v=M.uniforms,T=M.__cache;s.bindBuffer(35345,g);for(let E=0,D=v.length;E<D;E++){const b=v[E];if(m(b,E,T)===!0){const y=b.__offset,w=Array.isArray(b.value)?b.value:[b.value];let z=0;for(let J=0;J<w.length;J++){const F=w[J],C=p(F);typeof F=="number"?(b.__data[0]=F,s.bufferSubData(35345,y+z,b.__data)):F.isMatrix3?(b.__data[0]=F.elements[0],b.__data[1]=F.elements[1],b.__data[2]=F.elements[2],b.__data[3]=F.elements[0],b.__data[4]=F.elements[3],b.__data[5]=F.elements[4],b.__data[6]=F.elements[5],b.__data[7]=F.elements[0],b.__data[8]=F.elements[6],b.__data[9]=F.elements[7],b.__data[10]=F.elements[8],b.__data[11]=F.elements[0]):(F.toArray(b.__data,z),z+=C.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(35345,y,b.__data)}}s.bindBuffer(35345,null)}function m(M,g,v){const T=M.value;if(v[g]===void 0){if(typeof T=="number")v[g]=T;else{const E=Array.isArray(T)?T:[T],D=[];for(let b=0;b<E.length;b++)D.push(E[b].clone());v[g]=D}return!0}else if(typeof T=="number"){if(v[g]!==T)return v[g]=T,!0}else{const E=Array.isArray(v[g])?v[g]:[v[g]],D=Array.isArray(T)?T:[T];for(let b=0;b<E.length;b++){const y=E[b];if(y.equals(D[b])===!1)return y.copy(D[b]),!0}}return!1}function S(M){const g=M.uniforms;let v=0;const T=16;let E=0;for(let D=0,b=g.length;D<b;D++){const y=g[D],w={boundary:0,storage:0},z=Array.isArray(y.value)?y.value:[y.value];for(let J=0,F=z.length;J<F;J++){const C=z[J],B=p(C);w.boundary+=B.boundary,w.storage+=B.storage}if(y.__data=new Float32Array(w.storage/Float32Array.BYTES_PER_ELEMENT),y.__offset=v,D>0){E=v%T;const J=T-E;E!==0&&J-w.boundary<0&&(v+=T-E,y.__offset=v)}v+=w.storage}return E=v%T,E>0&&(v+=T-E),M.__size=v,M.__cache={},this}function p(M){const g={boundary:0,storage:0};return typeof M=="number"?(g.boundary=4,g.storage=4):M.isVector2?(g.boundary=8,g.storage=8):M.isVector3||M.isColor?(g.boundary=16,g.storage=12):M.isVector4?(g.boundary=16,g.storage=16):M.isMatrix3?(g.boundary=48,g.storage=48):M.isMatrix4?(g.boundary=64,g.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),g}function h(M){const g=M.target;g.removeEventListener("dispose",h);const v=f.indexOf(g.__bindingPointIndex);f.splice(v,1),s.deleteBuffer(n[g.id]),delete n[g.id],delete t[g.id]}function _(){for(const M in n)s.deleteBuffer(n[M]);f=[],n={},t={}}return{bind:r,update:u,dispose:_}}function ci(){const s=ul("canvas");return s.style.display="block",s}function b9(s={}){this.isWebGLRenderer=!0;const e=s.canvas!==void 0?s.canvas:ci(),l=s.context!==void 0?s.context:null,a=s.depth!==void 0?s.depth:!0,n=s.stencil!==void 0?s.stencil:!0,t=s.antialias!==void 0?s.antialias:!1,f=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,i=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,r=s.powerPreference!==void 0?s.powerPreference:"default",u=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let o;l!==null?o=l.getContextAttributes().alpha:o=s.alpha!==void 0?s.alpha:!1;let d=null,c=null;const m=[],S=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=H7,this.useLegacyLights=!0,this.toneMapping=g7,this.toneMappingExposure=1;const p=this;let h=!1,_=0,M=0,g=null,v=-1,T=null;const E=new K1,D=new K1;let b=null,y=e.width,w=e.height,z=1,J=null,F=null;const C=new K1(0,0,y,w),B=new K1(0,0,y,w);let Y=!1;const $=new S9;let K=!1,X=!1,Z=null;const r1=new k1,G=new I,Q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function n1(){return g===null?z:1}let R=l;function j(U,N){for(let W=0;W<U.length;W++){const P=U[W],V=e.getContext(P,N);if(V!==null)return V}return null}try{const U={alpha:!0,depth:a,stencil:n,antialias:t,premultipliedAlpha:f,preserveDrawingBuffer:i,powerPreference:r,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${h9}`),e.addEventListener("webglcontextlost",b1,!1),e.addEventListener("webglcontextrestored",g1,!1),e.addEventListener("webglcontextcreationerror",h1,!1),R===null){const N=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&N.shift(),R=j(N,U),R===null)throw j(N)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}R.getShaderPrecisionFormat===void 0&&(R.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let s1,f1,o1,p1,x1,M1,C1,se,ge,oe,$1,z1,W1,Ee,ke,x,A,H,e1,l1,t1,m1,u1,k;function A1(){s1=new M0(R),f1=new S0(R,s1,s),s1.init(f1),m1=new si(R,s1,f1),o1=new ni(R,s1,f1),p1=new T0,x1=new Vs,M1=new ti(R,s1,o1,x1,f1,m1,p1),C1=new A0(p),se=new x0(p),ge=new Pa(R,f1),u1=new p0(R,s1,ge,f1),oe=new v0(R,ge,p1,u1),$1=new C0(R,oe,ge,p1),e1=new R0(R,f1,M1),x=new g0(x1),z1=new Hs(p,C1,se,s1,f1,u1,x),W1=new oi(p,x1),Ee=new ks,ke=new qs(s1,f1),H=new h0(p,C1,se,o1,$1,o,f),A=new ai(p,$1,f1),k=new di(R,p1,f1,o1),l1=new m0(R,s1,p1,f1),t1=new y0(R,s1,p1,f1),p1.programs=z1.programs,p.capabilities=f1,p.extensions=s1,p.properties=x1,p.renderLists=Ee,p.shadowMap=A,p.state=o1,p.info=p1}A1();const c1=new ri(p,R);this.xr=c1,this.getContext=function(){return R},this.getContextAttributes=function(){return R.getContextAttributes()},this.forceContextLoss=function(){const U=s1.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=s1.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(U){U!==void 0&&(z=U,this.setSize(y,w,!1))},this.getSize=function(U){return U.set(y,w)},this.setSize=function(U,N,W=!0){if(c1.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}y=U,w=N,e.width=Math.floor(U*z),e.height=Math.floor(N*z),W===!0&&(e.style.width=U+"px",e.style.height=N+"px"),this.setViewport(0,0,U,N)},this.getDrawingBufferSize=function(U){return U.set(y*z,w*z).floor()},this.setDrawingBufferSize=function(U,N,W){y=U,w=N,z=W,e.width=Math.floor(U*W),e.height=Math.floor(N*W),this.setViewport(0,0,U,N)},this.getCurrentViewport=function(U){return U.copy(E)},this.getViewport=function(U){return U.copy(C)},this.setViewport=function(U,N,W,P){U.isVector4?C.set(U.x,U.y,U.z,U.w):C.set(U,N,W,P),o1.viewport(E.copy(C).multiplyScalar(z).floor())},this.getScissor=function(U){return U.copy(B)},this.setScissor=function(U,N,W,P){U.isVector4?B.set(U.x,U.y,U.z,U.w):B.set(U,N,W,P),o1.scissor(D.copy(B).multiplyScalar(z).floor())},this.getScissorTest=function(){return Y},this.setScissorTest=function(U){o1.setScissorTest(Y=U)},this.setOpaqueSort=function(U){J=U},this.setTransparentSort=function(U){F=U},this.getClearColor=function(U){return U.copy(H.getClearColor())},this.setClearColor=function(){H.setClearColor.apply(H,arguments)},this.getClearAlpha=function(){return H.getClearAlpha()},this.setClearAlpha=function(){H.setClearAlpha.apply(H,arguments)},this.clear=function(U=!0,N=!0,W=!0){let P=0;U&&(P|=16384),N&&(P|=256),W&&(P|=1024),R.clear(P)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",b1,!1),e.removeEventListener("webglcontextrestored",g1,!1),e.removeEventListener("webglcontextcreationerror",h1,!1),Ee.dispose(),ke.dispose(),x1.dispose(),C1.dispose(),se.dispose(),$1.dispose(),u1.dispose(),k.dispose(),z1.dispose(),c1.dispose(),c1.removeEventListener("sessionstart",q),c1.removeEventListener("sessionend",i1),Z&&(Z.dispose(),Z=null),d1.stop()};function b1(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),h=!0}function g1(){console.log("THREE.WebGLRenderer: Context Restored."),h=!1;const U=p1.autoReset,N=A.enabled,W=A.autoUpdate,P=A.needsUpdate,V=A.type;A1(),p1.autoReset=U,A.enabled=N,A.autoUpdate=W,A.needsUpdate=P,A.type=V}function h1(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function I1(U){const N=U.target;N.removeEventListener("dispose",I1),J1(N)}function J1(U){ie(U),x1.remove(U)}function ie(U){const N=x1.get(U).programs;N!==void 0&&(N.forEach(function(W){z1.releaseProgram(W)}),U.isShaderMaterial&&z1.releaseShaderCache(U))}this.renderBufferDirect=function(U,N,W,P,V,S1){N===null&&(N=Q);const _1=V.isMesh&&V.matrixWorld.determinant()<0,T1=D2(U,N,W,P,V);o1.setMaterial(P,_1);let E1=W.index,N1=1;P.wireframe===!0&&(E1=oe.getWireframeAttribute(W),N1=2);const w1=W.drawRange,D1=W.attributes.position;let Z1=w1.start*N1,Re=(w1.start+w1.count)*N1;S1!==null&&(Z1=Math.max(Z1,S1.start*N1),Re=Math.min(Re,(S1.start+S1.count)*N1)),E1!==null?(Z1=Math.max(Z1,0),Re=Math.min(Re,E1.count)):D1!=null&&(Z1=Math.max(Z1,0),Re=Math.min(Re,D1.count));const r7=Re-Z1;if(r7<0||r7===1/0)return;u1.setup(V,P,T1,W,E1);let R7,Q1=l1;if(E1!==null&&(R7=ge.get(E1),Q1=t1,Q1.setIndex(R7)),V.isMesh)P.wireframe===!0?(o1.setLineWidth(P.wireframeLinewidth*n1()),Q1.setMode(1)):Q1.setMode(4);else if(V.isLine){let P1=P.linewidth;P1===void 0&&(P1=1),o1.setLineWidth(P1*n1()),V.isLineSegments?Q1.setMode(1):V.isLineLoop?Q1.setMode(2):Q1.setMode(3)}else V.isPoints?Q1.setMode(0):V.isSprite&&Q1.setMode(4);if(V.isInstancedMesh)Q1.renderInstances(Z1,r7,V.count);else if(W.isInstancedBufferGeometry){const P1=W._maxInstanceCount!==void 0?W._maxInstanceCount:1/0,hl=Math.min(W.instanceCount,P1);Q1.renderInstances(Z1,r7,hl)}else Q1.render(Z1,r7)},this.compile=function(U,N){function W(P,V,S1){P.transparent===!0&&P.side===y7&&P.forceSinglePass===!1?(P.side=Be,P.needsUpdate=!0,He(P,V,S1),P.side=E7,P.needsUpdate=!0,He(P,V,S1),P.side=y7):He(P,V,S1)}c=ke.get(U),c.init(),S.push(c),U.traverseVisible(function(P){P.isLight&&P.layers.test(N.layers)&&(c.pushLight(P),P.castShadow&&c.pushShadow(P))}),c.setupLights(p.useLegacyLights),U.traverse(function(P){const V=P.material;if(V)if(Array.isArray(V))for(let S1=0;S1<V.length;S1++){const _1=V[S1];W(_1,U,P)}else W(V,U,P)}),S.pop(),c=null};let L=null;function O(U){L&&L(U)}function q(){d1.stop()}function i1(){d1.start()}const d1=new x2;d1.setAnimationLoop(O),typeof self<"u"&&d1.setContext(self),this.setAnimationLoop=function(U){L=U,c1.setAnimationLoop(U),U===null?d1.stop():d1.start()},c1.addEventListener("sessionstart",q),c1.addEventListener("sessionend",i1),this.render=function(U,N){if(N!==void 0&&N.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(h===!0)return;U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),N.parent===null&&N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),c1.enabled===!0&&c1.isPresenting===!0&&(c1.cameraAutoUpdate===!0&&c1.updateCamera(N),N=c1.getCamera()),U.isScene===!0&&U.onBeforeRender(p,U,N,g),c=ke.get(U,S.length),c.init(),S.push(c),r1.multiplyMatrices(N.projectionMatrix,N.matrixWorldInverse),$.setFromProjectionMatrix(r1),X=this.localClippingEnabled,K=x.init(this.clippingPlanes,X),d=Ee.get(U,m.length),d.init(),m.push(d),H1(U,N,0,p.sortObjects),d.finish(),p.sortObjects===!0&&d.sort(J,F),K===!0&&x.beginShadows();const W=c.state.shadowsArray;if(A.render(W,U,N),K===!0&&x.endShadows(),this.info.autoReset===!0&&this.info.reset(),H.render(d,U),c.setupLights(p.useLegacyLights),N.isArrayCamera){const P=N.cameras;for(let V=0,S1=P.length;V<S1;V++){const _1=P[V];fe(d,U,_1,_1.viewport)}}else fe(d,U,N);g!==null&&(M1.updateMultisampleRenderTarget(g),M1.updateRenderTargetMipmap(g)),U.isScene===!0&&U.onAfterRender(p,U,N),u1.resetDefaultState(),v=-1,T=null,S.pop(),S.length>0?c=S[S.length-1]:c=null,m.pop(),m.length>0?d=m[m.length-1]:d=null};function H1(U,N,W,P){if(U.visible===!1)return;if(U.layers.test(N.layers)){if(U.isGroup)W=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(N);else if(U.isLight)c.pushLight(U),U.castShadow&&c.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||$.intersectsSprite(U)){P&&G.setFromMatrixPosition(U.matrixWorld).applyMatrix4(r1);const _1=$1.update(U),T1=U.material;T1.visible&&d.push(U,_1,T1,W,G.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(U.isSkinnedMesh&&U.skeleton.frame!==p1.render.frame&&(U.skeleton.update(),U.skeleton.frame=p1.render.frame),!U.frustumCulled||$.intersectsObject(U))){P&&G.setFromMatrixPosition(U.matrixWorld).applyMatrix4(r1);const _1=$1.update(U),T1=U.material;if(Array.isArray(T1)){const E1=_1.groups;for(let N1=0,w1=E1.length;N1<w1;N1++){const D1=E1[N1],Z1=T1[D1.materialIndex];Z1&&Z1.visible&&d.push(U,_1,Z1,W,G.z,D1)}}else T1.visible&&d.push(U,_1,T1,W,G.z,null)}}const S1=U.children;for(let _1=0,T1=S1.length;_1<T1;_1++)H1(S1[_1],N,W,P)}function fe(U,N,W,P){const V=U.opaque,S1=U.transmissive,_1=U.transparent;c.setupLightsView(W),K===!0&&x.setGlobalState(p.clippingPlanes,W),S1.length>0&&Ae(V,N,W),P&&o1.viewport(E.copy(P)),V.length>0&&l7(V,N,W),S1.length>0&&l7(S1,N,W),_1.length>0&&l7(_1,N,W),o1.buffers.depth.setTest(!0),o1.buffers.depth.setMask(!0),o1.buffers.color.setMask(!0),o1.setPolygonOffset(!1)}function Ae(U,N,W){const P=f1.isWebGL2;Z===null&&(Z=new V7(1024,1024,{generateMipmaps:!0,type:s1.has("EXT_color_buffer_half_float")?D6:z7,minFilter:w6,samples:P&&t===!0?4:0}));const V=p.getRenderTarget();p.setRenderTarget(Z),p.clear();const S1=p.toneMapping;p.toneMapping=g7,l7(U,N,W),p.toneMapping=S1,M1.updateMultisampleRenderTarget(Z),M1.updateRenderTargetMipmap(Z),p.setRenderTarget(V)}function l7(U,N,W){const P=N.isScene===!0?N.overrideMaterial:null;for(let V=0,S1=U.length;V<S1;V++){const _1=U[V],T1=_1.object,E1=_1.geometry,N1=P===null?_1.material:P,w1=_1.group;T1.layers.test(W.layers)&&X1(T1,N,W,E1,N1,w1)}}function X1(U,N,W,P,V,S1){U.onBeforeRender(p,N,W,P,V,S1),U.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),V.onBeforeRender(p,N,W,P,U,S1),V.transparent===!0&&V.side===y7&&V.forceSinglePass===!1?(V.side=Be,V.needsUpdate=!0,p.renderBufferDirect(W,N,P,V,U,S1),V.side=E7,V.needsUpdate=!0,p.renderBufferDirect(W,N,P,V,U,S1),V.side=y7):p.renderBufferDirect(W,N,P,V,U,S1),U.onAfterRender(p,N,W,P,V,S1)}function He(U,N,W){N.isScene!==!0&&(N=Q);const P=x1.get(U),V=c.state.lights,S1=c.state.shadowsArray,_1=V.state.version,T1=z1.getParameters(U,V.state,S1,N,W),E1=z1.getProgramCacheKey(T1);let N1=P.programs;P.environment=U.isMeshStandardMaterial?N.environment:null,P.fog=N.fog,P.envMap=(U.isMeshStandardMaterial?se:C1).get(U.envMap||P.environment),N1===void 0&&(U.addEventListener("dispose",I1),N1=new Map,P.programs=N1);let w1=N1.get(E1);if(w1!==void 0){if(P.currentProgram===w1&&P.lightsStateVersion===_1)return a7(U,T1),w1}else T1.uniforms=z1.getUniforms(U),U.onBuild(W,T1,p),U.onBeforeCompile(T1,p),w1=z1.acquireProgram(T1,E1),N1.set(E1,w1),P.uniforms=T1.uniforms;const D1=P.uniforms;(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(D1.clippingPlanes=x.uniform),a7(U,T1),P.needsLights=I2(U),P.lightsStateVersion=_1,P.needsLights&&(D1.ambientLightColor.value=V.state.ambient,D1.lightProbe.value=V.state.probe,D1.directionalLights.value=V.state.directional,D1.directionalLightShadows.value=V.state.directionalShadow,D1.spotLights.value=V.state.spot,D1.spotLightShadows.value=V.state.spotShadow,D1.rectAreaLights.value=V.state.rectArea,D1.ltc_1.value=V.state.rectAreaLTC1,D1.ltc_2.value=V.state.rectAreaLTC2,D1.pointLights.value=V.state.point,D1.pointLightShadows.value=V.state.pointShadow,D1.hemisphereLights.value=V.state.hemi,D1.directionalShadowMap.value=V.state.directionalShadowMap,D1.directionalShadowMatrix.value=V.state.directionalShadowMatrix,D1.spotShadowMap.value=V.state.spotShadowMap,D1.spotLightMatrix.value=V.state.spotLightMatrix,D1.spotLightMap.value=V.state.spotLightMap,D1.pointShadowMap.value=V.state.pointShadowMap,D1.pointShadowMatrix.value=V.state.pointShadowMatrix);const Z1=w1.getUniforms(),Re=sl.seqWithValue(Z1.seq,D1);return P.currentProgram=w1,P.uniformsList=Re,w1}function a7(U,N){const W=x1.get(U);W.outputEncoding=N.outputEncoding,W.instancing=N.instancing,W.skinning=N.skinning,W.morphTargets=N.morphTargets,W.morphNormals=N.morphNormals,W.morphColors=N.morphColors,W.morphTargetsCount=N.morphTargetsCount,W.numClippingPlanes=N.numClippingPlanes,W.numIntersection=N.numClipIntersection,W.vertexAlphas=N.vertexAlphas,W.vertexTangents=N.vertexTangents,W.toneMapping=N.toneMapping}function D2(U,N,W,P,V){N.isScene!==!0&&(N=Q),M1.resetTextureUnits();const S1=N.fog,_1=P.isMeshStandardMaterial?N.environment:null,T1=g===null?p.outputEncoding:g.isXRRenderTarget===!0?g.texture.encoding:H7,E1=(P.isMeshStandardMaterial?se:C1).get(P.envMap||_1),N1=P.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,w1=!!P.normalMap&&!!W.attributes.tangent,D1=!!W.morphAttributes.position,Z1=!!W.morphAttributes.normal,Re=!!W.morphAttributes.color,r7=P.toneMapped?p.toneMapping:g7,R7=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,Q1=R7!==void 0?R7.length:0,P1=x1.get(P),hl=c.state.lights;if(K===!0&&(X===!0||U!==T)){const Ce=U===T&&P.id===v;x.setState(P,U,Ce)}let ue=!1;P.version===P1.__version?(P1.needsLights&&P1.lightsStateVersion!==hl.state.version||P1.outputEncoding!==T1||V.isInstancedMesh&&P1.instancing===!1||!V.isInstancedMesh&&P1.instancing===!0||V.isSkinnedMesh&&P1.skinning===!1||!V.isSkinnedMesh&&P1.skinning===!0||P1.envMap!==E1||P.fog===!0&&P1.fog!==S1||P1.numClippingPlanes!==void 0&&(P1.numClippingPlanes!==x.numPlanes||P1.numIntersection!==x.numIntersection)||P1.vertexAlphas!==N1||P1.vertexTangents!==w1||P1.morphTargets!==D1||P1.morphNormals!==Z1||P1.morphColors!==Re||P1.toneMapping!==r7||f1.isWebGL2===!0&&P1.morphTargetsCount!==Q1)&&(ue=!0):(ue=!0,P1.__version=P.version);let C7=P1.currentProgram;ue===!0&&(C7=He(P,N,V));let M9=!1,g6=!1,pl=!1;const be=C7.getUniforms(),w7=P1.uniforms;if(o1.useProgram(C7.program)&&(M9=!0,g6=!0,pl=!0),P.id!==v&&(v=P.id,g6=!0),M9||T!==U){if(be.setValue(R,"projectionMatrix",U.projectionMatrix),f1.logarithmicDepthBuffer&&be.setValue(R,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),T!==U&&(T=U,g6=!0,pl=!0),P.isShaderMaterial||P.isMeshPhongMaterial||P.isMeshToonMaterial||P.isMeshStandardMaterial||P.envMap){const Ce=be.map.cameraPosition;Ce!==void 0&&Ce.setValue(R,G.setFromMatrixPosition(U.matrixWorld))}(P.isMeshPhongMaterial||P.isMeshToonMaterial||P.isMeshLambertMaterial||P.isMeshBasicMaterial||P.isMeshStandardMaterial||P.isShaderMaterial)&&be.setValue(R,"isOrthographic",U.isOrthographicCamera===!0),(P.isMeshPhongMaterial||P.isMeshToonMaterial||P.isMeshLambertMaterial||P.isMeshBasicMaterial||P.isMeshStandardMaterial||P.isShaderMaterial||P.isShadowMaterial||V.isSkinnedMesh)&&be.setValue(R,"viewMatrix",U.matrixWorldInverse)}if(V.isSkinnedMesh){be.setOptional(R,V,"bindMatrix"),be.setOptional(R,V,"bindMatrixInverse");const Ce=V.skeleton;Ce&&(f1.floatVertexTextures?(Ce.boneTexture===null&&Ce.computeBoneTexture(),be.setValue(R,"boneTexture",Ce.boneTexture,M1),be.setValue(R,"boneTextureSize",Ce.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const ml=W.morphAttributes;if((ml.position!==void 0||ml.normal!==void 0||ml.color!==void 0&&f1.isWebGL2===!0)&&e1.update(V,W,C7),(g6||P1.receiveShadow!==V.receiveShadow)&&(P1.receiveShadow=V.receiveShadow,be.setValue(R,"receiveShadow",V.receiveShadow)),P.isMeshGouraudMaterial&&P.envMap!==null&&(w7.envMap.value=E1,w7.flipEnvMap.value=E1.isCubeTexture&&E1.isRenderTargetTexture===!1?-1:1),g6&&(be.setValue(R,"toneMappingExposure",p.toneMappingExposure),P1.needsLights&&P2(w7,pl),S1&&P.fog===!0&&W1.refreshFogUniforms(w7,S1),W1.refreshMaterialUniforms(w7,P,z,w,Z),sl.upload(R,P1.uniformsList,w7,M1)),P.isShaderMaterial&&P.uniformsNeedUpdate===!0&&(sl.upload(R,P1.uniformsList,w7,M1),P.uniformsNeedUpdate=!1),P.isSpriteMaterial&&be.setValue(R,"center",V.center),be.setValue(R,"modelViewMatrix",V.modelViewMatrix),be.setValue(R,"normalMatrix",V.normalMatrix),be.setValue(R,"modelMatrix",V.matrixWorld),P.isShaderMaterial||P.isRawShaderMaterial){const Ce=P.uniformsGroups;for(let Sl=0,N2=Ce.length;Sl<N2;Sl++)if(f1.isWebGL2){const v9=Ce[Sl];k.update(v9,C7),k.bind(v9,C7)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return C7}function P2(U,N){U.ambientLightColor.needsUpdate=N,U.lightProbe.needsUpdate=N,U.directionalLights.needsUpdate=N,U.directionalLightShadows.needsUpdate=N,U.pointLights.needsUpdate=N,U.pointLightShadows.needsUpdate=N,U.spotLights.needsUpdate=N,U.spotLightShadows.needsUpdate=N,U.rectAreaLights.needsUpdate=N,U.hemisphereLights.needsUpdate=N}function I2(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return g},this.setRenderTargetTextures=function(U,N,W){x1.get(U.texture).__webglTexture=N,x1.get(U.depthTexture).__webglTexture=W;const P=x1.get(U);P.__hasExternalTextures=!0,P.__hasExternalTextures&&(P.__autoAllocateDepthBuffer=W===void 0,P.__autoAllocateDepthBuffer||s1.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),P.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(U,N){const W=x1.get(U);W.__webglFramebuffer=N,W.__useDefaultFramebuffer=N===void 0},this.setRenderTarget=function(U,N=0,W=0){g=U,_=N,M=W;let P=!0,V=null,S1=!1,_1=!1;if(U){const E1=x1.get(U);E1.__useDefaultFramebuffer!==void 0?(o1.bindFramebuffer(36160,null),P=!1):E1.__webglFramebuffer===void 0?M1.setupRenderTarget(U):E1.__hasExternalTextures&&M1.rebindTextures(U,x1.get(U.texture).__webglTexture,x1.get(U.depthTexture).__webglTexture);const N1=U.texture;(N1.isData3DTexture||N1.isDataArrayTexture||N1.isCompressedArrayTexture)&&(_1=!0);const w1=x1.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(V=w1[N],S1=!0):f1.isWebGL2&&U.samples>0&&M1.useMultisampledRTT(U)===!1?V=x1.get(U).__webglMultisampledFramebuffer:V=w1,E.copy(U.viewport),D.copy(U.scissor),b=U.scissorTest}else E.copy(C).multiplyScalar(z).floor(),D.copy(B).multiplyScalar(z).floor(),b=Y;if(o1.bindFramebuffer(36160,V)&&f1.drawBuffers&&P&&o1.drawBuffers(U,V),o1.viewport(E),o1.scissor(D),o1.setScissorTest(b),S1){const E1=x1.get(U.texture);R.framebufferTexture2D(36160,36064,34069+N,E1.__webglTexture,W)}else if(_1){const E1=x1.get(U.texture),N1=N||0;R.framebufferTextureLayer(36160,36064,E1.__webglTexture,W||0,N1)}v=-1},this.readRenderTargetPixels=function(U,N,W,P,V,S1,_1){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let T1=x1.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&_1!==void 0&&(T1=T1[_1]),T1){o1.bindFramebuffer(36160,T1);try{const E1=U.texture,N1=E1.format,w1=E1.type;if(N1!==Qe&&m1.convert(N1)!==R.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const D1=w1===D6&&(s1.has("EXT_color_buffer_half_float")||f1.isWebGL2&&s1.has("EXT_color_buffer_float"));if(w1!==z7&&m1.convert(w1)!==R.getParameter(35738)&&!(w1===W7&&(f1.isWebGL2||s1.has("OES_texture_float")||s1.has("WEBGL_color_buffer_float")))&&!D1){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}N>=0&&N<=U.width-P&&W>=0&&W<=U.height-V&&R.readPixels(N,W,P,V,m1.convert(N1),m1.convert(w1),S1)}finally{const E1=g!==null?x1.get(g).__webglFramebuffer:null;o1.bindFramebuffer(36160,E1)}}},this.copyFramebufferToTexture=function(U,N,W=0){const P=Math.pow(2,-W),V=Math.floor(N.image.width*P),S1=Math.floor(N.image.height*P);M1.setTexture2D(N,0),R.copyTexSubImage2D(3553,W,0,0,U.x,U.y,V,S1),o1.unbindTexture()},this.copyTextureToTexture=function(U,N,W,P=0){const V=N.image.width,S1=N.image.height,_1=m1.convert(W.format),T1=m1.convert(W.type);M1.setTexture2D(W,0),R.pixelStorei(37440,W.flipY),R.pixelStorei(37441,W.premultiplyAlpha),R.pixelStorei(3317,W.unpackAlignment),N.isDataTexture?R.texSubImage2D(3553,P,U.x,U.y,V,S1,_1,T1,N.image.data):N.isCompressedTexture?R.compressedTexSubImage2D(3553,P,U.x,U.y,N.mipmaps[0].width,N.mipmaps[0].height,_1,N.mipmaps[0].data):R.texSubImage2D(3553,P,U.x,U.y,_1,T1,N.image),P===0&&W.generateMipmaps&&R.generateMipmap(3553),o1.unbindTexture()},this.copyTextureToTexture3D=function(U,N,W,P,V=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const S1=U.max.x-U.min.x+1,_1=U.max.y-U.min.y+1,T1=U.max.z-U.min.z+1,E1=m1.convert(P.format),N1=m1.convert(P.type);let w1;if(P.isData3DTexture)M1.setTexture3D(P,0),w1=32879;else if(P.isDataArrayTexture)M1.setTexture2DArray(P,0),w1=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}R.pixelStorei(37440,P.flipY),R.pixelStorei(37441,P.premultiplyAlpha),R.pixelStorei(3317,P.unpackAlignment);const D1=R.getParameter(3314),Z1=R.getParameter(32878),Re=R.getParameter(3316),r7=R.getParameter(3315),R7=R.getParameter(32877),Q1=W.isCompressedTexture?W.mipmaps[0]:W.image;R.pixelStorei(3314,Q1.width),R.pixelStorei(32878,Q1.height),R.pixelStorei(3316,U.min.x),R.pixelStorei(3315,U.min.y),R.pixelStorei(32877,U.min.z),W.isDataTexture||W.isData3DTexture?R.texSubImage3D(w1,V,N.x,N.y,N.z,S1,_1,T1,E1,N1,Q1.data):W.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),R.compressedTexSubImage3D(w1,V,N.x,N.y,N.z,S1,_1,T1,E1,Q1.data)):R.texSubImage3D(w1,V,N.x,N.y,N.z,S1,_1,T1,E1,N1,Q1),R.pixelStorei(3314,D1),R.pixelStorei(32878,Z1),R.pixelStorei(3316,Re),R.pixelStorei(3315,r7),R.pixelStorei(32877,R7),V===0&&P.generateMipmaps&&R.generateMipmap(w1),o1.unbindTexture()},this.initTexture=function(U){U.isCubeTexture?M1.setTextureCube(U,0):U.isData3DTexture?M1.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?M1.setTexture2DArray(U,0):M1.setTexture2D(U,0),o1.unbindTexture()},this.resetState=function(){_=0,M=0,g=null,o1.reset(),u1.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Object.defineProperties(b9.prototype,{physicallyCorrectLights:{get:function(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights},set:function(s){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!s}}});class hi extends b9{}hi.prototype.isWebGL1Renderer=!0;let pi=class extends ye{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,l){return super.copy(e,l),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const l=super.toJSON(e);return this.fog!==null&&(l.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(l.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(l.object.backgroundIntensity=this.backgroundIntensity),l}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}};class _9 extends _7{constructor(e=1,l=1,a=1,n=32,t=1,f=!1,i=0,r=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:l,height:a,radialSegments:n,heightSegments:t,openEnded:f,thetaStart:i,thetaLength:r};const u=this;n=Math.floor(n),t=Math.floor(t);const o=[],d=[],c=[],m=[];let S=0;const p=[],h=a/2;let _=0;M(),f===!1&&(e>0&&g(!0),l>0&&g(!1)),this.setIndex(o),this.setAttribute("position",new Oe(d,3)),this.setAttribute("normal",new Oe(c,3)),this.setAttribute("uv",new Oe(m,2));function M(){const v=new I,T=new I;let E=0;const D=(l-e)/a;for(let b=0;b<=t;b++){const y=[],w=b/t,z=w*(l-e)+e;for(let J=0;J<=n;J++){const F=J/n,C=F*r+i,B=Math.sin(C),Y=Math.cos(C);T.x=z*B,T.y=-w*a+h,T.z=z*Y,d.push(T.x,T.y,T.z),v.set(B,D,Y).normalize(),c.push(v.x,v.y,v.z),m.push(F,1-w),y.push(S++)}p.push(y)}for(let b=0;b<n;b++)for(let y=0;y<t;y++){const w=p[y][b],z=p[y+1][b],J=p[y+1][b+1],F=p[y][b+1];o.push(w,z,F),o.push(z,J,F),E+=6}u.addGroup(_,E,0),_+=E}function g(v){const T=S,E=new F1,D=new I;let b=0;const y=v===!0?e:l,w=v===!0?1:-1;for(let J=1;J<=n;J++)d.push(0,h*w,0),c.push(0,w,0),m.push(.5,.5),S++;const z=S;for(let J=0;J<=n;J++){const C=J/n*r+i,B=Math.cos(C),Y=Math.sin(C);D.x=y*Y,D.y=h*w,D.z=y*B,d.push(D.x,D.y,D.z),c.push(0,w,0),E.x=B*.5+.5,E.y=Y*.5*w+.5,m.push(E.x,E.y),S++}for(let J=0;J<n;J++){const F=T+J,C=z+J;v===!0?o.push(C,C+1,F):o.push(C+1,C,F),b+=3}u.addGroup(_,b,v===!0?1:2),_+=b}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _9(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class U9 extends _9{constructor(e=1,l=1,a=32,n=1,t=!1,f=0,i=Math.PI*2){super(0,e,l,a,n,t,f,i),this.type="ConeGeometry",this.parameters={radius:e,height:l,radialSegments:a,heightSegments:n,openEnded:t,thetaStart:f,thetaLength:i}}static fromJSON(e){return new U9(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class x9 extends _7{constructor(e=1,l=32,a=16,n=0,t=Math.PI*2,f=0,i=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:l,heightSegments:a,phiStart:n,phiLength:t,thetaStart:f,thetaLength:i},l=Math.max(3,Math.floor(l)),a=Math.max(2,Math.floor(a));const r=Math.min(f+i,Math.PI);let u=0;const o=[],d=new I,c=new I,m=[],S=[],p=[],h=[];for(let _=0;_<=a;_++){const M=[],g=_/a;let v=0;_==0&&f==0?v=.5/l:_==a&&r==Math.PI&&(v=-.5/l);for(let T=0;T<=l;T++){const E=T/l;d.x=-e*Math.cos(n+E*t)*Math.sin(f+g*i),d.y=e*Math.cos(f+g*i),d.z=e*Math.sin(n+E*t)*Math.sin(f+g*i),S.push(d.x,d.y,d.z),c.copy(d).normalize(),p.push(c.x,c.y,c.z),h.push(E+v,1-g),M.push(u++)}o.push(M)}for(let _=0;_<a;_++)for(let M=0;M<l;M++){const g=o[_][M+1],v=o[_][M],T=o[_+1][M],E=o[_+1][M+1];(_!==0||f>0)&&m.push(g,v,E),(_!==a-1||r<Math.PI)&&m.push(v,T,E)}this.setIndex(m),this.setAttribute("position",new Oe(S,3)),this.setAttribute("normal",new Oe(p,3)),this.setAttribute("uv",new Oe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new x9(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class L2 extends B6{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new O1(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new O1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=u2,this.normalScale=new F1(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class E2 extends ye{constructor(e,l=1){super(),this.isLight=!0,this.type="Light",this.color=new O1(e),this.intensity=l}dispose(){}copy(e,l){return super.copy(e,l),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const l=super.toJSON(e);return l.object.color=this.color.getHex(),l.object.intensity=this.intensity,this.groundColor!==void 0&&(l.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(l.object.distance=this.distance),this.angle!==void 0&&(l.object.angle=this.angle),this.decay!==void 0&&(l.object.decay=this.decay),this.penumbra!==void 0&&(l.object.penumbra=this.penumbra),this.shadow!==void 0&&(l.object.shadow=this.shadow.toJSON()),l}}const Zl=new k1,k3=new I,J3=new I;class mi{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new F1(512,512),this.map=null,this.mapPass=null,this.matrix=new k1,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new S9,this._frameExtents=new F1(1,1),this._viewportCount=1,this._viewports=[new K1(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const l=this.camera,a=this.matrix;k3.setFromMatrixPosition(e.matrixWorld),l.position.copy(k3),J3.setFromMatrixPosition(e.target.matrixWorld),l.lookAt(J3),l.updateMatrixWorld(),Zl.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Zl),a.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),a.multiply(Zl)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}const Y3=new k1,y6=new I,Ql=new I;class Si extends mi{constructor(){super(new Ge(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new F1(4,2),this._viewportCount=6,this._viewports=[new K1(2,1,1,1),new K1(0,1,1,1),new K1(3,1,1,1),new K1(1,1,1,1),new K1(3,0,1,1),new K1(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,l=0){const a=this.camera,n=this.matrix,t=e.distance||a.far;t!==a.far&&(a.far=t,a.updateProjectionMatrix()),y6.setFromMatrixPosition(e.matrixWorld),a.position.copy(y6),Ql.copy(a.position),Ql.add(this._cubeDirections[l]),a.up.copy(this._cubeUps[l]),a.lookAt(Ql),a.updateMatrixWorld(),n.makeTranslation(-y6.x,-y6.y,-y6.z),Y3.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Y3)}}let gi=class extends E2{constructor(e,l,a=0,n=2){super(e,l),this.isPointLight=!0,this.type="PointLight",this.distance=a,this.decay=n,this.shadow=new Si}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,l){return super.copy(e,l),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}},Ai=class extends E2{constructor(e,l){super(e,l),this.isAmbientLight=!0,this.type="AmbientLight"}};class bi{constructor(e,l,a=0,n=1/0){this.ray=new p2(e,l),this.near=a,this.far=n,this.camera=null,this.layers=new m9,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,l){this.ray.set(e,l)}setFromCamera(e,l){l.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(l.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(l).sub(this.ray.origin).normalize(),this.camera=l):l.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(l.near+l.far)/(l.near-l.far)).unproject(l),this.ray.direction.set(0,0,-1).transformDirection(l.matrixWorld),this.camera=l):console.error("THREE.Raycaster: Unsupported camera type: "+l.type)}intersectObject(e,l=!0,a=[]){return r9(e,this,a,l),a.sort(X3),a}intersectObjects(e,l=!0,a=[]){for(let n=0,t=e.length;n<t;n++)r9(e[n],this,a,l);return a.sort(X3),a}}function X3(s,e){return s.distance-e.distance}function r9(s,e,l,a){if(s.layers.test(e.layers)&&s.raycast(e,l),a===!0){const n=s.children;for(let t=0,f=n.length;t<f;t++)r9(n[t],e,l,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:h9}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=h9);class R2 extends ye{constructor(){super()}}class _i extends R2{constructor(){super();n7(this,"objectEvents",{})}on(l,a){this.objectEvents[l]||(this.objectEvents[l]=[]),this.objectEvents[l]=[...this.objectEvents[l],a]}invoke(l,a){this.objectEvents[l]&&this.objectEvents[l].forEach(n=>n({pointerEvent:a,object:this}))}}function Ui(s){let e;const l=s[1].default,a=qe(l,s,s[0],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,[t]){a&&a.p&&(!e||t&1)&&$e(a,l,n,n[0],e?e7(l,n[0],t,null):je(n[0]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function xi(s,e,l){let{$$slots:a={},$$scope:n}=e;const t=$3(),f=new _i;f.on("click",r=>t("click",r)),f.on("leave",r=>t("leave",r)),f.on("over",r=>t("over",r));const i=A7(ze);return i.parent.add(f),b7(ze,new p6(f)),k7(()=>i==null?void 0:i.remove(f)),s.$$set=r=>{"$$scope"in r&&l(0,n=r.$$scope)},[n,a]}class Mi extends pe{constructor(e){super(),me(this,e,xi,Ui,Se,{})}}function vi(s){let e;const l=s[5].default,a=qe(l,s,s[4],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,[t]){a&&a.p&&(!e||t&16)&&$e(a,l,n,n[4],e?e7(l,n[4],t,null):je(n[4]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function yi(s,e,l){let{$$slots:a={},$$scope:n}=e,{radius:t=.0125}=e,{height:f=.05}=e,{segments:i=3}=e,{colour:r=16776960}=e;const u=new U9(t,f,i),o=new L2({color:r}),d=new f7(u,o),c=A7(ze);return c.add(d),b7(ze,new p6(d)),k7(()=>c==null?void 0:c.remove(d)),s.$$set=m=>{"radius"in m&&l(0,t=m.radius),"height"in m&&l(1,f=m.height),"segments"in m&&l(2,i=m.segments),"colour"in m&&l(3,r=m.colour),"$$scope"in m&&l(4,n=m.$$scope)},s.$$.update=()=>{s.$$.dirty&8&&d.material.color.set(r)},[t,f,i,r,n,a]}class Ti extends pe{constructor(e){super(),me(this,e,yi,vi,Se,{radius:0,height:1,segments:2,colour:3})}}const Li=()=>({width:0,height:0,depth:0}),Ei=()=>({x:0,y:0,z:0});function Ri(s){let e;const l=s[3].default,a=qe(l,s,s[2],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,[t]){a&&a.p&&(!e||t&4)&&$e(a,l,n,n[2],e?e7(l,n[2],t,null):je(n[2]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function Ci(s,e,l){let{$$slots:a={},$$scope:n}=e,{rotation:t=Ei()}=e,{translation:f=Li()}=e;const i=new E6;i.rotateX(t.x),i.rotateY(t.y),i.rotateZ(t.z),i.translateX(f.width),i.translateY(f.height),i.translateZ(f.depth);const r=A7(ze);return r.add(i),b7(ze,new p6(i)),k7(()=>r==null?void 0:r.remove(i)),s.$$set=u=>{"rotation"in u&&l(0,t=u.rotation),"translation"in u&&l(1,f=u.translation),"$$scope"in u&&l(2,n=u.$$scope)},s.$$.update=()=>{if(s.$$.dirty&3){const u=new k1;u.multiply(new k1().makeRotationX(t.x)),u.multiply(new k1().makeRotationY(t.y)),u.multiply(new k1().makeRotationZ(t.z)),i.setRotationFromMatrix(u),i.position.set(f.width,f.height,f.depth)}},[t,f,n,a]}class cl extends pe{constructor(e){super(),me(this,e,Ci,Ri,Se,{rotation:0,translation:1})}}function wi(s){let e;const l=s[3].default,a=qe(l,s,s[4],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,t){a&&a.p&&(!e||t&16)&&$e(a,l,n,n[4],e?e7(l,n[4],t,null):je(n[4]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function Di(s){let e,l;return e=new cl({props:{rotation:{x:0,y:0,z:S7(s[2])},$$slots:{default:[wi]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,n){const t={};n&4&&(t.rotation={x:0,y:0,z:S7(a[2])}),n&16&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function Pi(s){let e,l;return e=new cl({props:{translation:{width:0,height:0,depth:s[1]},$$slots:{default:[Di]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,n){const t={};n&2&&(t.translation={width:0,height:0,depth:a[1]}),n&20&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function Ii(s){let e,l;return e=new cl({props:{rotation:{x:-1*S7(s[0].lat),y:0,z:0},$$slots:{default:[Pi]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,n){const t={};n&1&&(t.rotation={x:-1*S7(a[0].lat),y:0,z:0}),n&22&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function Ni(s){let e,l;return e=new cl({props:{rotation:{x:0,y:-1*S7(s[0].lng),z:0},$$slots:{default:[Ii]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,[n]){const t={};n&1&&(t.rotation={x:0,y:-1*S7(a[0].lng),z:0}),n&23&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function Fi(s,e,l){let{$$slots:a={},$$scope:n}=e,{position:t}=e,{radius:f}=e,{bearing:i}=e;return s.$$set=r=>{"position"in r&&l(0,t=r.position),"radius"in r&&l(1,f=r.radius),"bearing"in r&&l(2,i=r.bearing),"$$scope"in r&&l(4,n=r.$$scope)},[t,f,i,a,n]}class C2 extends pe{constructor(e){super(),me(this,e,Fi,Ni,Se,{position:0,radius:1,bearing:2})}}function Gi(s){let e;const l=s[7].default,a=qe(l,s,s[8],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,t){a&&a.p&&(!e||t&256)&&$e(a,l,n,n[8],e?e7(l,n[8],t,null):je(n[8]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function Bi(s){let e,l;return e=new Ti({props:{radius:4e5,height:12e5,colour:s[0]?255:s[2]?16711680:16776960,$$slots:{default:[Gi]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,n){const t={};n&5&&(t.colour=a[0]?255:a[2]?16711680:16776960),n&256&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function Wi(s){let e,l;return e=new C2({props:{position:s[1].currentPosition,bearing:s[1].aircraft.bearing,radius:s[1].aircraft.altitude+s[3],$$slots:{default:[Bi]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,n){const t={};n&2&&(t.position=a[1].currentPosition),n&2&&(t.bearing=a[1].aircraft.bearing),n&10&&(t.radius=a[1].aircraft.altitude+a[3]),n&261&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function Oi(s){let e,l;return e=new Mi({props:{$$slots:{default:[Wi]},$$scope:{ctx:s}}}),e.$on("click",s[4]),e.$on("over",s[5]),e.$on("leave",s[6]),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,[n]){const t={};n&271&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function zi(s,e,l){let{$$slots:a={},$$scope:n}=e,{aircraftPosition:t}=e,{isSelected:f=!1}=e,{isHovered:i=!1}=e;const r=A7(l9);let u=r.radius;const o=S=>l(3,u=S),d=()=>{l2(t)},c=()=>{console.log("Aircraft Over",t),l(0,i=!0)},m=()=>{console.log("Aircraft Left",t),l(0,i=!1)};return s.$$set=S=>{"aircraftPosition"in S&&l(1,t=S.aircraftPosition),"isSelected"in S&&l(2,f=S.isSelected),"isHovered"in S&&l(0,i=S.isHovered),"$$scope"in S&&l(8,n=S.$$scope)},o(r.radius),[i,t,f,u,d,c,m,a,n]}class Hi extends pe{constructor(e){super(),me(this,e,zi,Oi,Se,{aircraftPosition:1,isSelected:2,isHovered:0})}}function Vi(s){let e;const l=s[3].default,a=qe(l,s,s[2],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,[t]){a&&a.p&&(!e||t&4)&&$e(a,l,n,n[2],e?e7(l,n[2],t,null):je(n[2]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function Ki(s,e,l){let{$$slots:a={},$$scope:n}=e,{radius:t=1}=e,{colour:f=39423}=e;const i=new x9(t),r=new L2({color:f}),u=new f7(i,r),o=A7(ze);return o.parent.add(u),k7(()=>o==null?void 0:o.remove(u)),s.$$set=d=>{"radius"in d&&l(0,t=d.radius),"colour"in d&&l(1,f=d.colour),"$$scope"in d&&l(2,n=d.$$scope)},[t,f,n,a]}class ki extends pe{constructor(e){super(),me(this,e,Ki,Vi,Se,{radius:0,colour:1})}}function Ji(s){let e,l,a;e=new ki({props:{radius:s[0]}});const n=s[2].default,t=qe(n,s,s[1],null);return{c(){j1(e.$$.fragment),l=Te(),t&&t.c()},l(f){ee(e.$$.fragment,f),l=Le(f),t&&t.l(f)},m(f,i){le(e,f,i),ve(f,l,i),t&&t.m(f,i),a=!0},p(f,[i]){const r={};i&1&&(r.radius=f[0]),e.$set(r),t&&t.p&&(!a||i&2)&&$e(t,n,f,f[1],a?e7(n,f[1],i,null):je(f[1]),null)},i(f){a||(y1(e.$$.fragment,f),y1(t,f),a=!0)},o(f){R1(e.$$.fragment,f),R1(t,f),a=!1},d(f){ae(e,f),f&&L1(l),t&&t.d(f)}}}function Yi(s,e,l){let{$$slots:a={},$$scope:n}=e,{radius:t}=e;return b7(l9,{radius:t}),s.$$set=f=>{"radius"in f&&l(0,t=f.radius),"$$scope"in f&&l(1,n=f.$$scope)},s.$$.update=()=>{s.$$.dirty&1&&b7(l9,{radius:t})},[t,n,a]}class Xi extends pe{constructor(e){super(),me(this,e,Yi,Ji,Se,{radius:0})}}const w2="SceneContext";class R6{constructor(e){n7(this,"_canvas");n7(this,"_onSizeChanges");n7(this,"_camera");n7(this,"_size",{width:1,height:1});n7(this,"_raycaster");n7(this,"_intersections");n7(this,"_hovered");this.scene=e,this._raycaster=new bi,this._intersections=[],this._hovered={},this._onSizeChanges=[]}setCanvas(e){this._canvas=e}get camera(){if(!this._camera)throw new Error("Camera has not been initialized");return this._camera}set camera(e){this._camera=e,this.changeSize(this._size)}get hasCamera(){return!!this._camera}changeSize(e){this._size=e,this._onSizeChanges.forEach(l=>l(e))}onPointerMove(e){if(!this._camera||!this._canvas)return;const l=this._canvas.getBoundingClientRect(),a={x:e.clientX-l.x,y:e.clientY-l.y},n=new F1;n.set(a.x/this._size.width*2-1,-(a.y/this._size.height)*2+1),this._raycaster.setFromCamera(n,this._camera),this._intersections=this._raycaster.intersectObjects(this.scene.children,!0);const t=Object.keys(this._hovered),f={...this._hovered};this._hovered={},this._intersections.forEach(i=>{const r=R6.getPointerInteractable(i.object);r&&(t.includes(r.uuid)||r.invoke("over",e),this._hovered[r.uuid]=r)}),t.forEach(i=>{this._hovered[i]||f[i].invoke("leave",e)})}onPointerClicked(e){this._camera&&this._intersections.forEach(l=>{const a=R6.getPointerInteractable(l.object);a&&a.invoke("click",e)})}subscribeToSizeChange(e){this._onSizeChanges=[...this._onSizeChanges,e]}unsubscribeToSizeChange(e){this._onSizeChanges=this._onSizeChanges.filter(l=>l!==e)}static getPointerInteractable(e){return e?e instanceof R2?e:R6.getPointerInteractable(e.parent):null}}function Zi(s){let e;const l=s[7].default,a=qe(l,s,s[6],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,[t]){a&&a.p&&(!e||t&64)&&$e(a,l,n,n[6],e?e7(l,n[6],t,null):je(n[6]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function Qi(s,e,l){let{$$slots:a={},$$scope:n}=e;const t=A7(w2),f=A7(ze);let{fieldOfView:i=75}=e,{near:r=.1}=e,{far:u=1e3}=e,{position:o={x:0,y:0,z:3}}=e,d={width:1,height:1};const c=S=>{l(4,d=S)},m=new Ge(i,d.width/d.height,r,u);return m.position.set(o.x,o.y,o.z),f.add(m),t.camera=m,t.subscribeToSizeChange(c),s.$$set=S=>{"fieldOfView"in S&&l(0,i=S.fieldOfView),"near"in S&&l(1,r=S.near),"far"in S&&l(2,u=S.far),"position"in S&&l(3,o=S.position),"$$scope"in S&&l(6,n=S.$$scope)},s.$$.update=()=>{s.$$.dirty&63&&(l(5,m.fov=i,m),l(5,m.aspect=d.width/d.height,m),l(5,m.near=r,m),l(5,m.far=u,m),m.position.set(o.x,o.y,o.z),m.updateProjectionMatrix())},[i,r,u,o,d,m,n,a]}class qi extends pe{constructor(e){super(),me(this,e,Qi,Zi,Se,{fieldOfView:0,near:1,far:2,position:3})}}function $i(s){let e,l;return e=new qi({props:{near:1e7,far:3e7}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p:$l,i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function ji(s){let e,l;return e=new C2({props:{position:s[0],bearing:0,radius:19113e3,$$slots:{default:[$i]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,[n]){const t={};n&1&&(t.position=a[0]),n&4&&(t.$$scope={dirty:n,ctx:a}),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function e5(s,e,l){let{zoom:a=1}=e,{lookAt:n={lat:0,lng:0}}=e;return s.$$set=t=>{"zoom"in t&&l(1,a=t.zoom),"lookAt"in t&&l(0,n=t.lookAt)},[n,a]}class l5 extends pe{constructor(e){super(),me(this,e,e5,ji,Se,{zoom:1,lookAt:0})}}function a5(s){let e;const l=s[4].default,a=qe(l,s,s[3],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,[t]){a&&a.p&&(!e||t&8)&&$e(a,l,n,n[3],e?e7(l,n[3],t,null):je(n[3]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function n5(s,e,l){let{$$slots:a={},$$scope:n}=e,{colour:t=16777215}=e,{intensity:f=.5}=e;const i=new Ai(t,f),r=A7(ze);return r.add(i),b7(ze,new p6(i)),k7(()=>r==null?void 0:r.remove(i)),s.$$set=u=>{"colour"in u&&l(0,t=u.colour),"intensity"in u&&l(1,f=u.intensity),"$$scope"in u&&l(3,n=u.$$scope)},s.$$.update=()=>{s.$$.dirty&7&&(i.color.set(t),l(2,i.intensity=f,i))},[t,f,i,n,a]}class t5 extends pe{constructor(e){super(),me(this,e,n5,a5,Se,{colour:0,intensity:1})}}function s5(s){let e;const l=s[6].default,a=qe(l,s,s[5],null);return{c(){a&&a.c()},l(n){a&&a.l(n)},m(n,t){a&&a.m(n,t),e=!0},p(n,[t]){a&&a.p&&(!e||t&32)&&$e(a,l,n,n[5],e?e7(l,n[5],t,null):je(n[5]),null)},i(n){e||(y1(a,n),e=!0)},o(n){R1(a,n),e=!1},d(n){a&&a.d(n)}}}function i5(s,e,l){let{$$slots:a={},$$scope:n}=e,{colour:t=16777215}=e,{intensity:f=3}=e,{position:i={x:5,y:5,z:5}}=e,{castShadow:r=!0}=e;const u=new gi(t,f),o=A7(ze);return o.add(u),b7(ze,new p6(u)),k7(()=>{o==null||o.remove(u)}),s.$$set=d=>{"colour"in d&&l(0,t=d.colour),"intensity"in d&&l(1,f=d.intensity),"position"in d&&l(2,i=d.position),"castShadow"in d&&l(3,r=d.castShadow),"$$scope"in d&&l(5,n=d.$$scope)},s.$$.update=()=>{s.$$.dirty&31&&(u.color.set(t),l(4,u.intensity=f,u),u.position.set(i.x,i.y,i.z),l(4,u.castShadow=r,u))},[t,f,i,r,u,n,a]}class f5 extends pe{constructor(e){super(),me(this,e,i5,s5,Se,{colour:0,intensity:1,position:2,castShadow:3})}}function u5(s){let e,l,a,n,t,f;const i=s[5].default,r=qe(i,s,s[4],null);return{c(){e=G1("div"),l=G1("canvas"),a=Te(),r&&r.c(),this.h()},l(u){e=B1(u,"DIV",{class:!0});var o=Y1(e);l=B1(o,"CANVAS",{class:!0}),Y1(l).forEach(L1),a=Le(o),r&&r.l(o),o.forEach(L1),this.h()},h(){de(l,"class","scene__canvas svelte-1tsryj5"),de(e,"class","scene svelte-1tsryj5")},m(u,o){ve(u,e,o),U1(e,l),s[6](l),U1(e,a),r&&r.m(e,null),s[7](e),n=!0,t||(f=[C6(l,"pointermove",s[2]),C6(l,"pointerup",s[3])],t=!0)},p(u,[o]){r&&r.p&&(!n||o&16)&&$e(r,i,u,u[4],n?e7(i,u[4],o,null):je(u[4]),null)},i(u){n||(y1(r,u),n=!0)},o(u){R1(r,u),n=!1},d(u){u&&L1(e),s[6](null),r&&r.d(u),s[7](null),t=!1,O2(f)}}}function r5(s,e,l){let{$$slots:a={},$$scope:n}=e,t=0,f,i;const r=$3(),u=new pi,o=new R6(u);b7(w2,o),b7(ze,new p6(u));let d,c;j3(()=>{d=new b9({antialias:!1,canvas:i}),S(),t=requestAnimationFrame(m),c=new ResizeObserver(S),c.observe(f),o.setCanvas(i)});const m=g=>{t=requestAnimationFrame(m),r("animate",g),o.hasCamera&&d.render(u,o.camera)},S=()=>{f&&(d.setSize(f.clientWidth,f.clientHeight),o.changeSize({width:f.clientWidth,height:f.clientHeight}))},p=g=>o.onPointerMove(g),h=g=>o.onPointerClicked(g);k7(()=>{t&&cancelAnimationFrame(t)});function _(g){jl[g?"unshift":"push"](()=>{i=g,l(1,i)})}function M(g){jl[g?"unshift":"push"](()=>{f=g,l(0,f)})}return s.$$set=g=>{"$$scope"in g&&l(4,n=g.$$scope)},[f,i,p,h,n,a,_,M]}class o5 extends pe{constructor(e){super(),me(this,e,r5,u5,Se,{})}}class d5{constructor(){n7(this,"lastTimestamp");this.lastTimestamp=0}getDeltaSeconds(e){let l=0;return this.lastTimestamp>0&&(l=e-this.lastTimestamp),this.lastTimestamp=e,l/1e3}}function Z3(s,e,l){const a=s.slice();return a[4]=e[l],a}function Q3(s){let e,l;return e=new Hi({props:{aircraftPosition:s[4],isSelected:s[4]===s[0].selectedAircraftPosition}}),{c(){j1(e.$$.fragment)},l(a){ee(e.$$.fragment,a)},m(a,n){le(e,a,n),l=!0},p(a,n){const t={};n&1&&(t.aircraftPosition=a[4]),n&1&&(t.isSelected=a[4]===a[0].selectedAircraftPosition),e.$set(t)},i(a){l||(y1(e.$$.fragment,a),l=!0)},o(a){R1(e.$$.fragment,a),l=!1},d(a){ae(e,a)}}}function c5(s){let e,l,a=s[0].aircraftPositions,n=[];for(let f=0;f<a.length;f+=1)n[f]=Q3(Z3(s,a,f));const t=f=>R1(n[f],1,1,()=>{n[f]=null});return{c(){for(let f=0;f<n.length;f+=1)n[f].c();e=il()},l(f){for(let i=0;i<n.length;i+=1)n[i].l(f);e=il()},m(f,i){for(let r=0;r<n.length;r+=1)n[r]&&n[r].m(f,i);ve(f,e,i),l=!0},p(f,i){if(i&1){a=f[0].aircraftPositions;let r;for(r=0;r<a.length;r+=1){const u=Z3(f,a,r);n[r]?(n[r].p(u,i),y1(n[r],1)):(n[r]=Q3(u),n[r].c(),y1(n[r],1),n[r].m(e.parentNode,e))}for(o9(),r=a.length;r<n.length;r+=1)t(r);d9()}},i(f){if(!l){for(let i=0;i<a.length;i+=1)y1(n[i]);l=!0}},o(f){n=n.filter(Boolean);for(let i=0;i<n.length;i+=1)R1(n[i]);l=!1},d(f){q3(n,f),f&&L1(e)}}}function h5(s){let e,l,a,n,t,f,i,r;return e=new f5({props:{position:{x:3e7,y:3e7,z:3e7}}}),a=new t5({}),t=new l5({props:{lookAt:s[0].cameraPosition}}),i=new Xi({props:{radius:e2,$$slots:{default:[c5]},$$scope:{ctx:s}}}),{c(){j1(e.$$.fragment),l=Te(),j1(a.$$.fragment),n=Te(),j1(t.$$.fragment),f=Te(),j1(i.$$.fragment)},l(u){ee(e.$$.fragment,u),l=Le(u),ee(a.$$.fragment,u),n=Le(u),ee(t.$$.fragment,u),f=Le(u),ee(i.$$.fragment,u)},m(u,o){le(e,u,o),ve(u,l,o),le(a,u,o),ve(u,n,o),le(t,u,o),ve(u,f,o),le(i,u,o),r=!0},p(u,o){const d={};o&1&&(d.lookAt=u[0].cameraPosition),t.$set(d);const c={};o&129&&(c.$$scope={dirty:o,ctx:u}),i.$set(c)},i(u){r||(y1(e.$$.fragment,u),y1(a.$$.fragment,u),y1(t.$$.fragment,u),y1(i.$$.fragment,u),r=!0)},o(u){R1(e.$$.fragment,u),R1(a.$$.fragment,u),R1(t.$$.fragment,u),R1(i.$$.fragment,u),r=!1},d(u){ae(e,u),u&&L1(l),ae(a,u),u&&L1(n),ae(t,u),u&&L1(f),ae(i,u)}}}function p5(s){let e,l,a,n,t,f,i;return e=new o5({props:{$$slots:{default:[h5]},$$scope:{ctx:s}}}),e.$on("animate",s[2]),{c(){j1(e.$$.fragment),l=Te(),a=G1("button"),n=Ie("Search"),this.h()},l(r){ee(e.$$.fragment,r),l=Le(r),a=B1(r,"BUTTON",{class:!0,type:!0});var u=Y1(a);n=Ne(u,"Search"),u.forEach(L1),this.h()},h(){de(a,"class","search-button svelte-147ao2n"),de(a,"type","button")},m(r,u){le(e,r,u),ve(r,l,u),ve(r,a,u),U1(a,n),t=!0,f||(i=C6(a,"click",t4),f=!0)},p(r,[u]){const o={};u&129&&(o.$$scope={dirty:u,ctx:r}),e.$set(o)},i(r){t||(y1(e.$$.fragment,r),t=!0)},o(r){R1(e.$$.fragment,r),t=!1},d(r){ae(e,r),r&&L1(l),r&&L1(a),f=!1,i()}}}function m5(s,e,l){let a;c9(s,fl,i=>l(0,a=i));const n=new d5;j3(async()=>{await l4()});const t=i=>{const r=n.getDeltaSeconds(i);a4(r)};return[a,t,i=>t(i.detail)]}class T5 extends pe{constructor(e){super(),me(this,e,m5,p5,Se,{})}}export{T5 as default};
